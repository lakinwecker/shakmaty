use types::Move;
use attacks::Precomp;
use board::Board;

lazy_static!{
    static ref PRECOMP: Precomp = Precomp::new();
}

fn perft(board: &Board, depth: i8, precomp: &Precomp) -> usize {
    if depth < 1 {
        1
    } else {
        let mut moves: Vec<Move> = Vec::new();
        board.legal_moves(&mut moves, precomp);

        if depth == 1 {
            moves.len()
        } else {
            moves.iter().map(|m| {
                let mut child = board.clone();
                child.do_move(m);
                perft(&child, depth - 1, precomp)
            }).sum()
        }
    }
}

#[cfg(feature = "perft_tests")]
mod perft_tests {
    use super::*;

    #[test]
    fn gentest_1() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2() {
        let board = Board::from_fen("rnbqkbnr/pp1ppppp/2p5/8/6P1/2P5/PP1PPP1P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 463);
    }

    #[test]
    fn gentest_3() {
        let board = Board::from_fen("rnb1kbnr/ppq1pppp/2pp4/8/6P1/2P5/PP1PPPBP/RNBQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 734);
    }

    #[test]
    fn gentest_4() {
        let board = Board::from_fen("rnb1kbnr/p1q1pppp/1ppp4/8/4B1P1/2P5/PPQPPP1P/RNB1K1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 837);
    }

    #[test]
    fn gentest_5() {
        let board = Board::from_fen("rn2kbnr/p1q1ppp1/1ppp3p/8/4B1b1/2P4P/PPQPPP2/RNB1K1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 827);
    }

    #[test]
    fn gentest_6() {
        let board = Board::from_fen("rn1qkbnr/p3ppp1/1ppp2Qp/3B4/6b1/2P4P/PP1PPP2/RNB1K1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 976);
    }

    #[test]
    fn gentest_7() {
        let board = Board::from_fen("rnkq1bnr/p3ppp1/1ppp3p/3B4/6b1/2PQ3P/PP1PPP2/RNB1K1NR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 957);
    }

    #[test]
    fn gentest_8() {
        let board = Board::from_fen("rnkq1bnr/p3ppp1/1ppp3p/5b2/8/2PQ3P/PP1PPPB1/RNB1K1NR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 927);
    }

    #[test]
    fn gentest_9() {
        let board = Board::from_fen("rn1q1bnr/p2kppp1/2pp3p/1p3b2/1P6/2PQ3P/P2PPPB1/RNB1K1NR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 834);
    }

    #[test]
    fn gentest_10() {
        let board = Board::from_fen("rn1q1bnr/3kppp1/p1pp3p/1p3b2/1P6/2P2N1P/P1QPPPB1/RNB1K2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 900);
    }

    #[test]
    fn gentest_11() {
        let board = Board::from_fen("rn1q1bnr/3kppp1/2pp3p/pp6/1P2b3/2PQ1N1P/P2PPPB1/RNB1K2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 856);
    }

    #[test]
    fn gentest_12() {
        let board = Board::from_fen("rn1q1bnr/3kpp2/2pp2pp/pp6/1P2b2N/2PQ3P/P2PPP2/RNB1KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 839);
    }

    #[test]
    fn gentest_13() {
        let board = Board::from_fen("rnkq1bnr/4pp2/2pQ2pp/pp6/1P5N/2P4P/P2PPP2/RNB1KB1b w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 857);
    }

    #[test]
    fn gentest_14() {
        let board = Board::from_fen("rnk2bnr/2q1pp2/2pQ2pp/pp6/1P5N/2PPP2P/P4P2/RNB1KB1b b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1002);
    }

    #[test]
    fn gentest_15() {
        let board = Board::from_fen("rn3bnr/1kq1pp2/2pQ2Np/pp6/1P6/2PPPb1P/P4P2/RNB1KB2 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1122);
    }

    #[test]
    fn gentest_16() {
        let board = Board::from_fen("rn3bnr/1kq1p3/2pQ2pp/Pp6/8/N1PPPb1P/P4P2/R1B1KB2 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 983);
    }

    #[test]
    fn gentest_17() {
        let board = Board::from_fen("rn3b1r/1kq1p3/2pQ1npp/Pp6/4b3/2PPP2P/P4P2/RNB1KB2 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1196);
    }

    #[test]
    fn gentest_18() {
        let board = Board::from_fen("rn3b1r/1kq1p3/2p2npp/Pp3b2/7Q/2PPP2P/P4P2/RNB1KB2 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1234);
    }

    #[test]
    fn gentest_19() {
        let board = Board::from_fen("r4b1r/1k2p3/n1p2npp/Pp3b2/5Q2/2PPP1qP/P4P2/RNB1KB2 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1470);
    }

    #[test]
    fn gentest_20() {
        let board = Board::from_fen("r4br1/1k2p3/n1p2npp/Pp1Q1b2/8/2PPP1qP/P4P2/RNB1KB2 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1687);
    }

    #[test]
    fn gentest_21() {
        let board = Board::from_fen("r4br1/1k2p3/2p2npp/PpnQ4/P5b1/2PPP1qP/5P2/RNB1KB2 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1935);
    }

    #[test]
    fn gentest_22() {
        let board = Board::from_fen("r4br1/4p3/k1p2npp/PpnQ4/P5b1/2PPP1qP/5P2/RNB1KB2 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 1796);
    }

    #[test]
    fn gentest_23() {
        let board = Board::from_fen("r4br1/8/k1p2npp/Ppn1p3/P7/2PPP1qP/4bPQ1/RNB1KB2 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1036);
    }

    #[test]
    fn gentest_24() {
        let board = Board::from_fen("r4br1/8/2Q2npp/Pkn1p3/8/2PPP1qP/4bP2/RNB1KB2 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 18);
        assert_eq!(perft(&board, 3, &PRECOMP), 888);
    }

    #[test]
    fn gentest_25() {
        let board = Board::from_fen("r4br1/8/3k1npp/P1n1p3/8/2PPP1qP/4bPB1/RNB1K3 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1155);
    }

    #[test]
    fn gentest_26() {
        let board = Board::from_fen("r4br1/8/3k2pp/P1nnp3/6P1/2PPP2P/4b1B1/RNB1K3 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 877);
    }

    #[test]
    fn gentest_27() {
        let board = Board::from_fen("r4b2/6r1/3k2pp/P2np3/4n1P1/R1PPP2P/4b1B1/1NB1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 778);
    }

    #[test]
    fn gentest_28() {
        let board = Board::from_fen("r4b2/4r3/3k2pp/P2np3/4n1P1/R1PPPB1P/3Nb3/2B1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 890);
    }

    #[test]
    fn gentest_29() {
        let board = Board::from_fen("r4b2/2n1r3/3k2pp/P3p3/6P1/R1PPPBnP/1B1Nb3/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 824);
    }

    #[test]
    fn gentest_30() {
        let board = Board::from_fen("B4b2/2nkr3/6pp/P3p3/6P1/2PPP1nP/1B1Nb3/R3K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 826);
    }

    #[test]
    fn gentest_31() {
        let board = Board::from_fen("4n3/3kr1b1/6pp/P3p3/4B1P1/2PPP1nP/1B1Nb3/R3K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 669);
    }

    #[test]
    fn gentest_32() {
        let board = Board::from_fen("B3n3/4r1b1/3k2pp/P3p3/6P1/2PPP1nP/RB1Nb3/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 720);
    }

    #[test]
    fn gentest_33() {
        let board = Board::from_fen("B3n3/6b1/3kr1pp/P3p3/4n1P1/2PPP2P/R2Nb3/B3K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 494);
    }

    #[test]
    fn gentest_34() {
        let board = Board::from_fen("4n3/6b1/4r1pp/P1k1p3/4B1P1/2PPP2P/R3b3/B3KN2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 574);
    }

    #[test]
    fn gentest_35() {
        let board = Board::from_fen("4n3/6b1/r6p/P1k1p1p1/4B1P1/2PPP2P/R3b2N/B3K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 557);
    }

    #[test]
    fn gentest_36() {
        let board = Board::from_fen("8/6b1/r2n2Bp/P1k1p1p1/6P1/2PPP2P/1R2b2N/B3K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 660);
    }

    #[test]
    fn gentest_37() {
        let board = Board::from_fen("2n5/6bB/r7/P1k1p1pp/6P1/2PPP2P/1R2b2N/B3K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 652);
    }

    #[test]
    fn gentest_38() {
        let board = Board::from_fen("8/n5bB/r7/P1k1p1pp/1R4PP/2PPP3/4b2N/B3K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 706);
    }

    #[test]
    fn gentest_39() {
        let board = Board::from_fen("8/n6B/r4b2/P1k1p1pp/1R4bP/2PPP3/8/B3KN2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 596);
    }

    #[test]
    fn gentest_40() {
        let board = Board::from_fen("8/nR5B/r1k2b2/P3p1pp/6bP/2PPP3/8/B3KN2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
    }

    #[test]
    fn gentest_41() {
        let board = Board::from_fen("2n5/1R5B/r1k2b2/P3p1pp/3P3P/2P1P3/4b3/B3KN2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 729);
    }

    #[test]
    fn gentest_42() {
        let board = Board::from_fen("2n5/3Rb2B/r1k5/P3p1pp/3P3P/2P1P3/3Kb3/B4N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 701);
    }

    #[test]
    fn gentest_43() {
        let board = Board::from_fen("2n5/3R3B/r1kb4/P3p2p/3P3p/2P1P3/4b3/B1K2N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 621);
    }

    #[test]
    fn gentest_44() {
        let board = Board::from_fen("2n5/3R4/r1kb4/P3p2p/3P3p/2PbP3/1K6/BB3N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 633);
    }

    #[test]
    fn gentest_45() {
        let board = Board::from_fen("8/1R6/rn1b4/Pk2p2p/3P3p/2PbP3/1K6/BB3N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 565);
    }

    #[test]
    fn gentest_46() {
        let board = Board::from_fen("6R1/8/rn1b4/P3p2p/2kP3p/2PbP3/1K6/BB3N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 680);
    }

    #[test]
    fn gentest_47() {
        let board = Board::from_fen("5b2/8/rn6/P3p2p/2kP2Rp/2P1P3/1K2b3/BB3N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 577);
    }

    #[test]
    fn gentest_48() {
        let board = Board::from_fen("5b2/8/rn6/P2Pp3/2k1B1pp/2P1P3/1K2b3/B4N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 379);
        assert_eq!(perft(&board, 3, &PRECOMP), 8948);
    }

    #[test]
    fn gentest_49() {
        let board = Board::from_fen("8/8/r6b/P2np3/2k3pp/2P1P3/1KB1b3/B4N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 443);
        assert_eq!(perft(&board, 3, &PRECOMP), 7038);
    }

    #[test]
    fn gentest_50() {
        let board = Board::from_fen("8/8/5r1b/P2np3/2k3pp/2P1P1N1/K1B1b3/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 664);
    }

    #[test]
    fn gentest_51() {
        let board = Board::from_fen("8/8/1r5b/P3p3/1nk3pp/K1P1P1N1/2B1b3/B7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 585);
    }

    #[test]
    fn gentest_52() {
        let board = Board::from_fen("8/8/r6b/P3p2N/1nk3pp/K1PBP3/4b3/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 72);
        assert_eq!(perft(&board, 3, &PRECOMP), 1904);
    }

    #[test]
    fn gentest_53() {
        let board = Board::from_fen("8/8/r6b/P3pb2/1nk3pp/K1P1P1N1/8/B7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 361);
        assert_eq!(perft(&board, 3, &PRECOMP), 3590);
    }

    #[test]
    fn gentest_54() {
        let board = Board::from_fen("8/8/r6b/P3p3/1nk1b1pp/K1P1P3/1B6/7N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 246);
        assert_eq!(perft(&board, 3, &PRECOMP), 8542);
    }

    #[test]
    fn gentest_55() {
        let board = Board::from_fen("8/6b1/r7/P3pb2/1nk3pp/K1P1P3/1B3N2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 361);
        assert_eq!(perft(&board, 3, &PRECOMP), 3628);
    }

    #[test]
    fn gentest_56() {
        let board = Board::from_fen("8/6b1/6r1/P3pb2/1nk3Np/K1P1P3/8/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 348);
    }

    #[test]
    fn gentest_57() {
        let board = Board::from_fen("8/6b1/7r/P3p3/1nk3Np/K1P1P3/1B6/1b6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 296);
        assert_eq!(perft(&board, 3, &PRECOMP), 3301);
    }

    #[test]
    fn gentest_58() {
        let board = Board::from_fen("8/6b1/7r/Pk2p3/1n4Np/K1P1P3/1B6/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 377);
    }

    #[test]
    fn gentest_59() {
        let board = Board::from_fen("8/6b1/5N1r/Pk2p3/1n5p/K1P1P3/1B6/1b6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 418);
        assert_eq!(perft(&board, 3, &PRECOMP), 5061);
    }

    #[test]
    fn gentest_60() {
        let board = Board::from_fen("8/6b1/7r/Pk2p3/1n5p/K1PbP1N1/1B6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 434);
    }

    #[test]
    fn gentest_61() {
        let board = Board::from_fen("8/6b1/5r2/Pk2p3/7p/1KPbP1N1/1Bn5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 429);
        assert_eq!(perft(&board, 3, &PRECOMP), 5040);
    }

    #[test]
    fn gentest_62() {
        let board = Board::from_fen("8/6b1/5r2/Pk2p3/7p/1KP1P3/2n1b3/2B4N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 372);
    }

    #[test]
    fn gentest_63() {
        let board = Board::from_fen("5b2/8/8/Pk2p3/7p/1KP1Pr2/1Bn1b3/7N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 291);
        assert_eq!(perft(&board, 3, &PRECOMP), 2992);
    }

    #[test]
    fn gentest_64() {
        let board = Board::from_fen("5b2/8/8/Pk2p3/2b4p/2P1Pr2/1Bn5/1K5N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 331);
    }

    #[test]
    fn gentest_65() {
        let board = Board::from_fen("5b2/8/8/Pk2p3/2b5/B1P1P1rp/2n5/1K5N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 490);
        assert_eq!(perft(&board, 3, &PRECOMP), 6278);
    }

    #[test]
    fn gentest_66() {
        let board = Board::from_fen("5b2/5b2/3B4/Pk2p3/8/2P1P1Np/2n5/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 478);
    }

    #[test]
    fn gentest_67() {
        let board = Board::from_fen("8/5b2/P2b4/1k2p3/8/2P1n1Np/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 338);
        assert_eq!(perft(&board, 3, &PRECOMP), 3510);
    }

    #[test]
    fn gentest_68() {
        let board = Board::from_fen("B7/5b2/3b4/1k2p3/8/2P3Np/2n5/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 477);
    }

    #[test]
    fn gentest_69() {
        let board = Board::from_fen("8/8/4b3/1k2p3/4B3/b1P3Np/2n5/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 481);
        assert_eq!(perft(&board, 3, &PRECOMP), 8111);
    }

    #[test]
    fn gentest_70() {
        let board = Board::from_fen("8/8/4b3/k3p2N/8/b1PB3p/2n5/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 412);
    }

    #[test]
    fn gentest_71() {
        let board = Board::from_fen("8/8/8/k3pb1N/8/b1P5/2B4p/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 238);
        assert_eq!(perft(&board, 3, &PRECOMP), 3078);
    }

    #[test]
    fn gentest_72() {
        let board = Board::from_fen("8/8/6b1/k3p2N/8/b1PB4/K6p/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 361);
        assert_eq!(perft(&board, 3, &PRECOMP), 8211);
    }

    #[test]
    fn gentest_73() {
        let board = Board::from_fen("1b6/8/6B1/k3p2N/8/2P5/K6p/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 209);
        assert_eq!(perft(&board, 3, &PRECOMP), 3734);
    }

    #[test]
    fn gentest_74() {
        let board = Board::from_fen("1b2B3/8/1k6/4p3/5N2/2P5/K6p/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 302);
        assert_eq!(perft(&board, 3, &PRECOMP), 4537);
    }

    #[test]
    fn gentest_75() {
        let board = Board::from_fen("1b2B3/8/1k6/8/4pN2/1KP5/8/7q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 623);
    }

    #[test]
    fn gentest_76() {
        let board = Board::from_fen("1b5q/3B4/1k6/8/2P1pN2/1K6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 656);
    }

    #[test]
    fn gentest_77() {
        let board = Board::from_fen("8/3B4/1k1b4/8/2P1pN2/8/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 394);
        assert_eq!(perft(&board, 3, &PRECOMP), 8219);
    }

    #[test]
    fn gentest_78() {
        let board = Board::from_fen("8/2kB4/3b4/8/2P1p3/2K5/6N1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 246);
        assert_eq!(perft(&board, 3, &PRECOMP), 3728);
    }

    #[test]
    fn gentest_79() {
        let board = Board::from_fen("3b4/2k5/2B5/8/2P1p3/2K5/6N1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 186);
        assert_eq!(perft(&board, 3, &PRECOMP), 3184);
    }

    #[test]
    fn gentest_80() {
        let board = Board::from_fen("3b4/8/3k4/8/B1P1pN2/2K5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 223);
        assert_eq!(perft(&board, 3, &PRECOMP), 2387);
    }

    #[test]
    fn gentest_81() {
        let board = Board::from_fen("8/2k5/8/2P5/B3pN1b/2K5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 267);
        assert_eq!(perft(&board, 3, &PRECOMP), 5178);
    }

    #[test]
    fn gentest_82() {
        let board = Board::from_fen("3k4/8/2B5/2P5/2K1pN1b/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 219);
        assert_eq!(perft(&board, 3, &PRECOMP), 2313);
    }

    #[test]
    fn gentest_83() {
        let board = Board::from_fen("3k4/8/2B5/2PN4/2K1pb2/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 250);
        assert_eq!(perft(&board, 3, &PRECOMP), 4795);
    }

    #[test]
    fn gentest_84() {
        let board = Board::from_fen("3k4/8/2B5/2P5/4p3/2K1N3/7b/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 213);
        assert_eq!(perft(&board, 3, &PRECOMP), 2332);
    }

    #[test]
    fn gentest_85() {
        let board = Board::from_fen("3k4/8/8/2PBb3/4p3/2K1N3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 90);
        assert_eq!(perft(&board, 3, &PRECOMP), 1950);
    }

    #[test]
    fn gentest_86() {
        let board = Board::from_fen("1b1k4/1B6/8/2P5/4p3/4N3/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 222);
        assert_eq!(perft(&board, 3, &PRECOMP), 2552);
    }

    #[test]
    fn gentest_87() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_88() {
        let board = Board::from_fen("rnbqkbnr/1ppppppp/8/p7/2P5/P7/1P1PPPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
    }

    #[test]
    fn gentest_89() {
        let board = Board::from_fen("2bqkbnr/rppppppp/n7/p7/2P5/PP6/3PPPPP/RNBQKBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 398);
        assert_eq!(perft(&board, 3, &PRECOMP), 8820);
    }

    #[test]
    fn gentest_90() {
        let board = Board::from_fen("2bqkbnr/rpp1pppp/n2p4/p7/2P3P1/PP5P/3PPP2/RNBQKBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 470);
    }

    #[test]
    fn gentest_91() {
        let board = Board::from_fen("2bqkbnr/rpp1p1pp/n2p4/5p2/p1PP2P1/PP5P/4PP2/RNBQKBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 666);
    }

    #[test]
    fn gentest_92() {
        let board = Board::from_fen("2bqkbnr/rpp1p2p/n2p4/5pp1/p1PP2P1/PP2P2P/1B3P2/RN1QKBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 703);
    }

    #[test]
    fn gentest_93() {
        let board = Board::from_fen("2b1kbnr/rppqp3/n2p3p/5pp1/p1PP2P1/PP2P2P/1B2QP2/RN2KBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 576);
    }

    #[test]
    fn gentest_94() {
        let board = Board::from_fen("2b1kbnB/rppqp3/3p3p/3P1pp1/pnP3P1/PP2P2P/4QP2/RN2KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 729);
    }

    #[test]
    fn gentest_95() {
        let board = Board::from_fen("2b1kbnB/r1pqp3/n2p3p/1p1P1pp1/p1P3P1/PP2P2P/Q4P2/RN2KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 689);
    }

    #[test]
    fn gentest_96() {
        let board = Board::from_fen("2b1kbn1/r1pqp3/n2p3p/3P1pp1/ppP3P1/PPB1P2P/Q4P2/RN2KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 685);
    }

    #[test]
    fn gentest_97() {
        let board = Board::from_fen("2bq1bn1/r1pkp3/n2p3p/3P1pp1/ppP3P1/PPB1P2P/2Q2P2/RN2KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 662);
    }

    #[test]
    fn gentest_98() {
        let board = Board::from_fen("2bq1bn1/1rpkp3/n2p3p/3P1pp1/ppP3P1/PPB1P2P/3QNP2/RN2KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 636);
    }

    #[test]
    fn gentest_99() {
        let board = Board::from_fen("1rbq1b2/2pkp3/n2p1n1p/3P1pp1/ppP3P1/PPB1P2P/3Q1P2/RN2KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 772);
    }

    #[test]
    fn gentest_100() {
        let board = Board::from_fen("1rbq1bn1/2pkp3/n2p3p/3P1pp1/ppP3P1/PPBQP2P/3N1P2/R3KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 718);
    }

    #[test]
    fn gentest_101() {
        let board = Board::from_fen("2bq1b2/2pkp3/nr1p1n1p/3P1pp1/ppP3P1/PPBQP2P/3N1P2/1R2KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 832);
    }

    #[test]
    fn gentest_102() {
        let board = Board::from_fen("2bq1b2/3kp3/nrpp1n1p/3P1pp1/pBP3P1/PP1QP2P/3NKP2/1R3BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 869);
    }

    #[test]
    fn gentest_103() {
        let board = Board::from_fen("2b1qb2/3kp3/nrpp1n2/3P1ppp/pBP3P1/PP1QP2P/3NKP1R/1R3BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 913);
    }

    #[test]
    fn gentest_104() {
        let board = Board::from_fen("2b1qb2/2k1p3/nrpp1n2/3P1Qpp/pBP3P1/PP2P2P/3NKP1R/R4BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1365);
    }

    #[test]
    fn gentest_105() {
        let board = Board::from_fen("2bkq3/4p3/nrpp1nQb/3P2pp/pBP3P1/PP2P2P/3NKP1R/R4BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1463);
    }

    #[test]
    fn gentest_106() {
        let board = Board::from_fen("2bkq3/4p3/1rpp1nQb/2nP2pp/pBP3P1/PP2PN1P/3NKP1R/2R2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1639);
    }

    #[test]
    fn gentest_107() {
        let board = Board::from_fen("2bkq3/2n1p3/1rpp1Q1b/3P2pp/pBP3P1/PP2PN1P/3NKP1R/2R2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1401);
    }

    #[test]
    fn gentest_108() {
        let board = Board::from_fen("2bkq2Q/2n1p3/1r1p3b/2pP2pp/pBP3P1/PP2PN1P/3NKP1R/2R2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1105);
    }

    #[test]
    fn gentest_109() {
        let board = Board::from_fen("2bkq2Q/2n1p3/r2p3b/3P2pp/ppP3P1/PP2PN1P/3NKPR1/2R2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1032);
    }

    #[test]
    fn gentest_110() {
        let board = Board::from_fen("3kqQ2/2n1p3/r2p3b/3P1bpp/ppP3P1/PP2PN1P/3NKP2/2R2BR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1031);
    }

    #[test]
    fn gentest_111() {
        let board = Board::from_fen("n1k1qQ2/4p3/r2p3b/3P1bpp/ppP3P1/PP2P2P/3NKP2/2R1NBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1043);
    }

    #[test]
    fn gentest_112() {
        let board = Board::from_fen("n1k1q3/4Q3/3p3b/r2P1bpp/ppP1N1P1/PP2P2P/4KP2/2R1NBR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1326);
    }

    #[test]
    fn gentest_113() {
        let board = Board::from_fen("n1kq4/4Q3/3p3b/r2P1bpp/p1P1NPP1/pP2P2P/4K3/2R1NBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1259);
    }

    #[test]
    fn gentest_114() {
        let board = Board::from_fen("2kq4/4Q3/1n1p3b/r1NP1bpp/pPP2PP1/p3P2P/4K3/2R1NBR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1452);
    }

    #[test]
    fn gentest_115() {
        let board = Board::from_fen("2kq4/4Q3/1n1pN2b/1r1P1bp1/pPP2PPp/p3P2P/4K3/2R1NBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1035);
    }

    #[test]
    fn gentest_116() {
        let board = Board::from_fen("3q4/3k4/1n1pN2b/1r1P1bp1/pPP2PPp/p3P2P/4K3/R3NBR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 899);
    }

    #[test]
    fn gentest_117() {
        let board = Board::from_fen("n2q4/3k4/3pN2b/1r1P1bp1/pPP2PPp/4P2P/p3K1B1/R3N1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 977);
    }

    #[test]
    fn gentest_118() {
        let board = Board::from_fen("n2q1b2/3k4/3pN3/1r1P1bp1/pPP1PPPp/7P/p1N1K1B1/R5R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1155);
    }

    #[test]
    fn gentest_119() {
        let board = Board::from_fen("n1kq4/8/3p3b/1rNP1bp1/pPP1PPPp/7P/p1N1K1B1/R5R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1231);
    }

    #[test]
    fn gentest_120() {
        let board = Board::from_fen("n1kq1b2/8/3pN3/1r1P1bp1/pPP1PPPp/7P/p1N1K1B1/3R2R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1245);
    }

    #[test]
    fn gentest_121() {
        let board = Board::from_fen("2k2b2/2n5/3pNq2/1r1P1bp1/pPP1PPPp/7P/p1N1K3/3R2RB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1613);
    }

    #[test]
    fn gentest_122() {
        let board = Board::from_fen("1rkN1b2/2n5/3p1q2/3P1bp1/pPP1PPPp/7P/p1N2K2/3R2RB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1382);
    }

    #[test]
    fn gentest_123() {
        let board = Board::from_fen("2kN1b2/2n5/3p4/3Pqbp1/prP1PPPp/N6P/p4K2/3R2RB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1390);
    }

    #[test]
    fn gentest_124() {
        let board = Board::from_fen("2kN1b2/2n5/3p4/3P1bp1/prP1qPPp/7P/p1NR1K2/6RB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1206);
    }

    #[test]
    fn gentest_125() {
        let board = Board::from_fen("2kNnb2/8/3p4/3P1bp1/prP2PPp/4K2P/p1NR4/6RB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1070);
    }

    #[test]
    fn gentest_126() {
        let board = Board::from_fen("2k1nb2/8/3p4/3P1bp1/pNP2PPp/4K2P/2NR4/b5RB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 846);
    }

    #[test]
    fn gentest_127() {
        let board = Board::from_fen("1k2nb2/8/3p4/3Pbbp1/p1P2PPp/3NK2P/2NR4/6RB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 973);
    }

    #[test]
    fn gentest_128() {
        let board = Board::from_fen("1kb1nb2/8/3p4/3Pb1p1/p1P2PPp/4K2P/3R1N2/4N1RB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 651);
    }

    #[test]
    fn gentest_129() {
        let board = Board::from_fen("1kb1nb2/8/3p3b/3P1Pp1/p1P3Pp/4K2P/3R1N2/4N1RB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 423);
    }

    #[test]
    fn gentest_130() {
        let board = Board::from_fen("1kb2b2/8/3p1n1b/3P1Pp1/p1P1B1Pp/4K2P/2R2N2/4N1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 517);
        assert_eq!(perft(&board, 3, &PRECOMP), 9926);
    }

    #[test]
    fn gentest_131() {
        let board = Board::from_fen("2b2bn1/1k6/3p3b/3P1Pp1/p1P3Pp/3BK2P/2R2N2/4N1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 365);
        assert_eq!(perft(&board, 3, &PRECOMP), 9418);
    }

    #[test]
    fn gentest_132() {
        let board = Board::from_fen("2b2bn1/1k4b1/3p4/3P1Pp1/p1P3Pp/4K2P/4RN2/1B2N1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 549);
    }

    #[test]
    fn gentest_133() {
        let board = Board::from_fen("2b2bn1/1k4b1/3p4/3P1Pp1/p1P3Pp/4K2P/4R3/1B1NN1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 615);
    }

    #[test]
    fn gentest_134() {
        let board = Board::from_fen("2b2bn1/1k4b1/3p4/3P1Pp1/2P3Pp/p3K2P/4R3/1B1NN1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 612);
    }

    #[test]
    fn gentest_135() {
        let board = Board::from_fen("k1b3n1/4b1b1/3p4/3P1Pp1/2P3Pp/p3K2P/5R2/1B1NN1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 706);
    }

    #[test]
    fn gentest_136() {
        let board = Board::from_fen("k5n1/4b1b1/3pb3/3P1Pp1/2P2RPp/p1N1K2P/8/1B2N1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 656);
    }

    #[test]
    fn gentest_137() {
        let board = Board::from_fen("k5n1/4b3/3pb3/3PbPp1/2P2RPp/p1N1KN1P/8/1B4R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 732);
    }

    #[test]
    fn gentest_138() {
        let board = Board::from_fen("6n1/1k2b3/3pb3/2PPbPp1/3R2Pp/p1N1KN1P/8/1B4R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 938);
    }

    #[test]
    fn gentest_139() {
        let board = Board::from_fen("3b2n1/1k6/4b3/2pPbPp1/3R2Pp/p3KN1P/8/1B1N2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1085);
    }

    #[test]
    fn gentest_140() {
        let board = Board::from_fen("3b2n1/1k6/8/2pbbPp1/2R3PN/p3K2P/8/1B1N2R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1065);
    }

    #[test]
    fn gentest_141() {
        let board = Board::from_fen("6n1/1k6/8/b1pbbP2/2R3Pp/p3K2P/6R1/1B1N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1115);
    }

    #[test]
    fn gentest_142() {
        let board = Board::from_fen("6n1/1k6/1b6/2pbbP2/2RR2Pp/p3K2P/8/1B1N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 781);
    }

    #[test]
    fn gentest_143() {
        let board = Board::from_fen("1k4n1/8/1b6/2p1bP2/R2R2Pp/p3K2P/b7/1B1N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 808);
    }

    #[test]
    fn gentest_144() {
        let board = Board::from_fen("1k4n1/b7/8/2p1bP2/R2R2Pp/p2BK2P/b7/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 703);
    }

    #[test]
    fn gentest_145() {
        let board = Board::from_fen("6n1/b1k5/8/4bP2/R2p2Pp/p2B3P/b3K3/3N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 599);
    }

    #[test]
    fn gentest_146() {
        let board = Board::from_fen("6n1/bk6/5P2/4b3/3p2Pp/R2B3P/b3K3/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 669);
    }

    #[test]
    fn gentest_147() {
        let board = Board::from_fen("k5n1/b7/5P2/8/3p2Pp/R2B2bP/b3KN2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
    }

    #[test]
    fn gentest_148() {
        let board = Board::from_fen("1k4n1/b7/5P2/8/3p2Pp/5RbP/b3KN2/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 519);
    }

    #[test]
    fn gentest_149() {
        let board = Board::from_fen("1k4n1/b7/5P2/3b4/3p1bPp/6RP/4KN2/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 757);
    }

    #[test]
    fn gentest_150() {
        let board = Board::from_fen("1k6/b3n3/5P2/3b4/3pNbPp/3K2RP/8/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 494);
    }

    #[test]
    fn gentest_151() {
        let board = Board::from_fen("2k5/b3n3/5P2/2Nb4/3p1bP1/3K2pP/8/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 524);
        assert_eq!(perft(&board, 3, &PRECOMP), 7752);
    }

    #[test]
    fn gentest_152() {
        let board = Board::from_fen("2k5/4n3/5P2/2bb4/3p1bP1/3K2NP/8/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 504);
    }

    #[test]
    fn gentest_153() {
        let board = Board::from_fen("2k5/4n3/5P2/3b2b1/1b1p2P1/3K3P/4N3/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 461);
        assert_eq!(perft(&board, 3, &PRECOMP), 6186);
    }

    #[test]
    fn gentest_154() {
        let board = Board::from_fen("2k5/4P3/8/2bb2b1/3p2PP/3K4/4N3/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 449);
    }

    #[test]
    fn gentest_155() {
        let board = Board::from_fen("2k5/4P3/8/6b1/3p2PP/b2K4/B3N1b1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 515);
    }

    #[test]
    fn gentest_156() {
        let board = Board::from_fen("2kbR3/8/8/8/2Bp2PP/b2K4/4N1b1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 519);
    }

    #[test]
    fn gentest_157() {
        let board = Board::from_fen("1k1bRb2/8/B7/8/3p2PP/3K4/4N1b1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 451);
    }

    #[test]
    fn gentest_158() {
        let board = Board::from_fen("3b1R2/k7/B7/8/3p2PP/2NK4/6b1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
    }

    #[test]
    fn gentest_159() {
        let board = Board::from_fen("5R2/8/k7/6b1/N2p2PP/3K4/6b1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 457);
        assert_eq!(perft(&board, 3, &PRECOMP), 9669);
    }

    #[test]
    fn gentest_160() {
        let board = Board::from_fen("8/8/k7/7R/N2p1bPP/3K4/6b1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 376);
        assert_eq!(perft(&board, 3, &PRECOMP), 6889);
    }

    #[test]
    fn gentest_161() {
        let board = Board::from_fen("8/8/k7/2R5/N2p2PP/3K2b1/8/5b2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 71);
        assert_eq!(perft(&board, 3, &PRECOMP), 1453);
    }

    #[test]
    fn gentest_162() {
        let board = Board::from_fen("8/8/k2b4/2R5/N5PP/2K5/8/5b2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 330);
        assert_eq!(perft(&board, 3, &PRECOMP), 5564);
    }

    #[test]
    fn gentest_163() {
        let board = Board::from_fen("8/2R5/8/k7/N5PP/2K5/8/5b2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 192);
        assert_eq!(perft(&board, 3, &PRECOMP), 4350);
    }

    #[test]
    fn gentest_164() {
        let board = Board::from_fen("8/7R/b7/k7/N5PP/2K5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 180);
        assert_eq!(perft(&board, 3, &PRECOMP), 1762);
    }

    #[test]
    fn gentest_165() {
        let board = Board::from_fen("8/6R1/8/8/k5PP/2Kb4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 203);
        assert_eq!(perft(&board, 3, &PRECOMP), 3537);
    }

    #[test]
    fn gentest_166() {
        let board = Board::from_fen("8/3R4/8/1k6/6PP/3b4/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 356);
        assert_eq!(perft(&board, 3, &PRECOMP), 4905);
    }

    #[test]
    fn gentest_167() {
        let board = Board::from_fen("8/8/8/1k6/3R2PP/3b4/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 230);
        assert_eq!(perft(&board, 3, &PRECOMP), 4259);
    }

    #[test]
    fn gentest_168() {
        let board = Board::from_fen("8/8/8/1k4P1/R1b4P/8/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 250);
        assert_eq!(perft(&board, 3, &PRECOMP), 3185);
    }

    #[test]
    fn gentest_169() {
        let board = Board::from_fen("8/8/6P1/8/1kb4P/8/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 100);
        assert_eq!(perft(&board, 3, &PRECOMP), 649);
    }

    #[test]
    fn gentest_170() {
        let board = Board::from_fen("8/8/6P1/8/2b4P/2k5/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 73);
        assert_eq!(perft(&board, 3, &PRECOMP), 1091);
        assert_eq!(perft(&board, 4, &PRECOMP), 6579);
    }

    #[test]
    fn gentest_171() {
        let board = Board::from_fen("8/8/4b1P1/7P/8/3k4/8/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 66);
        assert_eq!(perft(&board, 3, &PRECOMP), 359);
        assert_eq!(perft(&board, 4, &PRECOMP), 5458);
    }

    #[test]
    fn gentest_172() {
        let board = Board::from_fen("8/5b1P/6P1/8/8/3k4/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 105);
        assert_eq!(perft(&board, 3, &PRECOMP), 1314);
    }

    #[test]
    fn gentest_173() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_174() {
        let board = Board::from_fen("rnbqkbnr/ppppp1pp/8/5p2/2P5/P7/1P1PPPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 420);
        assert_eq!(perft(&board, 3, &PRECOMP), 9328);
    }

    #[test]
    fn gentest_175() {
        let board = Board::from_fen("rnbqkb1r/ppppp1pp/5n2/8/P1P2p2/8/1P1PPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 504);
    }

    #[test]
    fn gentest_176() {
        let board = Board::from_fen("rnbqkb1r/ppp1p1pp/5n2/3p4/P1P2p2/R2P4/1P2PPPP/1NBQKBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 920);
    }

    #[test]
    fn gentest_177() {
        let board = Board::from_fen("rnbqkb1r/ppp4p/5n2/3pp1p1/P1P2p2/R2P3P/1P2PPP1/1NBQKBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1077);
    }

    #[test]
    fn gentest_178() {
        let board = Board::from_fen("rnbq1b1r/ppp2k1p/5n2/3pp1p1/P1P2p2/R2PB2P/1P1QPPP1/1N2KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1319);
    }

    #[test]
    fn gentest_179() {
        let board = Board::from_fen("rn1q1b1r/ppp2k2/1B3n2/3pp1pp/P1P2p2/R2P3b/1P1QPPP1/1N2KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1690);
    }

    #[test]
    fn gentest_180() {
        let board = Board::from_fen("rn1q3r/ppp2k2/1B3n2/3pp1pp/PbP2p2/1P1P3b/R2QPPP1/1N2KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 54);
        assert_eq!(perft(&board, 2, &PRECOMP), 1565);
    }

    #[test]
    fn gentest_181() {
        let board = Board::from_fen("rn5r/ppp2k2/1B3n2/3qp1pp/Pb3p2/1P1P3b/R2QPPP1/1N2KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1630);
    }

    #[test]
    fn gentest_182() {
        let board = Board::from_fen("rB5r/pp4k1/5n2/3qp1pp/Pb3p2/1P1P3b/R2QPPP1/1N2KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 60);
        assert_eq!(perft(&board, 2, &PRECOMP), 1513);
    }

    #[test]
    fn gentest_183() {
        let board = Board::from_fen("rB5r/pp4k1/5n2/q3p2p/Pb3pp1/1P1P3N/R2QPPP1/1N2KB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1010);
    }

    #[test]
    fn gentest_184() {
        let board = Board::from_fen("r6r/pp3k2/3B1n2/q3p2p/Pb3pp1/1P1P3N/1R1QPPP1/1N2KB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1093);
    }

    #[test]
    fn gentest_185() {
        let board = Board::from_fen("r6r/pp3k2/3B4/q3p2p/Pb3pp1/1PnP3N/1R1QPPP1/1N2KBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1076);
    }

    #[test]
    fn gentest_186() {
        let board = Board::from_fen("r7/pp3k1r/8/q1B1p2p/Pb3pp1/1PnPQ2N/1R2PPP1/1N2KBR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 994);
    }

    #[test]
    fn gentest_187() {
        let board = Board::from_fen("r7/p6r/1p3k2/q1B1p2p/Pb3pp1/1PnPQ2N/1R2PPP1/1N2KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1122);
    }

    #[test]
    fn gentest_188() {
        let board = Board::from_fen("r7/p3B2r/1p4k1/q3p2p/Pb3pp1/1PnPQ2N/1R1KPPP1/1N3B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1026);
    }

    #[test]
    fn gentest_189() {
        let board = Board::from_fen("5r2/p6r/1p3k2/q3p2p/PB3pp1/1PnPQ2N/1R1KPPP1/1N3B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1133);
    }

    #[test]
    fn gentest_190() {
        let board = Board::from_fen("5r2/p6r/1Q6/q3pk1p/PB3pp1/1PnPP2N/1R1K1PP1/1N3B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1505);
    }

    #[test]
    fn gentest_191() {
        let board = Board::from_fen("5r2/p4r2/1Q6/q3pk1p/PB3pp1/1PnPP2N/1RK2PP1/1N3B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1356);
    }

    #[test]
    fn gentest_192() {
        let board = Board::from_fen("4Qr2/p4r2/8/q3pk2/PB3ppp/1PnPP2N/1RK2PP1/1N3B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1302);
    }

    #[test]
    fn gentest_193() {
        let board = Board::from_fen("4Qr2/p1q2r2/8/4pk2/PB4pp/1PnPpP1N/1RK3P1/1N3B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1130);
    }

    #[test]
    fn gentest_194() {
        let board = Board::from_fen("5r2/p1qQ1r2/5k2/4p3/PB4pp/1PnPpP1N/1RK3P1/1N3BR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1155);
    }

    #[test]
    fn gentest_195() {
        let board = Board::from_fen("5r2/q2Q1r2/5k2/p3p3/PB4pp/1PnPpP1N/1RK3P1/1N3B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1156);
    }

    #[test]
    fn gentest_196() {
        let board = Board::from_fen("4r3/q4r2/5k2/p3p3/PB1Q2pp/1PnPpP1N/1RKN2P1/5B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1665);
    }

    #[test]
    fn gentest_197() {
        let board = Board::from_fen("4r3/5r2/1q3k2/p3p3/PB1Q3p/1PnPppPN/1RKN4/5B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1482);
    }

    #[test]
    fn gentest_198() {
        let board = Board::from_fen("8/4rr2/1q3k2/p3p3/P2Q3p/1PnPppPN/1RKN2B1/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1614);
    }

    #[test]
    fn gentest_199() {
        let board = Board::from_fen("8/3r3r/1q3k2/p3p3/P2Q3p/1PnPppPN/1RKN2B1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1630);
    }

    #[test]
    fn gentest_200() {
        let board = Board::from_fen("3r4/7r/1q3k2/p3p3/PP1Q3p/2nPppPN/1RKN2B1/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 54);
        assert_eq!(perft(&board, 2, &PRECOMP), 2201);
    }

    #[test]
    fn gentest_201() {
        let board = Board::from_fen("3r4/7r/q4k2/p3p3/PP1Q3p/2nPppP1/1RKN2B1/1R4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1838);
    }

    #[test]
    fn gentest_202() {
        let board = Board::from_fen("8/7r/q4k2/p3p3/PP1r2Pp/1KnPpp2/1R1N2B1/1R4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 1176);
    }

    #[test]
    fn gentest_203() {
        let board = Board::from_fen("8/8/q4k2/p6r/PP1rp1Pp/1KnPpp2/R2N2B1/1R4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1329);
    }

    #[test]
    fn gentest_204() {
        let board = Board::from_fen("8/8/q4k2/p5r1/PP1rp1PN/1KnPp3/R2N2B1/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1262);
    }

    #[test]
    fn gentest_205() {
        let board = Board::from_fen("8/q7/5k2/p5r1/PP1rp1P1/1KnP1N2/R2Np1B1/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1474);
    }

    #[test]
    fn gentest_206() {
        let board = Board::from_fen("8/q7/5k2/p5r1/PP1rp1P1/1K1P4/2RNp1B1/1n2N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 952);
    }

    #[test]
    fn gentest_207() {
        let board = Board::from_fen("8/q7/5k2/p2r3r/PP2p1P1/1K1P1N2/2R1p1B1/1n2N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1319);
    }

    #[test]
    fn gentest_208() {
        let board = Board::from_fen("8/q7/5k2/p2r3r/PP2p1P1/2KP4/2Rnp1B1/4N1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 928);
    }

    #[test]
    fn gentest_209() {
        let board = Board::from_fen("8/q7/5k2/p7/PP1rp1P1/2KP3B/2Rnp2r/4N1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 586);
        assert_eq!(perft(&board, 3, &PRECOMP), 9555);
    }

    #[test]
    fn gentest_210() {
        let board = Board::from_fen("8/8/5k2/p1q5/PP1rp1P1/3P1N1B/2RKp2r/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 763);
    }

    #[test]
    fn gentest_211() {
        let board = Board::from_fen("8/8/5k2/p1q1N2r/PP1rp1P1/3P4/2RKp3/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 939);
    }

    #[test]
    fn gentest_212() {
        let board = Board::from_fen("8/8/5k2/p1q1N1N1/PP1rp1P1/3P4/2RKp3/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 934);
    }

    #[test]
    fn gentest_213() {
        let board = Board::from_fen("8/6kN/8/2q1N3/Pp1rp1P1/3P4/2RKp3/7r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 861);
    }

    #[test]
    fn gentest_214() {
        let board = Board::from_fen("8/6kN/8/2q5/Pp1rp1P1/2RP1N2/3Kp3/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 851);
    }

    #[test]
    fn gentest_215() {
        let board = Board::from_fen("8/6kN/8/6q1/Pp1rp3/2RP1N2/3Kp3/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 155);
        assert_eq!(perft(&board, 3, &PRECOMP), 2848);
    }

    #[test]
    fn gentest_216() {
        let board = Board::from_fen("8/6k1/8/2q3N1/Pp1rp3/2RP1N2/4K3/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 900);
    }

    #[test]
    fn gentest_217() {
        let board = Board::from_fen("3r4/6k1/8/6N1/Ppq1p3/2RP1N2/5K2/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1090);
    }

    #[test]
    fn gentest_218() {
        let board = Board::from_fen("3r4/6k1/8/6N1/Pp1qp2N/2RP4/6K1/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 870);
    }

    #[test]
    fn gentest_219() {
        let board = Board::from_fen("3r4/5k2/4N3/3q4/Pp2p2N/2RP4/6K1/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1075);
    }

    #[test]
    fn gentest_220() {
        let board = Board::from_fen("3r4/5k2/4N1N1/3q4/P1R1p3/1p1P4/6K1/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1077);
    }

    #[test]
    fn gentest_221() {
        let board = Board::from_fen("8/5k2/4N1N1/3r2q1/P1R1p3/1p1P4/7K/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 997);
    }

    #[test]
    fn gentest_222() {
        let board = Board::from_fen("8/5kN1/8/3rq3/P1R1pN2/1p1P4/7K/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 758);
    }

    #[test]
    fn gentest_223() {
        let board = Board::from_fen("5k2/2R3q1/8/3r4/P3pN2/1p1P4/7K/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 889);
    }

    #[test]
    fn gentest_224() {
        let board = Board::from_fen("5k2/4R1q1/8/5r2/P3p3/1p1P4/6NK/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 627);
    }

    #[test]
    fn gentest_225() {
        let board = Board::from_fen("5k2/4R1q1/8/8/P3p2r/1p1P4/7K/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 0);
        assert_eq!(perft(&board, 2, &PRECOMP), 0);
        assert_eq!(perft(&board, 3, &PRECOMP), 0);
        assert_eq!(perft(&board, 4, &PRECOMP), 0);
        assert_eq!(perft(&board, 5, &PRECOMP), 0);
        assert_eq!(perft(&board, 6, &PRECOMP), 0);
    }

    #[test]
    fn gentest_226() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_227() {
        let board = Board::from_fen("rnbqkbnr/ppppppp1/7p/8/7P/7N/PPPPPPP1/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 418);
        assert_eq!(perft(&board, 3, &PRECOMP), 8955);
    }

    #[test]
    fn gentest_228() {
        let board = Board::from_fen("rnbqkbnr/1pppp1p1/p6p/5p2/7P/7N/PPPPPPP1/RNBQKBR1 w Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 358);
        assert_eq!(perft(&board, 3, &PRECOMP), 8094);
    }

    #[test]
    fn gentest_229() {
        let board = Board::from_fen("rnbqkbnr/1p1pp1p1/p6p/2p2p2/7P/2P4N/PP1PPPP1/RNBQKB1R b Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 458);
    }

    #[test]
    fn gentest_230() {
        let board = Board::from_fen("rnbqkbnr/1p1p2p1/4p2p/p1p2p2/7P/2P2P1N/PP1PP1P1/RNBQKB1R w Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 667);
    }

    #[test]
    fn gentest_231() {
        let board = Board::from_fen("rnbqkbnr/1p4p1/3pp2p/p1p2p2/7P/2PP1P1N/PP1NP1P1/R1BQKB1R b Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 784);
    }

    #[test]
    fn gentest_232() {
        let board = Board::from_fen("r1b1kbnr/1pq3p1/2npp2p/p1p2p2/4P2P/2PP1P1N/PP1N2P1/R1BQKB1R w Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1031);
    }

    #[test]
    fn gentest_233() {
        let board = Board::from_fen("r1b1kb1r/1pq1n1p1/2npp2p/p1p2p2/4P2P/2PP1P1N/PP1NB1P1/R1BQ1K1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 955);
    }

    #[test]
    fn gentest_234() {
        let board = Board::from_fen("r1bqkb1r/1p2n1p1/2npp2p/2p2p2/p3PN1P/2PP1P2/PP1NB1P1/R1BQ1K1R w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 927);
    }

    #[test]
    fn gentest_235() {
        let board = Board::from_fen("r2qkb1r/1p1bn1p1/2npp2p/2p2p2/Q3P2P/2PP1P1N/PP1NB1P1/R1B2K1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1306);
    }

    #[test]
    fn gentest_236() {
        let board = Board::from_fen("r2q1b1r/1p1bnk2/2npp2p/2p2pp1/2Q1P2P/2PP1P1N/PP1NB1P1/R1B2K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1352);
    }

    #[test]
    fn gentest_237() {
        let board = Board::from_fen("r4b1r/1p1bnk2/1qnpp2p/2p2pp1/2Q1PN1P/2PP1P2/PP1N2P1/R1BB1K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1782);
    }

    #[test]
    fn gentest_238() {
        let board = Board::from_fen("r3kb1r/1p1b4/1qnpp2p/2pn1pp1/2Q1PN1P/1NPP1P2/PP4P1/R1BB1K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1770);
    }

    #[test]
    fn gentest_239() {
        let board = Board::from_fen("r3kb1r/1p1b4/1qnpp2p/2p2pp1/1nQ1P2P/PNPP1P2/1P2N1P1/R1BB1K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1586);
    }

    #[test]
    fn gentest_240() {
        let board = Board::from_fen("1n1rkb1r/1p1b4/1q1pp2p/N1p2pp1/1nQ1P2P/P1PP1P2/1P2N1P1/R1BB1K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1336);
    }

    #[test]
    fn gentest_241() {
        let board = Board::from_fen("1n1rkb1r/1p1bN3/1q1pp2p/2p3p1/1nQ1p2P/P1PP1P2/1P2N1P1/R1BB1K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1526);
    }

    #[test]
    fn gentest_242() {
        let board = Board::from_fen("1n1rkbr1/1p1bN3/3pp2p/q1p3p1/1n2p2P/PQPP1P2/1P2N1P1/R1BB1K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1604);
    }

    #[test]
    fn gentest_243() {
        let board = Board::from_fen("1n1rkbr1/3bN3/3pp2p/qpp3p1/1nQ1P2P/P1PP4/1P2N1P1/R1BB1K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1307);
    }

    #[test]
    fn gentest_244() {
        let board = Board::from_fen("1n1rkbr1/3bN3/1n1pp2p/qpp3p1/2Q1P2P/P1PP4/1P2N1P1/1RBB1K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1291);
    }

    #[test]
    fn gentest_245() {
        let board = Board::from_fen("1n1rkbr1/q2bN3/1n1pp2p/1pp3p1/Q3P2P/PPPP4/4N1P1/1RBB1K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1178);
    }

    #[test]
    fn gentest_246() {
        let board = Board::from_fen("1n1rkb2/1q1b4/1nNpp1rp/1pp3p1/Q3P2P/PPPP4/4N1P1/1RBB1K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1276);
    }

    #[test]
    fn gentest_247() {
        let board = Board::from_fen("1n1rkb2/1q1b4/2Npp1rp/1pp3p1/2n1P2P/PPPPQ3/4N1P1/1RBB1K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1188);
    }

    #[test]
    fn gentest_248() {
        let board = Board::from_fen("1n1rkb2/1q1b4/2Npp2r/1pp5/2n1P2p/PPPP4/4N1P1/1RBB1K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1128);
    }

    #[test]
    fn gentest_249() {
        let board = Board::from_fen("1n1rkb2/1q1b4/2Npp2r/1pp5/4P2p/nPPP4/4N1P1/1RBB1K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 924);
    }

    #[test]
    fn gentest_250() {
        let board = Board::from_fen("3rkb2/1q1b4/3pp2r/1pp1n3/7p/nPPP4/4N1P1/1RBB1K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1038);
    }

    #[test]
    fn gentest_251() {
        let board = Board::from_fen("3rkb2/1q1b4/3pp2r/1pp5/2P3np/nP1P4/4N1P1/1RBB1KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 700);
    }

    #[test]
    fn gentest_252() {
        let board = Board::from_fen("3rk3/1q1b2b1/3pp2r/1pp5/2n3np/1P1PB3/4N1P1/1R1B1KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1155);
    }

    #[test]
    fn gentest_253() {
        let board = Board::from_fen("3rk3/1q1b2b1/4p2r/1ppp4/B1P3np/3PB3/4N1P1/1R3KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1183);
    }

    #[test]
    fn gentest_254() {
        let board = Board::from_fen("3rk3/1q1b2b1/7r/1p1pp3/BpP3np/3PB3/4N1P1/5KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1073);
    }

    #[test]
    fn gentest_255() {
        let board = Board::from_fen("3rk3/1q4b1/4b2r/1pPpp3/Bp4np/3PB3/4N1P1/5K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1041);
    }

    #[test]
    fn gentest_256() {
        let board = Board::from_fen("4k3/3r2b1/1q2b2r/1pPpp3/Bp4np/3P4/4N1P1/5KBR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 846);
    }

    #[test]
    fn gentest_257() {
        let board = Board::from_fen("3rk3/6b1/1q2b2r/1pPpp3/Bp1P2np/7R/4N1P1/5KB1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 936);
    }

    #[test]
    fn gentest_258() {
        let board = Board::from_fen("4k3/r5b1/1q2b2r/1pPpp3/Bp1P2nR/8/4N1P1/5KB1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 952);
    }

    #[test]
    fn gentest_259() {
        let board = Board::from_fen("3k4/r5b1/1qP1b2r/1p1pp3/Bp1P2n1/8/4N1PR/5KB1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 782);
    }

    #[test]
    fn gentest_260() {
        let board = Board::from_fen("3k4/r5b1/2P4r/1pqppb2/Bp1P2n1/2N5/6PR/5KB1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1217);
    }

    #[test]
    fn gentest_261() {
        let board = Board::from_fen("3k1q2/r5b1/2P4r/1pNppb2/Bp1P2n1/8/6PR/5KB1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 944);
    }

    #[test]
    fn gentest_262() {
        let board = Board::from_fen("3k4/4qrb1/2P4r/1p1ppb2/Bp1PN1n1/8/6PR/5KB1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1038);
    }

    #[test]
    fn gentest_263() {
        let board = Board::from_fen("2k5/2P1qrb1/3N3r/1p1ppb2/Bp1P2n1/8/6PR/5KB1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 82);
        assert_eq!(perft(&board, 3, &PRECOMP), 3432);
    }

    #[test]
    fn gentest_264() {
        let board = Board::from_fen("2k2q2/2P2rb1/3r4/1p1ppb2/Bp1P2n1/8/5BPR/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 854);
    }

    #[test]
    fn gentest_265() {
        let board = Board::from_fen("2k2q2/2P2rb1/2r5/1p1ppb2/1p1P2n1/8/5BPR/3BK3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1000);
    }

    #[test]
    fn gentest_266() {
        let board = Board::from_fen("2k2q2/2Pb1rb1/2r5/1p1pp3/1p1P2B1/8/5BPn/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 647);
    }

    #[test]
    fn gentest_267() {
        let board = Board::from_fen("2k2q2/2P2rb1/2r1b3/1p1pP3/1p6/7B/5BPn/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 604);
    }

    #[test]
    fn gentest_268() {
        let board = Board::from_fen("2k2q2/2P3b1/1B2b3/1p1pP3/1pr2r2/7B/6Pn/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 598);
        assert_eq!(perft(&board, 3, &PRECOMP), 8478);
    }

    #[test]
    fn gentest_269() {
        let board = Board::from_fen("2k2q2/2P3b1/4b3/1p1pP3/1p2rr2/4B2B/4K1Pn/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 345);
    }

    #[test]
    fn gentest_270() {
        let board = Board::from_fen("2k4q/2P3b1/4b3/1p1pP3/1p2rr2/4B2B/6P1/4Kn2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 227);
        assert_eq!(perft(&board, 3, &PRECOMP), 2279);
    }

    #[test]
    fn gentest_271() {
        let board = Board::from_fen("2k4q/2P3b1/4b3/1p1pP3/1p3r2/4r3/4B1P1/4Kn2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 231);
    }

    #[test]
    fn gentest_272() {
        let board = Board::from_fen("2k5/2P3b1/4b3/1p1pPr2/1p4P1/4r3/4B3/4Kn1q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 129);
        assert_eq!(perft(&board, 3, &PRECOMP), 780);
    }

    #[test]
    fn gentest_273() {
        let board = Board::from_fen("2k5/2P3b1/4b3/1p1pPP2/1p6/8/4r3/3K1n1q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 144);
        assert_eq!(perft(&board, 3, &PRECOMP), 5362);
    }

    #[test]
    fn gentest_274() {
        let board = Board::from_fen("2k5/2P3b1/4P3/1p1pP3/1p6/5r2/8/3K1n1q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 176);
        assert_eq!(perft(&board, 3, &PRECOMP), 853);
    }

    #[test]
    fn gentest_275() {
        let board = Board::from_fen("2k5/2P1P1b1/8/1p1pP3/1p3r2/8/4K3/5n1q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 259);
        assert_eq!(perft(&board, 3, &PRECOMP), 7388);
    }

    #[test]
    fn gentest_276() {
        let board = Board::from_fen("8/2PkP1b1/8/1p1pP3/1p3r2/3K4/3n4/7q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 391);
        assert_eq!(perft(&board, 3, &PRECOMP), 4619);
    }

    #[test]
    fn gentest_277() {
        let board = Board::from_fen("8/2k1P1b1/8/1p1pP3/1p3rB1/3K4/3n4/7q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 670);
    }

    #[test]
    fn gentest_278() {
        let board = Board::from_fen("5b2/4P3/1k6/1p1pPB2/1p3r2/3K4/3n4/7q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 914);
    }

    #[test]
    fn gentest_279() {
        let board = Board::from_fen("8/8/1k2N3/1p2PB2/1p1p1r2/3K4/3n4/7q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 533);
    }

    #[test]
    fn gentest_280() {
        let board = Board::from_fen("8/8/1k2N3/1p2P3/1p1p2B1/3K1r2/3n4/7q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 184);
        assert_eq!(perft(&board, 3, &PRECOMP), 2372);
    }

    #[test]
    fn gentest_281() {
        let board = Board::from_fen("8/8/1k2N3/1p2P2q/1p1p4/3K4/3nB3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 358);
        assert_eq!(perft(&board, 3, &PRECOMP), 9704);
    }

    #[test]
    fn gentest_282() {
        let board = Board::from_fen("1q6/8/1k6/1pN5/1p1p4/3K4/3nB3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 358);
        assert_eq!(perft(&board, 3, &PRECOMP), 5524);
    }

    #[test]
    fn gentest_283() {
        let board = Board::from_fen("8/8/1k6/1pN1q2B/1p1p4/8/2Kn4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 572);
    }

    #[test]
    fn gentest_284() {
        let board = Board::from_fen("8/8/1k6/1pNq4/1p1p4/8/2K1B3/5n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 606);
        assert_eq!(perft(&board, 3, &PRECOMP), 9294);
    }

    #[test]
    fn gentest_285() {
        let board = Board::from_fen("8/8/1kq5/1pN5/1p1p4/5B2/8/3K1n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 459);
    }

    #[test]
    fn gentest_286() {
        let board = Board::from_fen("8/2k5/8/1pq5/1p1p4/5B2/4K3/5n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 371);
        assert_eq!(perft(&board, 3, &PRECOMP), 4346);
    }

    #[test]
    fn gentest_287() {
        let board = Board::from_fen("8/2k5/2B5/1pq5/3p4/1p6/8/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 307);
        assert_eq!(perft(&board, 3, &PRECOMP), 7692);
    }

    #[test]
    fn gentest_288() {
        let board = Board::from_fen("8/1B6/4k3/1pq5/3p4/1p6/8/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 360);
        assert_eq!(perft(&board, 3, &PRECOMP), 4279);
    }

    #[test]
    fn gentest_289() {
        let board = Board::from_fen("8/8/1qB1k3/1p6/3p4/1p6/8/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 247);
        assert_eq!(perft(&board, 3, &PRECOMP), 5330);
    }

    #[test]
    fn gentest_290() {
        let board = Board::from_fen("8/8/1qB1k3/1p6/3p4/1p6/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 296);
        assert_eq!(perft(&board, 3, &PRECOMP), 4165);
    }

    #[test]
    fn gentest_291() {
        let board = Board::from_fen("8/1B6/2q1k3/1p6/3p4/1p6/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 239);
        assert_eq!(perft(&board, 3, &PRECOMP), 5525);
    }

    #[test]
    fn gentest_292() {
        let board = Board::from_fen("8/1B6/8/1p1qk3/3p4/1p6/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 236);
        assert_eq!(perft(&board, 3, &PRECOMP), 2332);
    }

    #[test]
    fn gentest_293() {
        let board = Board::from_fen("8/8/8/1p2k3/3p4/1p6/6B1/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 95);
        assert_eq!(perft(&board, 3, &PRECOMP), 876);
    }

    #[test]
    fn gentest_294() {
        let board = Board::from_fen("8/8/8/1p3k2/3p4/1p6/5KB1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 138);
        assert_eq!(perft(&board, 3, &PRECOMP), 1959);
    }

    #[test]
    fn gentest_295() {
        let board = Board::from_fen("8/8/2B5/5k2/1p1p4/1p6/8/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 144);
        assert_eq!(perft(&board, 3, &PRECOMP), 1302);
    }

    #[test]
    fn gentest_296() {
        let board = Board::from_fen("8/5k2/8/8/1p1p4/1p6/6B1/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 123);
        assert_eq!(perft(&board, 3, &PRECOMP), 1650);
    }

    #[test]
    fn gentest_297() {
        let board = Board::from_fen("8/8/4k3/8/1p1p4/1p6/8/5B1K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 97);
        assert_eq!(perft(&board, 3, &PRECOMP), 883);
        assert_eq!(perft(&board, 4, &PRECOMP), 9837);
    }

    #[test]
    fn gentest_298() {
        let board = Board::from_fen("8/8/4k3/8/1p1p4/8/6B1/1b5K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 138);
        assert_eq!(perft(&board, 3, &PRECOMP), 1576);
    }

    #[test]
    fn gentest_299() {
        let board = Board::from_fen("8/8/8/3Bk3/1p1p4/8/7K/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 231);
        assert_eq!(perft(&board, 3, &PRECOMP), 3329);
    }

    #[test]
    fn gentest_300() {
        let board = Board::from_fen("8/8/4b3/4k3/1p1pB3/8/7K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 284);
        assert_eq!(perft(&board, 3, &PRECOMP), 3835);
    }

    #[test]
    fn gentest_301() {
        let board = Board::from_fen("8/8/8/4kb2/1p1p4/8/8/1B5K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 139);
        assert_eq!(perft(&board, 3, &PRECOMP), 2115);
    }

    #[test]
    fn gentest_302() {
        let board = Board::from_fen("8/8/6b1/3k1B2/1p1p4/8/8/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 170);
        assert_eq!(perft(&board, 3, &PRECOMP), 1925);
    }

    #[test]
    fn gentest_303() {
        let board = Board::from_fen("8/8/4k3/7B/1p1p4/8/8/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 90);
        assert_eq!(perft(&board, 3, &PRECOMP), 762);
        assert_eq!(perft(&board, 4, &PRECOMP), 8933);
    }

    #[test]
    fn gentest_304() {
        let board = Board::from_fen("8/5B2/8/4k3/1p6/3p4/8/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 1177);
    }

    #[test]
    fn gentest_305() {
        let board = Board::from_fen("8/8/8/1B2k3/8/1p1p4/8/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 947);
    }

    #[test]
    fn gentest_306() {
        let board = Board::from_fen("8/8/8/8/2B2k2/1p1p4/8/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 1149);
    }

    #[test]
    fn gentest_307() {
        let board = Board::from_fen("6B1/8/8/8/6k1/1p1p4/6K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 89);
        assert_eq!(perft(&board, 3, &PRECOMP), 720);
        assert_eq!(perft(&board, 4, &PRECOMP), 8957);
    }

    #[test]
    fn gentest_308() {
        let board = Board::from_fen("6B1/8/8/8/7k/1p1p1K2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 56);
        assert_eq!(perft(&board, 3, &PRECOMP), 730);
        assert_eq!(perft(&board, 4, &PRECOMP), 5198);
    }

    #[test]
    fn gentest_309() {
        let board = Board::from_fen("8/8/8/6k1/8/1B1p2K1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 95);
        assert_eq!(perft(&board, 3, &PRECOMP), 631);
        assert_eq!(perft(&board, 4, &PRECOMP), 9412);
    }

    #[test]
    fn gentest_310() {
        let board = Board::from_fen("8/5B2/8/6k1/8/6K1/8/3n4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 111);
        assert_eq!(perft(&board, 3, &PRECOMP), 1549);
    }

    #[test]
    fn gentest_311() {
        let board = Board::from_fen("8/8/7k/8/8/6K1/B7/3n4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 121);
        assert_eq!(perft(&board, 3, &PRECOMP), 1165);
    }

    #[test]
    fn gentest_312() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_313() {
        let board = Board::from_fen("rnbqkbnr/ppp1pppp/8/3p4/6P1/5P2/PPPPP2P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 541);
    }

    #[test]
    fn gentest_314() {
        let board = Board::from_fen("rnbqkbnr/p1p2ppp/8/1p1pp3/6P1/1P3P2/P1PPP2P/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 798);
    }

    #[test]
    fn gentest_315() {
        let board = Board::from_fen("r1bqkbnr/p1p2ppp/2n5/1p1pp3/6P1/PP3P2/2PPP1BP/RNBQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 759);
    }

    #[test]
    fn gentest_316() {
        let board = Board::from_fen("r2qkbnr/p1p2ppp/2n5/1p2pb2/3p2P1/PP3P2/2PPP2P/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 811);
    }

    #[test]
    fn gentest_317() {
        let board = Board::from_fen("r2qkbnr/p1p2ppp/2n5/1p3b2/3pp1PP/PPN2P2/2PPP3/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1001);
    }

    #[test]
    fn gentest_318() {
        let board = Board::from_fen("r3kb1r/p1p2ppp/2n4n/1p3bq1/P2pp1PP/1PN2P2/2PPP3/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1166);
    }

    #[test]
    fn gentest_319() {
        let board = Board::from_fen("r3kbr1/p1p2ppp/2n4n/1p3bq1/P2pp1PP/1PN2P1R/2PPPK2/R1BQ1BN1 b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1146);
    }

    #[test]
    fn gentest_320() {
        let board = Board::from_fen("r1bnkbr1/p1p2ppp/7n/1p4q1/P2pp1PP/1PN2P1R/1BPPPK2/R2Q1BN1 w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1346);
    }

    #[test]
    fn gentest_321() {
        let board = Board::from_fen("r1bnk1r1/p1p2ppp/7n/1p4q1/Pb1pp1PP/BPN2P1R/2PPPK2/RQ3BN1 b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1329);
    }

    #[test]
    fn gentest_322() {
        let board = Board::from_fen("r1bnk2r/p1p2ppp/7n/1p5q/Pb1pp1PP/BPN2P1R/Q1PPPK2/R4BN1 w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1306);
    }

    #[test]
    fn gentest_323() {
        let board = Board::from_fen("r1bn3r/p1pk1ppp/7n/1P1N3q/1b1pp1PP/BP3P1R/Q1PPPK2/R4BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1290);
    }

    #[test]
    fn gentest_324() {
        let board = Board::from_fen("r1bn3r/p1pk1ppp/7n/1P1N4/1b1ppqPP/BP3P1R/Q1PPPK2/4RBN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1248);
    }

    #[test]
    fn gentest_325() {
        let board = Board::from_fen("r1bn3r/p1p2ppp/1N1k3n/1P4P1/1b1ppq1P/BP3P1R/Q1PPPK2/4RBN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1114);
    }

    #[test]
    fn gentest_326() {
        let board = Board::from_fen("r1bn3r/2p3pp/1N1k2Pn/pP3p2/1b1ppq1P/BP3P1R/Q1PPPK2/4RBN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 977);
    }

    #[test]
    fn gentest_327() {
        let board = Board::from_fen("r2n3r/1bp3pp/1N1k2Pn/pP3p2/1b1ppq1P/BP3P1R/2PPPK2/1Q1R1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 925);
    }

    #[test]
    fn gentest_328() {
        let board = Board::from_fen("r2n3r/1bp3pp/1N1k2Pn/pP3p2/1b1ppq1P/BP3P1R/2PPPK2/1Q2RBN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 979);
    }

    #[test]
    fn gentest_329() {
        let board = Board::from_fen("r2n3r/1bp3pp/1N1k2Pn/pP3p2/1b1pp2P/BP3PqR/2PPP1B1/1Q2RKN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1135);
    }

    #[test]
    fn gentest_330() {
        let board = Board::from_fen("r1Nn3r/1bpk2pp/6P1/pP3p2/1b1pp1nP/BP3PqR/2PPP1B1/1Q2RKN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1345);
    }

    #[test]
    fn gentest_331() {
        let board = Board::from_fen("r2n3r/1bp1k1pp/1N4P1/pP3p2/1b1pp1nP/BP1P1PqR/2P1P1B1/1Q2RKN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1242);
    }

    #[test]
    fn gentest_332() {
        let board = Board::from_fen("r6r/1bp1knpp/1N4P1/pP3p2/1b1p2nP/BP1P1pqR/1QP1P1B1/4RKN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1603);
    }

    #[test]
    fn gentest_333() {
        let board = Board::from_fen("r6r/1bpk1npp/6P1/pP1N1p2/1b1p2nP/BP1P1pqR/2P1P1B1/Q3RKN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 61);
        assert_eq!(perft(&board, 2, &PRECOMP), 1963);
    }

    #[test]
    fn gentest_334() {
        let board = Board::from_fen("r2n3r/1bpk2pp/6P1/pP1N1p2/1b1p1qnP/1P1P1p1R/2P1P1B1/Q1B1RKN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1758);
    }

    #[test]
    fn gentest_335() {
        let board = Board::from_fen("r2n3r/1bNk2pp/6P1/pP3p2/3pPqnP/1P1P1p1R/2P3B1/Q1B1bKN1 b - e3").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1630);
    }

    #[test]
    fn gentest_336() {
        let board = Board::from_fen("r2n3r/1bNk2pp/6P1/pP3p2/3pPq1P/1P1PB2R/2P3p1/Q3bKN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 129);
        assert_eq!(perft(&board, 3, &PRECOMP), 4008);
    }

    #[test]
    fn gentest_337() {
        let board = Board::from_fen("r2n1r2/1bNk2pp/6P1/pP3p2/3pPq1P/1P1PBR2/2P3p1/Q3K1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1418);
    }

    #[test]
    fn gentest_338() {
        let board = Board::from_fen("r2n1r2/1bNk2pp/6P1/pP3p2/Q2pP2P/1P1PBR1q/2P3p1/4K1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1222);
    }

    #[test]
    fn gentest_339() {
        let board = Board::from_fen("r1bn1r2/2Nk2pp/6P1/pP3p2/3QP2P/1P1PBR1q/2P1N1p1/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 95);
        assert_eq!(perft(&board, 3, &PRECOMP), 2475);
    }

    #[test]
    fn gentest_340() {
        let board = Board::from_fen("r1bn1r2/2k3p1/6p1/pP3p2/4P2P/1P1PBR1q/2P1N1p1/Q3K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1384);
    }

    #[test]
    fn gentest_341() {
        let board = Board::from_fen("r1bn1r2/2k3p1/6p1/pP3p2/4P2P/1P1P3R/2P1NB2/Q3K1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1086);
    }

    #[test]
    fn gentest_342() {
        let board = Board::from_fen("r1b2r2/3k2p1/2n3p1/pP3p2/3BP2P/1P1P3R/2P1N3/Q3K1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1256);
    }

    #[test]
    fn gentest_343() {
        let board = Board::from_fen("r1br4/3k2p1/2n3p1/pP3p2/Q2BP2P/1P1P2R1/2P1N3/4K1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1029);
    }

    #[test]
    fn gentest_344() {
        let board = Board::from_fen("r1br4/2k3p1/6p1/pP3p2/1Q1nP2P/1P1P2R1/2P1N3/4K1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 895);
    }

    #[test]
    fn gentest_345() {
        let board = Board::from_fen("r1br4/2k3p1/6p1/pn3pR1/1Q1PP2P/1P6/2P1N3/4K1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1023);
    }

    #[test]
    fn gentest_346() {
        let board = Board::from_fen("r1b1r3/1k4p1/6p1/pn3pR1/2QPP2P/1P6/2P1N3/4K1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 863);
    }

    #[test]
    fn gentest_347() {
        let board = Board::from_fen("r1Qr4/1k4p1/6p1/pn3R2/3PP2P/1P6/2P1N3/4K1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 164);
        assert_eq!(perft(&board, 3, &PRECOMP), 3975);
    }

    #[test]
    fn gentest_348() {
        let board = Board::from_fen("r1kr4/6p1/6p1/p4R2/3PP2P/1Pn5/4N3/4K1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 693);
    }

    #[test]
    fn gentest_349() {
        let board = Board::from_fen("r1kr4/6p1/6p1/R7/1P1PP2P/8/4N3/3nK1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 572);
    }

    #[test]
    fn gentest_350() {
        let board = Board::from_fen("2kr4/6p1/6p1/r6P/1P1PP3/8/4N3/3nK1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 453);
        assert_eq!(perft(&board, 3, &PRECOMP), 5864);
    }

    #[test]
    fn gentest_351() {
        let board = Board::from_fen("2k2r2/6p1/6p1/r6P/1P1PP3/8/3K4/3n2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 496);
    }

    #[test]
    fn gentest_352() {
        let board = Board::from_fen("2k2r2/6p1/8/r3P1pP/1P1P4/2n5/3K4/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 494);
        assert_eq!(perft(&board, 3, &PRECOMP), 6047);
    }

    #[test]
    fn gentest_353() {
        let board = Board::from_fen("2k2r2/6p1/4P3/r5pP/1P1P4/7N/n2K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 421);
    }

    #[test]
    fn gentest_354() {
        let board = Board::from_fen("1k3r2/6p1/4P3/r6P/1P1P2p1/3K3N/n7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 509);
        assert_eq!(perft(&board, 3, &PRECOMP), 6757);
    }

    #[test]
    fn gentest_355() {
        let board = Board::from_fen("2k2r2/6p1/4P3/r2P3P/1P4p1/7N/n1K5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 405);
    }

    #[test]
    fn gentest_356() {
        let board = Board::from_fen("5r2/1k4p1/4P3/r2P3P/1P4p1/7N/nK6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 452);
        assert_eq!(perft(&board, 3, &PRECOMP), 5805);
    }

    #[test]
    fn gentest_357() {
        let board = Board::from_fen("5r2/1k6/4P3/r2P2pP/1P2N1p1/8/nK6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 540);
    }

    #[test]
    fn gentest_358() {
        let board = Board::from_fen("2k2r2/8/r3P3/1P1P2pP/4N1p1/8/nK6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 431);
        assert_eq!(perft(&board, 3, &PRECOMP), 6641);
    }

    #[test]
    fn gentest_359() {
        let board = Board::from_fen("2k5/4P3/r7/1PNP2pP/6p1/5r2/nK6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
    }

    #[test]
    fn gentest_360() {
        let board = Board::from_fen("2k1N3/8/r7/1PNP2pP/6p1/5r2/nK6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 549);
        assert_eq!(perft(&board, 3, &PRECOMP), 9244);
    }

    #[test]
    fn gentest_361() {
        let board = Board::from_fen("2k1N3/1N6/r7/1P1P2pP/8/5rp1/n7/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 393);
        assert_eq!(perft(&board, 3, &PRECOMP), 9985);
    }

    #[test]
    fn gentest_362() {
        let board = Board::from_fen("2kNN3/r7/8/1P1P2pP/8/2n2rp1/8/K7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 36);
        assert_eq!(perft(&board, 3, &PRECOMP), 474);
    }

    #[test]
    fn gentest_363() {
        let board = Board::from_fen("2kNN3/r7/8/1P1P2pP/8/2n1r1p1/2K5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 519);
    }

    #[test]
    fn gentest_364() {
        let board = Board::from_fen("2kNN3/5r2/7P/1P1n2p1/8/4r1p1/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 512);
        assert_eq!(perft(&board, 3, &PRECOMP), 7303);
    }

    #[test]
    fn gentest_365() {
        let board = Board::from_fen("2Nk4/5r2/7P/1P1n2p1/8/4r1p1/2K5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 393);
    }

    #[test]
    fn gentest_366() {
        let board = Board::from_fen("2Nk4/4r3/7P/1P1n2p1/8/6p1/1K6/4r3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 363);
        assert_eq!(perft(&board, 3, &PRECOMP), 3612);
    }

    #[test]
    fn gentest_367() {
        let board = Board::from_fen("3k4/N2r4/7P/1P1n2p1/8/K5p1/8/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 261);
        assert_eq!(perft(&board, 3, &PRECOMP), 8089);
    }

    #[test]
    fn gentest_368() {
        let board = Board::from_fen("4k3/5r2/2N4P/1P1n2p1/8/K5p1/8/4r3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 554);
        assert_eq!(perft(&board, 3, &PRECOMP), 6287);
    }

    #[test]
    fn gentest_369() {
        let board = Board::from_fen("4k2R/5r2/2N1r3/1P1n2p1/8/K5p1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 49);
        assert_eq!(perft(&board, 3, &PRECOMP), 1451);
    }

    #[test]
    fn gentest_370() {
        let board = Board::from_fen("6R1/3k1r2/2N1r3/1P1n2p1/8/K7/6p1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 763);
    }

    #[test]
    fn gentest_371() {
        let board = Board::from_fen("6R1/3kNr2/4r3/1P1n4/6p1/8/1K4p1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 851);
    }

    #[test]
    fn gentest_372() {
        let board = Board::from_fen("3R4/4Nr2/1k2r3/1P1n4/6p1/8/1K4p1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 759);
    }

    #[test]
    fn gentest_373() {
        let board = Board::from_fen("3R4/4Nr2/1kr5/1P1n4/6p1/1K6/6p1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 818);
    }

    #[test]
    fn gentest_374() {
        let board = Board::from_fen("8/k3Nr2/2rR4/1P1n4/6p1/1K6/8/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 576);
    }

    #[test]
    fn gentest_375() {
        let board = Board::from_fen("8/k4r2/3r4/1P1N4/K5p1/8/8/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 362);
    }

    #[test]
    fn gentest_376() {
        let board = Board::from_fen("8/k2rN3/5r2/1P6/K5p1/8/8/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 270);
        assert_eq!(perft(&board, 3, &PRECOMP), 2907);
    }

    #[test]
    fn gentest_377() {
        let board = Board::from_fen("3r4/k3N3/5r2/1P6/6p1/2K5/8/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 410);
    }

    #[test]
    fn gentest_378() {
        let board = Board::from_fen("5r2/k7/8/1P3N2/6p1/2Kr4/8/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 146);
        assert_eq!(perft(&board, 3, &PRECOMP), 1846);
    }

    #[test]
    fn gentest_379() {
        let board = Board::from_fen("r7/k5N1/8/1P6/6p1/3r4/2K5/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 245);
        assert_eq!(perft(&board, 3, &PRECOMP), 6241);
    }

    #[test]
    fn gentest_380() {
        let board = Board::from_fen("1r6/k5N1/3r4/1P6/6p1/8/8/1K4n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 279);
        assert_eq!(perft(&board, 3, &PRECOMP), 2755);
    }

    #[test]
    fn gentest_381() {
        let board = Board::from_fen("1r1N4/k7/8/1P1r4/6p1/8/8/1K4n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 213);
        assert_eq!(perft(&board, 3, &PRECOMP), 4894);
    }

    #[test]
    fn gentest_382() {
        let board = Board::from_fen("1r6/k7/8/1P6/6p1/8/8/K2r2n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 58);
        assert_eq!(perft(&board, 3, &PRECOMP), 298);
        assert_eq!(perft(&board, 4, &PRECOMP), 7794);
    }

    #[test]
    fn gentest_383() {
        let board = Board::from_fen("1r6/k7/8/1P6/6p1/2K5/8/r5n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 210);
        assert_eq!(perft(&board, 3, &PRECOMP), 5621);
    }

    #[test]
    fn gentest_384() {
        let board = Board::from_fen("8/k7/4r3/1P6/2K3p1/8/8/r5n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 229);
        assert_eq!(perft(&board, 3, &PRECOMP), 1330);
    }

    #[test]
    fn gentest_385() {
        let board = Board::from_fen("4r3/k7/1P6/8/6p1/3K4/8/r5n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 28);
        assert_eq!(perft(&board, 3, &PRECOMP), 892);
        assert_eq!(perft(&board, 4, &PRECOMP), 5233);
    }

    #[test]
    fn gentest_386() {
        let board = Board::from_fen("k3r3/r7/1P6/8/6p1/8/2K5/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 278);
        assert_eq!(perft(&board, 3, &PRECOMP), 1711);
    }

    #[test]
    fn gentest_387() {
        let board = Board::from_fen("k3r3/r7/1P6/8/6p1/7n/2K5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 281);
        assert_eq!(perft(&board, 3, &PRECOMP), 7970);
    }

    #[test]
    fn gentest_388() {
        let board = Board::from_fen("k3r3/8/1P6/3r4/6p1/3K3n/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 582);
    }

    #[test]
    fn gentest_389() {
        let board = Board::from_fen("k3r3/8/1P6/r7/1K4p1/7n/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 167);
        assert_eq!(perft(&board, 3, &PRECOMP), 4261);
    }

    #[test]
    fn gentest_390() {
        let board = Board::from_fen("r7/1k6/1P6/K7/6p1/7n/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 45);
        assert_eq!(perft(&board, 3, &PRECOMP), 217);
        assert_eq!(perft(&board, 4, &PRECOMP), 4558);
    }

    #[test]
    fn gentest_391() {
        let board = Board::from_fen("5r2/1k6/1P6/8/K5p1/7n/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 118);
        assert_eq!(perft(&board, 3, &PRECOMP), 2615);
    }

    #[test]
    fn gentest_392() {
        let board = Board::from_fen("5r2/1P6/1k6/8/K5p1/7n/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 132);
        assert_eq!(perft(&board, 3, &PRECOMP), 1222);
    }

    #[test]
    fn gentest_393() {
        let board = Board::from_fen("1r6/8/1k6/8/1K4p1/7n/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 91);
        assert_eq!(perft(&board, 3, &PRECOMP), 2085);
    }

    #[test]
    fn gentest_394() {
        let board = Board::from_fen("7r/8/1k6/6n1/2K3p1/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 168);
        assert_eq!(perft(&board, 3, &PRECOMP), 1027);
    }

    #[test]
    fn gentest_395() {
        let board = Board::from_fen("7r/1k6/3K4/6n1/6p1/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 136);
        assert_eq!(perft(&board, 3, &PRECOMP), 3428);
    }

    #[test]
    fn gentest_396() {
        let board = Board::from_fen("k7/3K4/8/6n1/6p1/8/7r/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 163);
        assert_eq!(perft(&board, 3, &PRECOMP), 801);
    }

    #[test]
    fn gentest_397() {
        let board = Board::from_fen("k2K4/8/8/6n1/6p1/8/4r3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 81);
        assert_eq!(perft(&board, 3, &PRECOMP), 1767);
        assert_eq!(perft(&board, 4, &PRECOMP), 7499);
    }

    #[test]
    fn gentest_398() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_399() {
        let board = Board::from_fen("rnbqkbnr/1ppppppp/p7/8/8/1P6/PBPPPPPP/RN1QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 511);
    }

    #[test]
    fn gentest_400() {
        let board = Board::from_fen("rnbqkbnr/1p1p1ppp/p1p5/4p3/P7/1P6/1BPPPPPP/RN1QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 778);
    }

    #[test]
    fn gentest_401() {
        let board = Board::from_fen("rnbqkb1r/1p1p1ppp/p1p2n2/4p3/P7/1P2P1P1/1BPP1P1P/RN1QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1026);
    }

    #[test]
    fn gentest_402() {
        let board = Board::from_fen("rnb1kb1r/1p1p1ppp/p1p2n2/1q2p3/P5P1/1P2P3/1BPP1P1P/RN1QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1156);
    }

    #[test]
    fn gentest_403() {
        let board = Board::from_fen("rnb1kb1r/1p1p1ppp/p1p2n2/4p3/P5P1/1qB1P3/2PPNP1P/RN1QKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1008);
    }

    #[test]
    fn gentest_404() {
        let board = Board::from_fen("rnb1k2r/1p1p1ppp/pbp2n2/4p3/P4PP1/1qB1P3/2PPN2P/RN1QKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1093);
    }

    #[test]
    fn gentest_405() {
        let board = Board::from_fen("rnb2k1r/1p1p1ppp/pbp2n2/4p3/P4PP1/1qB1P3/2PPQ2P/RN2KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1225);
    }

    #[test]
    fn gentest_406() {
        let board = Board::from_fen("rnb2k1r/1p1p1pp1/p1p2n1p/2b1p1P1/P4P2/1qB1P3/2PPQ2P/RN2KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1559);
    }

    #[test]
    fn gentest_407() {
        let board = Board::from_fen("rnb2k1r/1p1p1pp1/2p2n1p/1pb1pPP1/P7/1qB1P3/2PP3P/RN2KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1334);
    }

    #[test]
    fn gentest_408() {
        let board = Board::from_fen("rnb2k2/1p1p1p1r/2p2nPp/1pb1p1P1/P7/1qB1P3/2PP3P/RN2KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1422);
    }

    #[test]
    fn gentest_409() {
        let board = Board::from_fen("rnb2k2/bp1p1p1P/2p2P1p/1p2p3/P7/1qB1P3/2PP3P/RN2KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 746);
    }

    #[test]
    fn gentest_410() {
        let board = Board::from_fen("r1b2k2/bp1p1p1P/n1p2P1p/4B3/Pp6/1q2P3/2PP3P/RN2KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 967);
    }

    #[test]
    fn gentest_411() {
        let board = Board::from_fen("r1b1k2Q/bp1p1p2/n1pB1P1p/8/Pp6/1q2P3/2PP3P/RN2KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 0);
        assert_eq!(perft(&board, 2, &PRECOMP), 0);
        assert_eq!(perft(&board, 3, &PRECOMP), 0);
        assert_eq!(perft(&board, 4, &PRECOMP), 0);
        assert_eq!(perft(&board, 5, &PRECOMP), 0);
        assert_eq!(perft(&board, 6, &PRECOMP), 0);
    }

    #[test]
    fn gentest_412() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_413() {
        let board = Board::from_fen("rnbqkbnr/pppp1ppp/4p3/8/4P3/5P2/PPPP2PP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 751);
    }

    #[test]
    fn gentest_414() {
        let board = Board::from_fen("rnbqkbnr/1ppp1pp1/4p2p/p7/4P3/5P2/PPPP1KPP/RNBQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 866);
    }

    #[test]
    fn gentest_415() {
        let board = Board::from_fen("rnbqkbnr/1ppp1pp1/4p3/p6p/1P2P3/5P2/P1PPQKPP/RNB2BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 866);
    }

    #[test]
    fn gentest_416() {
        let board = Board::from_fen("rnbqkbnr/1ppp4/4p1p1/p4p1p/1P2P3/5P2/P1PP1KPP/RNBQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1082);
    }

    #[test]
    fn gentest_417() {
        let board = Board::from_fen("rnbqk1nr/1ppp4/4p1p1/pPb2p1p/3PP3/5P2/P1P2KPP/RNBQ1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1142);
    }

    #[test]
    fn gentest_418() {
        let board = Board::from_fen("rnbqk2r/1ppp4/1b2p1pn/pP3p1p/3PP3/5PK1/P1P3PP/RNBQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 979);
    }

    #[test]
    fn gentest_419() {
        let board = Board::from_fen("rnbq3r/1ppp1k2/1b2p1pn/pP3p1p/3PP3/5PK1/P1P1Q1PP/RNB2BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1012);
    }

    #[test]
    fn gentest_420() {
        let board = Board::from_fen("rnbq1r2/1ppp1k2/1b2p2n/pP3ppp/3PP3/5PK1/PBP1Q1PP/RN3BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 800);
    }

    #[test]
    fn gentest_421() {
        let board = Board::from_fen("rnb2r2/1pppqk2/1b2p2n/pP3ppp/P2PP3/5PK1/1BPNQ1PP/R4BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 918);
    }

    #[test]
    fn gentest_422() {
        let board = Board::from_fen("rnb2r2/1pppqk2/1b2p3/pP3pp1/P2PP1np/5P1K/1BPNQ1PP/R4BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 927);
    }

    #[test]
    fn gentest_423() {
        let board = Board::from_fen("rnbr4/1pppqk2/1b2p3/pP3pp1/P2PP1np/3Q1P1K/1BPN2PP/1R3BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 951);
    }

    #[test]
    fn gentest_424() {
        let board = Board::from_fen("rnbr4/1pppq3/1b2pk2/pP4p1/P2Pp1np/1Q3P1K/1BPN2PP/1R3BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1008);
    }

    #[test]
    fn gentest_425() {
        let board = Board::from_fen("rnbr4/1pppq1k1/1b2p3/pP4p1/P2Pp1np/1QB2P1K/2PNB1PP/1R4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1179);
    }

    #[test]
    fn gentest_426() {
        let board = Board::from_fen("rnbr4/1ppp2k1/1b2pq2/pP4p1/P2Pp2p/1QB1nP1K/1RPNB1PP/6NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 983);
    }

    #[test]
    fn gentest_427() {
        let board = Board::from_fen("r1br4/1ppp2k1/nb2pq2/pP4p1/P2Pp2p/1QB1nPPK/1RPN3P/5BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1049);
    }

    #[test]
    fn gentest_428() {
        let board = Board::from_fen("r1b3r1/1ppp2k1/nb2p3/pP4p1/P2qp2p/Q1B1nPPK/1RPN3P/5BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 968);
    }

    #[test]
    fn gentest_429() {
        let board = Board::from_fen("r1b2r2/1ppp2k1/nb2p3/pP4p1/P2qp2p/2B1nPPK/QRP4P/1N3BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1033);
    }

    #[test]
    fn gentest_430() {
        let board = Board::from_fen("r1b2r2/1p1p2k1/nbp5/pP2p1p1/P2qp2p/2B1nPPK/1RP4P/QN3BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1158);
    }

    #[test]
    fn gentest_431() {
        let board = Board::from_fen("r1b2r2/1p1p2k1/nbp5/pP2p1p1/P1Bq3p/2B1npPK/R1P4P/QN4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1134);
    }

    #[test]
    fn gentest_432() {
        let board = Board::from_fen("r1b2r2/1p1p2k1/nb1q4/pp2p1p1/P1B4p/2B1npPK/RQP4P/1N4NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1545);
    }

    #[test]
    fn gentest_433() {
        let board = Board::from_fen("r1b2r2/1p1p2k1/nb1q4/p3p1p1/PBp4p/4npPK/1QP4P/RN4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 1229);
    }

    #[test]
    fn gentest_434() {
        let board = Board::from_fen("r1b2r2/1p1p2k1/nb6/Bq2p1p1/P1p4p/4npPK/1QP4P/RN4NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1143);
    }

    #[test]
    fn gentest_435() {
        let board = Board::from_fen("r1b3r1/1p1p2k1/nb6/Bq2p1p1/P1pQ3p/4nNPK/2P4P/RN5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1738);
    }

    #[test]
    fn gentest_436() {
        let board = Board::from_fen("r1b3rk/1p6/nb6/Bq1pp1p1/P1pQ3p/4n1PK/2PN3P/RN5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 2188);
    }

    #[test]
    fn gentest_437() {
        let board = Board::from_fen("r1b3rk/1p6/n7/Bqbpp1p1/P1p3Qp/4n1PK/2PN3P/RN3R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1369);
    }

    #[test]
    fn gentest_438() {
        let board = Board::from_fen("1rb3rk/1p6/n7/Bqbpp1p1/P1p3Qp/5NPK/2P3nP/RN3R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1384);
    }

    #[test]
    fn gentest_439() {
        let board = Board::from_fen("1r4rk/1p6/n7/Bqbppbp1/P1p2RQN/6PK/2P3nP/RN6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 56);
        assert_eq!(perft(&board, 2, &PRECOMP), 1468);
    }

    #[test]
    fn gentest_440() {
        let board = Board::from_fen("1r4rk/1p6/n7/Bq1pp1p1/P1p1R1bN/6PK/2P3nP/RN4b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 134);
        assert_eq!(perft(&board, 3, &PRECOMP), 3418);
    }

    #[test]
    fn gentest_441() {
        let board = Board::from_fen("1r4rk/1p6/n7/B2pp1p1/P1p3KN/4R1P1/1qP3nP/RN4b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1146);
    }

    #[test]
    fn gentest_442() {
        let board = Board::from_fen("1r4rk/1p6/n7/B2pp1p1/P5KN/1p4P1/2q3nP/RN4b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 965);
    }

    #[test]
    fn gentest_443() {
        let board = Board::from_fen("r5rk/1p6/n7/3pp1p1/PB4K1/1p4P1/2q3NP/RN4b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1072);
    }

    #[test]
    fn gentest_444() {
        let board = Board::from_fen("r5rk/1p6/n7/3pp1pq/PB6/1p4PK/6NP/RN4b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 43);
        assert_eq!(perft(&board, 3, &PRECOMP), 699);
    }

    #[test]
    fn gentest_445() {
        let board = Board::from_fen("r5rk/1p2B3/n7/3pp1p1/P6N/1p3qPK/7P/RN4b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 840);
    }

    #[test]
    fn gentest_446() {
        let board = Board::from_fen("6rk/rp6/n7/2bpp1B1/P6N/1p3qPK/7P/RN6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 754);
    }

    #[test]
    fn gentest_447() {
        let board = Board::from_fen("6rk/rp2B3/n7/2bpp3/P6N/1p4P1/6KP/RN6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 649);
    }

    #[test]
    fn gentest_448() {
        let board = Board::from_fen("7k/rp2B3/n7/2bpp3/P6N/Rp4P1/5rKP/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 1581);
    }

    #[test]
    fn gentest_449() {
        let board = Board::from_fen("7k/rp2B3/n7/2bpp3/P4r1N/1p4PK/7P/RN6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 648);
    }

    #[test]
    fn gentest_450() {
        let board = Board::from_fen("6k1/rp6/n4B2/2bpp3/P4r1N/1p4PK/7P/RN6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 647);
    }

    #[test]
    fn gentest_451() {
        let board = Board::from_fen("6k1/rp6/n4B2/P1bppr2/8/1p4PK/6NP/RN6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 559);
    }

    #[test]
    fn gentest_452() {
        let board = Board::from_fen("6k1/rp6/n4B1r/P1bpp3/6K1/1p4P1/6NP/RN6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 687);
    }

    #[test]
    fn gentest_453() {
        let board = Board::from_fen("6k1/rp6/nb3B1r/P2pp1K1/8/1p4P1/7P/RN2N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 527);
    }

    #[test]
    fn gentest_454() {
        let board = Board::from_fen("6k1/rp6/1b3B1r/P1npp1K1/8/6P1/1p1N3P/R3N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 966);
    }

    #[test]
    fn gentest_455() {
        let board = Board::from_fen("5k2/rp6/Pb3B1r/R1npp1K1/8/6P1/1p1N3P/4N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 730);
    }

    #[test]
    fn gentest_456() {
        let board = Board::from_fen("5k2/rp6/P4B1r/R2pp1K1/8/1n4P1/1p3b1P/1N2N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 773);
    }

    #[test]
    fn gentest_457() {
        let board = Board::from_fen("3B1k2/rp6/P6r/R2pp1K1/8/1n1N2P1/1p5P/1N4b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 961);
    }

    #[test]
    fn gentest_458() {
        let board = Board::from_fen("3B1k2/rp6/P7/R2pp1K1/8/6Pr/1p5P/nN2N1b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 614);
    }

    #[test]
    fn gentest_459() {
        let board = Board::from_fen("5k2/1pB5/r7/3pp1K1/R7/6Pr/1p5P/nN2N1b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 916);
    }

    #[test]
    fn gentest_460() {
        let board = Board::from_fen("5k2/2B5/r7/1p1pp1K1/R7/1n4Pr/1p4NP/1N4b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1048);
    }

    #[test]
    fn gentest_461() {
        let board = Board::from_fen("5k2/2B5/6r1/Rp1ppK2/8/1n4Pr/1p4NP/1N4b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 847);
    }

    #[test]
    fn gentest_462() {
        let board = Board::from_fen("5k2/2B5/6rr/1p1ppK2/8/Rn4P1/1p4N1/1N4b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 782);
    }

    #[test]
    fn gentest_463() {
        let board = Board::from_fen("1B3k2/6r1/7r/1p1ppK2/5N2/Rn4P1/1p6/1N4b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1046);
    }

    #[test]
    fn gentest_464() {
        let board = Board::from_fen("1B3k2/6r1/7r/1p1ppK2/4n3/R5P1/1p4N1/1N4b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1085);
    }

    #[test]
    fn gentest_465() {
        let board = Board::from_fen("1B3k1r/6r1/8/1p1ppK2/4n3/6P1/Rp1N2N1/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1019);
    }

    #[test]
    fn gentest_466() {
        let board = Board::from_fen("1B3k2/6r1/8/1p1ppK1r/4N3/6P1/Rp4N1/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 109);
        assert_eq!(perft(&board, 3, &PRECOMP), 2464);
    }

    #[test]
    fn gentest_467() {
        let board = Board::from_fen("1B3k2/6r1/8/1p1pp1N1/6K1/6P1/Rp4N1/6br b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 639);
    }

    #[test]
    fn gentest_468() {
        let board = Board::from_fen("1B3k2/2r5/1b6/1p1pp1N1/6K1/R5P1/1p4N1/7r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1050);
    }

    #[test]
    fn gentest_469() {
        let board = Board::from_fen("1B6/2r1k3/1b6/1p1pp1N1/8/R3NKP1/1p6/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1200);
    }

    #[test]
    fn gentest_470() {
        let board = Board::from_fen("1Br5/4k3/1b6/1p1pp3/8/R3NKPN/1p6/7r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1199);
    }

    #[test]
    fn gentest_471() {
        let board = Board::from_fen("2rb4/4k3/8/1p1pB3/6P1/R3NK1N/1p6/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1159);
    }

    #[test]
    fn gentest_472() {
        let board = Board::from_fen("2rb4/2r1k3/8/1p1pB3/6P1/R4K1N/1p6/3N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 764);
    }

    #[test]
    fn gentest_473() {
        let board = Board::from_fen("r2b4/2r1k3/8/1p1p4/6P1/R1N2KBN/1p6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 867);
    }

    #[test]
    fn gentest_474() {
        let board = Board::from_fen("r2b4/2r2k2/8/1p6/3p2P1/R1N2KB1/1p6/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1089);
    }

    #[test]
    fn gentest_475() {
        let board = Board::from_fen("r2b4/r4k2/8/1p6/3p1KP1/R1N3B1/1p6/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 795);
    }

    #[test]
    fn gentest_476() {
        let board = Board::from_fen("2rb4/r7/6k1/1p6/3p1KP1/R1N2NB1/1p6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1027);
    }

    #[test]
    fn gentest_477() {
        let board = Board::from_fen("2rb4/r7/6k1/1p6/3p1KP1/R1N2NB1/8/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1206);
    }

    #[test]
    fn gentest_478() {
        let board = Board::from_fen("r1rb4/8/5k2/1p2N3/3p1KP1/R1N3B1/8/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 776);
    }

    #[test]
    fn gentest_479() {
        let board = Board::from_fen("r1rb4/6k1/8/1p6/2Np1KP1/1RN3B1/8/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1123);
    }

    #[test]
    fn gentest_480() {
        let board = Board::from_fen("r1r5/6k1/5b2/1p6/2Np2P1/1RN2KB1/8/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1488);
    }

    #[test]
    fn gentest_481() {
        let board = Board::from_fen("r1r5/8/5b1k/1p6/2Np2PB/1RN5/5K2/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1078);
    }

    #[test]
    fn gentest_482() {
        let board = Board::from_fen("2r5/8/5b1k/rp6/3p2PB/1RN5/1N3K2/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 844);
    }

    #[test]
    fn gentest_483() {
        let board = Board::from_fen("2r5/8/5b1k/rp6/2Np2PB/1R6/5K2/1N2r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1164);
    }

    #[test]
    fn gentest_484() {
        let board = Board::from_fen("2r5/8/5b1k/1p6/2Np2P1/1R4B1/5K2/rN5r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1216);
    }

    #[test]
    fn gentest_485() {
        let board = Board::from_fen("r7/8/5b1k/1p6/2Np2P1/1R4B1/5K2/rN5r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1204);
    }

    #[test]
    fn gentest_486() {
        let board = Board::from_fen("r7/8/5b1k/1p6/2Np2P1/1R4B1/8/1r3K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 173);
        assert_eq!(perft(&board, 3, &PRECOMP), 4616);
    }

    #[test]
    fn gentest_487() {
        let board = Board::from_fen("r7/7k/5b2/1p6/2Np2P1/1R4B1/5K2/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 968);
    }

    #[test]
    fn gentest_488() {
        let board = Board::from_fen("8/7k/5b2/1p6/3p2P1/1R4B1/r2N1K2/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 628);
    }

    #[test]
    fn gentest_489() {
        let board = Board::from_fen("r7/7k/5b2/1p2B3/3p2P1/1R6/3N1K2/3r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 963);
    }

    #[test]
    fn gentest_490() {
        let board = Board::from_fen("8/7k/5b2/1R2B3/3p2P1/5r2/3N1K2/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 107);
        assert_eq!(perft(&board, 3, &PRECOMP), 2670);
    }

    #[test]
    fn gentest_491() {
        let board = Board::from_fen("8/7k/5b2/R3B3/3p2P1/5r2/3N2K1/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 863);
    }

    #[test]
    fn gentest_492() {
        let board = Board::from_fen("8/7k/8/4B3/6Pb/3p1r2/R2N2K1/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 831);
    }

    #[test]
    fn gentest_493() {
        let board = Board::from_fen("8/7k/8/8/6Pb/3p1KB1/r2N4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 378);
        assert_eq!(perft(&board, 3, &PRECOMP), 8535);
    }

    #[test]
    fn gentest_494() {
        let board = Board::from_fen("8/5k2/8/8/6Pb/1N1p1KB1/r7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 520);
        assert_eq!(perft(&board, 3, &PRECOMP), 9529);
    }

    #[test]
    fn gentest_495() {
        let board = Board::from_fen("8/5k2/8/N7/6Pb/3p2B1/5K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 184);
        assert_eq!(perft(&board, 3, &PRECOMP), 2480);
    }

    #[test]
    fn gentest_496() {
        let board = Board::from_fen("8/1N6/6k1/8/6Pb/3p2B1/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 132);
        assert_eq!(perft(&board, 3, &PRECOMP), 2104);
    }

    #[test]
    fn gentest_497() {
        let board = Board::from_fen("8/1N6/7k/8/6Pb/3pK1B1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 182);
        assert_eq!(perft(&board, 3, &PRECOMP), 2124);
    }

    #[test]
    fn gentest_498() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_499() {
        let board = Board::from_fen("rnbqkbnr/pp1ppppp/8/2p5/8/P2P4/1PP1PPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 551);
    }

    #[test]
    fn gentest_500() {
        let board = Board::from_fen("rnbqkbnr/p2ppp1p/8/1pp3p1/8/P2P1N2/1PP1PPPP/RNBQKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 674);
    }

    #[test]
    fn gentest_501() {
        let board = Board::from_fen("rnbqkb1r/p2ppp1p/5n2/1pp3p1/5B2/P2P4/1PPNPPPP/RN1QKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 738);
    }

    #[test]
    fn gentest_502() {
        let board = Board::from_fen("rnb1kb1r/p2ppp1p/1q3n2/1pp5/5p2/PP1P4/2PNPPPP/RN1QKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 612);
    }

    #[test]
    fn gentest_503() {
        let board = Board::from_fen("rn2kb1r/p2ppp1p/bq3n2/1pp5/1P3p2/P1PP4/3NPPPP/RN1QKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 589);
    }

    #[test]
    fn gentest_504() {
        let board = Board::from_fen("rn2kbnr/p2ppp2/bq6/1pp4p/1P3p2/P1PP4/3NPPPP/RNQ1KB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 634);
    }

    #[test]
    fn gentest_505() {
        let board = Board::from_fen("rn2kbnr/p2pp3/bq3p2/1pp4p/1P3p1P/P1PP1N2/4PPP1/RNQ1KB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 649);
    }

    #[test]
    fn gentest_506() {
        let board = Board::from_fen("r3kbnr/p3p3/bqnp1p2/1pp4p/1P3p1P/P1PP1N2/3KPPP1/RNQ2B1R w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 789);
    }

    #[test]
    fn gentest_507() {
        let board = Board::from_fen("r3k1nr/p3p3/bqnp1p1b/1pp4p/1P3p1P/P1PP1N2/4PPPR/RNQK1B2 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 808);
    }

    #[test]
    fn gentest_508() {
        let board = Board::from_fen("r2nk1nr/p3p3/b1qp1p1b/1pp4p/1P3pPP/P1PP1N2/4PP1R/RNQK1B2 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 864);
    }

    #[test]
    fn gentest_509() {
        let board = Board::from_fen("r2nk1nr/p3p3/b1qp1p2/1pp3bp/1P3pPP/P1PP3B/4PP1R/RNQK4 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 739);
    }

    #[test]
    fn gentest_510() {
        let board = Board::from_fen("r2nk1nr/p3p3/b1qp1p2/1pp3bp/PP3pPP/2PP3B/4PP1R/RNQK4 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 914);
    }

    #[test]
    fn gentest_511() {
        let board = Board::from_fen("r2nk1nr/p3p3/b1qp1p2/2p3Pp/pP3pP1/2PP3B/3NPP1R/R1QK4 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1104);
    }

    #[test]
    fn gentest_512() {
        let board = Board::from_fen("r1bnk1nr/p3p3/1q1p1p2/2p3Pp/pP3pP1/2PP1N1B/4PP1R/R1QK4 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1224);
    }

    #[test]
    fn gentest_513() {
        let board = Board::from_fen("r1bnk1n1/p3p3/1q1p1p1r/2p3Pp/pPPN1pP1/3P3B/4PP1R/R1QK4 b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1311);
    }

    #[test]
    fn gentest_514() {
        let board = Board::from_fen("r1bnk1n1/p7/q2p1p1r/2p1p1Pp/pPPN1pP1/3P4/4PP1R/R1QK1B2 w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1295);
    }

    #[test]
    fn gentest_515() {
        let board = Board::from_fen("r1bnk1n1/p7/q2p3P/2p1pp1p/pPPN1pP1/3P3R/4PP2/R1QK1B2 b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1187);
    }

    #[test]
    fn gentest_516() {
        let board = Board::from_fen("r2nk1n1/p7/q1bp3P/2p1pp1p/pPPN1pP1/3P3R/2K1PP2/R1Q2B2 w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1394);
    }

    #[test]
    fn gentest_517() {
        let board = Board::from_fen("r3k1n1/p7/q1bpn2P/2p1pp1p/pPPN1pP1/3P3R/1QK1PP2/2R2B2 b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1470);
    }

    #[test]
    fn gentest_518() {
        let board = Board::from_fen("r5n1/p2bk3/q2pn2P/2p1pp1p/pPPN1pP1/Q2P3R/2K1PP2/2R2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1361);
    }

    #[test]
    fn gentest_519() {
        let board = Board::from_fen("r5n1/p2bk3/q2pn2P/2p1pp2/pPP2pPp/QN1P3R/2K1PP2/R4B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1169);
    }

    #[test]
    fn gentest_520() {
        let board = Board::from_fen("5rn1/p1nbk3/q2p3P/2p1pp2/pPP2pPp/Q2P3R/2KNPP2/R4B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1309);
    }

    #[test]
    fn gentest_521() {
        let board = Board::from_fen("5rn1/p1n1k3/q1bp3P/2P1pp2/p1P2pPp/Q2PR3/2KNPP2/R4B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1427);
    }

    #[test]
    fn gentest_522() {
        let board = Board::from_fen("b4rn1/p3k3/q2pn2P/2P1pp2/p1P1NpPp/Q2PR3/2K1PP2/R4B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1280);
    }

    #[test]
    fn gentest_523() {
        let board = Board::from_fen("b4rn1/p3k3/q2N3P/2P1ppn1/p1P2pPp/Q2PR3/4PP2/R2K1B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1236);
    }

    #[test]
    fn gentest_524() {
        let board = Board::from_fen("b4rn1/p3k3/2qN3P/2P1pp2/p1P2pPp/Q2PRn2/4PP2/R1K2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 994);
    }

    #[test]
    fn gentest_525() {
        let board = Board::from_fen("b4rn1/p3k3/2qN3P/2P1p3/p1P2ppp/Q2PRP2/1K3P2/R4B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 996);
    }

    #[test]
    fn gentest_526() {
        let board = Board::from_fen("b4rn1/p2k4/2qN3P/2P1p3/p1P2p1p/1Q1PRPp1/1K3P2/R4B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1355);
    }

    #[test]
    fn gentest_527() {
        let board = Board::from_fen("b1r3n1/p2k4/2qN3P/2P1p3/p1P2p1p/3PRPp1/1K3P2/3QRB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 876);
    }

    #[test]
    fn gentest_528() {
        let board = Board::from_fen("b1r3n1/p2k4/2qN3P/2P1p3/p1PP1p1p/4RPp1/1K3P2/3QRB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1213);
    }

    #[test]
    fn gentest_529() {
        let board = Board::from_fen("b1r5/p2k4/2q4n/2P1p3/p1PPNp1p/4RPp1/1K3PB1/3QR3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1191);
    }

    #[test]
    fn gentest_530() {
        let board = Board::from_fen("2r5/p2k4/2b4n/2Pqp3/p1PPNp1p/4RPp1/1K2RPB1/3Q4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1265);
    }

    #[test]
    fn gentest_531() {
        let board = Board::from_fen("2r5/p1k5/2b4n/2Pqp3/Q1PPNp1p/4RPpB/1K2RP2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1454);
    }

    #[test]
    fn gentest_532() {
        let board = Board::from_fen("6nr/p1k5/2b5/2Pqp3/Q1PPNp1p/4RPPB/1K2R3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1352);
    }

    #[test]
    fn gentest_533() {
        let board = Board::from_fen("6nr/p1k5/2bN4/2P1p3/2PPqp1p/4RPPB/QK2R3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1223);
    }

    #[test]
    fn gentest_534() {
        let board = Board::from_fen("6nr/2kB4/3N4/pbP1p3/2PPqp1p/4RPP1/QK2R3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1332);
    }

    #[test]
    fn gentest_535() {
        let board = Board::from_fen("6nr/3k4/3N4/QbP1p3/2PPqp1p/R4PP1/1K2R3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1270);
    }

    #[test]
    fn gentest_536() {
        let board = Board::from_fen("3r4/3k4/3N3n/QbP1p3/2PPqp1p/5PP1/1K2R3/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 1664);
    }

    #[test]
    fn gentest_537() {
        let board = Board::from_fen("q2r4/3k4/3N3n/1QP1p3/2PP1p1p/5PP1/1K2R3/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 203);
        assert_eq!(perft(&board, 3, &PRECOMP), 5223);
    }

    #[test]
    fn gentest_538() {
        let board = Board::from_fen("r7/3k4/2qN3n/1QP1p3/2PP1p1p/K4PP1/4R3/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 177);
        assert_eq!(perft(&board, 3, &PRECOMP), 6958);
    }

    #[test]
    fn gentest_539() {
        let board = Board::from_fen("r7/3k1n2/2qN4/2P1p3/Q1PPRp1p/K4PP1/8/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 796);
    }

    #[test]
    fn gentest_540() {
        let board = Board::from_fen("r7/2k2n2/2qN4/2PPp3/Q1P1R2p/K4Pp1/8/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 884);
    }

    #[test]
    fn gentest_541() {
        let board = Board::from_fen("6r1/2k2n2/2qN4/2PPp3/Q1P3Rp/K4Pp1/8/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1228);
    }

    #[test]
    fn gentest_542() {
        let board = Board::from_fen("1k4r1/3q1n2/3N4/Q1PPp3/2P3Rp/K4Pp1/8/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1107);
    }

    #[test]
    fn gentest_543() {
        let board = Board::from_fen("1k4r1/3q1n2/3N4/Q1PPp3/1KP2R2/5Ppp/8/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1117);
    }

    #[test]
    fn gentest_544() {
        let board = Board::from_fen("1k6/qN3n2/8/Q1PPp1r1/1KP2R2/5Ppp/8/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 756);
    }

    #[test]
    fn gentest_545() {
        let board = Board::from_fen("1k6/q4n2/3N4/1QPPp2r/1KP2R2/5Ppp/8/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 127);
        assert_eq!(perft(&board, 3, &PRECOMP), 2617);
    }

    #[test]
    fn gentest_546() {
        let board = Board::from_fen("1k6/5n2/1q6/1QPPpNr1/1KP2R2/5Ppp/8/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 575);
    }

    #[test]
    fn gentest_547() {
        let board = Board::from_fen("1k6/8/1q1N3n/1QPPp1r1/1KP2R2/5Ppp/8/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 549);
    }

    #[test]
    fn gentest_548() {
        let board = Board::from_fen("1k6/8/1q1N3n/1QPPp1r1/1KP2R2/5Ppp/8/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 540);
    }

    #[test]
    fn gentest_549() {
        let board = Board::from_fen("1k2N3/8/1q5n/1QPP2r1/1KP1p2R/5Ppp/8/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 619);
    }

    #[test]
    fn gentest_550() {
        let board = Board::from_fen("8/2k5/1q5n/1QPP2r1/1KP1p2R/5Ppp/8/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 707);
    }

    #[test]
    fn gentest_551() {
        let board = Board::from_fen("8/2k5/7n/1qPP2r1/2P1p2R/K4Ppp/8/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 633);
    }

    #[test]
    fn gentest_552() {
        let board = Board::from_fen("8/2k5/q6R/2PP4/2P1p1r1/K4Ppp/8/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 2752);
    }

    #[test]
    fn gentest_553() {
        let board = Board::from_fen("8/2k5/7R/2PP4/2q1p1r1/K4Ppp/8/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 578);
    }

    #[test]
    fn gentest_554() {
        let board = Board::from_fen("8/2k5/7R/2PP4/K3p2r/3q1Ppp/8/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 679);
    }

    #[test]
    fn gentest_555() {
        let board = Board::from_fen("8/2k5/q6R/2PP4/4p2r/1K3Ppp/6R1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 733);
    }

    #[test]
    fn gentest_556() {
        let board = Board::from_fen("8/2k5/5q1R/2PP4/4p2r/2K2Pp1/6p1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 220);
        assert_eq!(perft(&board, 3, &PRECOMP), 3574);
    }

    #[test]
    fn gentest_557() {
        let board = Board::from_fen("8/2k5/8/2PP1R2/4p3/2K2Ppr/6p1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 321);
        assert_eq!(perft(&board, 3, &PRECOMP), 5845);
    }

    #[test]
    fn gentest_558() {
        let board = Board::from_fen("1r6/2k5/8/2PP1R2/4p3/1K3Pp1/6p1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 144);
        assert_eq!(perft(&board, 3, &PRECOMP), 1997);
    }

    #[test]
    fn gentest_559() {
        let board = Board::from_fen("1r1k4/8/8/2PP2R1/4p3/2K2Pp1/6p1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 310);
        assert_eq!(perft(&board, 3, &PRECOMP), 6168);
    }

    #[test]
    fn gentest_560() {
        let board = Board::from_fen("3k4/8/8/2PP2R1/2K1p3/5Pp1/5rp1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 286);
        assert_eq!(perft(&board, 3, &PRECOMP), 4720);
    }

    #[test]
    fn gentest_561() {
        let board = Board::from_fen("8/3k2R1/8/2PP4/2K1p3/5Pp1/5rp1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 63);
        assert_eq!(perft(&board, 3, &PRECOMP), 918);
    }

    #[test]
    fn gentest_562() {
        let board = Board::from_fen("2k5/6R1/8/2PP4/1K2p3/5Pp1/4r1p1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 331);
        assert_eq!(perft(&board, 3, &PRECOMP), 6471);
    }

    #[test]
    fn gentest_563() {
        let board = Board::from_fen("8/3k4/4R3/2PP4/1K2p3/5Pp1/4r1p1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 327);
        assert_eq!(perft(&board, 3, &PRECOMP), 5476);
    }

    #[test]
    fn gentest_564() {
        let board = Board::from_fen("8/3k4/8/2PPR3/1K2p3/5rp1/6p1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 228);
        assert_eq!(perft(&board, 3, &PRECOMP), 3362);
    }

    #[test]
    fn gentest_565() {
        let board = Board::from_fen("8/4k3/8/2PPR3/1K2p3/5rp1/6p1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 65);
        assert_eq!(perft(&board, 3, &PRECOMP), 1122);
    }

    #[test]
    fn gentest_566() {
        let board = Board::from_fen("4R3/5k2/8/2PP4/1K2p3/6p1/5rp1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 350);
        assert_eq!(perft(&board, 3, &PRECOMP), 6200);
    }

    #[test]
    fn gentest_567() {
        let board = Board::from_fen("7R/5k2/8/2PP4/1K2p3/5rp1/6p1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 381);
        assert_eq!(perft(&board, 3, &PRECOMP), 7227);
    }

    #[test]
    fn gentest_568() {
        let board = Board::from_fen("7R/8/6k1/2PP4/K3p3/5rp1/8/6q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 571);
        assert_eq!(perft(&board, 3, &PRECOMP), 8706);
    }

    #[test]
    fn gentest_569() {
        let board = Board::from_fen("6R1/8/6k1/2PP4/K3p3/6p1/8/5rq1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 2400);
    }

    #[test]
    fn gentest_570() {
        let board = Board::from_fen("6R1/5k2/8/2PP4/1K2p3/6p1/8/2r3q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 429);
        assert_eq!(perft(&board, 3, &PRECOMP), 6486);
    }

    #[test]
    fn gentest_571() {
        let board = Board::from_fen("8/5k2/6R1/2PP4/1K2p3/4q1p1/8/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 398);
    }

    #[test]
    fn gentest_572() {
        let board = Board::from_fen("8/5k2/6R1/1KPP4/4p3/6p1/3q4/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 587);
        assert_eq!(perft(&board, 3, &PRECOMP), 8282);
    }

    #[test]
    fn gentest_573() {
        let board = Board::from_fen("8/5k2/4R3/2PP4/1K2p3/6p1/8/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 269);
        assert_eq!(perft(&board, 3, &PRECOMP), 4244);
    }

    #[test]
    fn gentest_574() {
        let board = Board::from_fen("8/5k2/4R3/K1PP4/4p3/6p1/8/4r3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 251);
        assert_eq!(perft(&board, 3, &PRECOMP), 4063);
    }

    #[test]
    fn gentest_575() {
        let board = Board::from_fen("8/5k2/7R/2PP4/1K6/4p1p1/8/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 322);
        assert_eq!(perft(&board, 3, &PRECOMP), 4949);
    }

    #[test]
    fn gentest_576() {
        let board = Board::from_fen("8/6k1/8/2PP4/1K6/6p1/4p2R/4r3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 253);
        assert_eq!(perft(&board, 3, &PRECOMP), 4342);
    }

    #[test]
    fn gentest_577() {
        let board = Board::from_fen("5k2/8/3P4/2P5/1K5R/6p1/4p3/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 231);
        assert_eq!(perft(&board, 3, &PRECOMP), 3626);
    }

    #[test]
    fn gentest_578() {
        let board = Board::from_fen("5k2/8/3P4/2P5/7R/1K4pr/4p3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 268);
        assert_eq!(perft(&board, 3, &PRECOMP), 4995);
    }

    #[test]
    fn gentest_579() {
        let board = Board::from_fen("5k2/3P4/8/2P4r/1R6/1K4p1/4p3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 475);
        assert_eq!(perft(&board, 3, &PRECOMP), 8926);
    }

    #[test]
    fn gentest_580() {
        let board = Board::from_fen("8/3Pk3/8/2P4r/6R1/1K4p1/8/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 458);
        assert_eq!(perft(&board, 3, &PRECOMP), 9974);
    }

    #[test]
    fn gentest_581() {
        let board = Board::from_fen("3k4/3P4/8/2P4R/8/1K4p1/8/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 172);
        assert_eq!(perft(&board, 3, &PRECOMP), 1860);
    }

    #[test]
    fn gentest_582() {
        let board = Board::from_fen("3k4/3P4/8/2P5/7R/1K6/8/4b1b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 298);
        assert_eq!(perft(&board, 3, &PRECOMP), 5635);
    }

    #[test]
    fn gentest_583() {
        let board = Board::from_fen("3Q4/4k3/8/2P5/1R6/1K6/8/4b1b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 96);
        assert_eq!(perft(&board, 3, &PRECOMP), 1197);
    }

    #[test]
    fn gentest_584() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_585() {
        let board = Board::from_fen("rnbqkbnr/pppppp1p/6p1/8/2P5/8/PPQPPPPP/RNB1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 589);
    }

    #[test]
    fn gentest_586() {
        let board = Board::from_fen("rnbqkbnr/p1pppp2/6pp/1p6/2P5/N7/PPQPPPPP/R1B1KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 601);
    }

    #[test]
    fn gentest_587() {
        let board = Board::from_fen("rnbqkbnr/p1p1pp2/3p2pp/1pP5/2N5/8/PPQPPPPP/R1B1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 966);
    }

    #[test]
    fn gentest_588() {
        let board = Board::from_fen("rnb1qbnr/p1pkpp2/3p2pp/1pP5/2N5/4P3/PPQP1PPP/R1B1KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 799);
    }

    #[test]
    fn gentest_589() {
        let board = Board::from_fen("rnb1qbnr/2pkpp2/p2p2Qp/1pP5/2N5/4P3/PP1P1PPP/R1B1KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 915);
    }

    #[test]
    fn gentest_590() {
        let board = Board::from_fen("rnb2bnr/2pkp1Q1/p2p2qp/1pP2p2/2N5/4P3/PP1P1PPP/R1B1KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1053);
    }

    #[test]
    fn gentest_591() {
        let board = Board::from_fen("rnb2bnr/2p1p3/p2pk1qQ/1pP2p2/2N5/4P2P/PP1P1PP1/R1B1KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 817);
    }

    #[test]
    fn gentest_592() {
        let board = Board::from_fen("rnb3nr/2p1p1b1/p3k1qQ/1pPp1p2/8/N3P2P/PP1P1PP1/R1B1KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 915);
    }

    #[test]
    fn gentest_593() {
        let board = Board::from_fen("rnb3nr/2p1p3/p3k1q1/1pPp1p2/4PQ2/N1b4P/PP1P1PP1/R1B1KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1465);
    }

    #[test]
    fn gentest_594() {
        let board = Board::from_fen("rnb3nr/2p1p3/p3k3/1pPp1pq1/4P1Q1/N6P/PP1b1PP1/R1B1KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 108);
        assert_eq!(perft(&board, 3, &PRECOMP), 3572);
    }

    #[test]
    fn gentest_595() {
        let board = Board::from_fen("rnb3nr/2p1p3/4k3/ppPp1pq1/4P1Q1/N5PP/PP1bKP2/R1B2BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1052);
    }

    #[test]
    fn gentest_596() {
        let board = Board::from_fen("1nb3nr/2p1p3/r3k3/ppP2pq1/1P1pP1Q1/N5PP/P2bKP2/R1B2BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 949);
    }

    #[test]
    fn gentest_597() {
        let board = Board::from_fen("1nb3nr/2p1pk2/r7/ppP2pq1/1P1pP1Q1/N4KPP/P2b1P2/1RB2BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1276);
    }

    #[test]
    fn gentest_598() {
        let board = Board::from_fen("1nb3nr/2p1p3/4r1k1/ppP2pq1/1P1pP1Q1/N4KPP/P2b1P1R/1RB2BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 950);
    }

    #[test]
    fn gentest_599() {
        let board = Board::from_fen("1nb3nr/2p1p3/P1r3k1/1pP2pq1/3pP1Q1/N4KPP/P2b1P1R/1RB2BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1074);
    }

    #[test]
    fn gentest_600() {
        let board = Board::from_fen("1nb3nr/2p1p3/P4rk1/bpP2pq1/3pP1Q1/N2B1KPP/P4P1R/1RB3N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1088);
    }

    #[test]
    fn gentest_601() {
        let board = Board::from_fen("1n4nr/P1p1p3/4brk1/bpP2pq1/3pP1Q1/N2BBKPP/P4P1R/1R4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1350);
    }

    #[test]
    fn gentest_602() {
        let board = Board::from_fen("1n4nr/P1p1p3/4brk1/bpP2pq1/4P1QP/N2B1KP1/P3pP1R/1R4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1297);
    }

    #[test]
    fn gentest_603() {
        let board = Board::from_fen("1n4nr/P1p1p1k1/4br2/bpP1Ppq1/6QP/N2B1KP1/P3pP1R/R5N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1571);
    }

    #[test]
    fn gentest_604() {
        let board = Board::from_fen("6nr/P1p1p3/n3br1k/bpP1Ppq1/6QP/N2B1KP1/P3pP2/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1429);
    }

    #[test]
    fn gentest_605() {
        let board = Board::from_fen("6nr/P1p1p3/n3br1k/bpP1P1q1/6pP/N5P1/P1B1pPK1/R5NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1272);
    }

    #[test]
    fn gentest_606() {
        let board = Board::from_fen("B4rnr/2p1p3/n6k/bpP1Pbq1/6pP/N5P1/P1B1pPK1/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1390);
    }

    #[test]
    fn gentest_607() {
        let board = Board::from_fen("1r4nr/2p1p3/n6k/bpP1Pbq1/4B1pP/N5P1/P3pPK1/RB4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1003);
    }

    #[test]
    fn gentest_608() {
        let board = Board::from_fen("1r4nr/2p1p3/7k/1pn1Pbq1/1b2B1pP/N2B2P1/P3pPK1/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1407);
    }

    #[test]
    fn gentest_609() {
        let board = Board::from_fen("1r4nr/2p1p3/n6k/1p2Pbq1/1b2B1pP/3B2P1/P1N1pPK1/4R1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1246);
    }

    #[test]
    fn gentest_610() {
        let board = Board::from_fen("1r4nr/2p1p3/n3b2k/1p2P3/1b2B1pP/3B2P1/P1NqNPK1/4R2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1421);
    }

    #[test]
    fn gentest_611() {
        let board = Board::from_fen("6nr/2p1p2B/nr2b2k/1p2P3/1b4pP/3B2P1/P1Nq1PK1/4R1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1152);
    }

    #[test]
    fn gentest_612() {
        let board = Board::from_fen("6nr/2p1p2B/nrq1b2k/1p2P3/1b4pP/3B2P1/P4PK1/1R4NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 220);
        assert_eq!(perft(&board, 3, &PRECOMP), 6280);
    }

    #[test]
    fn gentest_613() {
        let board = Board::from_fen("6nr/2p1p2B/nr2b2k/1p2P3/1bq3pP/6P1/P4P1K/1R3BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1036);
    }

    #[test]
    fn gentest_614() {
        let board = Board::from_fen("6nr/2pbp2B/nr5k/1B2P3/1b4pP/6P1/q4P1K/1R4NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1251);
    }

    #[test]
    fn gentest_615() {
        let board = Board::from_fen("6nr/2pbp2B/Br5k/4P3/1b4pP/q5P1/5P1K/3R2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1324);
    }

    #[test]
    fn gentest_616() {
        let board = Board::from_fen("6nr/3bp3/Br5k/2p1P3/6pP/q2B2P1/3b1P1K/3R2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1286);
    }

    #[test]
    fn gentest_617() {
        let board = Board::from_fen("2B3nr/q2bp3/1r5k/2p1P3/6pP/3B2P1/3b1P1K/5RNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1138);
    }

    #[test]
    fn gentest_618() {
        let board = Board::from_fen("1rB3nr/q3p3/6Bk/1bp1P3/6pP/6P1/3b1P1K/5RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1072);
    }

    #[test]
    fn gentest_619() {
        let board = Board::from_fen("2r3nr/q3p3/6Bk/1bp1P3/6pP/6P1/3b1P1K/R5NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1133);
    }

    #[test]
    fn gentest_620() {
        let board = Board::from_fen("2r3nr/4p3/q5Bk/1bp1P3/5PpP/4b1P1/7K/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1038);
    }

    #[test]
    fn gentest_621() {
        let board = Board::from_fen("2r3nr/4p1k1/q7/1bp1P3/4BPpP/4b1P1/7K/1R4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1210);
    }

    #[test]
    fn gentest_622() {
        let board = Board::from_fen("q1r3nr/4p1k1/8/1bp1P3/4BPpP/4b1P1/1R5K/6NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1276);
    }

    #[test]
    fn gentest_623() {
        let board = Board::from_fen("q1r3nr/4p1k1/8/2p1P3/4BPpP/3bb1P1/R5K1/6NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 996);
    }

    #[test]
    fn gentest_624() {
        let board = Board::from_fen("2r3nr/1q2pk2/8/2p1P3/4BPpP/3bb1P1/6K1/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1112);
    }

    #[test]
    fn gentest_625() {
        let board = Board::from_fen("5rnr/1q2pk2/R7/2p1P3/4BPpP/3bb1P1/6K1/6NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1126);
    }

    #[test]
    fn gentest_626() {
        let board = Board::from_fen("2r4r/1q2pk2/5n2/2p1P3/R3BPpP/3bb1P1/6K1/6NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1298);
    }

    #[test]
    fn gentest_627() {
        let board = Board::from_fen("2r4r/4pk2/1q3PB1/2p5/R4PpP/3bb1P1/6K1/6NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 152);
        assert_eq!(perft(&board, 3, &PRECOMP), 7277);
    }

    #[test]
    fn gentest_628() {
        let board = Board::from_fen("2r4r/4p3/bq3Pk1/2p5/R4PpP/4bNP1/6K1/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1455);
    }

    #[test]
    fn gentest_629() {
        let board = Board::from_fen("2r4r/4p3/b4Pk1/2p5/R4PpP/4b1PN/6K1/1q5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 58);
        assert_eq!(perft(&board, 2, &PRECOMP), 1141);
    }

    #[test]
    fn gentest_630() {
        let board = Board::from_fen("4r2r/4p3/b4P1k/2p2P2/R5pP/4b1PN/6K1/1q5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1214);
    }

    #[test]
    fn gentest_631() {
        let board = Board::from_fen("4r2r/4p3/b4P1k/2p2P2/7P/4b1Pp/R6K/1q5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 932);
    }

    #[test]
    fn gentest_632() {
        let board = Board::from_fen("4r2r/4p3/b4P1k/2p2P2/7P/1q4Pp/R6K/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1091);
    }

    #[test]
    fn gentest_633() {
        let board = Board::from_fen("4r2r/4p3/b4P1k/1qp2P2/5R1P/6Pp/7K/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 680);
    }

    #[test]
    fn gentest_634() {
        let board = Board::from_fen("2b1r2r/4p3/5P1k/2p2P2/5R1P/6Pp/4q2K/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 169);
        assert_eq!(perft(&board, 3, &PRECOMP), 3488);
    }

    #[test]
    fn gentest_635() {
        let board = Board::from_fen("2br3r/4R3/5P1k/2p2P2/5R1P/6Pp/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 565);
    }

    #[test]
    fn gentest_636() {
        let board = Board::from_fen("2b4r/6R1/5P1k/2p2P2/5R1P/6Pp/7K/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 566);
    }

    #[test]
    fn gentest_637() {
        let board = Board::from_fen("2b4r/R7/5P1k/2p2P2/2R4P/6Pp/7K/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 589);
    }

    #[test]
    fn gentest_638() {
        let board = Board::from_fen("7r/R7/5P1k/2p2P2/7P/1b4Pp/2R4K/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 820);
    }

    #[test]
    fn gentest_639() {
        let board = Board::from_fen("1r6/8/R4P1k/2p2P2/7P/1b4Pp/7K/r1R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 765);
    }

    #[test]
    fn gentest_640() {
        let board = Board::from_fen("1r6/8/R4P1k/2p2P2/1rR4P/1b4Pp/7K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 625);
    }

    #[test]
    fn gentest_641() {
        let board = Board::from_fen("8/8/1r3P1k/2p2P2/1rR4P/1b4Pp/8/R6K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 476);
    }

    #[test]
    fn gentest_642() {
        let board = Board::from_fen("8/8/1r3P1k/1rp2P2/4R2P/1b4P1/7p/R6K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 652);
    }

    #[test]
    fn gentest_643() {
        let board = Board::from_fen("8/1r3P2/4R2k/1rp2P2/7P/1b4P1/7p/R6K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 130);
        assert_eq!(perft(&board, 3, &PRECOMP), 2653);
    }

    #[test]
    fn gentest_644() {
        let board = Board::from_fen("8/1r3P1k/4b3/1rp2P1P/8/6P1/7p/R6K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 554);
    }

    #[test]
    fn gentest_645() {
        let board = Board::from_fen("5R2/1r5k/4b3/2p2P1P/8/R5P1/1r5p/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 782);
    }

    #[test]
    fn gentest_646() {
        let board = Board::from_fen("1R6/7k/4b3/2p2P1P/1r6/R5P1/r6p/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 778);
    }

    #[test]
    fn gentest_647() {
        let board = Board::from_fen("1R6/7k/R3b3/2p2P1P/6P1/8/rr5p/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 641);
    }

    #[test]
    fn gentest_648() {
        let board = Board::from_fen("2b3R1/7k/R7/2p2P1P/6P1/r7/1r5p/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 616);
    }

    #[test]
    fn gentest_649() {
        let board = Board::from_fen("R1b3R1/7k/8/2p2PPP/8/r7/6rp/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 524);
    }

    #[test]
    fn gentest_650() {
        let board = Board::from_fen("R1b2R2/7k/8/2p2PPP/8/8/6rp/r6K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 42);
        assert_eq!(perft(&board, 3, &PRECOMP), 863);
    }

    #[test]
    fn gentest_651() {
        let board = Board::from_fen("2b2R2/7k/8/2p2PPP/8/8/7p/6RK b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 165);
        assert_eq!(perft(&board, 3, &PRECOMP), 1615);
    }

    #[test]
    fn gentest_652() {
        let board = Board::from_fen("5R2/3b3k/8/2p2PPP/8/8/8/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 134);
        assert_eq!(perft(&board, 3, &PRECOMP), 2249);
    }

    #[test]
    fn gentest_653() {
        let board = Board::from_fen("7k/3b1R2/8/2p2PPP/8/8/6K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 159);
        assert_eq!(perft(&board, 3, &PRECOMP), 1412);
    }

    #[test]
    fn gentest_654() {
        let board = Board::from_fen("7k/5R2/8/2p2PPP/b7/8/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 167);
        assert_eq!(perft(&board, 3, &PRECOMP), 3131);
    }

    #[test]
    fn gentest_655() {
        let board = Board::from_fen("7k/5R2/6P1/2p2P1P/8/5K2/2b5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 146);
        assert_eq!(perft(&board, 3, &PRECOMP), 1254);
    }

    #[test]
    fn gentest_656() {
        let board = Board::from_fen("7k/R7/6P1/2p2P1P/8/3b1K2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 231);
        assert_eq!(perft(&board, 3, &PRECOMP), 4515);
    }

    #[test]
    fn gentest_657() {
        let board = Board::from_fen("7k/R7/5PP1/2p4P/4K3/8/8/5b2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 166);
        assert_eq!(perft(&board, 3, &PRECOMP), 1421);
    }

    #[test]
    fn gentest_658() {
        let board = Board::from_fen("7k/R7/b4PP1/2p2K1P/8/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 130);
        assert_eq!(perft(&board, 3, &PRECOMP), 2303);
    }

    #[test]
    fn gentest_659() {
        let board = Board::from_fen("2b4k/R7/5PP1/2p4P/5K2/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 194);
        assert_eq!(perft(&board, 3, &PRECOMP), 1757);
    }

    #[test]
    fn gentest_660() {
        let board = Board::from_fen("2b4k/5R2/5PP1/2p4P/5K2/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 1925);
    }

    #[test]
    fn gentest_661() {
        let board = Board::from_fen("1R5k/3b4/5PP1/2p4P/5K2/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 40);
        assert_eq!(perft(&board, 3, &PRECOMP), 167);
        assert_eq!(perft(&board, 4, &PRECOMP), 3519);
    }

    #[test]
    fn gentest_662() {
        let board = Board::from_fen("1Rb3k1/8/5PP1/2p4P/8/5K2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 103);
        assert_eq!(perft(&board, 3, &PRECOMP), 1955);
    }

    #[test]
    fn gentest_663() {
        let board = Board::from_fen("2b3k1/8/5PP1/7P/2p5/5K2/8/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 202);
        assert_eq!(perft(&board, 3, &PRECOMP), 1918);
    }

    #[test]
    fn gentest_664() {
        let board = Board::from_fen("6k1/8/5PP1/7P/2p3K1/8/8/R6b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 207);
        assert_eq!(perft(&board, 3, &PRECOMP), 4187);
    }

    #[test]
    fn gentest_665() {
        let board = Board::from_fen("7k/8/5PP1/7P/2p5/7K/8/3R3b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 169);
        assert_eq!(perft(&board, 3, &PRECOMP), 1712);
    }

    #[test]
    fn gentest_666() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_667() {
        let board = Board::from_fen("rnbqkbnr/pp1ppppp/2p5/8/8/1P6/PBPPPPPP/RN1QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 563);
    }

    #[test]
    fn gentest_668() {
        let board = Board::from_fen("rnbqkbnr/pp2p1pp/2p5/3p1p2/2P5/1P6/PB1PPPPP/RN1QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 754);
    }

    #[test]
    fn gentest_669() {
        let board = Board::from_fen("rnbqkbnr/pp2p1p1/2p5/3p1p1p/1PP5/7N/PB1PPPPP/RN1QKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 833);
    }

    #[test]
    fn gentest_670() {
        let board = Board::from_fen("rnbqkbnr/pp2p1p1/8/3p1p1p/PpP5/7N/1B1PPPPP/RN1QKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 840);
    }

    #[test]
    fn gentest_671() {
        let board = Board::from_fen("rnbqkbnr/pp6/8/3pBp1p/PpP5/7N/3PPPPP/RN1QKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1167);
    }

    #[test]
    fn gentest_672() {
        let board = Board::from_fen("rBb1kbnr/p7/1p6/3p1p1p/PpP4q/7N/3PPPPP/RN1QKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 969);
    }

    #[test]
    fn gentest_673() {
        let board = Board::from_fen("rB2kbnr/pb6/1p6/3p1p1p/PpP3Pq/1Q5N/3PPP1P/RN2KB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1213);
    }

    #[test]
    fn gentest_674() {
        let board = Board::from_fen("rB2kbnr/pb6/1p3q2/5p1P/PpPp4/1Q5N/3PPP1P/RN2KB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1385);
    }

    #[test]
    fn gentest_675() {
        let board = Board::from_fen("r3kbnr/p7/1p1B1q2/3b1p1P/PpPp4/2Q4N/3PPP1P/RN2KB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1613);
    }

    #[test]
    fn gentest_676() {
        let board = Board::from_fen("r2k1b1r/p3n3/1p1B1q2/3b1p1P/PpPp4/2Q5/3PPP1P/RN2KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1530);
    }

    #[test]
    fn gentest_677() {
        let board = Board::from_fen("r2k1bbr/p3n3/1p1B1q2/5p1P/PpPp4/2Q2N2/3PPPBP/RN2K2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1423);
    }

    #[test]
    fn gentest_678() {
        let board = Board::from_fen("r4bbr/3kB3/1p3q2/p4p1P/PpPp4/2Q2N2/3PPPBP/RN2K2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1394);
    }

    #[test]
    fn gentest_679() {
        let board = Board::from_fen("5bbr/3kB3/rp3q2/p4p1P/PpPpP3/3Q1N2/3P1PBP/RN2K2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1251);
    }

    #[test]
    fn gentest_680() {
        let board = Board::from_fen("5b1r/4k3/rp2bq2/p4p1P/PpPpP3/1Q3N2/3P1PBP/RN2K2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 972);
    }

    #[test]
    fn gentest_681() {
        let board = Board::from_fen("5b2/4k3/rp2bqN1/p4p1r/PpPpP3/1Q6/3P1PBP/RN2K2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 228);
        assert_eq!(perft(&board, 3, &PRECOMP), 7993);
    }

    #[test]
    fn gentest_682() {
        let board = Board::from_fen("5b2/8/rp2bqN1/p1k2p1r/PpPpP3/1Q5P/3P1PB1/RN2K2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1169);
    }

    #[test]
    fn gentest_683() {
        let board = Board::from_fen("5b2/7r/rp2bqN1/p1k2p2/PpPpP3/1Q3P1P/3P4/RN2KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1212);
    }

    #[test]
    fn gentest_684() {
        let board = Board::from_fen("2b2b1N/7r/rp6/p1k2pq1/PpPpP3/1Q3P1P/3P4/RN2KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1160);
    }

    #[test]
    fn gentest_685() {
        let board = Board::from_fen("2b5/7r/rp1b2N1/p1k2pq1/PpPpP3/1Q3P1P/3PK3/RN3B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1234);
    }

    #[test]
    fn gentest_686() {
        let board = Board::from_fen("2b5/6r1/rp1b2N1/p1k2p2/PpPpP3/3Q1PqP/3PK3/RN3B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 886);
    }

    #[test]
    fn gentest_687() {
        let board = Board::from_fen("2b5/6r1/rp1b2N1/p1k2p2/PpPpP3/3Q1q1P/3P4/RN2KBR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 953);
    }

    #[test]
    fn gentest_688() {
        let board = Board::from_fen("2b5/r5r1/1p4N1/p1k1bp2/PpPpP3/R2Q1q1P/3P4/1N2KBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1237);
    }

    #[test]
    fn gentest_689() {
        let board = Board::from_fen("2b5/6r1/rp4N1/p1k1bp2/PpPpP3/RQ1B1q1P/3P4/1N2K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 894);
    }

    #[test]
    fn gentest_690() {
        let board = Board::from_fen("2b5/6r1/rp1k2N1/p3bpR1/PpPpP3/RQ1B3P/3P4/1N2K2q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 144);
        assert_eq!(perft(&board, 3, &PRECOMP), 3583);
    }

    #[test]
    fn gentest_691() {
        let board = Board::from_fen("2b5/6r1/rpk5/p3bpR1/PpPpPN2/RQ1B3P/3PK3/1N5q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 894);
    }

    #[test]
    fn gentest_692() {
        let board = Board::from_fen("8/3b2r1/rpk5/p3bpR1/PpPpPN2/R2B3P/2QPK3/1Nq5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 977);
    }

    #[test]
    fn gentest_693() {
        let board = Board::from_fen("8/3b2r1/rpk3N1/p4pR1/PpPpPb2/R1QB3P/3PK3/1Nq5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1039);
    }

    #[test]
    fn gentest_694() {
        let board = Board::from_fen("8/3b2r1/rpk3N1/p4pR1/PpP1Pb2/R1pB3P/3P4/1N3K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 780);
    }

    #[test]
    fn gentest_695() {
        let board = Board::from_fen("1b6/3b2r1/rpk3N1/p4p2/PpP1P3/2RB3P/3P2R1/1N3K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 713);
    }

    #[test]
    fn gentest_696() {
        let board = Board::from_fen("1b6/5br1/rpk3N1/p4p2/PpP1P3/2RB2RP/3P4/1N3K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 724);
    }

    #[test]
    fn gentest_697() {
        let board = Board::from_fen("1b4r1/5b2/rpk3N1/p4p2/PpP1P3/2RB2RP/3P4/1N2K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 802);
    }

    #[test]
    fn gentest_698() {
        let board = Board::from_fen("1b6/5b2/rp4r1/p1k1Pp2/PpP5/2RB2RP/3P4/1N2K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 610);
    }

    #[test]
    fn gentest_699() {
        let board = Board::from_fen("rb6/5b2/1p4r1/p1k1Pp2/PpP1B3/2R4P/3P4/1N2K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 936);
    }

    #[test]
    fn gentest_700() {
        let board = Board::from_fen("rb6/5b2/1p2r3/p1k1P3/PpP1p3/2R4P/3P4/1N1K2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 601);
    }

    #[test]
    fn gentest_701() {
        let board = Board::from_fen("rb6/5b2/1pr5/p1k1P3/PpP1p3/5R1P/3P2R1/1N1K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 805);
    }

    #[test]
    fn gentest_702() {
        let board = Board::from_fen("rb6/5b2/1pr5/p3P3/PpP1p3/3k3P/3P2R1/1N1K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 435);
        assert_eq!(perft(&board, 3, &PRECOMP), 7198);
    }

    #[test]
    fn gentest_703() {
        let board = Board::from_fen("rb4R1/8/1pr5/p1PbP3/Pp2p3/3k3P/3P4/1N1K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 501);
    }

    #[test]
    fn gentest_704() {
        let board = Board::from_fen("rb4b1/8/1pr5/p1P1P3/Pp2p3/3k3P/3P2R1/1N1K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 428);
        assert_eq!(perft(&board, 3, &PRECOMP), 7297);
    }

    #[test]
    fn gentest_705() {
        let board = Board::from_fen("rb4b1/2r5/1p6/p1P1P3/Pp2p3/N2k3P/3P3R/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 346);
        assert_eq!(perft(&board, 3, &PRECOMP), 9009);
    }

    #[test]
    fn gentest_706() {
        let board = Board::from_fen("rb4b1/r7/1p6/pNP1P3/Pp6/3kp2P/3P3R/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 401);
        assert_eq!(perft(&board, 3, &PRECOMP), 6786);
    }

    #[test]
    fn gentest_707() {
        let board = Board::from_fen("rb4b1/r7/1p6/p1P1P3/P1N5/1p1kp2P/3P3R/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 387);
        assert_eq!(perft(&board, 3, &PRECOMP), 9543);
    }

    #[test]
    fn gentest_708() {
        let board = Board::from_fen("rb6/r6b/8/p1p1P3/P1N4P/1p1kp3/3P3R/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 299);
        assert_eq!(perft(&board, 3, &PRECOMP), 4863);
    }

    #[test]
    fn gentest_709() {
        let board = Board::from_fen("rb6/r6b/8/p1p1P3/P1Nk3P/1p2p3/3P3R/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 395);
    }

    #[test]
    fn gentest_710() {
        let board = Board::from_fen("r7/2b3rb/8/p1p1P3/P1Nk3P/1p2p3/3P1R2/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 804);
    }

    #[test]
    fn gentest_711() {
        let board = Board::from_fen("r7/2b3r1/8/2p1Pb2/P1Nk3P/1p2p3/3P1R2/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 922);
    }

    #[test]
    fn gentest_712() {
        let board = Board::from_fen("r7/2b3r1/8/2p1P3/P1N1b2P/1p1kp3/3P4/3K1R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 871);
    }

    #[test]
    fn gentest_713() {
        let board = Board::from_fen("r7/2b3r1/1N6/2p1PR2/P3b2P/3kp3/1p1P4/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 694);
    }

    #[test]
    fn gentest_714() {
        let board = Board::from_fen("r7/2b3r1/1N2P3/2p2R2/P3b2P/3kp3/1p1P4/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 941);
    }

    #[test]
    fn gentest_715() {
        let board = Board::from_fen("r7/2b3r1/1N2P3/2p5/P2kb2P/4p3/1p1PR3/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 734);
    }

    #[test]
    fn gentest_716() {
        let board = Board::from_fen("8/r1b3r1/1N2P3/2pb3P/P2k4/4p3/1p1PR3/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 700);
    }

    #[test]
    fn gentest_717() {
        let board = Board::from_fen("8/r2N2r1/4P3/P1pbb2P/3k4/4p3/1p1PR3/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 705);
    }

    #[test]
    fn gentest_718() {
        let board = Board::from_fen("8/r2N3r/4P3/P2bb2P/2pk4/4p3/1p1P2R1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 865);
    }

    #[test]
    fn gentest_719() {
        let board = Board::from_fen("8/r2N3r/2b1P3/P3b2P/2pk4/3Pp3/1p2R3/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 734);
    }

    #[test]
    fn gentest_720() {
        let board = Board::from_fen("8/3N2r1/2b1P3/r3b2P/2pk4/3Pp3/1p1R4/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 832);
    }

    #[test]
    fn gentest_721() {
        let board = Board::from_fen("6r1/3N4/2b1P3/r3b2P/2pk4/3Pp3/1p1R4/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 833);
    }

    #[test]
    fn gentest_722() {
        let board = Board::from_fen("8/3N2r1/2b1P3/r3b2P/2pk4/3Pp3/1p1R4/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 880);
    }

    #[test]
    fn gentest_723() {
        let board = Board::from_fen("8/3NP1r1/2b5/r3b2P/2pk4/3Pp3/3RK3/1q6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 59);
        assert_eq!(perft(&board, 2, &PRECOMP), 857);
    }

    #[test]
    fn gentest_724() {
        let board = Board::from_fen("1b6/3NP1r1/2b5/r6P/2pk4/3Pp3/3R4/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1034);
    }

    #[test]
    fn gentest_725() {
        let board = Board::from_fen("1b6/4P1r1/2b5/r3N2P/2Pk4/8/3Rp3/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 4152);
    }

    #[test]
    fn gentest_726() {
        let board = Board::from_fen("1b6/4P3/2b3r1/r3k2P/2P5/8/3RpK2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 753);
    }

    #[test]
    fn gentest_727() {
        let board = Board::from_fen("1b2b3/1R2P3/6r1/r3k2P/2P5/8/4pK2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 669);
    }

    #[test]
    fn gentest_728() {
        let board = Board::from_fen("1b2b3/4P1r1/8/4k2P/r1P5/8/4pK2/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 735);
    }

    #[test]
    fn gentest_729() {
        let board = Board::from_fen("1b2b3/4P1r1/8/4k2P/2P5/r7/2R1pK2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 454);
    }

    #[test]
    fn gentest_730() {
        let board = Board::from_fen("1b6/4P1r1/6b1/7P/2P1k3/r7/2R1p3/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 498);
        assert_eq!(perft(&board, 3, &PRECOMP), 7816);
    }

    #[test]
    fn gentest_731() {
        let board = Board::from_fen("1b2b3/4P1r1/8/7P/2P1k3/r7/3RpK2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 614);
    }

    #[test]
    fn gentest_732() {
        let board = Board::from_fen("1b2b3/4P3/6r1/7P/2Pk4/r7/4pK2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 230);
        assert_eq!(perft(&board, 3, &PRECOMP), 1328);
    }

    #[test]
    fn gentest_733() {
        let board = Board::from_fen("1b2Q3/5b2/6r1/2P4P/3k4/r7/4pK2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 994);
    }

    #[test]
    fn gentest_734() {
        let board = Board::from_fen("1b2Q3/5b2/8/2P4P/3kr3/r7/4p1K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 680);
    }

    #[test]
    fn gentest_735() {
        let board = Board::from_fen("1b6/2Q2b2/8/2k4P/4r3/r7/4p1K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 108);
        assert_eq!(perft(&board, 3, &PRECOMP), 3381);
    }

    #[test]
    fn gentest_736() {
        let board = Board::from_fen("1b6/5b2/8/3k3P/5r2/r7/4p1KQ/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 403);
        assert_eq!(perft(&board, 3, &PRECOMP), 6027);
    }

    #[test]
    fn gentest_737() {
        let board = Board::from_fen("1b2b3/8/8/3k3P/3Q4/r7/4p1K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 66);
        assert_eq!(perft(&board, 3, &PRECOMP), 1720);
    }

    #[test]
    fn gentest_738() {
        let board = Board::from_fen("4b3/8/7P/8/3k4/r5b1/4p1K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 648);
    }

    #[test]
    fn gentest_739() {
        let board = Board::from_fen("4b3/8/7P/8/3k4/5rb1/4p3/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 4442);
    }

    #[test]
    fn gentest_740() {
        let board = Board::from_fen("4b3/2b5/7P/8/3k1r2/8/4p1K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 210);
        assert_eq!(perft(&board, 3, &PRECOMP), 948);
    }

    #[test]
    fn gentest_741() {
        let board = Board::from_fen("4b3/2b4P/8/8/3k1r2/8/7K/4n3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 221);
        assert_eq!(perft(&board, 3, &PRECOMP), 7072);
    }

    #[test]
    fn gentest_742() {
        let board = Board::from_fen("4b3/2b4P/8/4k3/8/8/5r2/4n1K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 152);
        assert_eq!(perft(&board, 3, &PRECOMP), 1177);
    }

    #[test]
    fn gentest_743() {
        let board = Board::from_fen("2R5/2b2b2/8/4k3/8/8/5r2/4n1K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 375);
    }

    #[test]
    fn gentest_744() {
        let board = Board::from_fen("8/2R5/8/4kb2/8/8/5r2/4n1K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 436);
        assert_eq!(perft(&board, 3, &PRECOMP), 6025);
    }

    #[test]
    fn gentest_745() {
        let board = Board::from_fen("2R5/8/4k3/5b2/8/8/5r2/4n2K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 392);
    }

    #[test]
    fn gentest_746() {
        let board = Board::from_fen("8/8/2k5/5b2/8/8/5r2/4n2K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 33);
        assert_eq!(perft(&board, 3, &PRECOMP), 65);
        assert_eq!(perft(&board, 4, &PRECOMP), 1905);
        assert_eq!(perft(&board, 5, &PRECOMP), 4927);
    }

    #[test]
    fn gentest_747() {
        let board = Board::from_fen("8/8/8/3k1b2/8/8/5K2/4n3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 133);
        assert_eq!(perft(&board, 3, &PRECOMP), 2709);
    }

    #[test]
    fn gentest_748() {
        let board = Board::from_fen("8/8/8/2k5/8/8/8/1b2nK2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 72);
        assert_eq!(perft(&board, 3, &PRECOMP), 368);
        assert_eq!(perft(&board, 4, &PRECOMP), 6792);
    }

    #[test]
    fn gentest_749() {
        let board = Board::from_fen("8/8/8/8/3k4/8/5K2/1b2n3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 95);
        assert_eq!(perft(&board, 3, &PRECOMP), 1685);
        assert_eq!(perft(&board, 4, &PRECOMP), 7835);
    }

    #[test]
    fn gentest_750() {
        let board = Board::from_fen("8/8/8/3k4/8/8/2b5/4n1K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 80);
        assert_eq!(perft(&board, 3, &PRECOMP), 313);
        assert_eq!(perft(&board, 4, &PRECOMP), 6072);
    }

    #[test]
    fn gentest_751() {
        let board = Board::from_fen("8/8/8/3k4/4b3/6K1/8/4n3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 110);
        assert_eq!(perft(&board, 3, &PRECOMP), 2306);
    }

    #[test]
    fn gentest_752() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_753() {
        let board = Board::from_fen("rnbqkb1r/pppppppp/7n/8/P2P4/8/1PP1PPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
    }

    #[test]
    fn gentest_754() {
        let board = Board::from_fen("rnbqkb1r/pppp1ppp/8/4pn2/P2PP3/8/1PP2PPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1341);
    }

    #[test]
    fn gentest_755() {
        let board = Board::from_fen("rnbqkb1r/pppp1ppp/8/4p3/P2PPB2/4n3/1PP1QPPP/RN2KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1236);
    }

    #[test]
    fn gentest_756() {
        let board = Board::from_fen("rnbqkbr1/pppp1ppp/8/4p3/P2PPB2/3Q4/1PP2PPP/RN2KnNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1421);
    }

    #[test]
    fn gentest_757() {
        let board = Board::from_fen("rnbqkbr1/ppp2ppp/3p4/4p3/P2PP3/3Q4/1PPB1PPP/RN2KnNR b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1480);
    }

    #[test]
    fn gentest_758() {
        let board = Board::from_fen("r1bqkbr1/p1p2ppp/n2p4/1p2p3/P2PP3/3Q4/1PPB1PPP/RN3KNR w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1266);
    }

    #[test]
    fn gentest_759() {
        let board = Board::from_fen("r1b1kbr1/p1p2ppp/n2p4/1p2p1B1/P2PP2q/2NQ4/1PP2PPP/R4KNR b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1503);
    }

    #[test]
    fn gentest_760() {
        let board = Board::from_fen("r1b1kbr1/p1p2ppp/n2p4/1N2p1B1/P2PP3/3Q4/1PP2PP1/R4KNq w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1240);
    }

    #[test]
    fn gentest_761() {
        let board = Board::from_fen("r1b1k1r1/p1p1bppp/n2p4/1N2p1B1/P2PP2Q/8/1PP2PP1/R4KNq b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1230);
    }

    #[test]
    fn gentest_762() {
        let board = Board::from_fen("r1b1k1r1/p1p1bppp/n2p4/1N2p1B1/P2PP3/8/1PP2PPQ/R4KNq w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1242);
    }

    #[test]
    fn gentest_763() {
        let board = Board::from_fen("r1b1k1r1/p1p1b1pp/n2p1p2/1N2P1B1/P3P3/2P5/1P3PPQ/R4KNq b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1113);
    }

    #[test]
    fn gentest_764() {
        let board = Board::from_fen("r2bk1r1/p1p3pp/n2p1p2/1N2P1B1/P3P1b1/2P5/1P3PPQ/2R2KNq w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1105);
    }

    #[test]
    fn gentest_765() {
        let board = Board::from_fen("r1bbk1r1/p1p3pp/n2p1B2/1N2P3/P3P3/2P3P1/1P3P1Q/2R2KNq b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 918);
    }

    #[test]
    fn gentest_766() {
        let board = Board::from_fen("r1b3r1/p1p1k1pp/n2p1b2/1N2P3/P3P3/2P3PQ/1P3P2/2R2KNq w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1069);
    }

    #[test]
    fn gentest_767() {
        let board = Board::from_fen("r1b3r1/p1p1k1pp/n2pQ3/PN2P3/4P2b/2P3P1/1P3P2/2R2KNq b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 3199);
    }

    #[test]
    fn gentest_768() {
        let board = Board::from_fen("r1b2kr1/p1p3pp/n2p1b2/PN2P3/4P3/2P3P1/1P3P2/2R2KNq w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 741);
    }

    #[test]
    fn gentest_769() {
        let board = Board::from_fen("r1b2kr1/p1p3pp/n2N1b2/P3P3/4P3/2P3P1/1P3Pq1/2R1K1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 719);
    }

    #[test]
    fn gentest_770() {
        let board = Board::from_fen("1r3kr1/p1p3pp/n2Nbb2/P3P3/4P3/2P3P1/1P3Pq1/3RK1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1153);
    }

    #[test]
    fn gentest_771() {
        let board = Board::from_fen("1r3kr1/p1p3pp/n3bb2/P3PN2/4P3/2P3P1/1P3P1q/1R2K1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 968);
    }

    #[test]
    fn gentest_772() {
        let board = Board::from_fen("1r4r1/p1p2kpp/n3b3/P3PNb1/4P3/2P3P1/1P3P1q/R3K1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1190);
    }

    #[test]
    fn gentest_773() {
        let board = Board::from_fen("r5r1/p1p2kpp/n3b3/P3PNb1/4P3/R1P2PP1/1P5q/4K1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 913);
    }

    #[test]
    fn gentest_774() {
        let board = Board::from_fen("rr6/p1p2kpp/n3b3/P3PNb1/4P3/2P2PP1/1P4q1/R3K1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 980);
    }

    #[test]
    fn gentest_775() {
        let board = Board::from_fen("r2r4/p1p2kpp/n3b3/P3PNb1/4P3/1PP2PP1/4N1q1/R3K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 909);
    }

    #[test]
    fn gentest_776() {
        let board = Board::from_fen("r3r3/p1p2kp1/n3b2p/P3PNb1/4P3/1PP2PP1/4N1q1/1R2K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 804);
    }

    #[test]
    fn gentest_777() {
        let board = Board::from_fen("rr6/p1p2kp1/n3b2p/P3PNb1/4P3/1PP2PP1/2K1N1q1/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 932);
    }

    #[test]
    fn gentest_778() {
        let board = Board::from_fen("r7/p1p2kp1/n3b2p/Pr2PN2/2P1P3/1P2bPP1/2K1N1q1/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1121);
    }

    #[test]
    fn gentest_779() {
        let board = Board::from_fen("6r1/p1p2kp1/n3b2p/Pr2PN2/2P1P1P1/1P1KbP2/4N1q1/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1319);
    }

    #[test]
    fn gentest_780() {
        let board = Board::from_fen("1r6/p1p2kp1/n3b2p/Pr2PN2/2P1P1P1/1P1KbP2/1R2N2q/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1266);
    }

    #[test]
    fn gentest_781() {
        let board = Board::from_fen("1r6/p1p2kp1/n3b2p/Pr2P3/2PbP1P1/1P3PN1/1RK1N2q/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 834);
    }

    #[test]
    fn gentest_782() {
        let board = Board::from_fen("3r4/p1p2kp1/n6p/Pr2P1P1/2bbP3/1P3PN1/1RK1N2q/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 788);
    }

    #[test]
    fn gentest_783() {
        let board = Board::from_fen("3r4/p1p2kp1/n3P2p/P1r3P1/2bbP3/1P3PN1/2K1N2q/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 132);
        assert_eq!(perft(&board, 3, &PRECOMP), 6209);
    }

    #[test]
    fn gentest_784() {
        let board = Board::from_fen("3r4/p1p3p1/n3P1kp/Pr4P1/2bbP3/1P3PN1/2K1N2q/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 1093);
    }

    #[test]
    fn gentest_785() {
        let board = Board::from_fen("3r4/p1p3p1/n3P1kp/Pr4Pq/2bbP3/1P3PN1/2K1N3/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1141);
    }

    #[test]
    fn gentest_786() {
        let board = Board::from_fen("3r4/p1p3p1/n3P1kp/Pr4P1/3bP1q1/1P1b1PN1/3KN3/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1572);
    }

    #[test]
    fn gentest_787() {
        let board = Board::from_fen("3r4/p1p3p1/n3P1kp/P1r1P1P1/3b2q1/1P1b1PN1/4N3/2RK4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1019);
    }

    #[test]
    fn gentest_788() {
        let board = Board::from_fen("3r4/p1p3p1/n2bP1kp/P1r3P1/6P1/1P1b2N1/4N3/2RK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 711);
    }

    #[test]
    fn gentest_789() {
        let board = Board::from_fen("3r4/p1p3p1/n2bP1kp/P1r2bP1/2R3P1/1P6/4N3/3K3N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 619);
    }

    #[test]
    fn gentest_790() {
        let board = Board::from_fen("3r4/p1p3p1/n3P1kp/P1r2bP1/2Rb2P1/1P6/4N3/2K4N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 515);
        assert_eq!(perft(&board, 3, &PRECOMP), 8886);
    }

    #[test]
    fn gentest_791() {
        let board = Board::from_fen("3r4/p1p3p1/n1r1P1kP/P4b2/2Rb2P1/1P6/3KN3/7N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 754);
    }

    #[test]
    fn gentest_792() {
        let board = Board::from_fen("3r4/p1p3p1/2r1P1kP/P1n5/2Rb2P1/1P1b2N1/3K4/7N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 914);
    }

    #[test]
    fn gentest_793() {
        let board = Board::from_fen("1r6/p1p3p1/2r1P1kP/P1n3P1/2Rb4/1P1b2N1/3K1N2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1039);
    }

    #[test]
    fn gentest_794() {
        let board = Board::from_fen("1r6/p1p3pP/2r1P1k1/P1n3P1/2Rb4/1P1b2N1/3K1N2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1124);
    }

    #[test]
    fn gentest_795() {
        let board = Board::from_fen("1r5B/p1p3p1/2r1P1k1/P5P1/n1Rb4/1P1N2N1/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1080);
    }

    #[test]
    fn gentest_796() {
        let board = Board::from_fen("2r4B/p1p3p1/2r1P1k1/P5P1/nR6/1P1N2N1/1b1K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 865);
    }

    #[test]
    fn gentest_797() {
        let board = Board::from_fen("5r1B/pRp3p1/2r1P1k1/P5P1/n7/1P1N4/1b1K4/7N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 845);
    }

    #[test]
    fn gentest_798() {
        let board = Board::from_fen("4r2B/R1p3p1/2r1P3/P5k1/n7/1P1N4/1b1K4/7N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 815);
    }

    #[test]
    fn gentest_799() {
        let board = Board::from_fen("4r2B/R1p5/P1r1P1p1/6k1/n7/1P6/1b1K4/4N2N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 669);
    }

    #[test]
    fn gentest_800() {
        let board = Board::from_fen("4r2B/R1p5/Pnr1P1p1/8/6k1/1P6/1b6/3KN2N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 659);
    }

    #[test]
    fn gentest_801() {
        let board = Board::from_fen("4r3/R1p5/Pn2P1p1/2r1B3/6k1/1P1N4/1b6/3K3N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1011);
    }

    #[test]
    fn gentest_802() {
        let board = Board::from_fen("5r2/R1p5/Pn2P1p1/2r1B3/6k1/1P1N4/8/b3K2N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1092);
    }

    #[test]
    fn gentest_803() {
        let board = Board::from_fen("5r1B/R1p5/Pn2P1p1/8/6k1/1PrN4/4K3/b6N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 843);
    }

    #[test]
    fn gentest_804() {
        let board = Board::from_fen("7B/R1p5/Pn2P1p1/5k2/8/1PrN4/4KN2/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 565);
    }

    #[test]
    fn gentest_805() {
        let board = Board::from_fen("8/R1p5/Pn2P1p1/5k2/2r5/1PBNK3/5N2/b7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 615);
    }

    #[test]
    fn gentest_806() {
        let board = Board::from_fen("n7/R1p5/P3P1p1/5k2/1r6/1P1NK3/3B1N2/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 527);
    }

    #[test]
    fn gentest_807() {
        let board = Board::from_fen("n7/R7/P1p1P1p1/5k2/1r6/1PB1K3/5N2/b1N5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 601);
    }

    #[test]
    fn gentest_808() {
        let board = Board::from_fen("8/R1n5/P1p1P3/5kp1/1r6/1PB5/4KN2/b1N5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 737);
    }

    #[test]
    fn gentest_809() {
        let board = Board::from_fen("4n3/R7/P1p1P3/5kp1/1r6/1PB5/3K4/b1N4N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 658);
    }

    #[test]
    fn gentest_810() {
        let board = Board::from_fen("4n3/R7/P1p1P3/5kp1/2r5/1PBN4/3K4/b6N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 742);
    }

    #[test]
    fn gentest_811() {
        let board = Board::from_fen("4n3/R7/P1p1P3/5kp1/4r3/1PB5/2NK4/b6N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 645);
    }

    #[test]
    fn gentest_812() {
        let board = Board::from_fen("4n3/R7/P1p1k3/6p1/r7/1PB3N1/2NK4/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 736);
    }

    #[test]
    fn gentest_813() {
        let board = Board::from_fen("4n3/R7/P1p5/5kp1/r7/1PB5/2N1K3/b4N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 826);
    }

    #[test]
    fn gentest_814() {
        let board = Board::from_fen("4n3/7R/P1p5/5kp1/r7/1PB5/2N1K3/b4N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 974);
    }

    #[test]
    fn gentest_815() {
        let board = Board::from_fen("4n3/8/P1p5/5kp1/5r2/1PB3N1/2N1K2R/b7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 2633);
    }

    #[test]
    fn gentest_816() {
        let board = Board::from_fen("8/8/P1pnk3/6p1/5r2/1P4N1/2NBK2R/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1121);
    }

    #[test]
    fn gentest_817() {
        let board = Board::from_fen("8/8/P1pnk3/4b1pR/1P3r2/6N1/2NBK3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 958);
    }

    #[test]
    fn gentest_818() {
        let board = Board::from_fen("8/1n6/P1p1k3/4b1pR/1P6/N5N1/3BKr2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 164);
        assert_eq!(perft(&board, 3, &PRECOMP), 4367);
    }

    #[test]
    fn gentest_819() {
        let board = Board::from_fen("8/1n3k2/P1p5/4b1pR/1P6/6N1/2NB1r2/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 961);
    }

    #[test]
    fn gentest_820() {
        let board = Board::from_fen("5k1b/1n6/P1p5/6p1/1P6/6N1/2NB1r2/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 603);
    }

    #[test]
    fn gentest_821() {
        let board = Board::from_fen("5k2/1n6/P1p2b2/6p1/1P6/N7/3B1r2/3K1N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 502);
    }

    #[test]
    fn gentest_822() {
        let board = Board::from_fen("3n1k1b/8/P1p5/6p1/1P6/N7/3B1r2/2K2N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 469);
        assert_eq!(perft(&board, 3, &PRECOMP), 8009);
    }

    #[test]
    fn gentest_823() {
        let board = Board::from_fen("3n1k2/8/P1p5/1P4p1/8/N1b5/3B1r2/3K1N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 541);
    }

    #[test]
    fn gentest_824() {
        let board = Board::from_fen("3n4/5kb1/P1p5/1P4p1/1B6/N7/5r2/3K1N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 615);
    }

    #[test]
    fn gentest_825() {
        let board = Board::from_fen("3n4/4Bkb1/PPp2r2/6p1/8/N7/8/3K1N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 403);
        assert_eq!(perft(&board, 3, &PRECOMP), 9542);
    }

    #[test]
    fn gentest_826() {
        let board = Board::from_fen("3n4/4Bk2/PPpr4/6p1/8/N7/1b2K3/5N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 535);
    }

    #[test]
    fn gentest_827() {
        let board = Board::from_fen("3n4/4Bk2/PPp5/6p1/3r4/N5N1/1b6/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 537);
    }

    #[test]
    fn gentest_828() {
        let board = Board::from_fen("3n4/4B1k1/PPp5/6p1/r7/N5N1/1b3K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 637);
    }

    #[test]
    fn gentest_829() {
        let board = Board::from_fen("3n4/6k1/PPp2b2/2B3pN/r7/N7/5K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 144);
        assert_eq!(perft(&board, 3, &PRECOMP), 3492);
    }

    #[test]
    fn gentest_830() {
        let board = Board::from_fen("3n4/4Bk2/PPp2b2/6pN/2r5/N7/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 635);
    }

    #[test]
    fn gentest_831() {
        let board = Board::from_fen("3n4/4Bk2/PPp2b2/1Nr3pN/8/8/8/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 506);
    }

    #[test]
    fn gentest_832() {
        let board = Board::from_fen("3n4/N3Bk2/PPp2b2/6pN/8/7r/8/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 485);
        assert_eq!(perft(&board, 3, &PRECOMP), 8668);
    }

    #[test]
    fn gentest_833() {
        let board = Board::from_fen("3n4/N3Bk2/PPp2b2/6p1/8/1r6/4N3/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 564);
    }

    #[test]
    fn gentest_834() {
        let board = Board::from_fen("3nk3/N3B3/PPp2b2/1r4p1/8/2N5/8/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 553);
    }

    #[test]
    fn gentest_835() {
        let board = Board::from_fen("3nk3/N3B3/PPp2b2/5rp1/8/8/4N3/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 468);
    }

    #[test]
    fn gentest_836() {
        let board = Board::from_fen("4k3/N4n2/PPpB1b2/6p1/8/5r2/4N3/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 692);
    }

    #[test]
    fn gentest_837() {
        let board = Board::from_fen("3k4/N4n2/PPp2b2/6p1/8/B4rN1/8/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 454);
    }

    #[test]
    fn gentest_838() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_839() {
        let board = Board::from_fen("rnbqkbnr/1ppppppp/8/p7/2P5/7N/PP1PPPPP/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 462);
    }

    #[test]
    fn gentest_840() {
        let board = Board::from_fen("r1bqkbnr/1pppp1pp/2n2p2/p7/2P5/8/PP1PPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 483);
    }

    #[test]
    fn gentest_841() {
        let board = Board::from_fen("r1bqkbnr/1pppp1pp/2n5/p4p2/2PP4/4P3/PP3PPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 760);
    }

    #[test]
    fn gentest_842() {
        let board = Board::from_fen("r1bqkbnr/2ppp2p/1pn3p1/p4p2/P1PP4/4P3/1P3PPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 770);
    }

    #[test]
    fn gentest_843() {
        let board = Board::from_fen("r2qkbnr/2ppp2p/bpn3p1/p4p2/P1PP4/3BP3/1P1B1PPP/RN1QK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1012);
    }

    #[test]
    fn gentest_844() {
        let board = Board::from_fen("r2qkbnr/1bppp2p/1p4p1/p4p2/P1Pn4/3BPP2/1P1B2PP/RN1QK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1084);
    }

    #[test]
    fn gentest_845() {
        let board = Board::from_fen("r2qk1nr/1bppp2p/1p4pb/p4p2/P1PnP3/1Q1B1P2/1P1B2PP/RN2K1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1228);
    }

    #[test]
    fn gentest_846() {
        let board = Board::from_fen("r2qkb1r/1bppp2p/1p3np1/p4p2/P1PnP3/3B1P2/1P1B2PP/RN1QK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1287);
    }

    #[test]
    fn gentest_847() {
        let board = Board::from_fen("1r1qkb1r/1bppp2p/1p3np1/p4p2/P1PnP3/3BBP1N/1P4PP/RN1QK2R b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1386);
    }

    #[test]
    fn gentest_848() {
        let board = Board::from_fen("1r1qkbr1/1bp1p2p/1p3np1/p2p1p2/P1PnP3/3BBP1N/1P1K2PP/RN1Q3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1503);
    }

    #[test]
    fn gentest_849() {
        let board = Board::from_fen("1r1qkbr1/2p1p2p/1pb2np1/p2pPB2/P1Pn4/4BP1N/1P1K2PP/RN1Q3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1403);
    }

    #[test]
    fn gentest_850() {
        let board = Board::from_fen("br1qkbr1/2p1p2p/1p4p1/p2pPBN1/P1Pnn3/4BP2/1P1K2PP/RN1Q3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 191);
        assert_eq!(perft(&board, 3, &PRECOMP), 8093);
    }

    #[test]
    fn gentest_851() {
        let board = Board::from_fen("br1qk1r1/2p1p2p/1p4pb/p2pPB2/P1PnN3/2K1BP2/1P4PP/RN1Q3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1569);
    }

    #[test]
    fn gentest_852() {
        let board = Board::from_fen("1r1q1kr1/2pBp2p/1pb3pb/p2pP3/P1PnN3/2K1BP2/1P4PP/RN1Q3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 1569);
    }

    #[test]
    fn gentest_853() {
        let board = Board::from_fen("1r1q1kr1/2p1p1bp/1pb1B1p1/p2pP3/P1PnN3/1PK1BP2/6PP/RN1Q3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1540);
    }

    #[test]
    fn gentest_854() {
        let board = Board::from_fen("1r1q1kr1/1bp1p1bp/1p4p1/p2BP3/P1P1N3/1PK1BP2/2n3PP/RN1Q3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1515);
    }

    #[test]
    fn gentest_855() {
        let board = Board::from_fen("1r3kr1/1bp1p1bp/1p1qB1p1/p3P3/P1P1NB2/1PK2P2/2n3PP/RN1Q3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1648);
    }

    #[test]
    fn gentest_856() {
        let board = Board::from_fen("1r3kr1/1bpqp2p/1p2Bbp1/p3P3/P1P1NB2/1PK2P1P/2n3P1/RN1Q3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 2020);
    }

    #[test]
    fn gentest_857() {
        let board = Board::from_fen("r4kr1/1bpqp2p/1p2Bbp1/p3P3/P1P1NB2/1P3P1P/2K3P1/RN2Q2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1822);
    }

    #[test]
    fn gentest_858() {
        let board = Board::from_fen("r2qk1r1/1bp1p2p/1p2Bbp1/p1P1P3/P3NB2/1P3P1P/2K3P1/RN2Q2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 1624);
    }

    #[test]
    fn gentest_859() {
        let board = Board::from_fen("r3k1r1/1bp1p2p/1p2Bbp1/p1P1P3/P3NB2/1PN2P1P/3K2P1/R3Q2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1364);
    }

    #[test]
    fn gentest_860() {
        let board = Board::from_fen("r3k1Br/1bp1p2p/5bp1/ppP1P3/P3NB2/1PN2P1P/3K2P1/R3Q2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 1250);
    }

    #[test]
    fn gentest_861() {
        let board = Board::from_fen("2r1k1Br/1bp1p2p/5bp1/ppP1P3/P3NB2/1PN2P1P/3K2P1/3RQ1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 950);
    }

    #[test]
    fn gentest_862() {
        let board = Board::from_fen("2r1k1Br/2p4p/4pbp1/ppP1P3/P3bB2/1PN1QP1P/3K2P1/3R2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1019);
    }

    #[test]
    fn gentest_863() {
        let board = Board::from_fen("2r1k1Br/2p4p/4pbp1/ppP1P3/P4B2/1PNRQP1P/4K1P1/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 778);
    }

    #[test]
    fn gentest_864() {
        let board = Board::from_fen("3rk1Br/2p5/4pbp1/ppP1P1Bp/P7/1PNRQP1P/4K1P1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 917);
    }

    #[test]
    fn gentest_865() {
        let board = Board::from_fen("4k1Br/2p5/4pbp1/ppP1P1Bp/P2Q4/1PNR1P1P/5KP1/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 702);
        assert_eq!(perft(&board, 3, &PRECOMP), 9381);
    }

    #[test]
    fn gentest_866() {
        let board = Board::from_fen("4k1B1/7r/2p1pbp1/ppP1P1Bp/P2Q4/1PNRKP1P/6P1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 834);
    }

    #[test]
    fn gentest_867() {
        let board = Board::from_fen("4k1B1/8/2p1pbpr/ppP1P1Bp/PP1Q4/3RKP1P/6P1/1N4R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 537);
        assert_eq!(perft(&board, 3, &PRECOMP), 6368);
    }

    #[test]
    fn gentest_868() {
        let board = Board::from_fen("4k1B1/r7/2pQpbp1/ppP1P1Bp/PP6/3RKP1P/6P1/1N4R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 685);
    }

    #[test]
    fn gentest_869() {
        let board = Board::from_fen("3Qk1B1/r7/2p1p1p1/ppP1P1Bp/PP6/3RKP1P/6P1/1N4R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 0);
        assert_eq!(perft(&board, 2, &PRECOMP), 0);
        assert_eq!(perft(&board, 3, &PRECOMP), 0);
        assert_eq!(perft(&board, 4, &PRECOMP), 0);
        assert_eq!(perft(&board, 5, &PRECOMP), 0);
        assert_eq!(perft(&board, 6, &PRECOMP), 0);
    }

    #[test]
    fn gentest_870() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_871() {
        let board = Board::from_fen("r1bqkbnr/pppppppp/2n5/8/1P2P3/8/P1PP1PPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 679);
    }

    #[test]
    fn gentest_872() {
        let board = Board::from_fen("r1bqkbnr/pppp1p1p/2n1p1p1/8/1P2P3/3B4/P1PP1PPP/RNBQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 987);
    }

    #[test]
    fn gentest_873() {
        let board = Board::from_fen("r1bqkbnr/p1pp1p1p/2n1p1p1/1p6/1P2P1P1/3B3N/P1PP1P1P/RNBQK2R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 858);
    }

    #[test]
    fn gentest_874() {
        let board = Board::from_fen("r1bqkbnr/p1p2p1p/4p1p1/1p1p2N1/1n2P1P1/3B4/P1PP1P1P/RNBQK2R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1033);
    }

    #[test]
    fn gentest_875() {
        let board = Board::from_fen("r1bqkbnr/p1p2p1p/4p1p1/1p1p2N1/4P1PP/3B4/P1nPKP2/RNBQ3R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1152);
    }

    #[test]
    fn gentest_876() {
        let board = Board::from_fen("r1b1kb1r/p1p1np1p/4p1p1/1p1p2q1/4P1PP/N2B4/P1nPKP2/R1BQ3R w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 976);
    }

    #[test]
    fn gentest_877() {
        let board = Board::from_fen("r1b1kbnr/p1p2p1p/4p1p1/1p1p2q1/4P1PP/N2B4/P1QPKP2/R1B2R2 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1144);
    }

    #[test]
    fn gentest_878() {
        let board = Board::from_fen("r3kbnr/p1p2p1p/b3p1p1/1p1pq3/4P1PP/N2B4/P1QPKP2/R1B3R1 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1284);
    }

    #[test]
    fn gentest_879() {
        let board = Board::from_fen("r3kbnr/p1p2p1p/b3p1p1/1p1p4/4PqPP/N2B1P2/P1QPK3/R1BR4 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1047);
    }

    #[test]
    fn gentest_880() {
        let board = Board::from_fen("r2k2nr/p1p2p1p/b3p1pb/1p1p4/2B1PqPP/N4P2/P1QPK3/R1BR4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 996);
    }

    #[test]
    fn gentest_881() {
        let board = Board::from_fen("r2k2nr/p1p2p1p/b3p1pb/1p1pq3/2B1P1PP/N4P2/P2P1K2/RQBR4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1108);
    }

    #[test]
    fn gentest_882() {
        let board = Board::from_fen("2rk2nr/pbp2p1p/4p1pb/1p1pq3/2B1P1PP/N4P2/P2P1K2/RQB4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1311);
    }

    #[test]
    fn gentest_883() {
        let board = Board::from_fen("2rk2nr/pbp2p1p/4p1pb/1p1p4/4PqPP/N2B1P2/P2P1K1R/RQB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 830);
    }

    #[test]
    fn gentest_884() {
        let board = Board::from_fen("2r3nr/pbp1kp1p/4p1pb/1N1p4/4PqPP/3B1P2/P2P1K1R/RQB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1109);
    }

    #[test]
    fn gentest_885() {
        let board = Board::from_fen("2r3nr/1bN1kp1p/p3p1pb/3p3P/4PqP1/3B1P2/P2P1K1R/RQB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1203);
    }

    #[test]
    fn gentest_886() {
        let board = Board::from_fen("2r3nr/2N1kp1p/p1b1p1pb/7P/2p1PqP1/5P2/P2P1K1R/RQB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1304);
    }

    #[test]
    fn gentest_887() {
        let board = Board::from_fen("2r3nr/4kp1p/N3p1pb/7P/b1p1PqP1/B4P2/P2P1K1R/RQ6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 236);
        assert_eq!(perft(&board, 3, &PRECOMP), 8450);
    }

    #[test]
    fn gentest_888() {
        let board = Board::from_fen("2r3nr/3k1p1p/N3p1pb/7P/bQp1PqP1/B4P2/P2P1K1R/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1407);
    }

    #[test]
    fn gentest_889() {
        let board = Board::from_fen("6nr/3k1p1p/N1r1p1pb/7P/b1p1PqP1/B4P2/PQ1P1K1R/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1469);
    }

    #[test]
    fn gentest_890() {
        let board = Board::from_fen("6nQ/3k1p1p/N3p1pb/2r4P/2p1PqP1/B4P2/P1bP1K1R/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1577);
    }

    #[test]
    fn gentest_891() {
        let board = Board::from_fen("6nQ/3k1p1p/N3p1pb/3r3P/2p1PqP1/B4P2/P1bP1K1R/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1616);
    }

    #[test]
    fn gentest_892() {
        let board = Board::from_fen("1Nk3nQ/7p/4pppb/3r3P/2p1PqP1/B4P2/P1bP1K1R/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1514);
    }

    #[test]
    fn gentest_893() {
        let board = Board::from_fen("1Nk3nQ/7p/4pppb/3r3P/b1p1PqP1/5P2/P2P1K1R/2B4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1113);
    }

    #[test]
    fn gentest_894() {
        let board = Board::from_fen("1Nk3nQ/7p/4pppb/3rq2P/2pPP1P1/1b3P2/P4K1R/2B4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1178);
    }

    #[test]
    fn gentest_895() {
        let board = Board::from_fen("1Nk3nQ/7p/4pppb/3r3P/2pPPqP1/1b3P2/PR6/2B1K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1227);
    }

    #[test]
    fn gentest_896() {
        let board = Board::from_fen("1Nk3nQ/7p/5ppb/4P2P/2p1PqP1/1b3P2/PR1r4/2B1K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 881);
    }

    #[test]
    fn gentest_897() {
        let board = Board::from_fen("1Nk3nQ/7p/4Pppb/7P/2p1PqP1/5P2/b2r4/1RB1K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 879);
    }

    #[test]
    fn gentest_898() {
        let board = Board::from_fen("1Nk3nQ/7p/4Pppb/7P/2p1P1P1/8/b2r2q1/1RB1K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 792);
    }

    #[test]
    fn gentest_899() {
        let board = Board::from_fen("1Nk3n1/6Qp/4Pppb/6PP/2p1P3/5q2/b2r4/1RB1K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1167);
    }

    #[test]
    fn gentest_900() {
        let board = Board::from_fen("1Nk5/4n2p/4PppQ/6PP/4P3/2p2q2/b2r4/1RB1K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1027);
    }

    #[test]
    fn gentest_901() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_902() {
        let board = Board::from_fen("rnbqkbnr/ppppppp1/8/7p/8/P3P3/1PPP1PPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 607);
    }

    #[test]
    fn gentest_903() {
        let board = Board::from_fen("rnbqkbnr/pp2ppp1/2pp4/1B5p/8/P3P3/1PPP1PPP/RNBQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 873);
    }

    #[test]
    fn gentest_904() {
        let board = Board::from_fen("rnb1kbnr/ppq1ppp1/2pp4/7p/B5P1/P3P3/1PPP1P1P/RNBQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 718);
    }

    #[test]
    fn gentest_905() {
        let board = Board::from_fen("rnb1kbnr/p1q1ppp1/2p5/1p1p3P/B7/P3P3/1PPP1P1P/RNBQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 906);
    }

    #[test]
    fn gentest_906() {
        let board = Board::from_fen("rnb1kbnr/p1q1ppp1/8/1ppp3P/5P2/PB2P3/1PPP3P/RNBQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 919);
    }

    #[test]
    fn gentest_907() {
        let board = Board::from_fen("rn2kbnr/p1q2pp1/8/1pppp2P/5Pb1/PB2P3/1PPPQ2P/RNB1K1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1260);
    }

    #[test]
    fn gentest_908() {
        let board = Board::from_fen("r3kbnr/p1qn1pp1/8/1ppBp2P/3P1Pb1/P3P3/1PP1Q2P/RNB1K1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1824);
    }

    #[test]
    fn gentest_909() {
        let board = Board::from_fen("r3kbnr/2qn2p1/8/pppBpp1P/3P1Pb1/P1P1P3/1P2Q2P/RNB1K1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1674);
    }

    #[test]
    fn gentest_910() {
        let board = Board::from_fen("r4bnr/1Bqnk1p1/8/ppp1pp1P/3P1Pb1/P1P1P3/1P3Q1P/RNB1K1NR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1450);
    }

    #[test]
    fn gentest_911() {
        let board = Board::from_fen("r4bnr/1Bq1k1p1/5n2/1pp1pp1P/p2PPPb1/P1P5/1P3Q1P/RNB1K1NR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1499);
    }

    #[test]
    fn gentest_912() {
        let board = Board::from_fen("r4bn1/2q1k1pr/B4n2/1pp1pp1P/p2PPPb1/P1P2Q2/1P5P/RNB1K1NR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1449);
    }

    #[test]
    fn gentest_913() {
        let board = Board::from_fen("r4bn1/2q1k1pr/B4n2/1p3p1P/p1ppPPb1/P1P2Q2/1P2N2P/RNB1K2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1417);
    }

    #[test]
    fn gentest_914() {
        let board = Board::from_fen("r4bn1/4k1pr/B1q2n2/1p3p1P/p1ppPPb1/P1P4Q/1P2N2P/RNB1K2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1308);
    }

    #[test]
    fn gentest_915() {
        let board = Board::from_fen("r3qbn1/4k1pr/B4n2/1p3p1P/p1ppPP2/P1P1Q3/1P2b2P/RNB1K2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1055);
    }

    #[test]
    fn gentest_916() {
        let board = Board::from_fen("r3qbn1/4k1p1/B4n2/1p3p1r/p1ppPP1P/P1P1Q3/1P2b3/RNB1K2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1082);
    }

    #[test]
    fn gentest_917() {
        let board = Board::from_fen("4qbn1/r3k3/B4np1/1p3p1r/p1ppPP1P/P1P1Q3/1P1Bb3/RN2K2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 920);
    }

    #[test]
    fn gentest_918() {
        let board = Board::from_fen("5bn1/r3kq2/5np1/1B3p1r/p1ppPP1P/P1P1Q3/1P1Bb2R/RN2K3 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1068);
    }

    #[test]
    fn gentest_919() {
        let board = Board::from_fen("r4bn1/4k2q/5np1/1B3p1r/p1pQPP1P/P1P5/1P1Bb2R/RN2K3 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 855);
    }

    #[test]
    fn gentest_920() {
        let board = Board::from_fen("r1Qk1bn1/7q/5np1/1B3p1r/p1p1PP1P/P1P5/1P1Bb2R/RN2K3 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 74);
        assert_eq!(perft(&board, 3, &PRECOMP), 2316);
    }

    #[test]
    fn gentest_921() {
        let board = Board::from_fen("2rk2n1/7q/5np1/1B3p1r/p1p1PP1P/b1P1B3/1P2b2R/RN2K3 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1147);
    }

    #[test]
    fn gentest_922() {
        let board = Board::from_fen("2rk1bn1/7q/5np1/5p1r/p1B1PP1P/2P1B3/1P2R3/RN2K3 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1347);
    }

    #[test]
    fn gentest_923() {
        let board = Board::from_fen("r2k2n1/7q/3b1np1/5p1r/pPB1PP1P/2P1B3/4R3/RN2K3 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1382);
    }

    #[test]
    fn gentest_924() {
        let board = Board::from_fen("r2k2n1/4b2q/B4np1/5p1r/pP2PP1P/2P1B3/R3R3/1N2K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 938);
    }

    #[test]
    fn gentest_925() {
        let board = Board::from_fen("r3k1n1/4b3/BB3npq/5p1r/pP2PP1P/2P5/R3R3/1N2K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1044);
    }

    #[test]
    fn gentest_926() {
        let board = Board::from_fen("r3kbn1/8/B4npq/5p1r/pP2PP1P/2P1B3/R3R3/1N1K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1051);
    }

    #[test]
    fn gentest_927() {
        let board = Board::from_fen("3k1bn1/B7/r4npq/5p1r/pP2PP1P/2P5/R3R3/1N1K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 945);
    }

    #[test]
    fn gentest_928() {
        let board = Board::from_fen("1B1k2n1/6b1/r4npq/5p1r/pP2PP1P/2P5/R2NR3/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 758);
    }

    #[test]
    fn gentest_929() {
        let board = Board::from_fen("1B1k2n1/6b1/2r3pq/5p1r/pPN1nP1P/2P5/R3R3/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1038);
    }

    #[test]
    fn gentest_930() {
        let board = Board::from_fen("1B1k2n1/6b1/2r3pq/4Rp1r/pPN2P1P/2P3n1/1R6/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 967);
    }

    #[test]
    fn gentest_931() {
        let board = Board::from_fen("1B1k2n1/2r3b1/6p1/4Rp1r/pPN2q1P/2P3n1/8/1R1K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1155);
    }

    #[test]
    fn gentest_932() {
        let board = Board::from_fen("1B1k2n1/2r3b1/3q2p1/3R1p1r/pPN4P/2P3n1/8/2RK4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 771);
    }

    #[test]
    fn gentest_933() {
        let board = Board::from_fen("1B1k2nb/2r5/3q2p1/N2R1p1r/pP5P/2P5/8/2RK3n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 549);
    }

    #[test]
    fn gentest_934() {
        let board = Board::from_fen("1B4nb/2r1k3/3R2p1/N4p1r/pP5P/2P5/4K3/2R4n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 957);
    }

    #[test]
    fn gentest_935() {
        let board = Board::from_fen("1B4nb/4k3/2rR2p1/N4p1r/pP5P/2P2Kn1/8/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 847);
    }

    #[test]
    fn gentest_936() {
        let board = Board::from_fen("1B1R2n1/4k1b1/2r3p1/5p1r/pPN4P/2P2Kn1/8/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1285);
    }

    #[test]
    fn gentest_937() {
        let board = Board::from_fen("1B6/4k1b1/2r2np1/5p1r/pPN4P/2PR1K2/4n3/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1192);
    }

    #[test]
    fn gentest_938() {
        let board = Board::from_fen("1B6/3R2b1/2r1knp1/5p1r/pP5P/2P1NK2/4n3/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1224);
    }

    #[test]
    fn gentest_939() {
        let board = Board::from_fen("1B6/5Rb1/2r1k1p1/5pnr/pP5P/2P1NK2/4n3/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 125);
        assert_eq!(perft(&board, 3, &PRECOMP), 4502);
    }

    #[test]
    fn gentest_940() {
        let board = Board::from_fen("1B6/5R2/2r1kbp1/5pnr/pP5P/2P5/2N1nK2/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1091);
    }

    #[test]
    fn gentest_941() {
        let board = Board::from_fen("1B6/5R1n/2r1kbp1/5p1r/pP5P/2P5/2N5/2R3K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 788);
    }

    #[test]
    fn gentest_942() {
        let board = Board::from_fen("5R2/2B4n/2r1kbp1/5p1r/1P5P/p1P5/2N5/2R3K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 863);
    }

    #[test]
    fn gentest_943() {
        let board = Board::from_fen("3b2R1/2B4n/2r1k1p1/7r/1P3p1P/p1P5/2N5/2R3K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 873);
    }

    #[test]
    fn gentest_944() {
        let board = Board::from_fen("6R1/7n/2r1kbp1/BP5r/5p1P/p1P5/2N5/2R3K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1113);
    }

    #[test]
    fn gentest_945() {
        let board = Board::from_fen("1r6/7n/4kbp1/BP5r/5p1P/p1P5/2N5/2R3K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 779);
    }

    #[test]
    fn gentest_946() {
        let board = Board::from_fen("8/1r5n/4kbp1/BP5r/2P2p1P/p7/8/2R1N1K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 824);
    }

    #[test]
    fn gentest_947() {
        let board = Board::from_fen("7b/1r5n/1B2k3/1P4pr/2P2p1P/p7/8/2R1N1K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 709);
    }

    #[test]
    fn gentest_948() {
        let board = Board::from_fen("7b/2r4n/4k3/1P4pr/2P2p1P/p7/8/3RN1K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 636);
    }

    #[test]
    fn gentest_949() {
        let board = Board::from_fen("8/2r4n/4k3/1P2b1pr/2P4P/p4p2/8/2R1N1K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 521);
        assert_eq!(perft(&board, 3, &PRECOMP), 8037);
    }

    #[test]
    fn gentest_950() {
        let board = Board::from_fen("8/3r3n/4k3/1P2b1pr/2P4P/p4R2/8/4N1K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 786);
    }

    #[test]
    fn gentest_951() {
        let board = Board::from_fen("8/3rk2n/3b1R2/1P4pr/2P4P/p7/8/4N1K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 444);
        assert_eq!(perft(&board, 3, &PRECOMP), 8877);
    }

    #[test]
    fn gentest_952() {
        let board = Board::from_fen("8/3rk2n/3b1R2/1P4P1/2P5/p6r/6K1/4N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 577);
    }

    #[test]
    fn gentest_953() {
        let board = Board::from_fen("3r4/4k2n/8/1Pb3P1/2P5/p6r/5RK1/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 719);
    }

    #[test]
    fn gentest_954() {
        let board = Board::from_fen("3r4/b3k2n/8/1P4P1/2P4N/p6r/5RK1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 714);
    }

    #[test]
    fn gentest_955() {
        let board = Board::from_fen("8/b3k3/5n2/1P3RP1/2Pr3N/p6r/6K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 584);
        assert_eq!(perft(&board, 3, &PRECOMP), 9838);
    }

    #[test]
    fn gentest_956() {
        let board = Board::from_fen("8/b3k3/5n2/1P4P1/2Pr3N/p4R2/7r/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 637);
    }

    #[test]
    fn gentest_957() {
        let board = Board::from_fen("6n1/b3k3/8/1PP3P1/5r1N/p4R2/7r/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 472);
        assert_eq!(perft(&board, 3, &PRECOMP), 7642);
    }

    #[test]
    fn gentest_958() {
        let board = Board::from_fen("6n1/b3k3/1P6/2P3P1/5r1N/p4R2/r7/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 390);
        assert_eq!(perft(&board, 3, &PRECOMP), 9560);
    }

    #[test]
    fn gentest_959() {
        let board = Board::from_fen("6n1/4k3/1b4P1/2P5/7N/p4r2/r7/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 89);
        assert_eq!(perft(&board, 3, &PRECOMP), 648);
    }

    #[test]
    fn gentest_960() {
        let board = Board::from_fen("6n1/4k3/2P3P1/b7/7N/p4r2/r7/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 202);
        assert_eq!(perft(&board, 3, &PRECOMP), 5981);
    }

    #[test]
    fn gentest_961() {
        let board = Board::from_fen("6n1/4k3/2P3P1/8/7N/p4r2/1r6/4b2K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 207);
        assert_eq!(perft(&board, 3, &PRECOMP), 1628);
    }

    #[test]
    fn gentest_962() {
        let board = Board::from_fen("6n1/2P5/3k2P1/8/8/p4N2/1r6/4b2K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 454);
    }

    #[test]
    fn gentest_963() {
        let board = Board::from_fen("2N3n1/2k5/6P1/b7/8/p4N2/1r6/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 396);
        assert_eq!(perft(&board, 3, &PRECOMP), 4843);
    }

    #[test]
    fn gentest_964() {
        let board = Board::from_fen("6n1/2k1N3/6P1/b7/8/p7/6rN/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 244);
        assert_eq!(perft(&board, 3, &PRECOMP), 6076);
    }

    #[test]
    fn gentest_965() {
        let board = Board::from_fen("6n1/2k1N3/6P1/b7/8/p3r3/7N/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 333);
        assert_eq!(perft(&board, 3, &PRECOMP), 4238);
    }

    #[test]
    fn gentest_966() {
        let board = Board::from_fen("6n1/2k1N3/6P1/b7/8/p5K1/7N/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 220);
        assert_eq!(perft(&board, 3, &PRECOMP), 3634);
    }

    #[test]
    fn gentest_967() {
        let board = Board::from_fen("8/2k1N3/6P1/b6n/8/p4NK1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 96);
        assert_eq!(perft(&board, 3, &PRECOMP), 1668);
    }

    #[test]
    fn gentest_968() {
        let board = Board::from_fen("1k6/4N3/6P1/b3N2n/8/p7/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 264);
        assert_eq!(perft(&board, 3, &PRECOMP), 3986);
    }

    #[test]
    fn gentest_969() {
        let board = Board::from_fen("1k6/4N3/6P1/4N2n/1b6/8/p7/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 277);
        assert_eq!(perft(&board, 3, &PRECOMP), 4154);
    }

    #[test]
    fn gentest_970() {
        let board = Board::from_fen("1k6/4N3/6P1/7n/1b6/8/8/q5NK b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 298);
        assert_eq!(perft(&board, 3, &PRECOMP), 9418);
    }

    #[test]
    fn gentest_971() {
        let board = Board::from_fen("1k4N1/8/6P1/2b1q2n/8/8/8/6NK w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 329);
        assert_eq!(perft(&board, 3, &PRECOMP), 3089);
    }

    #[test]
    fn gentest_972() {
        let board = Board::from_fen("1k6/4N1q1/6P1/2b4n/8/7N/8/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 327);
    }

    #[test]
    fn gentest_973() {
        let board = Board::from_fen("1k6/4b3/6P1/7n/8/2q5/5N2/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 382);
        assert_eq!(perft(&board, 3, &PRECOMP), 3394);
    }

    #[test]
    fn gentest_974() {
        let board = Board::from_fen("1k5q/4b3/6P1/7n/8/3N4/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 348);
    }

    #[test]
    fn gentest_975() {
        let board = Board::from_fen("1k6/4b3/6P1/7n/8/2q5/1N5K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 331);
        assert_eq!(perft(&board, 3, &PRECOMP), 2805);
    }

    #[test]
    fn gentest_976() {
        let board = Board::from_fen("1k6/4b3/6P1/N6n/8/5q2/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 238);
        assert_eq!(perft(&board, 3, &PRECOMP), 8034);
    }

    #[test]
    fn gentest_977() {
        let board = Board::from_fen("2k5/4b3/2N3P1/3q3n/8/8/7K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 384);
        assert_eq!(perft(&board, 3, &PRECOMP), 3310);
    }

    #[test]
    fn gentest_978() {
        let board = Board::from_fen("2k5/4b1P1/8/4Nq1n/8/8/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 470);
    }

    #[test]
    fn gentest_979() {
        let board = Board::from_fen("2k3B1/4bq2/8/4N2n/8/8/7K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 442);
        assert_eq!(perft(&board, 3, &PRECOMP), 5883);
    }

    #[test]
    fn gentest_980() {
        let board = Board::from_fen("2k1q1B1/4b3/8/7n/8/8/5N1K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 428);
    }

    #[test]
    fn gentest_981() {
        let board = Board::from_fen("2k5/8/8/1q5n/2B4b/8/5N1K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 652);
    }

    #[test]
    fn gentest_982() {
        let board = Board::from_fen("2k5/8/2B2n2/8/7b/8/5N1K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 248);
        assert_eq!(perft(&board, 3, &PRECOMP), 3640);
    }

    #[test]
    fn gentest_983() {
        let board = Board::from_fen("2k5/8/2B5/8/7b/8/5nK1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 171);
        assert_eq!(perft(&board, 3, &PRECOMP), 2247);
    }

    #[test]
    fn gentest_984() {
        let board = Board::from_fen("2k5/8/8/8/B6b/3n4/8/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 186);
        assert_eq!(perft(&board, 3, &PRECOMP), 3305);
    }

    #[test]
    fn gentest_985() {
        let board = Board::from_fen("k7/8/8/8/7b/3n4/2B5/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 136);
        assert_eq!(perft(&board, 3, &PRECOMP), 1431);
    }

    #[test]
    fn gentest_986() {
        let board = Board::from_fen("k7/8/6B1/8/5n1b/8/8/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 190);
        assert_eq!(perft(&board, 3, &PRECOMP), 3199);
    }

    #[test]
    fn gentest_987() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_988() {
        let board = Board::from_fen("rnbqkbnr/p1pppppp/1p6/8/7P/P7/1PPPPPP1/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 420);
        assert_eq!(perft(&board, 3, &PRECOMP), 9700);
    }

    #[test]
    fn gentest_989() {
        let board = Board::from_fen("rnbqkb1r/p2ppppp/1pp2n2/7P/8/P7/1PPPPPP1/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
    }

    #[test]
    fn gentest_990() {
        let board = Board::from_fen("rnb1kb1r/p1qppppp/1pp2n2/7P/8/P1NP4/1PP1PPP1/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 857);
    }

    #[test]
    fn gentest_991() {
        let board = Board::from_fen("rnb1kb2/p1qppppr/1pp2n1p/7P/8/P1NP4/1PP1PPPR/R1BQKBN1 w Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 807);
    }

    #[test]
    fn gentest_992() {
        let board = Board::from_fen("rnb1kb2/p2ppppr/1pp2n1p/3P3P/5q2/P1N5/1PP1PPPR/R1BQKBN1 b Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1078);
    }

    #[test]
    fn gentest_993() {
        let board = Board::from_fen("rnb1kb2/p2ppp1r/1p3npp/3p3P/5q2/P1N5/1PP1PPP1/R1BQKBNR w Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1119);
    }

    #[test]
    fn gentest_994() {
        let board = Board::from_fen("rnb1kb2/p2p1p1r/1p3npp/3pp2P/5q1R/P1N5/1PPBPPP1/R2QKBN1 b Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1233);
    }

    #[test]
    fn gentest_995() {
        let board = Board::from_fen("rnb1kb2/p2p1p1r/6pp/1p1pp2P/4nq2/P1N5/1PPBPPP1/R2QKBNR w Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1110);
    }

    #[test]
    fn gentest_996() {
        let board = Board::from_fen("rnb1kb2/p2p3r/6pp/1pNppp1P/5q2/P7/1PPBPPP1/R2QKBNR b Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1231);
    }

    #[test]
    fn gentest_997() {
        let board = Board::from_fen("rnb1kb2/p2p3r/7p/1pNppppP/2q5/P7/1PPBPPP1/R1Q1KBNR w Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1274);
    }

    #[test]
    fn gentest_998() {
        let board = Board::from_fen("r1b1kb2/p2p3r/n3N2p/1p1ppppP/2q5/P7/1PPBPPP1/RQ2KBNR b Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1381);
    }

    #[test]
    fn gentest_999() {
        let board = Board::from_fen("r1b1kb2/p2p3r/4N2p/1p1ppppP/1n2q3/P3P3/1PPB1PP1/RQ2KBNR w Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1187);
    }

    #[test]
    fn gentest_1000() {
        let board = Board::from_fen("r1b1kb2/p2p3r/4N2p/1p1ppppP/1n6/P3P2R/1PPB2P1/RQ2KBN1 b Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 891);
    }

    #[test]
    fn gentest_1001() {
        let board = Board::from_fen("r1b1kb2/p2p1r2/n3N2p/1p1ppppP/1P6/P3P2R/2PB2P1/RQ2KBN1 w Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 757);
    }

    #[test]
    fn gentest_1002() {
        let board = Board::from_fen("r1b1k3/p2p1r2/n3N2p/1B1ppppP/1b6/PQ2P2R/2PB2P1/R3K1N1 b Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1105);
    }

    #[test]
    fn gentest_1003() {
        let board = Board::from_fen("r1bNkb2/p2p1r2/n6p/1B1pp1pP/5p2/PQ2P2R/2PB2P1/R3K1N1 w Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1127);
    }

    #[test]
    fn gentest_1004() {
        let board = Board::from_fen("r1bNk3/p2p1r2/n6p/1B1pp1pP/1b3p2/P1B1P2R/Q1P3P1/R3K1N1 b Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1035);
    }

    #[test]
    fn gentest_1005() {
        let board = Board::from_fen("r1bNk3/p2p1r2/n2b3p/1B1pp1pP/3B1p2/P3P2R/Q1P3P1/R3K1N1 w Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1212);
    }

    #[test]
    fn gentest_1006() {
        let board = Board::from_fen("r1b1k3/p2p1Nr1/n2b3p/3pp1pP/2BB1p2/P3P2R/Q1P3P1/R3K1N1 b Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1078);
    }

    #[test]
    fn gentest_1007() {
        let board = Board::from_fen("r1b1k3/p2p1Nr1/3b3p/1n1pp1pP/2BB1P2/P6R/Q1P3P1/R3K1N1 w Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1407);
    }

    #[test]
    fn gentest_1008() {
        let board = Board::from_fen("r1b5/p2pkNr1/3b3p/1n1pp1pP/2BB1P2/P5R1/Q1P3P1/2R1K1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1339);
    }

    #[test]
    fn gentest_1009() {
        let board = Board::from_fen("1r6/p2pkNr1/b2b3p/1n1pp1pP/2BB1P2/P5R1/Q1P3P1/1R2K1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 1729);
    }

    #[test]
    fn gentest_1010() {
        let board = Board::from_fen("8/pr1pkNr1/b2b3p/1n1pB1pP/2B2P2/P5R1/Q1P1K1P1/1R4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1156);
    }

    #[test]
    fn gentest_1011() {
        let board = Board::from_fen("8/prbpkNr1/b6p/3pB1pP/2B2P2/P1n3R1/Q1P3P1/1R2K1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1489);
    }

    #[test]
    fn gentest_1012() {
        let board = Board::from_fen("8/p1bpkNr1/b2B3p/3p1PpP/1rB5/P1n3R1/Q1P3P1/1R2K1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 164);
        assert_eq!(perft(&board, 3, &PRECOMP), 5434);
    }

    #[test]
    fn gentest_1013() {
        let board = Board::from_fen("8/p2pkNr1/b2b3p/3p1P1P/1rB3p1/P1n3R1/Q1PK2P1/1R4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1408);
    }

    #[test]
    fn gentest_1014() {
        let board = Board::from_fen("8/p2pkNr1/b2b3p/3p1P1P/2B3p1/P1n3R1/QrP3P1/3RK1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1417);
    }

    #[test]
    fn gentest_1015() {
        let board = Board::from_fen("8/p2pkNr1/b6p/1n1p1P1P/1b4p1/P5R1/QrP1B1P1/3RK1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 166);
        assert_eq!(perft(&board, 3, &PRECOMP), 6135);
    }

    #[test]
    fn gentest_1016() {
        let board = Board::from_fen("3N4/p2pk1r1/b6p/1n3P1P/1b1p2p1/P5R1/QrP1B1P1/3R1KN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1157);
    }

    #[test]
    fn gentest_1017() {
        let board = Board::from_fen("3Nk3/p2p2r1/b6p/5P1P/1bBp2p1/P1n3R1/QrP3P1/3R1KN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1046);
    }

    #[test]
    fn gentest_1018() {
        let board = Board::from_fen("3Nk3/p5r1/b2p3p/5P1P/1bBp2p1/P1nR2R1/QrP3P1/4K1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 837);
    }

    #[test]
    fn gentest_1019() {
        let board = Board::from_fen("3Nk3/p5r1/b2p3p/5P1P/1bBp2p1/P5R1/QrPR2P1/4K1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 914);
    }

    #[test]
    fn gentest_1020() {
        let board = Board::from_fen("3Nk3/p5r1/b2p3p/5P1P/PbBp2p1/7R/QrPRn1P1/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1153);
    }

    #[test]
    fn gentest_1021() {
        let board = Board::from_fen("3Nk3/pr6/b2p3p/5P1P/Pb1p4/6pR/QrPRB1P1/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 772);
    }

    #[test]
    fn gentest_1022() {
        let board = Board::from_fen("3Nk3/p4r2/b2p3p/5P1P/PbBp4/6pR/1QPR2P1/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 747);
    }

    #[test]
    fn gentest_1023() {
        let board = Board::from_fen("3k4/pr6/b2p3p/5P1P/PbBp4/6pR/1QPR2P1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 790);
    }

    #[test]
    fn gentest_1024() {
        let board = Board::from_fen("3k4/pr4Q1/b2p3p/P4P1P/1bB5/3p2pR/2PR2P1/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 695);
    }

    #[test]
    fn gentest_1025() {
        let board = Board::from_fen("3k4/p6r/b2pB2p/P4P1P/1b6/3p2pR/2PR2P1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 450);
        assert_eq!(perft(&board, 3, &PRECOMP), 9233);
    }

    #[test]
    fn gentest_1026() {
        let board = Board::from_fen("3k4/p2r4/b2p3p/P4P1P/1bP5/3p2pR/3R2P1/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 275);
        assert_eq!(perft(&board, 3, &PRECOMP), 6283);
    }

    #[test]
    fn gentest_1027() {
        let board = Board::from_fen("3k4/3r4/p2p3p/Pb3P1P/1bP5/3p2pR/3R2P1/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 179);
        assert_eq!(perft(&board, 3, &PRECOMP), 1972);
    }

    #[test]
    fn gentest_1028() {
        let board = Board::from_fen("3k4/1r6/p2p3p/Pb3P1P/1bP5/3p2R1/3R1KP1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 540);
    }

    #[test]
    fn gentest_1029() {
        let board = Board::from_fen("3k4/7r/p2p1P1p/P6P/1bb5/3p2R1/3R1KP1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 503);
    }

    #[test]
    fn gentest_1030() {
        let board = Board::from_fen("3k2b1/6Rr/p2p1P1p/P6P/1b6/3p4/3R2P1/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 373);
        assert_eq!(perft(&board, 3, &PRECOMP), 7034);
    }

    #[test]
    fn gentest_1031() {
        let board = Board::from_fen("6R1/3k3r/p2p1P1p/P6P/1b6/1b1p4/3R2P1/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 539);
    }

    #[test]
    fn gentest_1032() {
        let board = Board::from_fen("4R3/3k3r/p4P1p/P2p3P/1b6/1b1p2P1/3R4/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 597);
    }

    #[test]
    fn gentest_1033() {
        let board = Board::from_fen("8/6r1/p2k1P1p/P2pR2P/1b6/1b1p2P1/3R4/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 666);
    }

    #[test]
    fn gentest_1034() {
        let board = Board::from_fen("8/6r1/p3kP1p/P2p3P/1b4R1/1b1p2P1/3R4/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 719);
    }

    #[test]
    fn gentest_1035() {
        let board = Board::from_fen("8/6r1/p2k1P1p/P6P/1b1p2R1/1b1p2P1/3R4/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 294);
        assert_eq!(perft(&board, 3, &PRECOMP), 4208);
    }

    #[test]
    fn gentest_1036() {
        let board = Board::from_fen("8/6r1/p4P1p/P3k2P/1b4R1/1b1p2P1/3R4/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 460);
    }

    #[test]
    fn gentest_1037() {
        let board = Board::from_fen("5b2/6P1/p6p/P3k2P/6R1/1b1p2P1/3R4/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 474);
    }

    #[test]
    fn gentest_1038() {
        let board = Board::from_fen("8/6P1/p2b3p/P3k2P/5R2/1b1p2P1/8/3RK3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 460);
        assert_eq!(perft(&board, 3, &PRECOMP), 8206);
    }

    #[test]
    fn gentest_1039() {
        let board = Board::from_fen("8/6P1/p2b3p/P3k2P/5R2/1b1p2P1/8/R3K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 516);
    }

    #[test]
    fn gentest_1040() {
        let board = Board::from_fen("8/6P1/p2b3p/P3k2P/5RP1/1b6/3pK3/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 619);
    }

    #[test]
    fn gentest_1041() {
        let board = Board::from_fen("8/5bP1/p2b3p/P3k2P/5RP1/8/5K2/R2q4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 729);
    }

    #[test]
    fn gentest_1042() {
        let board = Board::from_fen("5Q2/5b2/p2bk2p/P6P/5RP1/8/5K2/R2q4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 809);
    }

    #[test]
    fn gentest_1043() {
        let board = Board::from_fen("5Q2/5b2/p2bk2p/P5qP/5R2/8/5K2/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 948);
    }

    #[test]
    fn gentest_1044() {
        let board = Board::from_fen("5Q2/8/p2bk2p/P5qb/5R2/8/5K2/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1027);
    }

    #[test]
    fn gentest_1045() {
        let board = Board::from_fen("5Q2/6q1/p2bk2p/P6b/5R2/8/8/5RK1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 177);
        assert_eq!(perft(&board, 3, &PRECOMP), 5313);
    }

    #[test]
    fn gentest_1046() {
        let board = Board::from_fen("8/6Q1/p2bk2p/P7/5R2/8/4b3/2R3K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 905);
    }

    #[test]
    fn gentest_1047() {
        let board = Board::from_fen("8/6Q1/p2bk2p/P7/5R2/8/4b3/4R1K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 493);
    }

    #[test]
    fn gentest_1048() {
        let board = Board::from_fen("1b6/8/p3kR1p/P7/8/2Q5/4b3/4R1K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 129);
        assert_eq!(perft(&board, 3, &PRECOMP), 1705);
    }

    #[test]
    fn gentest_1049() {
        let board = Board::from_fen("8/3k4/p2b1R1p/P7/8/2Q5/4b3/3R2K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 558);
    }

    #[test]
    fn gentest_1050() {
        let board = Board::from_fen("8/4k3/p2R3p/P7/5R2/2Q5/4b3/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 587);
        assert_eq!(perft(&board, 3, &PRECOMP), 5481);
    }

    #[test]
    fn gentest_1051() {
        let board = Board::from_fen("4k3/8/p2R3p/P7/5R2/2Q2b2/8/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 30);
        assert_eq!(perft(&board, 3, &PRECOMP), 1596);
    }

    #[test]
    fn gentest_1052() {
        let board = Board::from_fen("4k3/8/p2R3p/P4R2/6b1/2Q5/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 425);
        assert_eq!(perft(&board, 3, &PRECOMP), 3472);
    }

    #[test]
    fn gentest_1053() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1054() {
        let board = Board::from_fen("r1bqkbnr/pppppppp/n7/8/6Q1/4P3/PPPP1PPP/RNB1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 893);
    }

    #[test]
    fn gentest_1055() {
        let board = Board::from_fen("1rbqkbnr/pppppppp/8/2n5/8/4P2Q/PPPP1PPP/RNB1KBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 786);
    }

    #[test]
    fn gentest_1056() {
        let board = Board::from_fen("1rbqkbnr/pppppppp/8/8/8/3BP1Q1/PPPP1PPP/RNB1K1NR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 733);
    }

    #[test]
    fn gentest_1057() {
        let board = Board::from_fen("1rbqkbnr/pppp2pp/4p3/5p2/8/4P1Q1/PPPP1PPP/RNB1KBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 998);
    }

    #[test]
    fn gentest_1058() {
        let board = Board::from_fen("r1bqkbnr/pppp2pp/4p3/5p2/3P4/2P1P1Q1/PP3PPP/RNB1KBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1032);
    }

    #[test]
    fn gentest_1059() {
        let board = Board::from_fen("1rbqkbnr/1ppp2pp/p3p3/5p2/3P3P/2P1P1Q1/PP3PP1/RNB1KBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 993);
    }

    #[test]
    fn gentest_1060() {
        let board = Board::from_fen("1rbqkbnr/1ppp2pp/p7/1B2pp2/3P3P/1PP1P1Q1/P4PP1/RNB1K1NR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1095);
    }

    #[test]
    fn gentest_1061() {
        let board = Board::from_fen("1rbqkb1r/1p1p2pp/p1p2n2/1B2pp2/3P3P/1PP1P1Q1/P2K1PP1/RNB3NR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1171);
    }

    #[test]
    fn gentest_1062() {
        let board = Board::from_fen("1rbqkb1r/1p1p2Qp/p1p2n2/1B2p3/3P1p1P/BPP1P3/P2K1PP1/RN4NR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1304);
    }

    #[test]
    fn gentest_1063() {
        let board = Board::from_fen("1rb1k2r/1p1p2Qp/p1p2n2/qB2p3/3P1p1P/bPPKP3/P4PP1/RN4NR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1102);
    }

    #[test]
    fn gentest_1064() {
        let board = Board::from_fen("1rb1kb1r/1p1p2Qp/p1p2n2/qB2p3/3P1p1P/1PP1PP2/P2K2P1/RN4NR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1219);
    }

    #[test]
    fn gentest_1065() {
        let board = Board::from_fen("1rb1k2r/1p1p2Q1/p1pb1n2/qB2P2p/5p1P/1PP1PP2/P2K2P1/RN4NR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1116);
    }

    #[test]
    fn gentest_1066() {
        let board = Board::from_fen("1rbk3r/1p1p1Q2/p1Bb1n2/q3P2p/5p1P/1PP1PP2/P2K2P1/RN4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1249);
    }

    #[test]
    fn gentest_1067() {
        let board = Board::from_fen("1rbk3r/1p1p3Q/p1Bb4/1q1nP2p/5p1P/1PP1PP2/P2K2P1/RN4NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1176);
    }

    #[test]
    fn gentest_1068() {
        let board = Board::from_fen("1rbk3r/1p1p4/p1Bb2Q1/1q2P2p/5p1P/1PP1nPP1/P2K4/RN4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1319);
    }

    #[test]
    fn gentest_1069() {
        let board = Board::from_fen("1rbk3r/1p6/p1pb2Q1/1q2P2p/5pnP/1PP2P2/P2K4/RN4NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1065);
    }

    #[test]
    fn gentest_1070() {
        let board = Board::from_fen("1rbk2r1/1p5Q/p1pb4/1q2P2p/P4pnP/1PP2P2/3K4/RN4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1152);
    }

    #[test]
    fn gentest_1071() {
        let board = Board::from_fen("1rbk2r1/1p6/pq1b4/2p1PQ1p/P4pnP/1PP2P2/3K4/RN4NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 925);
    }

    #[test]
    fn gentest_1072() {
        let board = Board::from_fen("r1bk2r1/1p3Q2/pq1b4/2p1P2p/P4pnP/1PP2P2/3KN3/RN5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1291);
    }

    #[test]
    fn gentest_1073() {
        let board = Board::from_fen("r1b3r1/1p1k4/p2b1Q2/q1p1P2p/P4pnP/1PP2P2/3KN3/RN5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 986);
    }

    #[test]
    fn gentest_1074() {
        let board = Board::from_fen("r1b2br1/1p1k4/p4Q2/q1p1P2p/P4pnP/1PPK1P2/4N3/RN1R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 892);
    }

    #[test]
    fn gentest_1075() {
        let board = Board::from_fen("r1b3r1/1p1k4/p2b1Q2/2p1P2p/q4pnP/1PPK1P2/4N3/RNR5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1063);
    }

    #[test]
    fn gentest_1076() {
        let board = Board::from_fen("r1b3r1/1p6/p1kb1Q2/2p1P2p/R4pnP/1PPK1P2/4N3/1N1R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1025);
    }

    #[test]
    fn gentest_1077() {
        let board = Board::from_fen("r7/1p6/p1kb1Q2/2p1Pbrp/R1K2pnP/1PP2P2/4N3/1N1R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1164);
    }

    #[test]
    fn gentest_1078() {
        let board = Board::from_fen("5r2/1p6/p1kR1Q2/2p1Pbrp/R1K2pnP/1PP2P2/4N3/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 41);
        assert_eq!(perft(&board, 3, &PRECOMP), 1104);
    }

    #[test]
    fn gentest_1079() {
        let board = Board::from_fen("5r2/1pk3r1/p2R1Q2/2p1Pb1p/R1K2pPP/1PP5/4N3/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1173);
    }

    #[test]
    fn gentest_1080() {
        let board = Board::from_fen("5r2/1pk2Q2/p7/2p1Pb1p/R1K2pPP/1PPR4/4N3/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 255);
        assert_eq!(perft(&board, 3, &PRECOMP), 4726);
    }

    #[test]
    fn gentest_1081() {
        let board = Board::from_fen("8/1pkbQr2/p7/2p1P2p/R1K2pPP/1PPR4/4N3/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 544);
    }

    #[test]
    fn gentest_1082() {
        let board = Board::from_fen("5Q2/2kb1r2/p7/1ppKP2p/R4pPP/1PPR4/4N3/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 773);
    }

    #[test]
    fn gentest_1083() {
        let board = Board::from_fen("5Q2/2kb3r/p7/1ppKP3/5ppP/1PPR4/4N3/RN6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 690);
    }

    #[test]
    fn gentest_1084() {
        let board = Board::from_fen("8/2kb3r/p4Q2/1p1KP3/2p2ppP/1PPR4/4N3/RN6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 794);
    }

    #[test]
    fn gentest_1085() {
        let board = Board::from_fen("8/2kb4/p3Q2r/1p1KP3/2p3pP/1PPR1p2/4N3/RN6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 730);
    }

    #[test]
    fn gentest_1086() {
        let board = Board::from_fen("2k5/3b4/p3Q2r/1p1KP3/2p3pP/1PP2R2/8/RNN5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 645);
    }

    #[test]
    fn gentest_1087() {
        let board = Board::from_fen("3k4/3b4/Q6r/1p1KP3/2p4P/1PP2p2/8/RNN5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 624);
    }

    #[test]
    fn gentest_1088() {
        let board = Board::from_fen("3k4/8/Q6r/Rp1KP3/2p3bP/1PP2p2/8/1NN5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 627);
    }

    #[test]
    fn gentest_1089() {
        let board = Board::from_fen("8/4k3/Q6r/Rp1KP3/6bP/1pP2p2/3N4/2N5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 677);
    }

    #[test]
    fn gentest_1090() {
        let board = Board::from_fen("8/4k3/3Q4/Rp1KP3/6bP/1pPN1p2/3N4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 88);
        assert_eq!(perft(&board, 3, &PRECOMP), 840);
    }

    #[test]
    fn gentest_1091() {
        let board = Board::from_fen("4k3/2Qb4/8/Rp1KP3/7P/1pPN1p2/3N4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 413);
    }

    #[test]
    fn gentest_1092() {
        let board = Board::from_fen("8/3k4/8/Rp1KP3/1N5P/1pP2p2/3N4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 186);
        assert_eq!(perft(&board, 3, &PRECOMP), 1419);
    }

    #[test]
    fn gentest_1093() {
        let board = Board::from_fen("8/4k3/8/1p1KP3/1N5P/2P2p2/Rp1N4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 237);
        assert_eq!(perft(&board, 3, &PRECOMP), 6355);
    }

    #[test]
    fn gentest_1094() {
        let board = Board::from_fen("8/4k3/N7/1p1KP3/2N4P/2P2p2/R7/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 474);
        assert_eq!(perft(&board, 3, &PRECOMP), 7998);
    }

    #[test]
    fn gentest_1095() {
        let board = Board::from_fen("8/4k3/N7/1p1KP3/2N4P/R1P2p2/r7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 317);
        assert_eq!(perft(&board, 3, &PRECOMP), 6665);
    }

    #[test]
    fn gentest_1096() {
        let board = Board::from_fen("1N6/4k3/2K5/1p2P3/2N4P/R1P2p2/1r6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 417);
        assert_eq!(perft(&board, 3, &PRECOMP), 6749);
    }

    #[test]
    fn gentest_1097() {
        let board = Board::from_fen("1N6/4k3/2K5/1p2P3/R1N4P/2P2p2/1r6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 407);
    }

    #[test]
    fn gentest_1098() {
        let board = Board::from_fen("1N6/4k3/2K5/1p2PN2/R6P/2P2p2/3r4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 148);
        assert_eq!(perft(&board, 3, &PRECOMP), 2703);
    }

    #[test]
    fn gentest_1099() {
        let board = Board::from_fen("1N6/3r4/4k3/1pK1PN2/R6P/2P2p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 491);
    }

    #[test]
    fn gentest_1100() {
        let board = Board::from_fen("3r4/4N3/N3k3/1pK1P3/R6P/2P2p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 473);
        assert_eq!(perft(&board, 3, &PRECOMP), 7966);
    }

    #[test]
    fn gentest_1101() {
        let board = Board::from_fen("r7/3kN3/N7/1pK1P3/5R1P/2P2p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 382);
        assert_eq!(perft(&board, 3, &PRECOMP), 9621);
    }

    #[test]
    fn gentest_1102() {
        let board = Board::from_fen("4r3/2NkN3/8/1pK1P3/2P2R1P/5p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 369);
        assert_eq!(perft(&board, 3, &PRECOMP), 4877);
    }

    #[test]
    fn gentest_1103() {
        let board = Board::from_fen("r7/3kN3/N7/1pK1P3/2P2R1P/5p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 354);
        assert_eq!(perft(&board, 3, &PRECOMP), 8560);
    }

    #[test]
    fn gentest_1104() {
        let board = Board::from_fen("r7/3kN3/8/2K1P3/1Np1R2P/5p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 498);
        assert_eq!(perft(&board, 3, &PRECOMP), 8328);
    }

    #[test]
    fn gentest_1105() {
        let board = Board::from_fen("2Nk4/r7/8/2K1P3/1Np1R2P/5p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 455);
    }

    #[test]
    fn gentest_1106() {
        let board = Board::from_fen("2k5/r7/8/4P3/1NpK2RP/5p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 460);
        assert_eq!(perft(&board, 3, &PRECOMP), 7806);
    }

    #[test]
    fn gentest_1107() {
        let board = Board::from_fen("3k4/6R1/8/4P3/1NpK3P/5p2/r7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 453);
    }

    #[test]
    fn gentest_1108() {
        let board = Board::from_fen("3k4/8/8/4P3/1N1K3P/2p2p2/r7/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 503);
        assert_eq!(perft(&board, 3, &PRECOMP), 8511);
    }

    #[test]
    fn gentest_1109() {
        let board = Board::from_fen("4k3/8/8/4P3/1NK4P/2p2p2/5r2/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 381);
        assert_eq!(perft(&board, 3, &PRECOMP), 9751);
    }

    #[test]
    fn gentest_1110() {
        let board = Board::from_fen("4k3/8/8/1K2P3/1N5P/2p2p2/R5r1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 530);
        assert_eq!(perft(&board, 3, &PRECOMP), 9170);
    }

    #[test]
    fn gentest_1111() {
        let board = Board::from_fen("8/5k2/8/1K2P3/1N5P/2p2p2/4Rr2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 300);
        assert_eq!(perft(&board, 3, &PRECOMP), 6528);
    }

    #[test]
    fn gentest_1112() {
        let board = Board::from_fen("5k2/8/8/1K2P3/1N2R2P/2p2p2/5r2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 298);
        assert_eq!(perft(&board, 3, &PRECOMP), 4556);
    }

    #[test]
    fn gentest_1113() {
        let board = Board::from_fen("6k1/8/8/1K2P3/1N1R3P/2p2p2/8/5r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 358);
        assert_eq!(perft(&board, 3, &PRECOMP), 8864);
    }

    #[test]
    fn gentest_1114() {
        let board = Board::from_fen("6k1/8/8/K3P3/1N1R3P/2p2p2/8/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 438);
        assert_eq!(perft(&board, 3, &PRECOMP), 7513);
    }

    #[test]
    fn gentest_1115() {
        let board = Board::from_fen("8/5k2/8/1K2P3/1N1R3P/2p2p2/8/7r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 443);
    }

    #[test]
    fn gentest_1116() {
        let board = Board::from_fen("4k3/8/8/2K1P3/1N3R1P/2p2p2/8/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 355);
        assert_eq!(perft(&board, 3, &PRECOMP), 5317);
    }

    #[test]
    fn gentest_1117() {
        let board = Board::from_fen("4k3/8/8/2K1PR2/1N5P/2p2p2/4r3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 332);
        assert_eq!(perft(&board, 3, &PRECOMP), 6989);
    }

    #[test]
    fn gentest_1118() {
        let board = Board::from_fen("3k4/8/2K5/4P3/1N3R1P/2p2p2/4r3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 345);
        assert_eq!(perft(&board, 3, &PRECOMP), 4901);
    }

    #[test]
    fn gentest_1119() {
        let board = Board::from_fen("3k4/8/1K6/4P3/1N3R1P/4rp2/2p5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 356);
        assert_eq!(perft(&board, 3, &PRECOMP), 7899);
    }

    #[test]
    fn gentest_1120() {
        let board = Board::from_fen("2k5/K7/8/4P3/1N1R3P/4rp2/2p5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 282);
        assert_eq!(perft(&board, 3, &PRECOMP), 4329);
    }

    #[test]
    fn gentest_1121() {
        let board = Board::from_fen("2k5/K7/8/4r3/1N5P/3R1p2/8/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 435);
        assert_eq!(perft(&board, 3, &PRECOMP), 8127);
    }

    #[test]
    fn gentest_1122() {
        let board = Board::from_fen("2k5/K2R4/2N5/8/4r2P/5p2/8/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 484);
        assert_eq!(perft(&board, 3, &PRECOMP), 9078);
    }

    #[test]
    fn gentest_1123() {
        let board = Board::from_fen("2k5/K3R3/2N5/8/7P/5p2/4r3/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 419);
        assert_eq!(perft(&board, 3, &PRECOMP), 8304);
    }

    #[test]
    fn gentest_1124() {
        let board = Board::from_fen("2k5/K3R3/2N5/8/7P/5p2/3r4/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 349);
        assert_eq!(perft(&board, 3, &PRECOMP), 6490);
    }

    #[test]
    fn gentest_1125() {
        let board = Board::from_fen("2k5/K2R4/2N5/8/7P/5p2/1b3r2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 319);
        assert_eq!(perft(&board, 3, &PRECOMP), 6786);
    }

    #[test]
    fn gentest_1126() {
        let board = Board::from_fen("2k5/K2R4/2N5/8/7P/5p2/1b5r/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 422);
        assert_eq!(perft(&board, 3, &PRECOMP), 7325);
    }

    #[test]
    fn gentest_1127() {
        let board = Board::from_fen("8/1K1k4/2N5/4b3/7P/5p2/7r/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 315);
        assert_eq!(perft(&board, 3, &PRECOMP), 3405);
    }

    #[test]
    fn gentest_1128() {
        let board = Board::from_fen("8/3k4/K7/8/1N1b3P/5p2/7r/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 285);
        assert_eq!(perft(&board, 3, &PRECOMP), 7923);
    }

    #[test]
    fn gentest_1129() {
        let board = Board::from_fen("8/3k4/KbN5/8/7P/5p2/4r3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 298);
        assert_eq!(perft(&board, 3, &PRECOMP), 2930);
    }

    #[test]
    fn gentest_1130() {
        let board = Board::from_fen("8/3k4/Kb6/8/2N4P/5p2/3r4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 333);
        assert_eq!(perft(&board, 3, &PRECOMP), 7693);
    }

    #[test]
    fn gentest_1131() {
        let board = Board::from_fen("8/8/K3k3/4N3/3b3P/5p2/3r4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 337);
        assert_eq!(perft(&board, 3, &PRECOMP), 3825);
    }

    #[test]
    fn gentest_1132() {
        let board = Board::from_fen("8/8/3k4/1K2N2P/3b4/5p2/3r4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 323);
        assert_eq!(perft(&board, 3, &PRECOMP), 7568);
    }

    #[test]
    fn gentest_1133() {
        let board = Board::from_fen("8/8/3k2N1/1K5P/8/8/3r1p2/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 233);
        assert_eq!(perft(&board, 3, &PRECOMP), 2361);
    }

    #[test]
    fn gentest_1134() {
        let board = Board::from_fen("8/8/1K1k4/7P/5N2/3r4/5p2/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 203);
        assert_eq!(perft(&board, 3, &PRECOMP), 4421);
    }

    #[test]
    fn gentest_1135() {
        let board = Board::from_fen("8/8/1K1k4/7P/4r3/8/5pN1/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 248);
        assert_eq!(perft(&board, 3, &PRECOMP), 2192);
    }

    #[test]
    fn gentest_1136() {
        let board = Board::from_fen("8/4r3/3k3P/1K6/8/8/5pN1/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 230);
        assert_eq!(perft(&board, 3, &PRECOMP), 5533);
    }

    #[test]
    fn gentest_1137() {
        let board = Board::from_fen("4r3/8/3k3P/1K6/8/8/5p2/4N1b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 307);
        assert_eq!(perft(&board, 3, &PRECOMP), 3033);
    }

    #[test]
    fn gentest_1138() {
        let board = Board::from_fen("4r3/8/K3k2P/8/8/3N4/5p2/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 240);
        assert_eq!(perft(&board, 3, &PRECOMP), 5552);
    }

    #[test]
    fn gentest_1139() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1140() {
        let board = Board::from_fen("rnbqkbnr/p1pppppp/1p6/8/2P3P1/8/PP1PPP1P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 485);
    }

    #[test]
    fn gentest_1141() {
        let board = Board::from_fen("rnbqkbnr/3ppppp/pp6/2p5/2P3P1/4P3/PP1P1P1P/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 485);
    }

    #[test]
    fn gentest_1142() {
        let board = Board::from_fen("r1bqkbnr/3ppppp/ppn5/2p5/1PP3PP/4P3/P2P1P2/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 750);
    }

    #[test]
    fn gentest_1143() {
        let board = Board::from_fen("r1bqk1nr/3pbppp/ppn5/2p1p3/QPP3PP/4P3/P2P1P2/RNB1KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 951);
    }

    #[test]
    fn gentest_1144() {
        let board = Board::from_fen("r1bqk2r/3pbppp/ppn2n2/2p1p2P/QPP3P1/4P3/P2P1P2/RNBK1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 986);
    }

    #[test]
    fn gentest_1145() {
        let board = Board::from_fen("2bqk2r/1r1pbppp/ppn2n2/2p1p2P/QPP3P1/4PP2/P2P4/RNBK1BNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 922);
    }

    #[test]
    fn gentest_1146() {
        let board = Board::from_fen("2bqk2r/1r1pbppp/ppn5/Q1P1p2P/2P3n1/4PP2/P2P4/RNBK1BNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1050);
    }

    #[test]
    fn gentest_1147() {
        let board = Board::from_fen("2bqkb1r/1r1p1ppp/ppn5/Q1P1p2P/2P2P2/4P3/P2P3n/RNBK1BNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1048);
    }

    #[test]
    fn gentest_1148() {
        let board = Board::from_fen("2b1kb1r/1r1p1ppp/ppn2q2/Q1P1pP1P/2P5/4P3/P2PK2n/RNB2BNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 987);
    }

    #[test]
    fn gentest_1149() {
        let board = Board::from_fen("2b1kb1r/r2p1ppp/ppn2q2/Q1P1pP1P/2P5/4P3/P2P1K2/RNB2nNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1095);
    }

    #[test]
    fn gentest_1150() {
        let board = Board::from_fen("2b1kb1r/r4ppp/ppnp1q2/Q1P1pP1P/2P1P3/N7/P2P1K2/R1B2nNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1035);
    }

    #[test]
    fn gentest_1151() {
        let board = Board::from_fen("2b1kb1r/r4ppp/p1np4/QpP1pP1P/2P1P2q/N4K2/P2P4/R1B2nNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1108);
    }

    #[test]
    fn gentest_1152() {
        let board = Board::from_fen("2b1kb1r/r4ppp/p1n5/1pPppP1P/Q1P1P2R/N4K2/P2P4/R1B2nN1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1008);
    }

    #[test]
    fn gentest_1153() {
        let board = Board::from_fen("2b1kb1r/r5pp/p1n2p2/2PppP1P/Q1p1P2R/N4K2/PB1P4/R4nN1 w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1097);
    }

    #[test]
    fn gentest_1154() {
        let board = Board::from_fen("4kb1r/rb4pp/p1n2p2/2PppP1P/Q1pBP1R1/N4K2/P2P4/R4nN1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 736);
    }

    #[test]
    fn gentest_1155() {
        let board = Board::from_fen("4k2r/rb2b2p/p1n2pp1/2PppP1P/Q1pBP1R1/N4K2/P2P4/3R1nN1 w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1018);
    }

    #[test]
    fn gentest_1156() {
        let board = Board::from_fen("4k1r1/rb2b2p/p1n2pp1/2PppP1P/Q1pBP1R1/N7/P2PK3/3R1nN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 995);
    }

    #[test]
    fn gentest_1157() {
        let board = Board::from_fen("3k4/rb2b1rp/p1n2pp1/2PppP1P/Q1p1P1R1/N7/P2PKB2/3R1nN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1055);
    }

    #[test]
    fn gentest_1158() {
        let board = Board::from_fen("2bk4/r3b1rp/p1n2pp1/2PppP1P/Q1p1P3/N5R1/P2P1B2/3R1KN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1150);
    }

    #[test]
    fn gentest_1159() {
        let board = Board::from_fen("2bk1b2/r3r2p/p1n2pp1/2PppP1P/Q1p1P3/NR6/P2P1B2/3R1KN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1395);
    }

    #[test]
    fn gentest_1160() {
        let board = Board::from_fen("2bkrb2/r6p/p1n2pp1/2PppP1P/Q1p1P2B/N2R4/P2P4/3R1KN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1354);
    }

    #[test]
    fn gentest_1161() {
        let board = Board::from_fen("2bkrb2/3r4/p1n2ppp/2PppP1P/Q1p1P2B/N2R1N2/P2P4/3R1K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1165);
    }

    #[test]
    fn gentest_1162() {
        let board = Board::from_fen("2bkrb2/5r2/p1n2ppp/2PppP1P/Q1p1P2B/NR3N2/P2P4/1R3K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1490);
    }

    #[test]
    fn gentest_1163() {
        let board = Board::from_fen("2b1rb2/3k1r2/Q1n2ppp/2P1pP1P/2p1p2B/NR3N2/P2P4/1R3K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1152);
    }

    #[test]
    fn gentest_1164() {
        let board = Board::from_fen("2b1rb2/3k1r2/Q4ppp/2P1pPBP/1np1p3/NR3N2/P2P4/1R2K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1167);
    }

    #[test]
    fn gentest_1165() {
        let board = Board::from_fen("2b1rb2/3kr3/n4pPp/2P1p1BP/2p1p3/NR3N2/P2P4/1R2K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 655);
    }

    #[test]
    fn gentest_1166() {
        let board = Board::from_fen("2b1rb2/3k3r/n4BPp/1RP1p2P/2p1p3/N4N2/P2P4/1R2K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 794);
    }

    #[test]
    fn gentest_1167() {
        let board = Board::from_fen("2b2b2/2nkr2r/5BPp/1RP1p2P/2p1p3/N4N2/PR1P4/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 732);
    }

    #[test]
    fn gentest_1168() {
        let board = Board::from_fen("2b1rb2/2nk3P/7p/1RP1B2P/2p1p3/N4N2/PR1P4/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 831);
    }

    #[test]
    fn gentest_1169() {
        let board = Board::from_fen("2b1rb2/2nk3P/7p/2P1B2P/2p1p3/NR3N2/PR1P4/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 853);
    }

    #[test]
    fn gentest_1170() {
        let board = Board::from_fen("2b1rb2/3k3P/4n2p/2P1B2P/2N1p3/1R6/PR1P3N/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 838);
    }

    #[test]
    fn gentest_1171() {
        let board = Board::from_fen("1bb1r3/3k3P/4n2p/2P1B2P/2N1p3/8/PR1P3N/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 848);
    }

    #[test]
    fn gentest_1172() {
        let board = Board::from_fen("1bb5/3kr2P/4n2p/2P4P/2NBp3/P7/1R1P3N/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 877);
    }

    #[test]
    fn gentest_1173() {
        let board = Board::from_fen("1bb4B/3kr3/7p/2P4P/2N1p3/Pn6/1R1P3N/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 595);
    }

    #[test]
    fn gentest_1174() {
        let board = Board::from_fen("2b4B/b2kr3/7p/N1P4P/4p3/Pn6/R2P3N/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 523);
    }

    #[test]
    fn gentest_1175() {
        let board = Board::from_fen("2b4B/bN1k3r/7p/2P4P/4p3/P7/R2P3N/n3K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 370);
        assert_eq!(perft(&board, 3, &PRECOMP), 8685);
    }

    #[test]
    fn gentest_1176() {
        let board = Board::from_fen("2b5/bN1k3r/7p/2P4P/4p3/PnB5/R2P3N/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 466);
    }

    #[test]
    fn gentest_1177() {
        let board = Board::from_fen("2k5/bb5r/7p/B1P4P/4p3/Pn6/R2P3N/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 427);
        assert_eq!(perft(&board, 3, &PRECOMP), 7782);
    }

    #[test]
    fn gentest_1178() {
        let board = Board::from_fen("1k6/bb5r/7p/B1P4P/4p3/Pn6/3PK2N/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 469);
    }

    #[test]
    fn gentest_1179() {
        let board = Board::from_fen("bk6/b6r/7p/B1P4P/4p3/P7/3nK2N/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 540);
    }

    #[test]
    fn gentest_1180() {
        let board = Board::from_fen("bk6/b5r1/7p/2P4P/4p3/P1B5/3K3N/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 615);
    }

    #[test]
    fn gentest_1181() {
        let board = Board::from_fen("bk6/b7/7p/2P4P/1B2p3/P7/3K3N/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 244);
        assert_eq!(perft(&board, 3, &PRECOMP), 3123);
    }

    #[test]
    fn gentest_1182() {
        let board = Board::from_fen("bk6/b7/7p/B1P4P/4p1r1/P7/7N/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 271);
        assert_eq!(perft(&board, 3, &PRECOMP), 5302);
    }

    #[test]
    fn gentest_1183() {
        let board = Board::from_fen("1k6/b7/2b4p/2P4P/4p3/P7/7N/3KB1r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 188);
        assert_eq!(perft(&board, 3, &PRECOMP), 2414);
    }

    #[test]
    fn gentest_1184() {
        let board = Board::from_fen("bk6/b7/7p/2P4P/4p3/P3K3/7N/4B1r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 251);
        assert_eq!(perft(&board, 3, &PRECOMP), 5009);
    }

    #[test]
    fn gentest_1185() {
        let board = Board::from_fen("bk6/b7/7p/2P4P/3Kp3/P7/7N/5r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 165);
        assert_eq!(perft(&board, 3, &PRECOMP), 1505);
    }

    #[test]
    fn gentest_1186() {
        let board = Board::from_fen("bk3r2/b7/7p/2P4P/P3p3/2K5/7N/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 237);
        assert_eq!(perft(&board, 3, &PRECOMP), 5218);
    }

    #[test]
    fn gentest_1187() {
        let board = Board::from_fen("b1k5/b7/5r1p/2P4P/P3p1N1/2K5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 358);
        assert_eq!(perft(&board, 3, &PRECOMP), 4867);
    }

    #[test]
    fn gentest_1188() {
        let board = Board::from_fen("b1k5/b7/2P1r2N/7P/P3p3/2K5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 232);
        assert_eq!(perft(&board, 3, &PRECOMP), 5195);
    }

    #[test]
    fn gentest_1189() {
        let board = Board::from_fen("b2k4/b3r3/2P4N/7P/PK2p3/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 229);
        assert_eq!(perft(&board, 3, &PRECOMP), 2598);
    }

    #[test]
    fn gentest_1190() {
        let board = Board::from_fen("b7/b1Pkr3/7N/7P/P3p3/K7/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 282);
        assert_eq!(perft(&board, 3, &PRECOMP), 5982);
    }

    #[test]
    fn gentest_1191() {
        let board = Board::from_fen("b7/b1k1r3/7N/7P/P3p3/8/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 332);
        assert_eq!(perft(&board, 3, &PRECOMP), 3878);
    }

    #[test]
    fn gentest_1192() {
        let board = Board::from_fen("b7/b3rN2/1k6/7P/P3p3/8/2K5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 250);
        assert_eq!(perft(&board, 3, &PRECOMP), 5074);
    }

    #[test]
    fn gentest_1193() {
        let board = Board::from_fen("b7/b3r3/1k5N/7P/P3p3/8/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 225);
        assert_eq!(perft(&board, 3, &PRECOMP), 2666);
    }

    #[test]
    fn gentest_1194() {
        let board = Board::from_fen("b7/b2r4/1k5N/7P/P3p3/2K5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 233);
        assert_eq!(perft(&board, 3, &PRECOMP), 5235);
    }

    #[test]
    fn gentest_1195() {
        let board = Board::from_fen("b7/b3r3/1k5N/7P/P3p3/8/3K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 224);
        assert_eq!(perft(&board, 3, &PRECOMP), 2492);
    }

    #[test]
    fn gentest_1196() {
        let board = Board::from_fen("b7/b4N2/1k6/4r2P/P3p3/8/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 276);
        assert_eq!(perft(&board, 3, &PRECOMP), 5782);
    }

    #[test]
    fn gentest_1197() {
        let board = Board::from_fen("b7/b4N2/1k6/7P/P3p3/3rK3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 75);
        assert_eq!(perft(&board, 3, &PRECOMP), 831);
    }

    #[test]
    fn gentest_1198() {
        let board = Board::from_fen("b7/b4N2/8/2k4P/P3p3/3r4/5K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 284);
        assert_eq!(perft(&board, 3, &PRECOMP), 6992);
    }

    #[test]
    fn gentest_1199() {
        let board = Board::from_fen("bb1N4/8/1k6/7P/P3p3/3r4/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 305);
        assert_eq!(perft(&board, 3, &PRECOMP), 3171);
    }

    #[test]
    fn gentest_1200() {
        let board = Board::from_fen("bb3N2/8/1k6/7P/P3p3/r7/5K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 273);
        assert_eq!(perft(&board, 3, &PRECOMP), 6814);
    }

    #[test]
    fn gentest_1201() {
        let board = Board::from_fen("b4N2/8/1k6/7P/P4b2/r3p3/8/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 158);
        assert_eq!(perft(&board, 3, &PRECOMP), 1252);
    }

    #[test]
    fn gentest_1202() {
        let board = Board::from_fen("b4N2/1k6/7P/8/P4b2/r3p3/6K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 186);
        assert_eq!(perft(&board, 3, &PRECOMP), 4388);
    }

    #[test]
    fn gentest_1203() {
        let board = Board::from_fen("b4N2/1k6/7P/P7/5b2/3r4/4p1K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 284);
        assert_eq!(perft(&board, 3, &PRECOMP), 2423);
    }

    #[test]
    fn gentest_1204() {
        let board = Board::from_fen("b7/k7/4N2P/P7/5b2/3r4/4pK2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 449);
    }

    #[test]
    fn gentest_1205() {
        let board = Board::from_fen("8/k7/2b4P/P1N5/5b2/r7/4pK2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 499);
        assert_eq!(perft(&board, 3, &PRECOMP), 5077);
    }

    #[test]
    fn gentest_1206() {
        let board = Board::from_fen("8/k7/7P/Pb6/3N1b2/r7/4pK2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 429);
    }

    #[test]
    fn gentest_1207() {
        let board = Board::from_fen("k7/8/7P/rb6/5b2/5N2/4pK2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 359);
        assert_eq!(perft(&board, 3, &PRECOMP), 3549);
    }

    #[test]
    fn gentest_1208() {
        let board = Board::from_fen("k7/8/7P/rb6/8/4b3/4p2N/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 3397);
    }

    #[test]
    fn gentest_1209() {
        let board = Board::from_fen("k7/8/1b5P/1b6/8/r7/4p3/4KN2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 198);
        assert_eq!(perft(&board, 3, &PRECOMP), 1387);
    }

    #[test]
    fn gentest_1210() {
        let board = Board::from_fen("k7/8/1b5P/rb6/4N3/8/4p3/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 228);
        assert_eq!(perft(&board, 3, &PRECOMP), 6180);
    }

    #[test]
    fn gentest_1211() {
        let board = Board::from_fen("k7/8/bb5P/8/4N3/r7/3Kp3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 335);
        assert_eq!(perft(&board, 3, &PRECOMP), 3365);
    }

    #[test]
    fn gentest_1212() {
        let board = Board::from_fen("k7/b6P/b7/6N1/8/r7/3Kp3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 302);
        assert_eq!(perft(&board, 3, &PRECOMP), 8022);
    }

    #[test]
    fn gentest_1213() {
        let board = Board::from_fen("k7/bb5P/4N3/8/8/r7/3Kp3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 406);
        assert_eq!(perft(&board, 3, &PRECOMP), 5336);
    }

    #[test]
    fn gentest_1214() {
        let board = Board::from_fen("k7/1b6/4N3/8/8/r1B5/3Kpb2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 550);
    }

    #[test]
    fn gentest_1215() {
        let board = Board::from_fen("1k6/1bN5/8/8/3b4/r1B5/3Kp3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 548);
        assert_eq!(perft(&board, 3, &PRECOMP), 7834);
    }

    #[test]
    fn gentest_1216() {
        let board = Board::from_fen("1k6/1bN5/8/8/1B1b4/6r1/4p3/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 575);
    }

    #[test]
    fn gentest_1217() {
        let board = Board::from_fen("1k6/1bN5/3B4/8/8/6r1/4p3/b3K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 364);
        assert_eq!(perft(&board, 3, &PRECOMP), 5917);
    }

    #[test]
    fn gentest_1218() {
        let board = Board::from_fen("1k3B2/1bN5/8/6r1/8/8/4K3/b7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 581);
    }

    #[test]
    fn gentest_1219() {
        let board = Board::from_fen("1k3B2/2N5/2b5/8/8/6r1/5K2/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 556);
        assert_eq!(perft(&board, 3, &PRECOMP), 8863);
    }

    #[test]
    fn gentest_1220() {
        let board = Board::from_fen("1k6/2N5/2b5/8/8/B3r3/5K2/b7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 547);
    }

    #[test]
    fn gentest_1221() {
        let board = Board::from_fen("1k2N3/8/2b5/7r/8/B7/5K2/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 569);
        assert_eq!(perft(&board, 3, &PRECOMP), 9037);
    }

    #[test]
    fn gentest_1222() {
        let board = Board::from_fen("2k1N3/8/2b5/2B4r/8/8/8/b3K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 601);
    }

    #[test]
    fn gentest_1223() {
        let board = Board::from_fen("2k1N3/6b1/2b5/2B5/8/8/4K3/7r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 645);
    }

    #[test]
    fn gentest_1224() {
        let board = Board::from_fen("2k5/6br/2bN4/2B5/8/3K4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 2312);
    }

    #[test]
    fn gentest_1225() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1226() {
        let board = Board::from_fen("rnbqkbnr/1ppppppp/8/p7/3P4/8/PPPQPPPP/RNB1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 608);
    }

    #[test]
    fn gentest_1227() {
        let board = Board::from_fen("1nbqkb1r/1ppppppp/r4n2/p7/3P4/7P/PPPQPPP1/RNB1KBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 726);
    }

    #[test]
    fn gentest_1228() {
        let board = Board::from_fen("1nbqkb1r/2pppppp/r4n2/pp6/2PP4/7P/PP2PPP1/RNBQKBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 803);
    }

    #[test]
    fn gentest_1229() {
        let board = Board::from_fen("rnbqkb1r/2p1pppp/5n2/pp1p2B1/2PP4/7P/PP2PPP1/RN1QKBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1051);
    }

    #[test]
    fn gentest_1230() {
        let board = Board::from_fen("rn1qkb1r/1bp1pppp/5n2/pp1p2B1/2PP4/5P1P/PP1QP1P1/RN2KBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 924);
    }

    #[test]
    fn gentest_1231() {
        let board = Board::from_fen("rn1qkb1r/1bp2ppp/8/pp1pp2n/2PP1B2/5P1P/PP1QP1P1/RN2KBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1254);
    }

    #[test]
    fn gentest_1232() {
        let board = Board::from_fen("1n1qkb1r/1bp2ppp/r7/pp1pp2n/2PP1B2/1P3P1P/P3P1P1/RNQ1KBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1442);
    }

    #[test]
    fn gentest_1233() {
        let board = Board::from_fen("1n1qkb1r/1bp2ppp/r7/1p2B2n/p1pP4/1P3P1P/P3P1P1/RNQ1KBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1764);
    }

    #[test]
    fn gentest_1234() {
        let board = Board::from_fen("1n2kb1r/1bB2ppp/r7/1p5n/p1pP3q/1P3P1P/P3P1P1/RNQK1BNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1700);
    }

    #[test]
    fn gentest_1235() {
        let board = Board::from_fen("1n2kbr1/1bB2p1p/r5p1/1p5n/pPpP3q/5P1P/P3P1P1/RNQK1BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1462);
    }

    #[test]
    fn gentest_1236() {
        let board = Board::from_fen("1n2kbr1/1bB2p1p/r5pQ/1p6/pPpP1n1q/5P1P/P3P1P1/RNK2BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1362);
    }

    #[test]
    fn gentest_1237() {
        let board = Board::from_fen("1n2kbr1/1bB4p/r3p3/1p4p1/pPpP1n1q/5P1P/P3P1P1/RNK2BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 949);
    }

    #[test]
    fn gentest_1238() {
        let board = Board::from_fen("1n2kbr1/1b5p/1B1rp3/1p4p1/pPpP1n1q/5P1P/P3P1PR/RNK2BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 815);
    }

    #[test]
    fn gentest_1239() {
        let board = Board::from_fen("1n2kbr1/1b6/1B1r4/1p2p1pp/pPpP1n1q/P4P1P/4P1PR/RNK2BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 854);
    }

    #[test]
    fn gentest_1240() {
        let board = Board::from_fen("1n2kbr1/1b6/3r4/1pB1p1pp/pPpP1n2/P4PPq/4P2R/RNK2BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 1159);
    }

    #[test]
    fn gentest_1241() {
        let board = Board::from_fen("4kbr1/1b1n4/3rn3/1pB1p1pp/pPpP4/P4PPN/4P2R/RNK2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 858);
    }

    #[test]
    fn gentest_1242() {
        let board = Board::from_fen("4kbr1/1b1n4/1B2n3/1p1rp1pp/pPpP4/P4PP1/4PN1R/RNK2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 988);
    }

    #[test]
    fn gentest_1243() {
        let board = Board::from_fen("4k1r1/1b1n4/1B2n3/1p1r2pp/pbpp4/P3PPP1/5N1R/RNK2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1339);
    }

    #[test]
    fn gentest_1244() {
        let board = Board::from_fen("4k1r1/1b1n4/1B2n3/1p1r2p1/pbpp3p/P3PPPR/3N1N2/R1K2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1283);
    }

    #[test]
    fn gentest_1245() {
        let board = Board::from_fen("4k1r1/1b1nb3/1B2n3/1p1r2p1/p1p4p/P3pPP1/3N1N2/R1K2B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1517);
    }

    #[test]
    fn gentest_1246() {
        let board = Board::from_fen("4k1r1/1b1n4/1B1bn3/1p1r2p1/p1p2P1p/P3p1P1/3N1N2/R1K2BR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1577);
    }

    #[test]
    fn gentest_1247() {
        let board = Board::from_fen("4k1r1/3n4/1Bb1n3/1p1r2p1/p1p2P1p/b3p1P1/2KN1N2/R4BR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1685);
    }

    #[test]
    fn gentest_1248() {
        let board = Board::from_fen("4k1r1/8/1Bb1n3/1pnr2p1/p1p2P1p/b3pNP1/5N2/RK3BR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1389);
    }

    #[test]
    fn gentest_1249() {
        let board = Board::from_fen("b3k1r1/8/1B2n3/1pn1r1p1/p1p2P1N/b3p1P1/5N2/RK3BR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1167);
    }

    #[test]
    fn gentest_1250() {
        let board = Board::from_fen("b3k1r1/6n1/1B6/1pn1N1p1/p1p2P2/b3p1P1/5N2/RK3BR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 970);
    }

    #[test]
    fn gentest_1251() {
        let board = Board::from_fen("4k1r1/6n1/1B6/2n1N1p1/ppp1bP2/b3p1P1/8/RK3BR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 2365);
    }

    #[test]
    fn gentest_1252() {
        let board = Board::from_fen("4k1r1/8/8/2B1Nnp1/ppp1bP2/b3p1P1/K7/R4BR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 793);
    }

    #[test]
    fn gentest_1253() {
        let board = Board::from_fen("4k1r1/8/2N5/2B2np1/ppp2P2/4p1P1/Kb4b1/R4BR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1035);
    }

    #[test]
    fn gentest_1254() {
        let board = Board::from_fen("4k1r1/N7/8/6p1/pBp2P1n/4p1P1/Kb4b1/R4BR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 911);
    }

    #[test]
    fn gentest_1255() {
        let board = Board::from_fen("b1N1k1r1/8/8/5np1/pBp2P2/4p1P1/Kb6/R4BR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 930);
    }

    #[test]
    fn gentest_1256() {
        let board = Board::from_fen("b3k1r1/8/1N6/5np1/pBp2P2/4p1P1/K5B1/b5R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1084);
    }

    #[test]
    fn gentest_1257() {
        let board = Board::from_fen("b3k3/6b1/1N4r1/5np1/pBp2P2/4p1P1/6B1/1K4R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1113);
    }

    #[test]
    fn gentest_1258() {
        let board = Board::from_fen("b3k3/8/1N4r1/4bnp1/pBp2P2/4p1PB/8/1K1R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1389);
    }

    #[test]
    fn gentest_1259() {
        let board = Board::from_fen("b1N1k3/8/2r5/5np1/pBp2P2/2b1p1PB/8/1K1R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 987);
    }

    #[test]
    fn gentest_1260() {
        let board = Board::from_fen("b1N1k3/8/2r5/5np1/2p2P2/p1B1p1PB/8/2KR4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 814);
    }

    #[test]
    fn gentest_1261() {
        let board = Board::from_fen("b1N1k2B/8/2r5/8/2p2p1n/p3p1PB/8/2KR4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 658);
    }

    #[test]
    fn gentest_1262() {
        let board = Board::from_fen("b1N1k3/8/2r5/4B3/2p2P1n/4p2B/p7/2KR4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 701);
    }

    #[test]
    fn gentest_1263() {
        let board = Board::from_fen("b1N1k3/8/8/6r1/2pB1P1n/4p2B/p7/2KR4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 945);
    }

    #[test]
    fn gentest_1264() {
        let board = Board::from_fen("b3k3/8/1N6/2r5/2p2P1n/4B2B/p7/2KR4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 876);
    }

    #[test]
    fn gentest_1265() {
        let board = Board::from_fen("b1r1k3/8/1N6/8/2p2P1n/4B2B/1K6/n2R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 818);
    }

    #[test]
    fn gentest_1266() {
        let board = Board::from_fen("2r1k3/8/1N6/8/2pB1P1n/7B/1K6/n3R2b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 167);
        assert_eq!(perft(&board, 3, &PRECOMP), 3503);
    }

    #[test]
    fn gentest_1267() {
        let board = Board::from_fen("2rk4/8/1N6/4B3/2p2P1n/1n5B/1K6/4R2b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 814);
    }

    #[test]
    fn gentest_1268() {
        let board = Board::from_fen("3k4/2r5/8/8/N1p2P1n/1n5B/1K6/4R2b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 808);
    }

    #[test]
    fn gentest_1269() {
        let board = Board::from_fen("3k4/2r5/6n1/8/N1pn1PB1/8/1K6/4R2b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1025);
    }

    #[test]
    fn gentest_1270() {
        let board = Board::from_fen("3k4/3r4/6n1/5P2/N1pn2B1/8/1K6/3R3b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 853);
    }

    #[test]
    fn gentest_1271() {
        let board = Board::from_fen("3k4/3r4/2n3n1/5P2/2p3B1/2N2b2/1K6/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 929);
    }

    #[test]
    fn gentest_1272() {
        let board = Board::from_fen("8/3rk3/2n3n1/5P2/2p5/2N5/1K4B1/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 862);
    }

    #[test]
    fn gentest_1273() {
        let board = Board::from_fen("3n4/3rk3/8/5P2/2p4n/2N5/6B1/1K1R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 596);
    }

    #[test]
    fn gentest_1274() {
        let board = Board::from_fen("3n4/r3k3/8/5P2/2p4n/2N5/3R2B1/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 695);
    }

    #[test]
    fn gentest_1275() {
        let board = Board::from_fen("8/3rk3/4n3/5P2/2p4n/2N5/3R4/2K2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 767);
    }

    #[test]
    fn gentest_1276() {
        let board = Board::from_fen("8/3r1k2/4n3/5P2/2p4n/2N5/6R1/1K3B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 746);
    }

    #[test]
    fn gentest_1277() {
        let board = Board::from_fen("3n4/5k2/8/3r1PR1/2p4n/2N5/8/1K3B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 535);
    }

    #[test]
    fn gentest_1278() {
        let board = Board::from_fen("3n4/5k2/8/3r1n1R/2p5/2NB4/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 744);
    }

    #[test]
    fn gentest_1279() {
        let board = Board::from_fen("3n2k1/8/3r4/5n1R/2p5/2N5/8/1K3B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 630);
    }

    #[test]
    fn gentest_1280() {
        let board = Board::from_fen("3n2k1/8/7r/5n2/2p5/2N5/2K4R/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 722);
    }

    #[test]
    fn gentest_1281() {
        let board = Board::from_fen("6kr/1n6/8/5n2/2p5/2N5/7R/2K2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 625);
    }

    #[test]
    fn gentest_1282() {
        let board = Board::from_fen("6kr/1n4n1/8/8/2p5/2N5/6R1/1K3B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 389);
        assert_eq!(perft(&board, 3, &PRECOMP), 7095);
    }

    #[test]
    fn gentest_1283() {
        let board = Board::from_fen("5k1r/1n6/8/7n/2B5/2N5/6R1/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 470);
    }

    #[test]
    fn gentest_1284() {
        let board = Board::from_fen("5kr1/1n6/8/7n/8/2N5/4B3/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 385);
        assert_eq!(perft(&board, 3, &PRECOMP), 8527);
    }

    #[test]
    fn gentest_1285() {
        let board = Board::from_fen("5kr1/6n1/B2n4/8/8/2N5/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 301);
        assert_eq!(perft(&board, 3, &PRECOMP), 5493);
    }

    #[test]
    fn gentest_1286() {
        let board = Board::from_fen("4nkr1/6n1/B7/8/4N3/8/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 207);
        assert_eq!(perft(&board, 3, &PRECOMP), 3396);
    }

    #[test]
    fn gentest_1287() {
        let board = Board::from_fen("5kr1/8/B3nn2/2N5/8/8/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 527);
    }

    #[test]
    fn gentest_1288() {
        let board = Board::from_fen("3n1kr1/3N4/5n2/1B6/8/8/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 100);
        assert_eq!(perft(&board, 3, &PRECOMP), 2057);
    }

    #[test]
    fn gentest_1289() {
        let board = Board::from_fen("6r1/4kn2/5n2/1BN5/8/8/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 755);
    }

    #[test]
    fn gentest_1290() {
        let board = Board::from_fen("6r1/4k3/3nNn2/8/8/8/1K2B3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 753);
    }

    #[test]
    fn gentest_1291() {
        let board = Board::from_fen("6r1/3k1n2/4Nn2/8/8/8/1K6/3B4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 642);
    }

    #[test]
    fn gentest_1292() {
        let board = Board::from_fen("2k2Nr1/5n2/5n2/8/8/8/1KB5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 495);
    }

    #[test]
    fn gentest_1293() {
        let board = Board::from_fen("2k1nr2/5n2/8/8/8/K7/2B5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 223);
        assert_eq!(perft(&board, 3, &PRECOMP), 3095);
    }

    #[test]
    fn gentest_1294() {
        let board = Board::from_fen("4nr2/2k2n2/6B1/8/K7/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 248);
        assert_eq!(perft(&board, 3, &PRECOMP), 5180);
    }

    #[test]
    fn gentest_1295() {
        let board = Board::from_fen("3knr2/8/7n/7B/K7/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 239);
        assert_eq!(perft(&board, 3, &PRECOMP), 2953);
    }

    #[test]
    fn gentest_1296() {
        let board = Board::from_fen("2k1nr2/8/7n/7B/1K6/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 305);
        assert_eq!(perft(&board, 3, &PRECOMP), 6550);
    }

    #[test]
    fn gentest_1297() {
        let board = Board::from_fen("2k1n1r1/8/8/8/1K4n1/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 1015);
    }

    #[test]
    fn gentest_1298() {
        let board = Board::from_fen("2k3r1/6n1/8/8/1K4n1/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 149);
        assert_eq!(perft(&board, 3, &PRECOMP), 3292);
    }

    #[test]
    fn gentest_1299() {
        let board = Board::from_fen("2k3r1/6n1/8/1K6/2n5/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 542);
    }

    #[test]
    fn gentest_1300() {
        let board = Board::from_fen("2k3r1/6n1/1n6/1K6/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 2123);
        assert_eq!(perft(&board, 4, &PRECOMP), 9690);
    }

    #[test]
    fn gentest_1301() {
        let board = Board::from_fen("2k3r1/6n1/1n6/8/2K5/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 126);
        assert_eq!(perft(&board, 3, &PRECOMP), 767);
    }

    #[test]
    fn gentest_1302() {
        let board = Board::from_fen("2k4r/6n1/1K6/8/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 1988);
        assert_eq!(perft(&board, 4, &PRECOMP), 9589);
    }

    #[test]
    fn gentest_1303() {
        let board = Board::from_fen("2k5/8/8/1K3n2/8/7r/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 210);
        assert_eq!(perft(&board, 3, &PRECOMP), 992);
    }

    #[test]
    fn gentest_1304() {
        let board = Board::from_fen("2k5/8/K2n4/8/8/7r/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 71);
        assert_eq!(perft(&board, 3, &PRECOMP), 1724);
        assert_eq!(perft(&board, 4, &PRECOMP), 6924);
    }

    #[test]
    fn gentest_1305() {
        let board = Board::from_fen("2k5/5n2/8/K7/8/5r2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 544);
    }

    #[test]
    fn gentest_1306() {
        let board = Board::from_fen("2k5/5n2/8/8/2K5/3r4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 110);
        assert_eq!(perft(&board, 3, &PRECOMP), 2461);
    }

    #[test]
    fn gentest_1307() {
        let board = Board::from_fen("2k4n/8/8/8/1K6/7r/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 100);
        assert_eq!(perft(&board, 3, &PRECOMP), 540);
    }

    #[test]
    fn gentest_1308() {
        let board = Board::from_fen("2k4n/8/8/8/2K5/8/8/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 144);
        assert_eq!(perft(&board, 3, &PRECOMP), 3055);
    }

    #[test]
    fn gentest_1309() {
        let board = Board::from_fen("2k4n/8/8/1K6/8/8/8/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 162);
        assert_eq!(perft(&board, 3, &PRECOMP), 890);
    }

    #[test]
    fn gentest_1310() {
        let board = Board::from_fen("2k5/5n2/8/1K6/8/8/8/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 174);
        assert_eq!(perft(&board, 3, &PRECOMP), 4089);
    }

    #[test]
    fn gentest_1311() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1312() {
        let board = Board::from_fen("rnbqkb1r/pppppppp/5n2/8/4P3/2P5/PP1P1PPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 679);
    }

    #[test]
    fn gentest_1313() {
        let board = Board::from_fen("r1bqkb1r/pppppp1p/2n2np1/8/4P3/2P5/PP1PKPPP/RNBQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 624);
    }

    #[test]
    fn gentest_1314() {
        let board = Board::from_fen("r1bqkb1r/pppppp1p/2n2n2/6p1/4P3/2PP1K2/PP3PPP/RNBQ1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 650);
    }

    #[test]
    fn gentest_1315() {
        let board = Board::from_fen("r1bqkb1r/pppppp1p/2n5/6p1/4PB2/2PP1Kn1/PP3PPP/RN1Q1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 952);
    }

    #[test]
    fn gentest_1316() {
        let board = Board::from_fen("r1bqkb1r/pppppp1p/2n5/6B1/4P3/2PP1K2/PP3PPP/RN1Q1BNn b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 740);
    }

    #[test]
    fn gentest_1317() {
        let board = Board::from_fen("r1b1kb1r/ppp1pp1p/2nq4/3p2B1/2P1P3/3P1K2/PP3PPP/RN1Q1BNn w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1592);
    }

    #[test]
    fn gentest_1318() {
        let board = Board::from_fen("r1b1kb1r/ppp1p2p/2nq4/3p1pB1/2P1P2P/3P1K2/PP1N1PP1/R2Q1BNn b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1268);
    }

    #[test]
    fn gentest_1319() {
        let board = Board::from_fen("r1bqkb1r/ppp1p2p/2n5/3p1PB1/2P4P/3P1K2/PP1N1nP1/R2Q1BN1 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1142);
    }

    #[test]
    fn gentest_1320() {
        let board = Board::from_fen("r1bqkb1r/1pp1p2p/p1n5/3p1PB1/2P4P/1N1P1K2/PP2BnP1/R2Q2N1 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1083);
    }

    #[test]
    fn gentest_1321() {
        let board = Board::from_fen("r1b1kb1r/1ppqp2p/p1n5/5PBP/2Pp4/1N1P1K2/PP2BnP1/R2Q2N1 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 989);
    }

    #[test]
    fn gentest_1322() {
        let board = Board::from_fen("2b1kb1r/rppqp2p/p1n5/5P1P/2Pp4/1N1P1KB1/PP2BnP1/R2Q2N1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 738);
    }

    #[test]
    fn gentest_1323() {
        let board = Board::from_fen("2b1kb1r/r1p1p2p/p1n5/1p3q1P/2Pp1B2/1N1P1K2/PP2BnP1/R2Q2N1 w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1023);
    }

    #[test]
    fn gentest_1324() {
        let board = Board::from_fen("2b1kb1r/r1p4p/p1n1p3/1p3qPP/2Pp1B2/1N1P1K2/PP2Bn2/R2Q2N1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 947);
    }

    #[test]
    fn gentest_1325() {
        let board = Board::from_fen("2b1kb1r/r1p4p/p1n1p3/1p3qPP/2Pp1B2/1N1P2K1/PP2Bn2/R2Q2N1 w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1564);
    }

    #[test]
    fn gentest_1326() {
        let board = Board::from_fen("2b1kb1r/r1p4p/p1n1p3/1p4PP/2Pp1K2/PN1P4/1P2Bn2/R2Q2N1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 776);
    }

    #[test]
    fn gentest_1327() {
        let board = Board::from_fen("2b2b1r/r1p1k2p/p1n1p3/1p4PP/2Pp1K2/PN1n4/1P2B3/RQ4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 164);
        assert_eq!(perft(&board, 3, &PRECOMP), 4731);
    }

    #[test]
    fn gentest_1328() {
        let board = Board::from_fen("2b2b1r/r1p4p/p1nkp3/1p4PP/2Pp4/PN1Q1K2/1P2B3/R5N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 757);
    }

    #[test]
    fn gentest_1329() {
        let board = Board::from_fen("2b2b1r/r1pk3p/p1n3Q1/1p2p1PP/2Pp4/PN3K2/1P2B3/R5N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 785);
    }

    #[test]
    fn gentest_1330() {
        let board = Board::from_fen("2b2b1r/r1pk3p/p5Q1/np2p1PP/2Pp4/PN3K2/RP6/5BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 898);
    }

    #[test]
    fn gentest_1331() {
        let board = Board::from_fen("2b2b1r/1r1k3p/p5Q1/npp1p1PP/2Pp4/PN3K2/RP2B3/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 612);
    }

    #[test]
    fn gentest_1332() {
        let board = Board::from_fen("2b4r/1r1kb2p/p1Q5/npp1p1PP/2Pp4/PN3K2/RP2B3/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 74);
        assert_eq!(perft(&board, 3, &PRECOMP), 1789);
    }

    #[test]
    fn gentest_1333() {
        let board = Board::from_fen("3k3r/1r2b2p/p7/npp1p1PP/2PpQ1b1/PN3K2/RP2B3/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 138);
        assert_eq!(perft(&board, 3, &PRECOMP), 5004);
    }

    #[test]
    fn gentest_1334() {
        let board = Board::from_fen("3k3r/1r5p/p4b2/npp1p1PP/2Pp4/PN3K1Q/RP2B3/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 740);
    }

    #[test]
    fn gentest_1335() {
        let board = Board::from_fen("7r/1rk4p/p7/npp1p1bP/2Pp4/PN3K2/RP2B1Q1/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 857);
    }

    #[test]
    fn gentest_1336() {
        let board = Board::from_fen("3k3r/1r5p/p6P/npp1p1b1/2Pp4/PN3K2/RP2B3/6NQ b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 648);
    }

    #[test]
    fn gentest_1337() {
        let board = Board::from_fen("3kr3/1r5p/p6P/npp1p3/2Pp1b2/P4K2/RP2B3/N5NQ w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 562);
    }

    #[test]
    fn gentest_1338() {
        let board = Board::from_fen("3kr3/1r5p/p6P/npp1p3/2PpK3/P3b3/RP6/N4BNQ b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 686);
    }

    #[test]
    fn gentest_1339() {
        let board = Board::from_fen("3kr3/6rp/p6P/npp1p3/2Pp4/P3bK2/RP6/N4BNQ w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 692);
    }

    #[test]
    fn gentest_1340() {
        let board = Board::from_fen("3kr3/4r2p/p6P/npp1p3/2Pp2K1/P3b3/RP2N3/N4B1Q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 825);
    }

    #[test]
    fn gentest_1341() {
        let board = Board::from_fen("3kr3/3r3p/p6P/npp1p3/2Pp2K1/P6Q/RP2Nb2/N4B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 793);
    }

    #[test]
    fn gentest_1342() {
        let board = Board::from_fen("3kr3/3r3p/p6P/npp1p3/1PPp2K1/P6Q/2R1N3/N4Bb1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 843);
    }

    #[test]
    fn gentest_1343() {
        let board = Board::from_fen("3k1r2/3r3p/p6P/1pp1p1K1/1Pnp4/P6Q/2R1N3/N4Bb1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1176);
    }

    #[test]
    fn gentest_1344() {
        let board = Board::from_fen("5r2/3rk2p/p6P/1pp1p1K1/1PnN4/P6Q/R7/N4Bb1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1530);
    }

    #[test]
    fn gentest_1345() {
        let board = Board::from_fen("4kr2/3r3p/p6P/1pp1p1K1/1Pnb4/P7/R5Q1/N4B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1122);
    }

    #[test]
    fn gentest_1346() {
        let board = Board::from_fen("4kr2/3r3p/7P/ppp1p1K1/1Pnb4/P7/6R1/N4B1Q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 853);
    }

    #[test]
    fn gentest_1347() {
        let board = Board::from_fen("4kr2/4r2p/7P/ppp5/1Pnbp1K1/P7/6R1/N4B1Q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1059);
    }

    #[test]
    fn gentest_1348() {
        let board = Board::from_fen("4kr2/4r2p/7P/ppp5/1Pn1p3/P1b3K1/3R4/N4B1Q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1237);
    }

    #[test]
    fn gentest_1349() {
        let board = Board::from_fen("4kr2/7p/7P/ppp5/1Pn1p1r1/P1b5/3R3K/N4B1Q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1055);
    }

    #[test]
    fn gentest_1350() {
        let board = Board::from_fen("4k3/5r1p/7P/pppR4/1Pn1p1r1/P1b5/2N4K/5B1Q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1195);
    }

    #[test]
    fn gentest_1351() {
        let board = Board::from_fen("4k3/5r1p/7P/pppR3r/1Pn1p3/P1b4K/2N5/5B1Q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 173);
        assert_eq!(perft(&board, 3, &PRECOMP), 4777);
    }

    #[test]
    fn gentest_1352() {
        let board = Board::from_fen("4k3/7p/5r1P/pppR3r/1Pn1Q3/P1b3K1/2N5/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 222);
        assert_eq!(perft(&board, 3, &PRECOMP), 7534);
    }

    #[test]
    fn gentest_1353() {
        let board = Board::from_fen("5k2/7Q/5r1P/pppR3r/1P6/P1b1n1K1/2N5/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1303);
    }

    #[test]
    fn gentest_1354() {
        let board = Board::from_fen("5k2/7Q/3R1r1P/1pp4r/1p6/P1b1n1KB/2N5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1087);
    }

    #[test]
    fn gentest_1355() {
        let board = Board::from_fen("5k2/2Q5/3R3P/1pp2r1r/1p6/P1b3KB/2N3n1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1024);
    }

    #[test]
    fn gentest_1356() {
        let board = Board::from_fen("5k2/4Q3/3R3P/1pp2r1r/8/Ppb3KB/2N3n1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 71);
        assert_eq!(perft(&board, 3, &PRECOMP), 2052);
    }

    #[test]
    fn gentest_1357() {
        let board = Board::from_fen("5rk1/8/3R3P/1pp1Q2r/8/Ppb3KB/2N3n1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1403);
    }

    #[test]
    fn gentest_1358() {
        let board = Board::from_fen("5rk1/8/7P/1p2Q2r/3N4/Ppb3KB/6n1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1117);
    }

    #[test]
    fn gentest_1359() {
        let board = Board::from_fen("5rk1/8/3r4/1p6/3NQ3/Ppb3KB/6n1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1344);
    }

    #[test]
    fn gentest_1360() {
        let board = Board::from_fen("5r1k/8/3rB3/1p6/3NQ3/Ppb5/6K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1183);
    }

    #[test]
    fn gentest_1361() {
        let board = Board::from_fen("5r2/6k1/3rB3/1p6/3N3Q/Pp6/1b4K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 987);
    }

    #[test]
    fn gentest_1362() {
        let board = Board::from_fen("8/6k1/3rBr2/Pp6/3N3Q/1p6/1b4K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 908);
    }

    #[test]
    fn gentest_1363() {
        let board = Board::from_fen("5k2/8/2r1Br2/Pp6/3N4/1p4Q1/1b4K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1060);
    }

    #[test]
    fn gentest_1364() {
        let board = Board::from_fen("8/4k3/2r1Br2/Pp4Q1/3N4/1p5K/1b6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 828);
    }

    #[test]
    fn gentest_1365() {
        let board = Board::from_fen("3k4/8/4rr2/Pp5Q/3N4/1p5K/1b6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 766);
    }

    #[test]
    fn gentest_1366() {
        let board = Board::from_fen("3k4/8/2N2r1Q/Pp6/8/1p5K/1b2r3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 116);
        assert_eq!(perft(&board, 3, &PRECOMP), 3315);
    }

    #[test]
    fn gentest_1367() {
        let board = Board::from_fen("8/2k2r2/2N5/Pp6/7Q/1p5K/1b2r3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 879);
    }

    #[test]
    fn gentest_1368() {
        let board = Board::from_fen("3Q4/1k2Nr2/8/Pp6/8/1p5K/1b2r3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 749);
    }

    #[test]
    fn gentest_1369() {
        let board = Board::from_fen("8/1k2Nr2/3Q4/Pp6/4r3/1p5K/1b6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 917);
    }

    #[test]
    fn gentest_1370() {
        let board = Board::from_fen("8/1k2N3/P3Q3/1p3r2/4r3/1p5K/1b6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 103);
        assert_eq!(perft(&board, 3, &PRECOMP), 2802);
    }

    #[test]
    fn gentest_1371() {
        let board = Board::from_fen("k7/4N3/P2Q4/1pr5/4r3/1p5K/1b6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 916);
    }

    #[test]
    fn gentest_1372() {
        let board = Board::from_fen("1kN5/8/P7/1pr5/4r3/1p5K/1b6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 286);
        assert_eq!(perft(&board, 3, &PRECOMP), 9389);
    }

    #[test]
    fn gentest_1373() {
        let board = Board::from_fen("1k6/2r5/P2N4/1p6/4r3/1p5K/8/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 406);
        assert_eq!(perft(&board, 3, &PRECOMP), 4261);
    }

    #[test]
    fn gentest_1374() {
        let board = Board::from_fen("1k6/8/P1r5/1p3N2/4r3/1p6/6K1/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 614);
    }

    #[test]
    fn gentest_1375() {
        let board = Board::from_fen("1k6/6N1/Pr6/1p4b1/4r3/1p6/6K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 442);
        assert_eq!(perft(&board, 3, &PRECOMP), 4515);
    }

    #[test]
    fn gentest_1376() {
        let board = Board::from_fen("1k6/6N1/Pr6/1p6/4rb2/1p6/8/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 292);
        assert_eq!(perft(&board, 3, &PRECOMP), 9290);
    }

    #[test]
    fn gentest_1377() {
        let board = Board::from_fen("1k6/6N1/Pr6/1p6/2r5/1p6/6Kb/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 334);
        assert_eq!(perft(&board, 3, &PRECOMP), 3241);
    }

    #[test]
    fn gentest_1378() {
        let board = Board::from_fen("1k6/8/P1r5/1p6/2r5/1p4N1/6Kb/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 335);
    }

    #[test]
    fn gentest_1379() {
        let board = Board::from_fen("8/2k5/P1r5/1p6/8/1p6/2r1N1Kb/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 212);
        assert_eq!(perft(&board, 3, &PRECOMP), 1862);
    }

    #[test]
    fn gentest_1380() {
        let board = Board::from_fen("8/2k5/P5r1/1p6/8/1p4N1/2r4b/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 201);
        assert_eq!(perft(&board, 3, &PRECOMP), 7217);
    }

    #[test]
    fn gentest_1381() {
        let board = Board::from_fen("8/P1k5/8/1p6/8/6r1/1pr4b/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 108);
        assert_eq!(perft(&board, 3, &PRECOMP), 1179);
    }

    #[test]
    fn gentest_1382() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1383() {
        let board = Board::from_fen("rnbqkbnr/pppppp1p/6p1/2P5/8/8/PP1PPPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 442);
        assert_eq!(perft(&board, 3, &PRECOMP), 9811);
    }

    #[test]
    fn gentest_1384() {
        let board = Board::from_fen("rnbqkb1r/1ppppp1p/6pn/p1P5/6P1/8/PP1PPP1P/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 457);
    }

    #[test]
    fn gentest_1385() {
        let board = Board::from_fen("rnbqkb1r/2pppp1p/1P4pn/p7/6P1/5N2/PP1PPP1P/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 567);
    }

    #[test]
    fn gentest_1386() {
        let board = Board::from_fen("rnbqkb1r/3pp2p/1Pp2ppn/p7/6P1/5N2/PPQPPP1P/RNB1KB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 720);
    }

    #[test]
    fn gentest_1387() {
        let board = Board::from_fen("rn1qkb1r/1b1pp2p/1PQ2ppn/p7/1P4P1/5N2/P2PPP1P/RNB1KB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 894);
    }

    #[test]
    fn gentest_1388() {
        let board = Board::from_fen("rn1qkb1r/3pp2p/bPQ3pn/p4pP1/1P6/5N2/P2PPP1P/RNB1KB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 889);
    }

    #[test]
    fn gentest_1389() {
        let board = Board::from_fen("rn1qkb1r/1b1pp2p/1PQ3pn/p4pP1/1P1P3P/5N2/P3PP2/RNB1KB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 919);
    }

    #[test]
    fn gentest_1390() {
        let board = Board::from_fen("rn2kb1r/1b1p3p/1PQ1p1pn/p4pq1/1P1PP2P/5N2/P4P2/RNB1KB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1678);
    }

    #[test]
    fn gentest_1391() {
        let board = Board::from_fen("rn2k2r/1b1p2bp/1PQ1p1Pn/p4pq1/1P1PP3/5N2/P4P2/RNB1KB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1924);
    }

    #[test]
    fn gentest_1392() {
        let board = Board::from_fen("1n2k2r/rb1p2bp/1PQ1p1Pn/p2P1p2/1P2P3/5Nq1/P4P2/RNB1KB1R w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 56);
        assert_eq!(perft(&board, 2, &PRECOMP), 2414);
    }

    #[test]
    fn gentest_1393() {
        let board = Board::from_fen("1n2k2r/rb1p2bp/1PQPp1Pn/5p2/pP2P3/5Nq1/P3KP2/RNB2B1R b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1898);
    }

    #[test]
    fn gentest_1394() {
        let board = Board::from_fen("1n2k3/rb1p2br/1PQPp1pn/5p2/pP2P3/5NP1/P3K3/RNB2B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1388);
    }

    #[test]
    fn gentest_1395() {
        let board = Board::from_fen("4k3/rb1p2br/nPQPp1pn/5p2/pP2PB2/5NP1/P3K3/RN3BR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1193);
    }

    #[test]
    fn gentest_1396() {
        let board = Board::from_fen("4k3/rb1p3r/nPQPp1p1/5P2/pP3Bn1/5NP1/P3K3/bN3BR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1603);
    }

    #[test]
    fn gentest_1397() {
        let board = Board::from_fen("2b1k3/r2p3r/nP1Pp1p1/5P2/pP3Bn1/3K1NP1/P7/bN3BR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1161);
    }

    #[test]
    fn gentest_1398() {
        let board = Board::from_fen("2b1k3/r1np3r/1P1P2p1/5p2/pP3Bn1/3K1NP1/P7/bN3B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1378);
    }

    #[test]
    fn gentest_1399() {
        let board = Board::from_fen("2b1k3/r1np3r/1P1P4/4Npp1/pP3Bn1/P2K2P1/8/bN3B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 961);
    }

    #[test]
    fn gentest_1400() {
        let board = Board::from_fen("2b1k3/r1np4/1P1P3n/4Npp1/pP6/P2KB1P1/7r/bN3B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 933);
    }

    #[test]
    fn gentest_1401() {
        let board = Board::from_fen("2b1k3/r1np4/1P1P3n/4N1p1/pP3p2/P2KB1P1/3N2Br/b6R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1263);
    }

    #[test]
    fn gentest_1402() {
        let board = Board::from_fen("2b5/r1nN1k2/1P1P4/6p1/pP3pn1/P2KB1P1/3N2Br/b6R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1632);
    }

    #[test]
    fn gentest_1403() {
        let board = Board::from_fen("2b5/r1nN1kb1/1P1P4/1P4p1/p3Kpn1/P3B1P1/3N2Br/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1330);
    }

    #[test]
    fn gentest_1404() {
        let board = Board::from_fen("2b3k1/r1nN2b1/1P1P4/1P4p1/p3Kp2/P3n1PB/3N3r/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1244);
    }

    #[test]
    fn gentest_1405() {
        let board = Board::from_fen("2b3k1/r1nN4/1P1P4/1P2b1p1/p4p2/P2Kn1P1/3N2Br/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1517);
    }

    #[test]
    fn gentest_1406() {
        let board = Board::from_fen("2b3k1/r1nN4/1P1P4/1P1nb1p1/p4p2/P2K2P1/3N2r1/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1109);
    }

    #[test]
    fn gentest_1407() {
        let board = Board::from_fen("2b3k1/r1nN4/1P1P4/NP1n2p1/p4p2/P1bK2P1/6r1/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1094);
    }

    #[test]
    fn gentest_1408() {
        let board = Board::from_fen("2b5/r1n3k1/1P1P1N2/NP1n2p1/p4p2/P1bK2P1/2r5/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1385);
    }

    #[test]
    fn gentest_1409() {
        let board = Board::from_fen("2b5/r1n3k1/1P1P4/NP1n2p1/p3KpN1/P5P1/2rb4/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1122);
    }

    #[test]
    fn gentest_1410() {
        let board = Board::from_fen("2b5/r5k1/1n1P4/NP1n2p1/p3KPN1/P7/2rb4/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1193);
    }

    #[test]
    fn gentest_1411() {
        let board = Board::from_fen("2b5/r5k1/1n1P4/NP1n1Pp1/p3K1N1/P7/2r5/2R1b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 973);
    }

    #[test]
    fn gentest_1412() {
        let board = Board::from_fen("2b5/r3nk2/1n1P4/NP3Pp1/p3K3/P7/2r2N2/2R1b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 915);
    }

    #[test]
    fn gentest_1413() {
        let board = Board::from_fen("2b3n1/r4k2/1n1P4/NP3Pp1/p7/P3K3/2r2N2/2R1b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 750);
    }

    #[test]
    fn gentest_1414() {
        let board = Board::from_fen("2b2kn1/r7/1n1P4/NP3Pp1/p5N1/P3K3/1r6/2R1b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1041);
    }

    #[test]
    fn gentest_1415() {
        let board = Board::from_fen("2b2kn1/r7/1n1P1N2/1P3P2/p5p1/PN2K3/1r6/2R1b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1035);
    }

    #[test]
    fn gentest_1416() {
        let board = Board::from_fen("2b2kn1/8/1n1P1N2/1Pr2P2/p5p1/PNR1K3/1r6/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 836);
    }

    #[test]
    fn gentest_1417() {
        let board = Board::from_fen("2b3n1/3N1k2/1n1P4/1PN2P2/p5p1/P1R1K3/1r6/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 530);
    }

    #[test]
    fn gentest_1418() {
        let board = Board::from_fen("2b5/3N1k2/1n1P1n2/1PN2P2/p5p1/P1RK4/r7/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 520);
    }

    #[test]
    fn gentest_1419() {
        let board = Board::from_fen("8/3b1k2/1N1P1n2/1P3P2/p3N1p1/P1RK4/r7/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 661);
    }

    #[test]
    fn gentest_1420() {
        let board = Board::from_fen("8/6k1/1N1P1n2/1b3P2/p3N1p1/P1R1K3/r7/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 810);
    }

    #[test]
    fn gentest_1421() {
        let board = Board::from_fen("8/3n2k1/3P4/1b3P2/p1N1N1p1/P3K3/r1R5/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 636);
    }

    #[test]
    fn gentest_1422() {
        let board = Board::from_fen("8/6k1/3P1n2/5P2/p1b1N1p1/P3K3/r1RN4/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 590);
    }

    #[test]
    fn gentest_1423() {
        let board = Board::from_fen("6n1/6k1/3P4/5P2/p1R1N1p1/P2K4/r2N4/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 418);
        assert_eq!(perft(&board, 3, &PRECOMP), 7787);
    }

    #[test]
    fn gentest_1424() {
        let board = Board::from_fen("5kn1/8/3P4/5P2/p1R1N1pb/P2K4/r7/5N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 544);
    }

    #[test]
    fn gentest_1425() {
        let board = Board::from_fen("5kn1/8/3P4/5P2/p1R3pb/P1NK2N1/5r2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 566);
    }

    #[test]
    fn gentest_1426() {
        let board = Board::from_fen("4k1n1/8/3P4/1N3P2/p1R3pb/P2K2N1/8/5r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 637);
    }

    #[test]
    fn gentest_1427() {
        let board = Board::from_fen("4k1n1/N3b3/3P4/5P2/p1R3p1/P2K4/4N3/5r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 670);
    }

    #[test]
    fn gentest_1428() {
        let board = Board::from_fen("4k1n1/N7/3P4/5P2/p1R2bp1/P2K2N1/8/5r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 578);
    }

    #[test]
    fn gentest_1429() {
        let board = Board::from_fen("4k1n1/8/2Nb4/5P2/p5p1/P2K2N1/8/2R2r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 699);
    }

    #[test]
    fn gentest_1430() {
        let board = Board::from_fen("4k1n1/8/2Nb4/5P2/p5p1/P2K2N1/2R5/5r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 844);
    }

    #[test]
    fn gentest_1431() {
        let board = Board::from_fen("4k1n1/8/2Nb4/5P2/p1K3p1/P5N1/6R1/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 735);
    }

    #[test]
    fn gentest_1432() {
        let board = Board::from_fen("4k1n1/8/2Nb4/5P2/p1K3p1/P5N1/1R3r2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 772);
    }

    #[test]
    fn gentest_1433() {
        let board = Board::from_fen("4k1n1/8/2N5/1K3P2/pb4p1/P7/1R3r2/5N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 656);
    }

    #[test]
    fn gentest_1434() {
        let board = Board::from_fen("4k1n1/8/2N5/1K3P2/1P4p1/p7/1r6/5N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 329);
        assert_eq!(perft(&board, 3, &PRECOMP), 5472);
    }

    #[test]
    fn gentest_1435() {
        let board = Board::from_fen("4k1n1/8/8/1K3P2/1P4p1/pN6/5r2/5N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 355);
        assert_eq!(perft(&board, 3, &PRECOMP), 7339);
    }

    #[test]
    fn gentest_1436() {
        let board = Board::from_fen("5kn1/8/2K5/5P2/1P4p1/pN3r2/8/5N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 371);
        assert_eq!(perft(&board, 3, &PRECOMP), 6324);
    }

    #[test]
    fn gentest_1437() {
        let board = Board::from_fen("3K1kn1/8/8/5P2/1P4p1/pNr5/8/5N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 243);
        assert_eq!(perft(&board, 3, &PRECOMP), 4686);
    }

    #[test]
    fn gentest_1438() {
        let board = Board::from_fen("3K1k2/8/5n2/8/1P4p1/1Nr5/p7/5N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 302);
        assert_eq!(perft(&board, 3, &PRECOMP), 3315);
    }

    #[test]
    fn gentest_1439() {
        let board = Board::from_fen("3K1k2/8/8/8/1P2n1p1/2r5/p1N5/5N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 304);
        assert_eq!(perft(&board, 3, &PRECOMP), 8265);
    }

    #[test]
    fn gentest_1440() {
        let board = Board::from_fen("3K1k2/8/8/8/1P2n1p1/6r1/8/N4N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 181);
        assert_eq!(perft(&board, 3, &PRECOMP), 2082);
    }

    #[test]
    fn gentest_1441() {
        let board = Board::from_fen("3K1k2/8/8/8/1P2n1p1/4Nr2/8/5N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 286);
        assert_eq!(perft(&board, 3, &PRECOMP), 6223);
    }

    #[test]
    fn gentest_1442() {
        let board = Board::from_fen("2K5/6k1/8/8/1P2n1p1/4N1r1/8/5N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 324);
        assert_eq!(perft(&board, 3, &PRECOMP), 5106);
    }

    #[test]
    fn gentest_1443() {
        let board = Board::from_fen("2K5/8/6k1/8/1P2n1N1/6r1/7N/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 273);
        assert_eq!(perft(&board, 3, &PRECOMP), 6003);
    }

    #[test]
    fn gentest_1444() {
        let board = Board::from_fen("8/1K5k/8/8/1P4N1/6r1/3n3N/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 313);
        assert_eq!(perft(&board, 3, &PRECOMP), 4791);
    }

    #[test]
    fn gentest_1445() {
        let board = Board::from_fen("8/1K5k/8/1P6/6N1/5nr1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 232);
        assert_eq!(perft(&board, 3, &PRECOMP), 4433);
    }

    #[test]
    fn gentest_1446() {
        let board = Board::from_fen("7k/1K6/5N2/1P6/6r1/5n2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 387);
        assert_eq!(perft(&board, 3, &PRECOMP), 5160);
    }

    #[test]
    fn gentest_1447() {
        let board = Board::from_fen("1K5k/7N/8/1P6/r7/5n2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 180);
        assert_eq!(perft(&board, 3, &PRECOMP), 4033);
    }

    #[test]
    fn gentest_1448() {
        let board = Board::from_fen("1Kr4k/8/5N2/1P6/8/5n2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 53);
        assert_eq!(perft(&board, 3, &PRECOMP), 662);
    }

    #[test]
    fn gentest_1449() {
        let board = Board::from_fen("7k/8/2K2N2/1P6/8/5n2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 125);
        assert_eq!(perft(&board, 3, &PRECOMP), 925);
    }

    #[test]
    fn gentest_1450() {
        let board = Board::from_fen("7k/1K6/5N2/1P6/8/3n4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 167);
        assert_eq!(perft(&board, 3, &PRECOMP), 2238);
    }

    #[test]
    fn gentest_1451() {
        let board = Board::from_fen("K6k/8/8/1PnN4/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 128);
        assert_eq!(perft(&board, 3, &PRECOMP), 1248);
    }

    #[test]
    fn gentest_1452() {
        let board = Board::from_fen("K6k/8/8/1Pn5/5N2/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 111);
        assert_eq!(perft(&board, 3, &PRECOMP), 1138);
    }

    #[test]
    fn gentest_1453() {
        let board = Board::from_fen("K6k/8/8/1P6/n7/6N1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 62);
        assert_eq!(perft(&board, 3, &PRECOMP), 584);
        assert_eq!(perft(&board, 4, &PRECOMP), 5753);
    }

    #[test]
    fn gentest_1454() {
        let board = Board::from_fen("8/K6k/1n6/1P6/8/6N1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 101);
        assert_eq!(perft(&board, 3, &PRECOMP), 996);
        assert_eq!(perft(&board, 4, &PRECOMP), 9748);
    }

    #[test]
    fn gentest_1455() {
        let board = Board::from_fen("8/8/7k/KP6/8/6N1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 44);
        assert_eq!(perft(&board, 3, &PRECOMP), 281);
        assert_eq!(perft(&board, 4, &PRECOMP), 3066);
    }

    #[test]
    fn gentest_1456() {
        let board = Board::from_fen("8/8/8/KP6/7k/8/4N3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 46);
        assert_eq!(perft(&board, 3, &PRECOMP), 514);
        assert_eq!(perft(&board, 4, &PRECOMP), 3080);
    }

    #[test]
    fn gentest_1457() {
        let board = Board::from_fen("8/8/1K6/1P6/6k1/6N1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 72);
        assert_eq!(perft(&board, 3, &PRECOMP), 407);
        assert_eq!(perft(&board, 4, &PRECOMP), 4646);
    }

    #[test]
    fn gentest_1458() {
        let board = Board::from_fen("8/8/8/1PK5/8/6N1/6k1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 86);
        assert_eq!(perft(&board, 3, &PRECOMP), 1128);
        assert_eq!(perft(&board, 4, &PRECOMP), 5446);
    }

    #[test]
    fn gentest_1459() {
        let board = Board::from_fen("8/8/8/1P6/1K6/7k/4N3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 56);
        assert_eq!(perft(&board, 3, &PRECOMP), 286);
        assert_eq!(perft(&board, 4, &PRECOMP), 3801);
    }

    #[test]
    fn gentest_1460() {
        let board = Board::from_fen("8/8/8/1P6/1K6/2N4k/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 68);
        assert_eq!(perft(&board, 3, &PRECOMP), 895);
        assert_eq!(perft(&board, 4, &PRECOMP), 5679);
    }

    #[test]
    fn gentest_1461() {
        let board = Board::from_fen("8/8/K7/1P6/8/2N5/6k1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 96);
        assert_eq!(perft(&board, 3, &PRECOMP), 516);
        assert_eq!(perft(&board, 4, &PRECOMP), 5915);
    }

    #[test]
    fn gentest_1462() {
        let board = Board::from_fen("8/8/K7/1P6/8/8/4N1k1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 72);
        assert_eq!(perft(&board, 3, &PRECOMP), 820);
        assert_eq!(perft(&board, 4, &PRECOMP), 3933);
    }

    #[test]
    fn gentest_1463() {
        let board = Board::from_fen("8/K7/8/1P6/8/8/8/6k1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 30);
        assert_eq!(perft(&board, 3, &PRECOMP), 174);
        assert_eq!(perft(&board, 4, &PRECOMP), 1044);
        assert_eq!(perft(&board, 5, &PRECOMP), 6587);
    }

    #[test]
    fn gentest_1464() {
        let board = Board::from_fen("8/K7/1P6/8/8/7k/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 25);
        assert_eq!(perft(&board, 3, &PRECOMP), 150);
        assert_eq!(perft(&board, 4, &PRECOMP), 1004);
        assert_eq!(perft(&board, 5, &PRECOMP), 7242);
    }

    #[test]
    fn gentest_1465() {
        let board = Board::from_fen("K7/8/1P6/8/7k/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 20);
        assert_eq!(perft(&board, 3, &PRECOMP), 136);
        assert_eq!(perft(&board, 4, &PRECOMP), 816);
        assert_eq!(perft(&board, 5, &PRECOMP), 5502);
    }

    #[test]
    fn gentest_1466() {
        let board = Board::from_fen("1K6/8/1P4k1/8/8/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 48);
        assert_eq!(perft(&board, 3, &PRECOMP), 272);
        assert_eq!(perft(&board, 4, &PRECOMP), 1845);
    }

    #[test]
    fn gentest_1467() {
        let board = Board::from_fen("8/1K6/1P3k2/8/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 56);
        assert_eq!(perft(&board, 3, &PRECOMP), 432);
        assert_eq!(perft(&board, 4, &PRECOMP), 2487);
    }

    #[test]
    fn gentest_1468() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1469() {
        let board = Board::from_fen("rnbqkbnr/1ppppppp/8/p7/3P4/5N2/PPP1PPPP/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 629);
    }

    #[test]
    fn gentest_1470() {
        let board = Board::from_fen("rnbqkb1r/1pppp1pp/7n/p4p2/3P4/1P3N2/P1P1PPPP/RNBQKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 644);
    }

    #[test]
    fn gentest_1471() {
        let board = Board::from_fen("rnbqkb1r/2ppp1pp/1p5n/p4p2/P2P4/1P3N2/2PNPPPP/R1BQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 484);
    }

    #[test]
    fn gentest_1472() {
        let board = Board::from_fen("rnbqkb1r/4p1pp/1ppp3n/p4p2/P2P3P/1P3N2/2PNPPP1/R1BQKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 576);
    }

    #[test]
    fn gentest_1473() {
        let board = Board::from_fen("rn1qkb1r/3bp1pp/1ppp3n/p4pN1/P2P3P/1P2P3/2PN1PP1/R1BQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 683);
    }

    #[test]
    fn gentest_1474() {
        let board = Board::from_fen("1n2kb1r/2qbp1pp/rppp3n/p4pN1/P1PP3P/1P2P3/3N1PP1/R1BQKB1R w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 678);
    }

    #[test]
    fn gentest_1475() {
        let board = Board::from_fen("1n2kb1r/2qbp1pp/rppp3n/p5NP/P1PP1p2/1P2P3/3NQPP1/R1B1KB1R b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 780);
    }

    #[test]
    fn gentest_1476() {
        let board = Board::from_fen("1n1qkb1r/3bp1pp/rppp4/p5NP/P1PP1pn1/1P2PN2/4QPP1/R1B1KB1R w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 783);
    }

    #[test]
    fn gentest_1477() {
        let board = Board::from_fen("1nq1kb1r/3bp1pp/rppp4/p5NP/P1PP1pn1/1P2PNP1/2Q2P2/R1B1KB1R b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1105);
    }

    #[test]
    fn gentest_1478() {
        let board = Board::from_fen("1nq1kb1r/3bp1p1/rp1p2p1/p1p3NP/P1PP1pn1/1P2PNP1/5P2/R1B1KB1R w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1092);
    }

    #[test]
    fn gentest_1479() {
        let board = Board::from_fen("1n2kb1r/1q1bp1p1/rp1p2p1/p1p3NP/P1PP1pn1/1P2PNPB/5P2/R1BK3R b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1179);
    }

    #[test]
    fn gentest_1480() {
        let board = Board::from_fen("1n2kb1r/1q2p1p1/rpbp4/p1p3Np/P1PP1pn1/1P2PNPB/3B1P2/R2K3R w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1196);
    }

    #[test]
    fn gentest_1481() {
        let board = Board::from_fen("1n2kb1r/1q2p1p1/rp1p4/B1p3Np/b1PP1pn1/RP2PNPB/5P2/3K3R b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1291);
    }

    #[test]
    fn gentest_1482() {
        let board = Board::from_fen("1n2kb1r/q3p1p1/rp1p4/B1p3Np/b1PP1pn1/RP2PNPB/4KP2/7R w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1298);
    }

    #[test]
    fn gentest_1483() {
        let board = Board::from_fen("1n2kb1r/q2bp1p1/rp1p4/2p3Np/2PP1pn1/RPB1P1PB/3NKP2/7R b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1327);
    }

    #[test]
    fn gentest_1484() {
        let board = Board::from_fen("q3kb1r/3bp1p1/rpnp4/2p3Np/2PP1pn1/RP2P1PB/3NKP2/B6R w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1428);
    }

    #[test]
    fn gentest_1485() {
        let board = Board::from_fen("q3kb1r/3bp1p1/rp1p4/n1p3Np/1PPP1pn1/R3P1PB/3NKP2/B3R3 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1623);
    }

    #[test]
    fn gentest_1486() {
        let board = Board::from_fen("q1k2b1r/3bp1p1/rp1p4/n1p3Np/1PPPPpn1/R5PB/3NKP2/B3R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1535);
    }

    #[test]
    fn gentest_1487() {
        let board = Board::from_fen("2k2b1r/1q1bpNp1/rp1p4/n1p4p/1PPPPpn1/RN4PB/4KP2/B3R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1427);
    }

    #[test]
    fn gentest_1488() {
        let board = Board::from_fen("2k2b1r/1q1b1Np1/rp1p4/n3p2p/1pPPPpn1/RN4PB/4KP2/B1R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1329);
    }

    #[test]
    fn gentest_1489() {
        let board = Board::from_fen("r1k2b1r/1q1b1Np1/1p1p4/n3p2p/1pPPPpn1/RNB3PB/4KP2/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1505);
    }

    #[test]
    fn gentest_1490() {
        let board = Board::from_fen("rk3b1r/1q3Np1/1p1p4/nb2p2p/1pPPPpn1/RNB2PPB/4K3/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1574);
    }

    #[test]
    fn gentest_1491() {
        let board = Board::from_fen("rk3b1N/6p1/qp1p4/nb2p2p/1pPPPpn1/RNB2PPB/4K3/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1118);
    }

    #[test]
    fn gentest_1492() {
        let board = Board::from_fen("rk3b1N/q5p1/1p1p4/1b2p2p/1pnPPpn1/R1B2PPB/3NK3/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1258);
    }

    #[test]
    fn gentest_1493() {
        let board = Board::from_fen("rk3b1N/q5p1/1p1p3n/1b2p2p/1pnPPp2/2B2PPB/R2NK3/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1152);
    }

    #[test]
    fn gentest_1494() {
        let board = Board::from_fen("rk3bnN/q7/1p1p4/1b1Pp1pp/1pn1Pp2/2B2PPB/R2NK3/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1336);
    }

    #[test]
    fn gentest_1495() {
        let board = Board::from_fen("rk3b1N/q7/1p1p1n2/1b1Pp1pp/1pn1Pp2/2B2PPB/2RNK3/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1158);
    }

    #[test]
    fn gentest_1496() {
        let board = Board::from_fen("rk3b1N/q7/1p1p1n2/1b1Pp1pp/1p2np2/2B2PPB/2R2K2/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 169);
        assert_eq!(perft(&board, 3, &PRECOMP), 5278);
    }

    #[test]
    fn gentest_1497() {
        let board = Board::from_fen("r4b1N/q1k5/1p1p1n2/1b1Pp1pp/1p2np2/2B2PPB/2R5/4K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1247);
    }

    #[test]
    fn gentest_1498() {
        let board = Board::from_fen("r1B2bnN/q1k5/1p1p4/1b1Pp1p1/1p2np1p/2B2PP1/2R5/4K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1031);
    }

    #[test]
    fn gentest_1499() {
        let board = Board::from_fen("r1Bk1bnN/q7/1p1p4/Bb1Pp1p1/4np1p/5PP1/2R5/4K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1297);
    }

    #[test]
    fn gentest_1500() {
        let board = Board::from_fen("1rBk1bnN/q7/1p1p4/B2Pp1p1/2b1np1p/5PP1/2R3R1/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1200);
    }

    #[test]
    fn gentest_1501() {
        let board = Board::from_fen("1r1k1bnN/q7/1B1p4/3Pp1p1/2b2pBp/5PP1/2R2nR1/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 137);
        assert_eq!(perft(&board, 3, &PRECOMP), 5464);
    }

    #[test]
    fn gentest_1502() {
        let board = Board::from_fen("1r1k1bnN/8/3p4/1q1Pp1p1/2b2pBP/5P2/2R2nR1/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 925);
    }

    #[test]
    fn gentest_1503() {
        let board = Board::from_fen("1r1k1bnN/8/3p4/1q1Pp1p1/2R2pBP/3n1P2/4K1R1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 911);
    }

    #[test]
    fn gentest_1504() {
        let board = Board::from_fen("1r1k2nN/6b1/3p4/1q1Pp3/4RpBp/3n1P2/4K1R1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 767);
    }

    #[test]
    fn gentest_1505() {
        let board = Board::from_fen("2rk2nN/6b1/3p4/1q1PpB2/R4p1p/3n1P2/4K1R1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1204);
    }

    #[test]
    fn gentest_1506() {
        let board = Board::from_fen("1r1k2nN/6b1/3p4/2qPpB2/R4p1p/3n1PR1/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1477);
    }

    #[test]
    fn gentest_1507() {
        let board = Board::from_fen("1r1k2nN/7B/3p3b/2qPp3/5R1p/3n1PR1/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1228);
    }

    #[test]
    fn gentest_1508() {
        let board = Board::from_fen("1r1k2nN/7B/3p3b/3Pp3/5R1p/5PR1/5q2/2nK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1153);
    }

    #[test]
    fn gentest_1509() {
        let board = Board::from_fen("1r1k2nN/7B/3p3b/3Pp3/1R4Rp/5P2/7q/2nK4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1088);
    }

    #[test]
    fn gentest_1510() {
        let board = Board::from_fen("1r1k2nN/7B/3p4/3Pp1b1/4R1R1/5P1p/7q/2nK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 800);
    }

    #[test]
    fn gentest_1511() {
        let board = Board::from_fen("3k2nN/7B/3p4/3Pp1b1/5R1R/1r3P1p/7q/2nK4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 837);
    }

    #[test]
    fn gentest_1512() {
        let board = Board::from_fen("3k2nN/8/3p2B1/3P2b1/4pq1R/1r3P1p/8/2nK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 603);
        assert_eq!(perft(&board, 3, &PRECOMP), 8894);
    }

    #[test]
    fn gentest_1513() {
        let board = Board::from_fen("3k2nN/8/3p2B1/3P2b1/4pq1R/5P1p/1r6/2nK4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 626);
    }

    #[test]
    fn gentest_1514() {
        let board = Board::from_fen("3k2nN/8/3p1qB1/3P2b1/4pP1R/7p/4r3/2nK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 524);
        assert_eq!(perft(&board, 3, &PRECOMP), 7514);
    }

    #[test]
    fn gentest_1515() {
        let board = Board::from_fen("3k1qn1/8/3p2N1/3P1Bb1/4pP1R/7p/4r3/2nK4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 519);
    }

    #[test]
    fn gentest_1516() {
        let board = Board::from_fen("3k1q2/3B4/3p2Nn/3P2b1/4pP1R/7p/5r2/2nK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 724);
    }

    #[test]
    fn gentest_1517() {
        let board = Board::from_fen("3k1q2/3B4/3p2Nn/3P1Pb1/4pr1R/7p/8/2n1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 500);
    }

    #[test]
    fn gentest_1518() {
        let board = Board::from_fen("5q2/3Bk3/3p3n/3PNPb1/4pr1R/8/7p/2n1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 661);
    }

    #[test]
    fn gentest_1519() {
        let board = Board::from_fen("6q1/3Nk3/3pB2n/3P1Pb1/4pr1R/8/7p/2n1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 505);
    }

    #[test]
    fn gentest_1520() {
        let board = Board::from_fen("5Nq1/4k3/3pB3/3P1Pb1/4prnR/8/8/2n1K2n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 476);
        assert_eq!(perft(&board, 3, &PRECOMP), 8077);
    }

    #[test]
    fn gentest_1521() {
        let board = Board::from_fen("5Nq1/3Bk3/3p4/3P1Pb1/4p1nR/8/8/2n2K1n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 585);
    }

    #[test]
    fn gentest_1522() {
        let board = Board::from_fen("5N2/4k3/2Bp4/3q1Pb1/4p1nR/8/4n3/5K1n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 826);
    }

    #[test]
    fn gentest_1523() {
        let board = Board::from_fen("5N2/4k3/2Bp1b2/3q4/4p1nR/8/4K3/7n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 682);
    }

    #[test]
    fn gentest_1524() {
        let board = Board::from_fen("5N2/4k3/2Bp1b2/3q1n2/4p1nR/8/8/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 738);
    }

    #[test]
    fn gentest_1525() {
        let board = Board::from_fen("8/4k2N/2Bp1b1R/3q1n2/4p3/8/7n/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 594);
    }

    #[test]
    fn gentest_1526() {
        let board = Board::from_fen("8/4k2N/2Bp1b1n/8/3qp3/8/4K2n/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 409);
        assert_eq!(perft(&board, 3, &PRECOMP), 4432);
    }

    #[test]
    fn gentest_1527() {
        let board = Board::from_fen("8/4k3/3p1N1n/1B6/3qp3/5n2/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 476);
    }

    #[test]
    fn gentest_1528() {
        let board = Board::from_fen("8/4k3/3p1N1n/1B4n1/4p3/8/1q6/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
        assert_eq!(perft(&board, 3, &PRECOMP), 7726);
    }

    #[test]
    fn gentest_1529() {
        let board = Board::from_fen("6N1/8/3pk2n/6n1/2B1p3/8/1q6/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 54);
        assert_eq!(perft(&board, 3, &PRECOMP), 1709);
    }

    #[test]
    fn gentest_1530() {
        let board = Board::from_fen("6N1/5n2/3p4/1B3kn1/4p3/8/1q6/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 382);
        assert_eq!(perft(&board, 3, &PRECOMP), 4186);
    }

    #[test]
    fn gentest_1531() {
        let board = Board::from_fen("8/3B1n2/3p1N2/4k1n1/4p3/8/1q6/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 422);
    }

    #[test]
    fn gentest_1532() {
        let board = Board::from_fen("8/5n2/2Bp1N2/4k1n1/4p3/1q6/8/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 140);
        assert_eq!(perft(&board, 3, &PRECOMP), 2108);
    }

    #[test]
    fn gentest_1533() {
        let board = Board::from_fen("8/5n2/3p1N2/4k1n1/q3B3/8/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 623);
    }

    #[test]
    fn gentest_1534() {
        let board = Board::from_fen("7n/1B6/3p1N2/4k1n1/8/8/4K3/q7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
        assert_eq!(perft(&board, 3, &PRECOMP), 9058);
    }

    #[test]
    fn gentest_1535() {
        let board = Board::from_fen("7n/1B6/3p4/4k1n1/4N3/3K4/8/2q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 360);
    }

    #[test]
    fn gentest_1536() {
        let board = Board::from_fen("7n/1B6/3p4/4k1N1/8/3K4/8/2q5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 376);
        assert_eq!(perft(&board, 3, &PRECOMP), 4551);
    }

    #[test]
    fn gentest_1537() {
        let board = Board::from_fen("7n/2q5/3p4/3Bk1N1/8/3K4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 464);
    }

    #[test]
    fn gentest_1538() {
        let board = Board::from_fen("8/5n2/3p4/3Bk1N1/8/8/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 212);
        assert_eq!(perft(&board, 3, &PRECOMP), 4679);
    }

    #[test]
    fn gentest_1539() {
        let board = Board::from_fen("8/5n2/3p4/5kN1/8/3K4/8/7B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 212);
        assert_eq!(perft(&board, 3, &PRECOMP), 2201);
    }

    #[test]
    fn gentest_1540() {
        let board = Board::from_fen("8/8/3p4/6n1/3K2k1/8/8/7B w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 1817);
    }

    #[test]
    fn gentest_1541() {
        let board = Board::from_fen("8/1B6/3p4/8/3K2k1/7n/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 153);
        assert_eq!(perft(&board, 3, &PRECOMP), 1599);
    }

    #[test]
    fn gentest_1542() {
        let board = Board::from_fen("8/8/3p4/8/3K1k2/5B2/8/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 119);
        assert_eq!(perft(&board, 3, &PRECOMP), 1396);
    }

    #[test]
    fn gentest_1543() {
        let board = Board::from_fen("8/8/3p4/8/1K3k2/5n2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 107);
        assert_eq!(perft(&board, 3, &PRECOMP), 1587);
        assert_eq!(perft(&board, 4, &PRECOMP), 9133);
    }

    #[test]
    fn gentest_1544() {
        let board = Board::from_fen("8/8/3p4/K3k3/3n4/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 60);
        assert_eq!(perft(&board, 3, &PRECOMP), 289);
        assert_eq!(perft(&board, 4, &PRECOMP), 4194);
    }

    #[test]
    fn gentest_1545() {
        let board = Board::from_fen("8/8/8/2Kpk3/3n4/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 51);
        assert_eq!(perft(&board, 3, &PRECOMP), 682);
        assert_eq!(perft(&board, 4, &PRECOMP), 4091);
    }

    #[test]
    fn gentest_1546() {
        let board = Board::from_fen("8/8/8/4k3/1K1p4/5n2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 95);
        assert_eq!(perft(&board, 3, &PRECOMP), 540);
        assert_eq!(perft(&board, 4, &PRECOMP), 7439);
    }

    #[test]
    fn gentest_1547() {
        let board = Board::from_fen("8/8/1K6/4k3/8/3p1n2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 1743);
    }

    #[test]
    fn gentest_1548() {
        let board = Board::from_fen("8/1K6/8/8/3k4/3p4/8/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 85);
        assert_eq!(perft(&board, 3, &PRECOMP), 461);
        assert_eq!(perft(&board, 4, &PRECOMP), 5444);
    }

    #[test]
    fn gentest_1549() {
        let board = Board::from_fen("8/1K6/8/8/8/2kp4/8/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 88);
        assert_eq!(perft(&board, 3, &PRECOMP), 1056);
        assert_eq!(perft(&board, 4, &PRECOMP), 5930);
    }

    #[test]
    fn gentest_1550() {
        let board = Board::from_fen("2K5/8/8/8/k7/3p4/8/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 45);
        assert_eq!(perft(&board, 3, &PRECOMP), 297);
        assert_eq!(perft(&board, 4, &PRECOMP), 3275);
    }

    #[test]
    fn gentest_1551() {
        let board = Board::from_fen("8/8/1K6/8/8/k2p4/8/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 67);
        assert_eq!(perft(&board, 3, &PRECOMP), 726);
        assert_eq!(perft(&board, 4, &PRECOMP), 4544);
    }

    #[test]
    fn gentest_1552() {
        let board = Board::from_fen("8/2K5/8/8/8/k2p4/8/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 72);
        assert_eq!(perft(&board, 3, &PRECOMP), 485);
        assert_eq!(perft(&board, 4, &PRECOMP), 5403);
    }

    #[test]
    fn gentest_1553() {
        let board = Board::from_fen("8/K7/8/8/8/1k1p4/8/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 60);
        assert_eq!(perft(&board, 3, &PRECOMP), 708);
        assert_eq!(perft(&board, 4, &PRECOMP), 3927);
    }

    #[test]
    fn gentest_1554() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1555() {
        let board = Board::from_fen("rnbqkbnr/pppppp1p/6p1/8/8/8/PPPPPPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 420);
        assert_eq!(perft(&board, 3, &PRECOMP), 9799);
    }

    #[test]
    fn gentest_1556() {
        let board = Board::from_fen("r1bqkb1r/pppppp1p/2n3pn/8/2P5/8/PP1PPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 484);
    }

    #[test]
    fn gentest_1557() {
        let board = Board::from_fen("r1bqkb1r/pppppp1p/6pn/4n3/2PP4/3Q4/PP2PPPP/RNB1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 841);
    }

    #[test]
    fn gentest_1558() {
        let board = Board::from_fen("r1bqkbr1/p1pppp1p/6pn/1p2nQ2/2PP4/8/PP2PPPP/RNB1KBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1016);
    }

    #[test]
    fn gentest_1559() {
        let board = Board::from_fen("r1bqkb2/p1pppprp/6pn/1p2n3/2PP2Q1/N7/PP2PPPP/R1B1KBNR b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 807);
    }

    #[test]
    fn gentest_1560() {
        let board = Board::from_fen("r1bqkb2/3ppprp/p1p3pn/1p2n3/2PP2Q1/NP6/P3PPPP/R1B1KBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 883);
    }

    #[test]
    fn gentest_1561() {
        let board = Board::from_fen("r1b1kb2/3ppprp/pqp3pn/1p2n3/2PPP3/NP3Q2/P4PPP/R1B1KBNR b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1055);
    }

    #[test]
    fn gentest_1562() {
        let board = Board::from_fen("r1b1kb2/3pp1rp/1qp2ppn/pp2n3/2PPP3/NP3Q2/P3NPPP/R1B1KB1R w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1252);
    }

    #[test]
    fn gentest_1563() {
        let board = Board::from_fen("r1b1kb2/3pp1rp/1qp2ppn/pp1P4/2P1P1Q1/NP6/P3NPPP/R1B1KB1R b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1254);
    }

    #[test]
    fn gentest_1564() {
        let board = Board::from_fen("r1b2b2/q2kp1rp/2p2ppn/pp1P4/2P1P3/NP6/P3NPPP/R1B1KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 887);
    }

    #[test]
    fn gentest_1565() {
        let board = Board::from_fen("r1b1kb2/q3p1rp/2p2ppn/Pp1P4/2P1P3/N7/P3NPPP/R1B1KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1011);
    }

    #[test]
    fn gentest_1566() {
        let board = Board::from_fen("r1b1kb2/4p1rp/1qp2ppn/Pp1P4/2P1P3/N7/PB2NPPP/R3KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1306);
    }

    #[test]
    fn gentest_1567() {
        let board = Board::from_fen("r1b1kb2/q3p1rp/2p3pn/Pp1P2B1/2P1P3/N7/P3NPPP/R3KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1143);
    }

    #[test]
    fn gentest_1568() {
        let board = Board::from_fen("2b1kb2/r3p1rp/2p3pn/Pp1P2B1/2PqP3/N7/P4PPP/R1N1KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1290);
    }

    #[test]
    fn gentest_1569() {
        let board = Board::from_fen("2b1kb2/r3p1rp/2p2Bpn/P2P4/1pPqP3/N5P1/P4P1P/R1N1KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1148);
    }

    #[test]
    fn gentest_1570() {
        let board = Board::from_fen("2b1kb2/r3p1rp/2p3pn/P2P4/2PBP3/N5P1/p4P1P/R1N1KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 968);
    }

    #[test]
    fn gentest_1571() {
        let board = Board::from_fen("2b1kb2/1r2p1rp/2p3pn/P2PP3/2PB4/N5P1/p4PBP/R1N1K2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 993);
    }

    #[test]
    fn gentest_1572() {
        let board = Board::from_fen("2b1kbn1/4p1rp/2p3p1/Pr1PP3/2PB4/6P1/p4PBP/R1N1K2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 966);
    }

    #[test]
    fn gentest_1573() {
        let board = Board::from_fen("2b2bn1/3kp1rp/1Bp3p1/Pr1PP3/2P5/6P1/p3KPBP/R1N4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 683);
    }

    #[test]
    fn gentest_1574() {
        let board = Board::from_fen("2b1kb2/4p1rp/1Bp2np1/Pr1PP3/2P5/6PB/p3KP1P/R1N4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1135);
    }

    #[test]
    fn gentest_1575() {
        let board = Board::from_fen("4kb2/1b2p1rp/1Bp2np1/Pr1PP3/2P5/1N4PB/p3KP1P/3R3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1243);
    }

    #[test]
    fn gentest_1576() {
        let board = Board::from_fen("4kb2/1b2pr1p/PBp2np1/3PP3/1rP5/1N4PB/p3KP1P/3R3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1281);
    }

    #[test]
    fn gentest_1577() {
        let board = Board::from_fen("4kb2/1b1npr1p/PBp3p1/3PP3/1rP5/1N1R2P1/p3KP1P/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1228);
    }

    #[test]
    fn gentest_1578() {
        let board = Board::from_fen("2b1kb2/3npr2/PBp3p1/3PP2p/1rP5/1N1R2P1/p4P1P/3K3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1102);
    }

    #[test]
    fn gentest_1579() {
        let board = Board::from_fen("2b1kb2/3np3/P1p2rp1/B2PP2p/1rP5/1N1R2P1/p4P1P/2K4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 936);
    }

    #[test]
    fn gentest_1580() {
        let board = Board::from_fen("2b1kb2/3np3/P4rp1/B1pPP2p/1rP5/1N4P1/5P1P/n1KR3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 854);
    }

    #[test]
    fn gentest_1581() {
        let board = Board::from_fen("2b1kb2/3Np3/P5p1/B2PP2p/1rP2r2/6P1/5P1P/n1KR3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 774);
    }

    #[test]
    fn gentest_1582() {
        let board = Board::from_fen("2b1kb2/3Np3/P5p1/B2PP2p/2PR2r1/1r4P1/5P1P/n1K4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 914);
    }

    #[test]
    fn gentest_1583() {
        let board = Board::from_fen("2b1kb2/2BNp3/P5p1/3PP1rp/2P5/1r4P1/3R1P1P/n1K4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 780);
    }

    #[test]
    fn gentest_1584() {
        let board = Board::from_fen("1Nb1kb2/2B1p3/P5p1/3PP1rp/2P5/6r1/3R1P1P/n1K4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 781);
    }

    #[test]
    fn gentest_1585() {
        let board = Board::from_fen("1Nb1kb2/2B5/P3p1p1/3PP1rp/2P2P1P/6r1/3R4/n1K4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 773);
    }

    #[test]
    fn gentest_1586() {
        let board = Board::from_fen("1Nb1kb2/2B5/P3p1p1/3Pr2p/2P2P1P/8/4R1r1/n1K4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 959);
    }

    #[test]
    fn gentest_1587() {
        let board = Board::from_fen("1Nb1k3/6b1/P3p1p1/2BPr2p/2P2P1P/8/4R1r1/n1K4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 884);
    }

    #[test]
    fn gentest_1588() {
        let board = Board::from_fen("1N2k3/3b2b1/P3p1p1/2BPrPrp/2P4P/8/4R3/n1K4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1019);
    }

    #[test]
    fn gentest_1589() {
        let board = Board::from_fen("1N1k4/3b2b1/P3p1p1/3PrPrp/2PB3P/8/4R2R/n1K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 970);
    }

    #[test]
    fn gentest_1590() {
        let board = Board::from_fen("1N1k4/6b1/P3p1p1/1b1Prr1p/2PB3P/8/3KR2R/n7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 891);
    }

    #[test]
    fn gentest_1591() {
        let board = Board::from_fen("1N1k4/6b1/P3p1p1/1bPPr2p/3BR2P/8/3K3R/n4r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 893);
    }

    #[test]
    fn gentest_1592() {
        let board = Board::from_fen("1N1k4/6b1/P3p1p1/1bPPr2p/3B2RP/8/3K3R/n4r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 986);
    }

    #[test]
    fn gentest_1593() {
        let board = Board::from_fen("1N1k4/6b1/P3p1p1/2PPr2p/5R1P/8/3Kb2R/n4rB1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 783);
    }

    #[test]
    fn gentest_1594() {
        let board = Board::from_fen("1N1k4/6b1/P3p1p1/2PPr2p/5R1P/4B3/2nKb2R/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 985);
    }

    #[test]
    fn gentest_1595() {
        let board = Board::from_fen("1N1k4/6b1/P3p1p1/2PPr2p/R4B1P/8/2nKb2R/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1065);
    }

    #[test]
    fn gentest_1596() {
        let board = Board::from_fen("1N1k4/P5b1/4p1p1/2PP3p/R4BrP/8/2nKb2R/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1439);
    }

    #[test]
    fn gentest_1597() {
        let board = Board::from_fen("1N1k4/P1P3b1/4p1p1/3P2rp/R4B1P/8/2nKb2R/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 101);
        assert_eq!(perft(&board, 3, &PRECOMP), 4447);
    }

    #[test]
    fn gentest_1598() {
        let board = Board::from_fen("2k5/P1P3b1/2N1p1p1/3P2rp/R4B1P/3b4/2nK3R/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1410);
    }

    #[test]
    fn gentest_1599() {
        let board = Board::from_fen("1Nk5/P1P3b1/4p1p1/3P2rp/R4B1P/3b4/2nK1R2/5r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1116);
    }

    #[test]
    fn gentest_1600() {
        let board = Board::from_fen("2k4b/P1P5/2N1p1p1/3P2rp/R4B1P/3b4/2nK1R2/5r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1177);
    }

    #[test]
    fn gentest_1601() {
        let board = Board::from_fen("2k4b/P1P5/2N1p1p1/3P2rp/R6P/3b2B1/2n2R2/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1152);
    }

    #[test]
    fn gentest_1602() {
        let board = Board::from_fen("2k4b/P1P5/2N1p1p1/3P2rp/R1b4P/6B1/6R1/3Kn3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 953);
    }

    #[test]
    fn gentest_1603() {
        let board = Board::from_fen("2k4b/P1P5/2N1p1p1/3P2rp/2R4P/6B1/bR6/3Kn3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 869);
    }

    #[test]
    fn gentest_1604() {
        let board = Board::from_fen("2k4b/P1P5/2N1p1p1/3r3p/2R4P/1R4B1/8/3Kn3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 5250);
    }

    #[test]
    fn gentest_1605() {
        let board = Board::from_fen("Q1k4b/2P5/4p1p1/6rp/2RN3P/1R4B1/8/3Kn3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 62);
        assert_eq!(perft(&board, 3, &PRECOMP), 1009);
    }

    #[test]
    fn gentest_1606() {
        let board = Board::from_fen("2k4b/2P5/2Q1p1p1/6rp/2RN3P/1R4B1/8/3Kn3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 754);
    }

    #[test]
    fn gentest_1607() {
        let board = Board::from_fen("2k4b/2P5/2Q3p1/4p1rp/2RN3P/1R4B1/8/3Kn3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 550);
        assert_eq!(perft(&board, 3, &PRECOMP), 6892);
    }

    #[test]
    fn gentest_1608() {
        let board = Board::from_fen("2k4b/2P5/2Q3p1/6rp/3p3P/1R3nB1/2R5/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 770);
    }

    #[test]
    fn gentest_1609() {
        let board = Board::from_fen("2k5/2P5/5bp1/6rp/3pQ2P/1RR2nB1/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 1001);
    }

    #[test]
    fn gentest_1610() {
        let board = Board::from_fen("8/2Pk4/5bp1/1R4rp/3pQ2P/2R3B1/3n4/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 61);
        assert_eq!(perft(&board, 2, &PRECOMP), 1089);
    }

    #[test]
    fn gentest_1611() {
        let board = Board::from_fen("8/2Pk4/5bp1/2R3rp/3pQ2P/1nR3B1/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 932);
    }

    #[test]
    fn gentest_1612() {
        let board = Board::from_fen("8/2Pk4/n4bp1/6rp/3pQ2P/6B1/8/2RK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 702);
    }

    #[test]
    fn gentest_1613() {
        let board = Board::from_fen("8/2Pk4/n4b1Q/1r5p/3p3P/6B1/8/2RK4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 945);
    }

    #[test]
    fn gentest_1614() {
        let board = Board::from_fen("3b3Q/2Pk4/n7/7p/3p3P/6B1/8/1rRK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 457);
    }

    #[test]
    fn gentest_1615() {
        let board = Board::from_fen("1r1b3Q/2Pk4/n7/2R4p/3p3P/8/5B2/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 862);
    }

    #[test]
    fn gentest_1616() {
        let board = Board::from_fen("3N3Q/2nk4/8/2R4p/1r1p3P/8/5B2/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 601);
    }

    #[test]
    fn gentest_1617() {
        let board = Board::from_fen("3N3Q/2nk4/8/7p/3B3P/1rR5/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 663);
    }

    #[test]
    fn gentest_1618() {
        let board = Board::from_fen("3N3Q/3k4/n7/1r5p/2RB3P/8/8/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 660);
    }

    #[test]
    fn gentest_1619() {
        let board = Board::from_fen("3N4/1r1k4/n7/4Q2p/3B3P/2R5/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 658);
        assert_eq!(perft(&board, 3, &PRECOMP), 8238);
    }

    #[test]
    fn gentest_1620() {
        let board = Board::from_fen("3N4/3k4/n1r5/4Q2p/7P/2R1B3/8/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 683);
    }

    #[test]
    fn gentest_1621() {
        let board = Board::from_fen("3N4/2nk4/2r5/4Q2p/7P/3RB3/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 132);
        assert_eq!(perft(&board, 3, &PRECOMP), 1828);
    }

    #[test]
    fn gentest_1622() {
        let board = Board::from_fen("3N4/3k4/3r4/2Qn3p/7P/3RB3/3K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 534);
    }

    #[test]
    fn gentest_1623() {
        let board = Board::from_fen("2kN4/8/3r4/1Q1n3p/7P/3RB3/2K5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_1624() {
        let board = Board::from_fen("2k5/1N6/8/1Q1n3p/7P/3RBr2/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 713);
    }

    #[test]
    fn gentest_1625() {
        let board = Board::from_fen("2kN4/5r2/8/1Q1n3p/7P/1K1RB3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 949);
    }

    #[test]
    fn gentest_1626() {
        let board = Board::from_fen("2kN1r2/2n5/2Q5/7p/7P/1K1RB3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 630);
    }

    #[test]
    fn gentest_1627() {
        let board = Board::from_fen("2kNQr2/8/4n3/7p/5B1P/1K1R4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 539);
        assert_eq!(perft(&board, 3, &PRECOMP), 7015);
    }

    #[test]
    fn gentest_1628() {
        let board = Board::from_fen("2kn4/8/8/4Q2p/5r1P/1K1R4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 665);
    }

    #[test]
    fn gentest_1629() {
        let board = Board::from_fen("2k5/1n6/8/4Q2p/5r1P/5R2/2K5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 759);
    }

    #[test]
    fn gentest_1630() {
        let board = Board::from_fen("3k4/1n6/8/4Q2p/1r5P/5R2/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 117);
        assert_eq!(perft(&board, 3, &PRECOMP), 4361);
    }

    #[test]
    fn gentest_1631() {
        let board = Board::from_fen("3k4/8/8/2n1Q2p/1r5P/6R1/8/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 821);
    }

    #[test]
    fn gentest_1632() {
        let board = Board::from_fen("4k3/8/8/2n3Qp/7P/1r4R1/8/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 463);
    }

    #[test]
    fn gentest_1633() {
        let board = Board::from_fen("8/4k3/8/2n2Q1p/7P/1r4R1/8/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 788);
    }

    #[test]
    fn gentest_1634() {
        let board = Board::from_fen("5k2/7Q/8/2n4p/7P/4r1R1/8/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 512);
    }

    #[test]
    fn gentest_1635() {
        let board = Board::from_fen("5k2/3n1Q2/8/7p/7P/4r1R1/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 14);
        assert_eq!(perft(&board, 3, &PRECOMP), 284);
        assert_eq!(perft(&board, 4, &PRECOMP), 4279);
    }

    #[test]
    fn gentest_1636() {
        let board = Board::from_fen("8/5k2/8/2n4p/7P/4R3/3K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 258);
        assert_eq!(perft(&board, 3, &PRECOMP), 4495);
    }

    #[test]
    fn gentest_1637() {
        let board = Board::from_fen("8/8/5k2/2n4p/7P/1R6/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 285);
        assert_eq!(perft(&board, 3, &PRECOMP), 3630);
    }

    #[test]
    fn gentest_1638() {
        let board = Board::from_fen("8/1n6/8/4k2p/7P/8/3K4/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 222);
        assert_eq!(perft(&board, 3, &PRECOMP), 4070);
    }

    #[test]
    fn gentest_1639() {
        let board = Board::from_fen("8/1n6/8/5k1p/7P/8/8/1RK5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 125);
        assert_eq!(perft(&board, 3, &PRECOMP), 1318);
    }

    #[test]
    fn gentest_1640() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1641() {
        let board = Board::from_fen("r1bqkbnr/pppppppp/2n5/8/3P1B2/8/PPP1PPPP/RN1QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 698);
    }

    #[test]
    fn gentest_1642() {
        let board = Board::from_fen("r1bqkbnr/ppp2ppp/2np4/4p3/3PPB2/8/PPP2PPP/RN1QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1375);
    }

    #[test]
    fn gentest_1643() {
        let board = Board::from_fen("r1bq1bnr/pppk1ppp/2np4/4p3/3PPB2/6P1/PPP1KP1P/RN1Q1BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1016);
    }

    #[test]
    fn gentest_1644() {
        let board = Board::from_fen("r1bq1bnr/pppk1pp1/2np4/7p/3PPp1P/6P1/PPP1KP2/RN1Q1BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 861);
    }

    #[test]
    fn gentest_1645() {
        let board = Board::from_fen("r1bq1bnr/pppk1pp1/3p4/4n2p/3PPp1P/N4PP1/PPP1K3/R2Q1BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 891);
    }

    #[test]
    fn gentest_1646() {
        let board = Board::from_fen("r1bq1bnr/pppk1p2/3p4/6pp/3PPpnP/N1P2PP1/PP2K3/R2Q1BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 948);
    }

    #[test]
    fn gentest_1647() {
        let board = Board::from_fen("r1bq1bn1/pppk1p1r/3p4/6pp/3PPpnP/N1P2PPR/PP2K3/2RQ1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 925);
    }

    #[test]
    fn gentest_1648() {
        let board = Board::from_fen("r1b1q1n1/pppk1p1r/3p3b/3P2pp/4PpnP/N1P2PPR/PP2K3/2RQ1BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 781);
    }

    #[test]
    fn gentest_1649() {
        let board = Board::from_fen("r1b3nQ/pppk1p1r/3pq2b/3P2pp/4PpnP/N1P2PPR/PP2K3/2R2BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 944);
    }

    #[test]
    fn gentest_1650() {
        let board = Board::from_fen("r1b3nQ/pppk3r/3p1p1b/3q2pp/4PpnP/NPP2PPR/P3K3/2R2BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 895);
    }

    #[test]
    fn gentest_1651() {
        let board = Board::from_fen("r1b3n1/ppp4r/2kp1pQb/3q2pp/4PpnP/NPP2PPR/P3K3/2R2BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1057);
    }

    #[test]
    fn gentest_1652() {
        let board = Board::from_fen("r1b3n1/ppp4r/1k1p1pQb/2q3pp/4PpnP/NPP2PPR/P3K3/1R3BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1191);
    }

    #[test]
    fn gentest_1653() {
        let board = Board::from_fen("r1b3n1/ppp4r/1k1p1p1b/5Qpp/4PpnP/NPq2PPR/P3K3/4RBN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1046);
    }

    #[test]
    fn gentest_1654() {
        let board = Board::from_fen("r1b5/ppp1n2r/1k1p1p1b/5Qpp/4PpnP/NP3PPR/Pq2K1B1/4R1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 4441);
    }

    #[test]
    fn gentest_1655() {
        let board = Board::from_fen("r1b5/ppp1nr2/1k1p1p1b/4PQpp/5pnP/NP1K1PPR/Pq4B1/4R1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1280);
    }

    #[test]
    fn gentest_1656() {
        let board = Board::from_fen("r1b5/1pp1n1r1/pk1p1p1b/4P1Qp/5pnP/NP1K1PPR/Pq4B1/4R1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1468);
    }

    #[test]
    fn gentest_1657() {
        let board = Board::from_fen("r1b5/1pp3r1/pk1p1pnb/4P1Qp/1P3pnP/N2K1PP1/Pq4B1/4R1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1162);
    }

    #[test]
    fn gentest_1658() {
        let board = Board::from_fen("r1b4n/1pp3r1/pk1p1p2/4P1bp/1P3pnP/N2K1PP1/Pq6/4RBNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1184);
    }

    #[test]
    fn gentest_1659() {
        let board = Board::from_fen("r1b4n/1pp3r1/pk1p1p2/4P1bp/1P3p1P/N2KnPP1/Pq6/2R2BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1207);
    }

    #[test]
    fn gentest_1660() {
        let board = Board::from_fen("r1b5/1pp2nr1/pk1p1p2/4P1bp/1P3p1P/N2KnPP1/P1R5/5BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1066);
    }

    #[test]
    fn gentest_1661() {
        let board = Board::from_fen("r1b5/1pp2nr1/pk1p1p2/4P1bp/1P3p1P/N2K1PPR/P1n1N3/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 671);
    }

    #[test]
    fn gentest_1662() {
        let board = Board::from_fen("r7/1pp2nr1/pk1p1p2/1P2P1bp/5p1P/N2K1PPb/P3N3/4nB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 198);
        assert_eq!(perft(&board, 3, &PRECOMP), 3769);
    }

    #[test]
    fn gentest_1663() {
        let board = Board::from_fen("r7/1pp2nr1/pk1p1p2/1P2P1bp/5p1P/N1K2PP1/P7/4nbN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 647);
    }

    #[test]
    fn gentest_1664() {
        let board = Board::from_fen("r7/1pp3r1/pk1P4/1P2npbp/5p1P/N1K2PP1/P7/4nbN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 690);
    }

    #[test]
    fn gentest_1665() {
        let board = Board::from_fen("r7/1ppP3r/pk6/1P2npbp/1K3p1P/N4PP1/P7/4nbN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 592);
    }

    #[test]
    fn gentest_1666() {
        let board = Board::from_fen("8/rppP1r2/pk6/1P2npPp/1K3p2/N4PP1/P7/4nbN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 453);
        assert_eq!(perft(&board, 3, &PRECOMP), 7088);
    }

    #[test]
    fn gentest_1667() {
        let board = Board::from_fen("8/rppP1r2/pk6/1P2npPp/1K3p2/P4PPb/8/1N2n1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 356);
        assert_eq!(perft(&board, 3, &PRECOMP), 9885);
    }

    #[test]
    fn gentest_1668() {
        let board = Board::from_fen("8/rppP2r1/pkn3P1/1P3p1p/1K3p2/P4PPb/8/1N2n1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 127);
        assert_eq!(perft(&board, 3, &PRECOMP), 1892);
    }

    #[test]
    fn gentest_1669() {
        let board = Board::from_fen("3R4/rpp3r1/1kn3P1/1p3p1p/5p2/P1K2PPb/8/1N2n1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 673);
    }

    #[test]
    fn gentest_1670() {
        let board = Board::from_fen("5Rr1/rpp5/1k4P1/1p3p1p/3n1p2/P1K2PPb/8/1N2n1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 602);
    }

    #[test]
    fn gentest_1671() {
        let board = Board::from_fen("6R1/rpp5/1kn3P1/1p3p1p/5P2/P1K2P1b/8/1N2n1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 377);
        assert_eq!(perft(&board, 3, &PRECOMP), 9222);
    }

    #[test]
    fn gentest_1672() {
        let board = Board::from_fen("6R1/rpp5/1k4P1/1p3p1p/5P2/P4P1b/n2K4/1N2n1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 384);
        assert_eq!(perft(&board, 3, &PRECOMP), 6862);
    }

    #[test]
    fn gentest_1673() {
        let board = Board::from_fen("8/1pp3R1/1k4P1/1p3p1p/r4P2/P4P1b/n7/1N1Kn1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 372);
        assert_eq!(perft(&board, 3, &PRECOMP), 9897);
    }

    #[test]
    fn gentest_1674() {
        let board = Board::from_fen("8/1pp3R1/1k4P1/1p3p1p/5P2/5r1b/n2N4/3Kn1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 410);
        assert_eq!(perft(&board, 3, &PRECOMP), 7322);
    }

    #[test]
    fn gentest_1675() {
        let board = Board::from_fen("8/1pp2R2/1k4P1/1p3p1p/1n3P2/5r1b/8/1N1Kn1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 523);
    }

    #[test]
    fn gentest_1676() {
        let board = Board::from_fen("8/1pp2R2/1k4P1/1p1n1p1p/5P2/r6b/8/1N2K1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 542);
    }

    #[test]
    fn gentest_1677() {
        let board = Board::from_fen("8/1pp5/3R2P1/1pkn1p1p/5P2/r6b/8/1N2K1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 587);
    }

    #[test]
    fn gentest_1678() {
        let board = Board::from_fen("8/1pp5/R5P1/1pk2p1p/5Pb1/r3n3/8/1N2K1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 478);
        assert_eq!(perft(&board, 3, &PRECOMP), 8309);
    }

    #[test]
    fn gentest_1679() {
        let board = Board::from_fen("8/1pp5/R5P1/1pk2p1p/5Pb1/r6N/2n5/1N3K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 513);
    }

    #[test]
    fn gentest_1680() {
        let board = Board::from_fen("8/2p5/rp4P1/1pk2p1p/5Pb1/7N/2n3K1/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 333);
        assert_eq!(perft(&board, 3, &PRECOMP), 3987);
    }

    #[test]
    fn gentest_1681() {
        let board = Board::from_fen("8/2p5/rp4P1/1pk2pNp/5P2/8/2n1bK2/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 399);
        assert_eq!(perft(&board, 3, &PRECOMP), 9565);
    }

    #[test]
    fn gentest_1682() {
        let board = Board::from_fen("8/2p5/rp4P1/1pk2pNp/5P2/3bn3/3N1K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 407);
        assert_eq!(perft(&board, 3, &PRECOMP), 6261);
    }

    #[test]
    fn gentest_1683() {
        let board = Board::from_fen("8/2p5/rp4P1/1pk2pNp/5P2/4n3/3N1K2/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 461);
    }

    #[test]
    fn gentest_1684() {
        let board = Board::from_fen("8/2p5/rp4P1/1pk2p1p/4bP2/4n3/3N1K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 324);
        assert_eq!(perft(&board, 3, &PRECOMP), 3394);
    }

    #[test]
    fn gentest_1685() {
        let board = Board::from_fen("8/2p5/1p4P1/1pk2p1p/4bP2/4n2K/r2N4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 331);
        assert_eq!(perft(&board, 3, &PRECOMP), 9561);
    }

    #[test]
    fn gentest_1686() {
        let board = Board::from_fen("8/2p5/1p4P1/rp3p1p/1k2bP2/1N2n2K/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 311);
        assert_eq!(perft(&board, 3, &PRECOMP), 2966);
    }

    #[test]
    fn gentest_1687() {
        let board = Board::from_fen("8/2p5/1p4P1/rp3p2/1k2bP1p/4n3/7K/N7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 154);
        assert_eq!(perft(&board, 3, &PRECOMP), 4036);
    }

    #[test]
    fn gentest_1688() {
        let board = Board::from_fen("8/2p5/1p4P1/1p3p2/1kn1bP1p/7K/8/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 118);
        assert_eq!(perft(&board, 3, &PRECOMP), 502);
    }

    #[test]
    fn gentest_1689() {
        let board = Board::from_fen("6N1/2p5/1p6/1p3p2/1k2bP1p/7K/3n4/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 181);
        assert_eq!(perft(&board, 3, &PRECOMP), 6266);
    }

    #[test]
    fn gentest_1690() {
        let board = Board::from_fen("8/1bp5/1p3N2/1p3p2/1k3P1p/1n5K/8/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 327);
        assert_eq!(perft(&board, 3, &PRECOMP), 2407);
    }

    #[test]
    fn gentest_1691() {
        let board = Board::from_fen("8/1bp5/1p6/1p3p2/5P1p/kn2N2K/8/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 276);
        assert_eq!(perft(&board, 3, &PRECOMP), 6537);
    }

    #[test]
    fn gentest_1692() {
        let board = Board::from_fen("8/2p5/1p6/1p3p2/1k3P1p/1n2N3/6K1/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 250);
        assert_eq!(perft(&board, 3, &PRECOMP), 2619);
    }

    #[test]
    fn gentest_1693() {
        let board = Board::from_fen("8/2p5/1p6/1p3p2/5P1p/1nk1N3/6K1/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 308);
        assert_eq!(perft(&board, 3, &PRECOMP), 7047);
    }

    #[test]
    fn gentest_1694() {
        let board = Board::from_fen("8/2p5/1p6/1p3p2/5P1p/r1k5/3n2K1/5N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 216);
        assert_eq!(perft(&board, 3, &PRECOMP), 1809);
    }

    #[test]
    fn gentest_1695() {
        let board = Board::from_fen("8/2p5/1p6/1p3p2/5P1p/r1k2n1K/8/5N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 131);
        assert_eq!(perft(&board, 3, &PRECOMP), 3245);
    }

    #[test]
    fn gentest_1696() {
        let board = Board::from_fen("8/2p5/1p6/1p3p2/5P1p/2k2n1K/7N/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 118);
        assert_eq!(perft(&board, 3, &PRECOMP), 805);
    }

    #[test]
    fn gentest_1697() {
        let board = Board::from_fen("8/2p5/1p5N/1p3p2/5P1p/2k2n1K/8/3r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 161);
        assert_eq!(perft(&board, 3, &PRECOMP), 4609);
    }

    #[test]
    fn gentest_1698() {
        let board = Board::from_fen("3r4/2p5/1p5N/1p2np2/5P1K/2k5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 289);
        assert_eq!(perft(&board, 3, &PRECOMP), 2544);
    }

    #[test]
    fn gentest_1699() {
        let board = Board::from_fen("6r1/2p5/1p5N/1p2np2/5P1K/2k5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 225);
        assert_eq!(perft(&board, 3, &PRECOMP), 6326);
    }

    #[test]
    fn gentest_1700() {
        let board = Board::from_fen("6N1/2p5/1pn5/1p3p2/3k1P1K/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 887);
    }

    #[test]
    fn gentest_1701() {
        let board = Board::from_fen("8/2p5/1pn2N2/1pk2pK1/5P2/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 166);
        assert_eq!(perft(&board, 3, &PRECOMP), 1956);
    }

    #[test]
    fn gentest_1702() {
        let board = Board::from_fen("1n6/2p5/1p3N2/2k2K2/1p3P2/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 1731);
    }

    #[test]
    fn gentest_1703() {
        let board = Board::from_fen("1n6/2p5/1p3N2/8/1pk2P2/5K2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 203);
        assert_eq!(perft(&board, 3, &PRECOMP), 2469);
    }

    #[test]
    fn gentest_1704() {
        let board = Board::from_fen("8/8/np6/2p5/1pk1NP2/5K2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 128);
        assert_eq!(perft(&board, 3, &PRECOMP), 1843);
    }

    #[test]
    fn gentest_1705() {
        let board = Board::from_fen("8/8/np6/2pk2N1/1p3P2/8/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 131);
        assert_eq!(perft(&board, 3, &PRECOMP), 1311);
    }

    #[test]
    fn gentest_1706() {
        let board = Board::from_fen("8/2k2N2/np6/2p5/1p3P2/8/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 141);
        assert_eq!(perft(&board, 3, &PRECOMP), 1904);
    }

    #[test]
    fn gentest_1707() {
        let board = Board::from_fen("8/2k5/np6/6N1/1pp2P2/8/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 142);
        assert_eq!(perft(&board, 3, &PRECOMP), 1681);
    }

    #[test]
    fn gentest_1708() {
        let board = Board::from_fen("1n6/2k5/1p6/6N1/2p2P2/1p6/3K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 1737);
    }

    #[test]
    fn gentest_1709() {
        let board = Board::from_fen("1n6/3k4/1p6/6N1/1Kp2P2/1p6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 130);
        assert_eq!(perft(&board, 3, &PRECOMP), 1468);
    }

    #[test]
    fn gentest_1710() {
        let board = Board::from_fen("1n6/8/1p1kN3/8/1K3P2/1pp5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 1679);
    }

    #[test]
    fn gentest_1711() {
        let board = Board::from_fen("8/8/np1kN3/8/5P2/2K5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 140);
        assert_eq!(perft(&board, 3, &PRECOMP), 1485);
    }

    #[test]
    fn gentest_1712() {
        let board = Board::from_fen("4n3/8/1p1kN3/8/5P2/8/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 147);
        assert_eq!(perft(&board, 3, &PRECOMP), 2087);
    }

    #[test]
    fn gentest_1713() {
        let board = Board::from_fen("8/6n1/1p1kN3/8/5P2/2K5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 140);
        assert_eq!(perft(&board, 3, &PRECOMP), 1453);
    }

    #[test]
    fn gentest_1714() {
        let board = Board::from_fen("8/6N1/1p6/8/4kP2/2K5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 63);
        assert_eq!(perft(&board, 3, &PRECOMP), 726);
        assert_eq!(perft(&board, 4, &PRECOMP), 4912);
    }

    #[test]
    fn gentest_1715() {
        let board = Board::from_fen("8/6N1/1p6/8/5k2/8/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 69);
        assert_eq!(perft(&board, 3, &PRECOMP), 499);
        assert_eq!(perft(&board, 4, &PRECOMP), 5068);
    }

    #[test]
    fn gentest_1716() {
        let board = Board::from_fen("8/6N1/1p6/8/5k2/8/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 91);
        assert_eq!(perft(&board, 3, &PRECOMP), 1032);
        assert_eq!(perft(&board, 4, &PRECOMP), 7624);
    }

    #[test]
    fn gentest_1717() {
        let board = Board::from_fen("8/6N1/8/1p6/5k2/8/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 64);
        assert_eq!(perft(&board, 3, &PRECOMP), 422);
        assert_eq!(perft(&board, 4, &PRECOMP), 4550);
    }

    #[test]
    fn gentest_1718() {
        let board = Board::from_fen("8/8/4N3/1p1k4/8/8/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 110);
        assert_eq!(perft(&board, 3, &PRECOMP), 1415);
        assert_eq!(perft(&board, 4, &PRECOMP), 9597);
    }

    #[test]
    fn gentest_1719() {
        let board = Board::from_fen("8/8/4N3/1p6/2k5/8/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 77);
        assert_eq!(perft(&board, 3, &PRECOMP), 527);
        assert_eq!(perft(&board, 4, &PRECOMP), 6993);
    }

    #[test]
    fn gentest_1720() {
        let board = Board::from_fen("8/2N5/8/1p6/8/2k5/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 996);
        assert_eq!(perft(&board, 4, &PRECOMP), 7043);
    }

    #[test]
    fn gentest_1721() {
        let board = Board::from_fen("8/2N5/8/1p6/8/1k6/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 762);
        assert_eq!(perft(&board, 4, &PRECOMP), 9426);
    }

    #[test]
    fn gentest_1722() {
        let board = Board::from_fen("8/8/8/1p1N4/2k5/8/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 1093);
        assert_eq!(perft(&board, 4, &PRECOMP), 7180);
    }

    #[test]
    fn gentest_1723() {
        let board = Board::from_fen("8/8/8/1p1N4/8/1k6/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 108);
        assert_eq!(perft(&board, 3, &PRECOMP), 629);
        assert_eq!(perft(&board, 4, &PRECOMP), 8773);
    }

    #[test]
    fn gentest_1724() {
        let board = Board::from_fen("8/8/8/3N4/kp6/3K4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 69);
        assert_eq!(perft(&board, 3, &PRECOMP), 929);
        assert_eq!(perft(&board, 4, &PRECOMP), 4490);
    }

    #[test]
    fn gentest_1725() {
        let board = Board::from_fen("8/8/8/1k6/1p6/2N1K3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 100);
        assert_eq!(perft(&board, 3, &PRECOMP), 657);
        assert_eq!(perft(&board, 4, &PRECOMP), 8172);
    }

    #[test]
    fn gentest_1726() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1727() {
        let board = Board::from_fen("rnbqkbnr/pppp1ppp/4p3/8/3P4/7P/PPP1PPP1/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 783);
    }

    #[test]
    fn gentest_1728() {
        let board = Board::from_fen("rnbqk1nr/ppp2ppp/3pp3/8/1b1P4/2N4P/PPP1PPP1/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 722);
    }

    #[test]
    fn gentest_1729() {
        let board = Board::from_fen("rnbq2nr/ppp1kppp/3pp3/8/1b1P2PP/2N5/PPP1PP2/R1BQKBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 767);
    }

    #[test]
    fn gentest_1730() {
        let board = Board::from_fen("rn1q2nr/p1pbkppp/3pp3/1p6/1b1P2PP/2N4N/PPP1PP2/R1BQKB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 696);
    }

    #[test]
    fn gentest_1731() {
        let board = Board::from_fen("r2q2nr/p1pbkppp/2npp3/1p4P1/1b1P1N1P/2N5/PPP1PP2/R1BQKB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 777);
    }

    #[test]
    fn gentest_1732() {
        let board = Board::from_fen("1r1q2nr/p1pbkppp/2npp3/bp4P1/3P1N1P/2N5/PPP1PP1R/R1BQKB2 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 734);
    }

    #[test]
    fn gentest_1733() {
        let board = Board::from_fen("r2q2nr/p1pbkppp/2npp3/bp4P1/3P1N1P/2N1P3/PPPQ1P1R/R1B1KB2 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1087);
    }

    #[test]
    fn gentest_1734() {
        let board = Board::from_fen("r2q2nr/p1pbkppp/2n5/bp1p2P1/3P3P/2N1P3/PPPQ1P1R/R1B1KB2 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 970);
    }

    #[test]
    fn gentest_1735() {
        let board = Board::from_fen("r4qnr/p1pbkppp/2n5/bp1p2P1/2BP3P/4P3/PPPQ1P1R/R1BNK3 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 957);
    }

    #[test]
    fn gentest_1736() {
        let board = Board::from_fen("r4qnr/p1p1kpp1/2n4p/bp1p2P1/3P3P/1B2P2b/PPPQ1P1R/R1BNK3 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 798);
    }

    #[test]
    fn gentest_1737() {
        let board = Board::from_fen("r4qnr/p1p1kpp1/1bn4p/Qp1p2P1/2PP3P/1B2P2b/PP3P1R/R1BNK3 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1166);
    }

    #[test]
    fn gentest_1738() {
        let board = Board::from_fen("r4qnr/p1p1kp2/1b4pp/Qp1p2P1/PnPP3P/1B2P2b/1P3P1R/R1BNK3 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1008);
    }

    #[test]
    fn gentest_1739() {
        let board = Board::from_fen("r5nr/p1p1kpq1/1Q4pp/1p1p2P1/PnPP3P/1B2P2b/1P1K1P1R/R1BN4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1370);
    }

    #[test]
    fn gentest_1740() {
        let board = Board::from_fen("1r4nr/2p1kpq1/pQ4pp/1p1p2P1/PnPP3P/1B2P2b/1P2KP1R/R1BN4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1229);
    }

    #[test]
    fn gentest_1741() {
        let board = Board::from_fen("1r4nr/2p1kp2/pQ3qpp/1p1p2P1/PnPP3P/4P2b/BP3P1R/R1BNK3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1344);
    }

    #[test]
    fn gentest_1742() {
        let board = Board::from_fen("6nr/2p1kp2/pr3qpp/1p1p2P1/PnPP3P/1P2P3/B4P1R/R1BNKb2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 871);
    }

    #[test]
    fn gentest_1743() {
        let board = Board::from_fen("3k2nr/2p2p2/pr3qpp/1P1p2P1/Pn1P1P1P/1P2P3/B6R/R1BNKb2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 932);
    }

    #[test]
    fn gentest_1744() {
        let board = Board::from_fen("4k1nr/2p2p2/p3rqpp/1P1p2P1/Pn1P1P1P/1P2P3/7R/RBBNKb2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1243);
    }

    #[test]
    fn gentest_1745() {
        let board = Board::from_fen("4k1nr/2p1qp2/p3r1pp/1P1p2P1/Pn1P1P1P/1P2P3/7R/RBBNKb2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1125);
    }

    #[test]
    fn gentest_1746() {
        let board = Board::from_fen("4k1nr/2p2p2/p3r1pp/1P1p3q/Pn1P1P1P/1P2P3/4R3/RBBNKb2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1065);
    }

    #[test]
    fn gentest_1747() {
        let board = Board::from_fen("4k1nr/2p2p2/p3r1pp/1P1p3q/Pn1P1P1P/1P1bP3/4R3/RBBNK3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 947);
    }

    #[test]
    fn gentest_1748() {
        let board = Board::from_fen("4k1nr/2p5/pr4pp/1P1p1p1q/Pn1P1P1P/1P1bP3/3KR3/RBBN4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 650);
    }

    #[test]
    fn gentest_1749() {
        let board = Board::from_fen("5knr/2p5/pr4pp/PP1p1p1q/1n1P1P1P/1P1bP3/1B1KR3/RB1N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 659);
    }

    #[test]
    fn gentest_1750() {
        let board = Board::from_fen("5knr/2p5/p1r4p/PP1p1ppq/1n1P1P1P/1P1bP3/RB1KR3/1B1N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 783);
    }

    #[test]
    fn gentest_1751() {
        let board = Board::from_fen("4k1nr/2p5/P1r4p/P2p1ppq/1n1P1P1P/1P1bP3/R2KR3/1BBN4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 765);
    }

    #[test]
    fn gentest_1752() {
        let board = Board::from_fen("6n1/2p1k2r/P1r4p/P2p1ppq/1n1P1P1P/1P1bP3/3KR3/RBBN4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 857);
    }

    #[test]
    fn gentest_1753() {
        let board = Board::from_fen("6n1/2p1k2r/P1r4p/P2p1ppq/1n1PPP1P/1P6/3K4/RBBNRb2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 990);
    }

    #[test]
    fn gentest_1754() {
        let board = Board::from_fen("6n1/2p1k2r/P2r3p/P2p1ppq/1n1PPP1P/1P5b/B2K4/R1BNR3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 805);
    }

    #[test]
    fn gentest_1755() {
        let board = Board::from_fen("6n1/2p1k2r/P2r3p/P2p1pP1/1n1PP2P/1P2K2b/B7/R1BqR3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 666);
    }

    #[test]
    fn gentest_1756() {
        let board = Board::from_fen("6n1/2prk2r/P6p/P2p1pP1/1n1PP2P/1P2K2b/B7/R1B2qR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 689);
    }

    #[test]
    fn gentest_1757() {
        let board = Board::from_fen("6n1/2prk2r/P6p/P2p2P1/1n1Pp2P/BP2K2b/B7/1R3qR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 624);
    }

    #[test]
    fn gentest_1758() {
        let board = Board::from_fen("6n1/2pr3r/P2k2Pp/P2p4/1n1Pp1bP/BP2K3/B7/1R3qR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 716);
    }

    #[test]
    fn gentest_1759() {
        let board = Board::from_fen("6n1/2p2r1r/P2k2Pp/P2p4/1n1Pp1bP/1P2K3/BB6/R4qR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 849);
    }

    #[test]
    fn gentest_1760() {
        let board = Board::from_fen("6nr/2p3r1/P2k2Pp/P2p4/1n1Pp1bP/1P2K3/BB6/5RR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 708);
    }

    #[test]
    fn gentest_1761() {
        let board = Board::from_fen("6nr/2p3r1/P2k2Pp/P2p4/3Pp1bP/1P1nKR2/BB6/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 898);
    }

    #[test]
    fn gentest_1762() {
        let board = Board::from_fen("r7/2p3r1/P2k1nPp/P2p4/3Pp1bP/1P1nKR2/BB6/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 956);
    }

    #[test]
    fn gentest_1763() {
        let board = Board::from_fen("r7/2p3r1/P3knPp/P2p4/3Pp1bP/1P1nKR2/1B3R2/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 907);
    }

    #[test]
    fn gentest_1764() {
        let board = Board::from_fen("r7/2p1r1P1/P3kn1p/P2p4/3Pp1bP/1P1nKR2/1B3R2/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 895);
    }

    #[test]
    fn gentest_1765() {
        let board = Board::from_fen("r7/2pr2P1/P3kn1p/P2p3P/3Pp1b1/1P1nK2R/1B3R2/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1073);
    }

    #[test]
    fn gentest_1766() {
        let board = Board::from_fen("r7/P1pr2Pn/4k2p/P2p3P/3Pp3/1P1nK2R/1B3R2/1B1b4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 959);
    }

    #[test]
    fn gentest_1767() {
        let board = Board::from_fen("1r6/P1pr2Pn/4k2p/P2p3P/3Pp3/1P2K2R/1BB2R2/3b4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1071);
    }

    #[test]
    fn gentest_1768() {
        let board = Board::from_fen("1r4N1/P2r3n/2p1k2p/P2p3P/3Pp3/1P2Kb1R/1BB2R2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1031);
    }

    #[test]
    fn gentest_1769() {
        let board = Board::from_fen("8/Pr1rN2n/2p1k2p/P2p3P/3Pp2R/1P2Kb2/1BB2R2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 840);
    }

    #[test]
    fn gentest_1770() {
        let board = Board::from_fen("8/r2rN3/2p1k2p/P2p2nP/3Pp3/1P2Kb1R/1BB2R2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 701);
    }

    #[test]
    fn gentest_1771() {
        let board = Board::from_fen("6N1/r2r4/2p1k2p/P2p2nb/3Pp3/1P2K3/1BB2R1R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 772);
    }

    #[test]
    fn gentest_1772() {
        let board = Board::from_fen("3r2N1/r4b2/2p1k2p/P2p2n1/3Pp3/1P2K3/2B2R1R/B7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 716);
    }

    #[test]
    fn gentest_1773() {
        let board = Board::from_fen("1r4N1/r4b2/2p1k2p/P2p2n1/3PpK2/1P6/2B1R2R/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 780);
    }

    #[test]
    fn gentest_1774() {
        let board = Board::from_fen("1r6/3r1b2/2p2k1p/P2p2n1/3PpK2/1P6/2B1R2R/B7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 783);
    }

    #[test]
    fn gentest_1775() {
        let board = Board::from_fen("1r6/3r1b2/5k1p/PBpp2n1/3PpK2/1P6/4R2R/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 935);
    }

    #[test]
    fn gentest_1776() {
        let board = Board::from_fen("1r1r4/5bk1/7p/PBpp2n1/3PpK2/1P6/1R5R/B7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1052);
    }

    #[test]
    fn gentest_1777() {
        let board = Board::from_fen("1r6/3r1bk1/2B4p/P1pp2n1/3PpK2/1P6/6RR/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1011);
    }

    #[test]
    fn gentest_1778() {
        let board = Board::from_fen("1r6/3r1b2/2B2k1p/P1pp2n1/3P1K1R/1P2p3/6R1/B7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1033);
    }

    #[test]
    fn gentest_1779() {
        let board = Board::from_fen("7r/3r1b2/2B2k1p/P1pp2n1/3P1K1R/1PB1p3/5R2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 992);
    }

    #[test]
    fn gentest_1780() {
        let board = Board::from_fen("7r/r4b2/2B2k1p/P1pp2n1/1B1P1K1R/1P2p3/5R2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 972);
    }

    #[test]
    fn gentest_1781() {
        let board = Board::from_fen("7r/5b2/2B2k1p/r1pp2n1/1B1P1K2/1P2p3/4R3/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1223);
    }

    #[test]
    fn gentest_1782() {
        let board = Board::from_fen("6br/8/2B2k1p/r1pp4/3P1K2/1P2pn2/4R3/4B2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 922);
    }

    #[test]
    fn gentest_1783() {
        let board = Board::from_fen("6br/8/2B2k1p/r1Pp4/6K1/1P2p3/4R3/4B1nR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 703);
    }

    #[test]
    fn gentest_1784() {
        let board = Board::from_fen("6br/5k2/2B4p/r1P5/3p2KB/1P2p3/4R3/6nR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 640);
    }

    #[test]
    fn gentest_1785() {
        let board = Board::from_fen("6br/5k2/2B4p/r1P5/3p2KB/1P2p2R/R3n3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 715);
    }

    #[test]
    fn gentest_1786() {
        let board = Board::from_fen("6br/5k2/R1B4p/1rP5/3p1nKB/1P2p2R/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 747);
    }

    #[test]
    fn gentest_1787() {
        let board = Board::from_fen("6br/5k2/2B4p/1rP5/5nK1/1P1pp2R/8/R3B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 967);
    }

    #[test]
    fn gentest_1788() {
        let board = Board::from_fen("6br/5k2/2B1n2p/2r5/6K1/1PBpp2R/8/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1123);
    }

    #[test]
    fn gentest_1789() {
        let board = Board::from_fen("6bB/2n2k2/7p/2r5/6K1/1P1pp2R/8/R6B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 913);
    }

    #[test]
    fn gentest_1790() {
        let board = Board::from_fen("6bB/2n2k2/7p/8/6K1/1Prp1B1R/4p3/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 894);
    }

    #[test]
    fn gentest_1791() {
        let board = Board::from_fen("6b1/2n2k2/2B2B1p/8/6K1/1r1p3R/4p3/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1157);
    }

    #[test]
    fn gentest_1792() {
        let board = Board::from_fen("1r6/2n2k1b/2B2B1p/8/6K1/3p4/4p3/R6R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1676);
    }

    #[test]
    fn gentest_1793() {
        let board = Board::from_fen("1r6/2n1k2b/2B4p/4B3/6K1/3p4/4p3/R2R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1434);
    }

    #[test]
    fn gentest_1794() {
        let board = Board::from_fen("1r6/1B2k2b/n6p/4B3/6K1/3p4/8/R2r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1062);
    }

    #[test]
    fn gentest_1795() {
        let board = Board::from_fen("B4r2/4k2b/n6p/8/6K1/2Bp4/8/R2r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 978);
    }

    #[test]
    fn gentest_1796() {
        let board = Board::from_fen("B5r1/4k2b/n7/7K/8/2Bp4/8/R2r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 908);
    }

    #[test]
    fn gentest_1797() {
        let board = Board::from_fen("6r1/7b/n4k2/7K/8/3p1B2/8/R2r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 676);
    }

    #[test]
    fn gentest_1798() {
        let board = Board::from_fen("6r1/6kb/n7/6K1/8/5B2/3p4/R2r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 609);
    }

    #[test]
    fn gentest_1799() {
        let board = Board::from_fen("6r1/6k1/n7/8/6K1/5B2/2bp4/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 446);
    }

    #[test]
    fn gentest_1800() {
        let board = Board::from_fen("6r1/7k/n7/3B4/6K1/8/2bp4/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 153);
        assert_eq!(perft(&board, 3, &PRECOMP), 3319);
    }

    #[test]
    fn gentest_1801() {
        let board = Board::from_fen("6r1/1B5k/n7/8/8/7K/3p4/1b1R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 503);
    }

    #[test]
    fn gentest_1802() {
        let board = Board::from_fen("B5r1/7k/8/2n5/8/7K/2bp4/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 583);
    }

    #[test]
    fn gentest_1803() {
        let board = Board::from_fen("BR4r1/3n3k/8/8/8/7K/2bp4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 686);
    }

    #[test]
    fn gentest_1804() {
        let board = Board::from_fen("1R4r1/8/1n5k/8/8/7K/2bp2B1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 593);
    }

    #[test]
    fn gentest_1805() {
        let board = Board::from_fen("6r1/6R1/1n5k/8/8/7K/3p2B1/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 585);
    }

    #[test]
    fn gentest_1806() {
        let board = Board::from_fen("6r1/5R2/7k/8/n7/7K/6B1/1b1q4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 986);
    }

    #[test]
    fn gentest_1807() {
        let board = Board::from_fen("6r1/2R5/7k/3q4/n6K/8/6B1/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 934);
    }

    #[test]
    fn gentest_1808() {
        let board = Board::from_fen("7r/1q6/7k/8/n6K/8/6B1/1bR5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 944);
    }

    #[test]
    fn gentest_1809() {
        let board = Board::from_fen("7r/8/7k/8/n3q3/6KB/8/1bR5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 806);
    }

    #[test]
    fn gentest_1810() {
        let board = Board::from_fen("8/7r/7k/8/n3q3/6K1/2b5/2R2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 638);
        assert_eq!(perft(&board, 3, &PRECOMP), 9723);
    }

    #[test]
    fn gentest_1811() {
        let board = Board::from_fen("8/7r/7k/8/n1R1q3/3B2K1/8/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 679);
    }

    #[test]
    fn gentest_1812() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1813() {
        let board = Board::from_fen("rnbqkbnr/ppppp1pp/8/5p2/8/1PN5/P1PPPPPP/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 459);
    }

    #[test]
    fn gentest_1814() {
        let board = Board::from_fen("rnbq1bnr/pppppk1p/6p1/5p2/P7/1PN5/2PPPPPP/R1BQKBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 597);
    }

    #[test]
    fn gentest_1815() {
        let board = Board::from_fen("rnbq1bnr/ppp1pk1p/6p1/3p1p2/PP6/2NP4/2P1PPPP/R1BQKBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 865);
    }

    #[test]
    fn gentest_1816() {
        let board = Board::from_fen("rnbq1bnr/pp2p1kp/6p1/2pp1p2/PP5P/2NP4/2P1PPP1/R1BQKBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 870);
    }

    #[test]
    fn gentest_1817() {
        let board = Board::from_fen("rnb2bnr/pp2p1kp/6p1/q1pp1p2/PP3B1P/2NP4/2P1PPP1/R2QKBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1011);
    }

    #[test]
    fn gentest_1818() {
        let board = Board::from_fen("rnb2b1r/pp2p1kp/6pn/2pN1p2/Pq3B1P/3P4/2P1PPP1/R2QKBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 155);
        assert_eq!(perft(&board, 3, &PRECOMP), 5421);
    }

    #[test]
    fn gentest_1819() {
        let board = Board::from_fen("rnb2b1r/pp2p1kp/6pn/2pN1p2/P4B1P/1qPP4/4PPP1/RQ2KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1163);
    }

    #[test]
    fn gentest_1820() {
        let board = Board::from_fen("r1b2b1r/pp2p1kp/2n3pn/2pN1p2/P4B1P/2PP4/4PPP1/R2QKBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 896);
    }

    #[test]
    fn gentest_1821() {
        let board = Board::from_fen("r1b2b1r/ppN3kp/2n1p1pn/2p2p2/P4B1P/2PP4/4PPP1/2RQKBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 847);
    }

    #[test]
    fn gentest_1822() {
        let board = Board::from_fen("r1b2b1r/ppN4p/2n1pkpn/5p2/P1p2B1P/2PP4/4PPP1/1R1QKBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1084);
    }

    #[test]
    fn gentest_1823() {
        let board = Board::from_fen("r1b2b1r/pp3k1p/2n1p1pn/5p2/P1p2B1P/2PPN3/4PPP1/1R1QKBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1094);
    }

    #[test]
    fn gentest_1824() {
        let board = Board::from_fen("rnb2br1/pp3k1p/4p1pn/5p2/P1p2B1P/2PPN2N/4PPP1/1R1QKB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 842);
    }

    #[test]
    fn gentest_1825() {
        let board = Board::from_fen("rnb2br1/pp3k1p/4p2n/5pp1/P1p2BPP/2PPN2N/4PP2/R2QKB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 943);
    }

    #[test]
    fn gentest_1826() {
        let board = Board::from_fen("rnb2br1/pp3n1p/4pk2/5pp1/P1P2BPP/2P1N2N/4PP2/R2QKB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1030);
    }

    #[test]
    fn gentest_1827() {
        let board = Board::from_fen("rnb2br1/pp5p/4pk2/4npp1/P1PQ1BPP/2P1N2N/4PP2/1R2KB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1147);
    }

    #[test]
    fn gentest_1828() {
        let board = Board::from_fen("rnb2br1/pp5p/4p1k1/4np2/P1PQ2Pp/2P1N2N/4PP1B/1R2KB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1310);
    }

    #[test]
    fn gentest_1829() {
        let board = Board::from_fen("rnb3r1/pp5p/4p1kb/4npN1/P1PQ1PPp/2P1N3/4P2B/1R2KB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1107);
    }

    #[test]
    fn gentest_1830() {
        let board = Board::from_fen("rnb3r1/pp5p/4p1kb/4npN1/P1PQ1PPp/2P1N3/4P2B/1R1K1B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1097);
    }

    #[test]
    fn gentest_1831() {
        let board = Board::from_fen("rnb3r1/1p5p/4p1kb/p1P1np2/P2QNPPp/2P1N3/4P2B/1R1K1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1212);
    }

    #[test]
    fn gentest_1832() {
        let board = Board::from_fen("rnbr4/1p5p/4p1kb/p1P1n3/P2QpPPp/2P1N3/4P2B/1R2KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1141);
    }

    #[test]
    fn gentest_1833() {
        let board = Board::from_fen("rnb2r2/1p5p/4p1kb/p1P1n3/PQ2pPPp/2P1N3/4P2B/3RKB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_1834() {
        let board = Board::from_fen("rnb2r2/5k1p/1p2p2b/p1P1n3/PQ2pPPp/2P5/4P1NB/3RKB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1071);
    }

    #[test]
    fn gentest_1835() {
        let board = Board::from_fen("rnb2r2/5k1p/1p2p3/p1P1n1b1/P3pP1p/2P5/1Q2P1NB/3RKB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1171);
    }

    #[test]
    fn gentest_1836() {
        let board = Board::from_fen("rn3rk1/1b5p/1p2p3/p1P1n1b1/P1P1pP1p/8/1Q2P1NB/3RKB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1383);
    }

    #[test]
    fn gentest_1837() {
        let board = Board::from_fen("rn3rk1/1b5p/1p2p3/p1P3b1/P1P1pP1p/5n2/1Q2PKN1/3R1BBR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1386);
    }

    #[test]
    fn gentest_1838() {
        let board = Board::from_fen("1n4k1/1b3r1p/rp2p3/p1P3b1/P1P1pP1p/4Nn2/1Q2PK2/3R1BBR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1444);
    }

    #[test]
    fn gentest_1839() {
        let board = Board::from_fen("1n4k1/1b2r2p/rpP1p3/p4Nb1/P1P1pP1p/5n2/1Q2PK2/3R1BBR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1412);
    }

    #[test]
    fn gentest_1840() {
        let board = Board::from_fen("1n2r1k1/1b5p/rpP1pb2/p4N2/P1P1pP1p/5n2/1Q2PK2/4RBBR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1392);
    }

    #[test]
    fn gentest_1841() {
        let board = Board::from_fen("1n2rQk1/7p/rpb1pb2/p4N2/P1P1pP1p/5n2/4PK2/4RBBR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 46);
        assert_eq!(perft(&board, 3, &PRECOMP), 1698);
    }

    #[test]
    fn gentest_1842() {
        let board = Board::from_fen("1n2rk2/7p/rpb1p3/p4N2/P1P1pP1p/5n2/1b2PK2/2R2BBR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 908);
    }

    #[test]
    fn gentest_1843() {
        let board = Board::from_fen("1n2rk2/7p/rpb1p3/p4N2/P1P1pP1p/8/1b2PKB1/3R2nR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1057);
    }

    #[test]
    fn gentest_1844() {
        let board = Board::from_fen("1n2rk2/8/rpbRp2p/p4N2/P1P1pP1p/8/4PKB1/b5nR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 877);
    }

    #[test]
    fn gentest_1845() {
        let board = Board::from_fen("1n2rk2/r7/1pb1p2p/p2R1N2/P1P1pP1p/8/4PKB1/b5nR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1186);
    }

    #[test]
    fn gentest_1846() {
        let board = Board::from_fen("1n2rk2/r2b4/1p5p/p2RpN2/P1P1pP1p/8/4P1B1/b3K1nR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 977);
    }

    #[test]
    fn gentest_1847() {
        let board = Board::from_fen("1n2rk2/r2b4/1p5p/p2R4/P1P1pp1p/6N1/4P1B1/b4KnR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1099);
    }

    #[test]
    fn gentest_1848() {
        let board = Board::from_fen("1nr2k2/r7/1p5p/p2R4/b1P1pp1p/6N1/4PKB1/b5nR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1330);
    }

    #[test]
    fn gentest_1849() {
        let board = Board::from_fen("1nr2k2/7r/1p5p/p7/b1P1pp1p/6N1/4PKB1/b3R1nR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 913);
    }

    #[test]
    fn gentest_1850() {
        let board = Board::from_fen("1nr2k2/1r6/1p5p/p7/b1P1pp1p/6N1/4PKB1/b4RnR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 866);
    }

    #[test]
    fn gentest_1851() {
        let board = Board::from_fen("1nr2k2/1r6/1p5p/p7/b1PbNp1p/4P3/5KB1/5RnR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 968);
    }

    #[test]
    fn gentest_1852() {
        let board = Board::from_fen("1nr3k1/7r/1p5p/p7/b1Pb1p1p/4P3/3N1KB1/5RnR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1077);
    }

    #[test]
    fn gentest_1853() {
        let board = Board::from_fen("1nr3k1/7r/1pb4p/p1P5/3b1p1p/4P3/5KB1/1N3RnR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 892);
    }

    #[test]
    fn gentest_1854() {
        let board = Board::from_fen("1n3rk1/7r/1pb4p/p1P5/3b3p/4Pp2/5KB1/1N3RR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 431);
        assert_eq!(perft(&board, 3, &PRECOMP), 7113);
    }

    #[test]
    fn gentest_1855() {
        let board = Board::from_fen("1n3rk1/3b3r/1p5p/p1P5/3b3p/4Pp2/5K2/1N1R2RB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 123);
        assert_eq!(perft(&board, 3, &PRECOMP), 4003);
    }

    #[test]
    fn gentest_1856() {
        let board = Board::from_fen("1n1r2k1/3b2br/1p1R3p/p1P5/7p/4Pp2/5K2/1N4RB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 763);
    }

    #[test]
    fn gentest_1857() {
        let board = Board::from_fen("1nbr2k1/6br/1p3R1p/p1P5/7p/N3Pp2/5K2/6RB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 859);
    }

    #[test]
    fn gentest_1858() {
        let board = Board::from_fen("1n1r2k1/3b2br/6Rp/p1p5/7p/N3Pp2/5K2/6RB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 683);
    }

    #[test]
    fn gentest_1859() {
        let board = Board::from_fen("1n1r2k1/3b2br/6Rp/p7/2p4p/4Pp2/2N2K2/5R1B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 647);
    }

    #[test]
    fn gentest_1860() {
        let board = Board::from_fen("1n1r2kr/6b1/2b4p/p5R1/2p4p/4Pp2/2N2K2/5R1B w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 841);
    }

    #[test]
    fn gentest_1861() {
        let board = Board::from_fen("1n1r2kr/8/2b4p/pR6/2p4p/2b1Pp2/2N5/5RKB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1076);
    }

    #[test]
    fn gentest_1862() {
        let board = Board::from_fen("bn1r2kr/8/7p/pR2b3/2p4p/4Pp2/8/4NRKB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 765);
    }

    #[test]
    fn gentest_1863() {
        let board = Board::from_fen("b2r2kr/3n4/7p/pR2b3/2p4p/3NPp2/5R2/6KB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1082);
    }

    #[test]
    fn gentest_1864() {
        let board = Board::from_fen("b2r3r/3n2k1/7p/1R2b3/pNp4p/4Pp2/5R2/6KB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 964);
    }

    #[test]
    fn gentest_1865() {
        let board = Board::from_fen("b2r3r/3n2k1/7p/1R6/pNp4p/4PB2/5R1b/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1372);
    }

    #[test]
    fn gentest_1866() {
        let board = Board::from_fen("3r4/3n2kr/7p/1R1b4/pNp4p/4PB2/1R5b/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1254);
    }

    #[test]
    fn gentest_1867() {
        let board = Board::from_fen("3r1n2/6kr/7p/1R1b4/p1p4p/4PB2/N2R3b/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1286);
    }

    #[test]
    fn gentest_1868() {
        let board = Board::from_fen("5n2/3r2kr/7p/1R1b4/p1p4p/4PBb1/N2RK3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 954);
    }

    #[test]
    fn gentest_1869() {
        let board = Board::from_fen("5n2/3r2kr/8/3R3p/p1p4p/4PBb1/3RK3/2N5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 820);
    }

    #[test]
    fn gentest_1870() {
        let board = Board::from_fen("5n2/3r2kr/8/3R3p/p1p4p/4PB2/Rb2K3/2N5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 814);
    }

    #[test]
    fn gentest_1871() {
        let board = Board::from_fen("5n2/2r3kr/8/3R3p/p1p4p/4PB2/1b3K2/R1N5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 988);
    }

    #[test]
    fn gentest_1872() {
        let board = Board::from_fen("5nk1/2r4r/8/3R3p/p6p/3pPB2/1b3K2/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1176);
    }

    #[test]
    fn gentest_1873() {
        let board = Board::from_fen("2r2nk1/7r/8/1R5p/p6p/3pPB2/1b3K2/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1405);
    }

    #[test]
    fn gentest_1874() {
        let board = Board::from_fen("2r3k1/7r/4n3/1R5p/p6p/3pPB2/8/b5K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1261);
    }

    #[test]
    fn gentest_1875() {
        let board = Board::from_fen("2r3k1/7r/2B5/1R4np/p6p/3pP3/8/b5K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 910);
    }

    #[test]
    fn gentest_1876() {
        let board = Board::from_fen("2r5/7k/2B4r/6np/p6p/3pP3/8/bR4K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 953);
    }

    #[test]
    fn gentest_1877() {
        let board = Board::from_fen("2r5/7k/6r1/1B4np/7p/3pP3/8/bR4K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 742);
    }

    #[test]
    fn gentest_1878() {
        let board = Board::from_fen("8/7k/2B1r3/6np/7p/3pP3/8/bR4K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 773);
    }

    #[test]
    fn gentest_1879() {
        let board = Board::from_fen("8/7k/B7/6np/7p/3pP3/8/bR4K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 391);
        assert_eq!(perft(&board, 3, &PRECOMP), 7410);
    }

    #[test]
    fn gentest_1880() {
        let board = Board::from_fen("8/8/4n2k/1B5p/7p/3pP3/8/bR4K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 424);
        assert_eq!(perft(&board, 3, &PRECOMP), 9687);
    }

    #[test]
    fn gentest_1881() {
        let board = Board::from_fen("8/8/4n2k/7p/7p/3BP3/1R6/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 341);
        assert_eq!(perft(&board, 3, &PRECOMP), 3268);
    }

    #[test]
    fn gentest_1882() {
        let board = Board::from_fen("8/5n2/7k/7p/7p/4P3/1R6/1B4K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 208);
        assert_eq!(perft(&board, 3, &PRECOMP), 5211);
    }

    #[test]
    fn gentest_1883() {
        let board = Board::from_fen("8/2R5/7k/6np/7p/4P3/8/1B4K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 135);
        assert_eq!(perft(&board, 3, &PRECOMP), 1062);
    }

    #[test]
    fn gentest_1884() {
        let board = Board::from_fen("8/2R5/8/6kp/7p/4P2n/7K/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 141);
        assert_eq!(perft(&board, 3, &PRECOMP), 3335);
    }

    #[test]
    fn gentest_1885() {
        let board = Board::from_fen("8/8/8/6kp/5R1p/4P3/7K/1B4n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 104);
        assert_eq!(perft(&board, 3, &PRECOMP), 626);
    }

    #[test]
    fn gentest_1886() {
        let board = Board::from_fen("8/8/7k/7p/7p/4P2n/5R1K/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 142);
        assert_eq!(perft(&board, 3, &PRECOMP), 3041);
    }

    #[test]
    fn gentest_1887() {
        let board = Board::from_fen("8/8/7k/6np/4P2p/8/2R4K/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 168);
        assert_eq!(perft(&board, 3, &PRECOMP), 1702);
    }

    #[test]
    fn gentest_1888() {
        let board = Board::from_fen("8/7k/8/7p/4P2p/5n2/2R3K1/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 225);
        assert_eq!(perft(&board, 3, &PRECOMP), 4061);
    }

    #[test]
    fn gentest_1889() {
        let board = Board::from_fen("8/2R5/7k/4P2p/7p/5n2/6K1/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 202);
        assert_eq!(perft(&board, 3, &PRECOMP), 1553);
    }

    #[test]
    fn gentest_1890() {
        let board = Board::from_fen("8/2R5/4P2k/7p/4n2p/8/6K1/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 271);
        assert_eq!(perft(&board, 3, &PRECOMP), 6241);
    }

    #[test]
    fn gentest_1891() {
        let board = Board::from_fen("8/7k/2R1P3/7p/4n2p/8/2B3K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 111);
        assert_eq!(perft(&board, 3, &PRECOMP), 1241);
    }

    #[test]
    fn gentest_1892() {
        let board = Board::from_fen("8/7k/2R1P3/7p/4n3/8/2B4p/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 32);
        assert_eq!(perft(&board, 3, &PRECOMP), 528);
        assert_eq!(perft(&board, 4, &PRECOMP), 6391);
    }

    #[test]
    fn gentest_1893() {
        let board = Board::from_fen("8/7k/2R1P3/7p/4n3/8/2B1K3/7q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 229);
        assert_eq!(perft(&board, 3, &PRECOMP), 4886);
    }

    #[test]
    fn gentest_1894() {
        let board = Board::from_fen("8/7k/2R1P3/8/4n2p/5q2/2B5/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 363);
        assert_eq!(perft(&board, 3, &PRECOMP), 4938);
    }

    #[test]
    fn gentest_1895() {
        let board = Board::from_fen("8/7k/3RP3/8/4n2p/8/8/3BK3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 269);
        assert_eq!(perft(&board, 3, &PRECOMP), 3279);
    }

    #[test]
    fn gentest_1896() {
        let board = Board::from_fen("4n3/7k/4P3/7B/7p/8/8/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 1514);
    }

    #[test]
    fn gentest_1897() {
        let board = Board::from_fen("4n3/6k1/4P3/8/7p/8/5K2/3B4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 165);
        assert_eq!(perft(&board, 3, &PRECOMP), 1797);
    }

    #[test]
    fn gentest_1898() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1899() {
        let board = Board::from_fen("rnbqkbnr/pppppp1p/8/6p1/8/4PN2/PPPP1PPP/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 586);
    }

    #[test]
    fn gentest_1900() {
        let board = Board::from_fen("rnbqkb1r/pppppp2/7n/6pp/3P4/4PN2/PPP2PPP/RNBQKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 697);
    }

    #[test]
    fn gentest_1901() {
        let board = Board::from_fen("rnbqkb1r/pppppp2/8/6pp/P2P2n1/4PN2/1PPQ1PPP/RNB1KB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 839);
    }

    #[test]
    fn gentest_1902() {
        let board = Board::from_fen("rnbqkb1r/1pppp3/p4p2/6pp/P2P2n1/3QPN2/1PP2PPP/RNB1KB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 904);
    }

    #[test]
    fn gentest_1903() {
        let board = Board::from_fen("rnbqkb1r/1pppp3/p7/5ppp/P1PP2n1/3QP3/1P3PPP/RNB1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 833);
    }

    #[test]
    fn gentest_1904() {
        let board = Board::from_fen("rnbq1b1r/2pppk2/pp6/5ppp/P1PP2n1/2NQP3/1P3PPP/R1B1KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1086);
    }

    #[test]
    fn gentest_1905() {
        let board = Board::from_fen("rnb1qb1r/2pppk2/pp6/5ppp/P1PP2n1/4P3/NP3PPP/RQB1KBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 787);
    }

    #[test]
    fn gentest_1906() {
        let board = Board::from_fen("rnb1qb1r/2pppk2/pp6/5ppp/P1PP4/3nP3/NPQ2PPP/R1B1KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 149);
        assert_eq!(perft(&board, 3, &PRECOMP), 4437);
    }

    #[test]
    fn gentest_1907() {
        let board = Board::from_fen("rnb1qb1r/2pppk2/pp6/5ppp/P1PP4/4P3/NP3PPP/RQnK1BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 835);
    }

    #[test]
    fn gentest_1908() {
        let board = Board::from_fen("rnb1qbkr/2ppp3/p7/1p3ppp/P1PP4/4P3/NPK2PPP/RQn2BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 789);
    }

    #[test]
    fn gentest_1909() {
        let board = Board::from_fen("rnb1qbkr/2ppp3/p7/5ppp/P1pP1N2/4P3/NPK2PPP/RQn2B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 801);
    }

    #[test]
    fn gentest_1910() {
        let board = Board::from_fen("rnb1qbkr/3pp3/p7/2p2p1p/P1pP1Np1/4P3/NPK2PPP/R1Q2B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 694);
    }

    #[test]
    fn gentest_1911() {
        let board = Board::from_fen("rn2qbkr/1b1pp3/p7/2p2p1p/P1pP2p1/1P2P3/N1K1NPPP/R1Q2B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 845);
    }

    #[test]
    fn gentest_1912() {
        let board = Board::from_fen("rn1q1bkr/1b1pp3/p7/2p2p1p/P1pP4/1P2P1p1/N1K1NPPP/R2Q1B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1031);
    }

    #[test]
    fn gentest_1913() {
        let board = Board::from_fen("rn1q1bkr/1b1pp3/p7/2p2p1p/P2P4/1pN1P1p1/4NPPP/R1KQ1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 924);
    }

    #[test]
    fn gentest_1914() {
        let board = Board::from_fen("rn3bkr/1bqpp3/p7/2p2p1p/P2P4/2N1P1p1/1p2NPPP/R1K1QB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 198);
        assert_eq!(perft(&board, 3, &PRECOMP), 5805);
    }

    #[test]
    fn gentest_1915() {
        let board = Board::from_fen("rn3b1r/1bqpp1k1/p7/2p2p1p/P2P4/2N1P1P1/1pK1NPP1/R3QB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1395);
    }

    #[test]
    fn gentest_1916() {
        let board = Board::from_fen("rn3b1r/1bq1pk2/p2p4/2p2p1p/P2P4/1KN1P1P1/1p2NPP1/R3QB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1423);
    }

    #[test]
    fn gentest_1917() {
        let board = Board::from_fen("rn3b1r/1bq1pk2/p2p4/2p2p1p/P2P4/4P1P1/2K1NPP1/Rr1NQB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1117);
    }

    #[test]
    fn gentest_1918() {
        let board = Board::from_fen("rn3b1r/1bq1pk2/p2p4/2p2p1p/P2P4/4P1P1/1rK1NPPR/R2NQB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 197);
        assert_eq!(perft(&board, 3, &PRECOMP), 5135);
    }

    #[test]
    fn gentest_1919() {
        let board = Board::from_fen("rnq2b1r/1b2pk2/p2p4/2p2p1p/P2P4/4P1P1/K3NPPR/R2NQB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 841);
    }

    #[test]
    fn gentest_1920() {
        let board = Board::from_fen("rnq2b2/1b2pk1r/p2p4/2p4p/P2P1p2/4P1P1/K3NPP1/R2NQB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1077);
    }

    #[test]
    fn gentest_1921() {
        let board = Board::from_fen("r1q2b2/1b1npk1r/p2p4/2p4p/P2P1N2/4P1P1/K2Q1PP1/R2N1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1241);
    }

    #[test]
    fn gentest_1922() {
        let board = Board::from_fen("r4b2/1b1npk1r/p2p4/P1pq3p/3P1N2/4P1P1/K2Q1PP1/R2N1B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 164);
        assert_eq!(perft(&board, 3, &PRECOMP), 5869);
    }

    #[test]
    fn gentest_1923() {
        let board = Board::from_fen("r4b2/1b1npk1r/p2p4/P1p4p/3q4/4P1PN/3Q1PP1/RK1N1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1442);
    }

    #[test]
    fn gentest_1924() {
        let board = Board::from_fen("r7/1b1npkbr/p2p4/P1p4p/8/2q1P1PN/5PP1/RK1NQB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1113);
    }

    #[test]
    fn gentest_1925() {
        let board = Board::from_fen("r7/1b1npkbr/p2p4/P1p4p/6P1/4P2N/2K2PP1/R2NQB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1314);
    }

    #[test]
    fn gentest_1926() {
        let board = Board::from_fen("3r4/1b1npkbr/p2p4/P1p5/6Pp/4P2N/5PP1/R1KNQB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1072);
    }

    #[test]
    fn gentest_1927() {
        let board = Board::from_fen("3r4/3npkbr/p2p4/PBp5/R3b1Pp/4P2N/5PP1/2KNQ2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1520);
    }

    #[test]
    fn gentest_1928() {
        let board = Board::from_fen("3r4/3npk2/p2p3r/PBp5/R3b1Pp/2b1P2N/5PP1/2KN2QR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1241);
    }

    #[test]
    fn gentest_1929() {
        let board = Board::from_fen("3r4/3npk2/p2pr3/P1p5/R3b1Pp/2b1P2N/B4PP1/2KN2QR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 947);
    }

    #[test]
    fn gentest_1930() {
        let board = Board::from_fen("3r4/3npk2/p2p2r1/P1p5/Rb2b1Pp/4P2N/5PP1/1BKN2QR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 831);
    }

    #[test]
    fn gentest_1931() {
        let board = Board::from_fen("3r4/3npk2/p2p2r1/P1pb4/Rb4Pp/4PP1N/B5P1/2KN2QR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 853);
    }

    #[test]
    fn gentest_1932() {
        let board = Board::from_fen("3r4/3n1k2/p2p2r1/P1pbp3/R5Pp/4PP1N/B2b1QP1/2KN3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 173);
        assert_eq!(perft(&board, 3, &PRECOMP), 5710);
    }

    #[test]
    fn gentest_1933() {
        let board = Board::from_fen("3r4/3n1k2/p2p4/P1pbp3/R4Nrp/4PP2/B2K1QP1/3N3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1216);
    }

    #[test]
    fn gentest_1934() {
        let board = Board::from_fen("3r4/3n1k2/p2p4/P1pbp3/R6p/4PPrN/B2K1QP1/3N3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1034);
    }

    #[test]
    fn gentest_1935() {
        let board = Board::from_fen("3r4/3n1k2/p2pb3/P1p1p3/R3P2p/5PQN/B2K2P1/3N3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 853);
    }

    #[test]
    fn gentest_1936() {
        let board = Board::from_fen("2r5/3n1k2/p2p4/P1pbp3/R3PP1p/6QN/B2K2P1/3N3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1008);
    }

    #[test]
    fn gentest_1937() {
        let board = Board::from_fen("2r5/3n1k2/p2p4/P1p1p3/1R2PP1p/1b1K2QN/B5P1/3N3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 955);
    }

    #[test]
    fn gentest_1938() {
        let board = Board::from_fen("2r1k3/8/p2p1n2/P1p1p3/1R2PP1p/1bK3QN/B5P1/3N3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1067);
    }

    #[test]
    fn gentest_1939() {
        let board = Board::from_fen("2r1k3/5b2/p2p1n2/P1p1p3/R3PP1p/2K2Q1N/B5P1/3N3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 899);
    }

    #[test]
    fn gentest_1940() {
        let board = Board::from_fen("2r1k1n1/5b2/p2p4/P3p3/R1p1PP1p/2K2Q1N/B5P1/3N2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 581);
    }

    #[test]
    fn gentest_1941() {
        let board = Board::from_fen("2rk2n1/5b2/p2p4/P3p3/1Rp1PP1p/2K4N/B3Q1P1/3N2R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 744);
    }

    #[test]
    fn gentest_1942() {
        let board = Board::from_fen("3k2n1/r4b2/p2p4/P3P3/1Rp1P2p/2K4N/B3Q1P1/3N2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 798);
    }

    #[test]
    fn gentest_1943() {
        let board = Board::from_fen("6n1/r2k1b2/p2p4/PR2P3/2p1P2p/2K4N/B5P1/3NQ1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 749);
    }

    #[test]
    fn gentest_1944() {
        let board = Board::from_fen("6n1/r4b2/p2p4/Pk2P3/2p1P2p/7N/B2K2P1/3NQ1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 523);
    }

    #[test]
    fn gentest_1945() {
        let board = Board::from_fen("r5n1/5b2/p2p4/Pk2P3/2p1P2p/1B5N/3K1QP1/3N2R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_1946() {
        let board = Board::from_fen("r5n1/5b2/p7/P1kpP3/2p1P2p/1B5N/3K2P1/3N2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 497);
    }

    #[test]
    fn gentest_1947() {
        let board = Board::from_fen("r7/5b2/p4n2/P1kPP3/2p4p/7N/2BK2P1/3N2R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 693);
    }

    #[test]
    fn gentest_1948() {
        let board = Board::from_fen("4r3/5b2/p3Pn2/P1kP4/2p4p/7N/2BK2P1/3N2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 725);
    }

    #[test]
    fn gentest_1949() {
        let board = Board::from_fen("2r5/5b2/p3Pn2/P1kP1B2/2p4p/7N/6P1/2KN2R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 713);
    }

    #[test]
    fn gentest_1950() {
        let board = Board::from_fen("2r5/8/p3Pn2/P1kP1B1b/7p/2p4N/6P1/1K1N2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 707);
    }

    #[test]
    fn gentest_1951() {
        let board = Board::from_fen("2r5/5b2/p3Pn2/P1kP4/7p/2pB3N/K5P1/3N2R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 793);
    }

    #[test]
    fn gentest_1952() {
        let board = Board::from_fen("6b1/8/p1r1Pn2/P1kP4/7p/K1pB3N/6P1/3N2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 563);
    }

    #[test]
    fn gentest_1953() {
        let board = Board::from_fen("6b1/3n4/p1P1P3/P1k5/7p/K1p4N/4B1P1/3N2R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 341);
        assert_eq!(perft(&board, 3, &PRECOMP), 5242);
    }

    #[test]
    fn gentest_1954() {
        let board = Board::from_fen("8/7b/p1P1Pn2/P1k3N1/7p/K1p5/4B1P1/3N2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 520);
    }

    #[test]
    fn gentest_1955() {
        let board = Board::from_fen("8/7b/B1P1P3/P1k3Nn/7p/K1p5/6P1/3N2R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 440);
        assert_eq!(perft(&board, 3, &PRECOMP), 7690);
    }

    #[test]
    fn gentest_1956() {
        let board = Board::from_fen("8/7b/2P1Pn2/Pk4N1/7p/K1p5/6P1/3N2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 375);
        assert_eq!(perft(&board, 3, &PRECOMP), 8029);
    }

    #[test]
    fn gentest_1957() {
        let board = Board::from_fen("8/2P4b/4Pn2/P1k3N1/7p/K1p1N3/6P1/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 600);
    }

    #[test]
    fn gentest_1958() {
        let board = Board::from_fen("6n1/2P4b/4P3/P1k3N1/7p/K7/2N3P1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 369);
    }

    #[test]
    fn gentest_1959() {
        let board = Board::from_fen("2N3n1/8/4P3/P1k3N1/7p/1K1b4/2N3P1/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 468);
        assert_eq!(perft(&board, 3, &PRECOMP), 7492);
    }

    #[test]
    fn gentest_1960() {
        let board = Board::from_fen("2N3n1/8/4P3/P1k2bN1/8/1K2N2p/6P1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 495);
    }

    #[test]
    fn gentest_1961() {
        let board = Board::from_fen("2N3n1/7b/4P3/P1kN4/4N3/1K5p/6P1/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 175);
        assert_eq!(perft(&board, 3, &PRECOMP), 2142);
    }

    #[test]
    fn gentest_1962() {
        let board = Board::from_fen("2N3n1/8/4P3/P2k4/4b3/1K5p/6P1/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 403);
        assert_eq!(perft(&board, 3, &PRECOMP), 9529);
    }

    #[test]
    fn gentest_1963() {
        let board = Board::from_fen("2N3n1/8/4P3/P2k4/6P1/1K5p/6b1/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 269);
        assert_eq!(perft(&board, 3, &PRECOMP), 3509);
    }

    #[test]
    fn gentest_1964() {
        let board = Board::from_fen("2N3n1/8/4P3/P2k4/6P1/7p/1K4b1/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 294);
        assert_eq!(perft(&board, 3, &PRECOMP), 6978);
    }

    #[test]
    fn gentest_1965() {
        let board = Board::from_fen("2N3n1/8/4P3/P7/2k3P1/7p/6b1/1K4R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 343);
        assert_eq!(perft(&board, 3, &PRECOMP), 6011);
    }

    #[test]
    fn gentest_1966() {
        let board = Board::from_fen("b1N3n1/8/4P3/P7/3k2P1/7p/8/1K3R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 409);
        assert_eq!(perft(&board, 3, &PRECOMP), 9181);
    }

    #[test]
    fn gentest_1967() {
        let board = Board::from_fen("b1N3n1/8/4P3/P1k5/5RP1/7p/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 311);
        assert_eq!(perft(&board, 3, &PRECOMP), 4542);
    }

    #[test]
    fn gentest_1968() {
        let board = Board::from_fen("6n1/N7/3kP3/P7/5RP1/5b1p/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 353);
        assert_eq!(perft(&board, 3, &PRECOMP), 7506);
    }

    #[test]
    fn gentest_1969() {
        let board = Board::from_fen("6n1/N4R2/3kP3/P7/6P1/7p/4b3/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 348);
        assert_eq!(perft(&board, 3, &PRECOMP), 5468);
    }

    #[test]
    fn gentest_1970() {
        let board = Board::from_fen("8/N3n2R/b2kP3/P7/6P1/7p/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 287);
        assert_eq!(perft(&board, 3, &PRECOMP), 5313);
    }

    #[test]
    fn gentest_1971() {
        let board = Board::from_fen("8/7R/b1NkP3/P4n2/6P1/7p/8/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 450);
        assert_eq!(perft(&board, 3, &PRECOMP), 8119);
    }

    #[test]
    fn gentest_1972() {
        let board = Board::from_fen("8/8/2NkP3/P6R/3n2P1/3b3p/8/K7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 508);
        assert_eq!(perft(&board, 3, &PRECOMP), 9964);
    }

    #[test]
    fn gentest_1973() {
        let board = Board::from_fen("8/4N3/4P3/P2k4/3n2P1/3b3p/8/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 60);
        assert_eq!(perft(&board, 3, &PRECOMP), 1326);
    }

    #[test]
    fn gentest_1974() {
        let board = Board::from_fen("6N1/8/4P3/P4n2/4k1P1/3b3p/8/K7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 173);
        assert_eq!(perft(&board, 3, &PRECOMP), 1704);
    }

    #[test]
    fn gentest_1975() {
        let board = Board::from_fen("6N1/8/4P3/P7/4k1P1/3b2np/8/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 157);
        assert_eq!(perft(&board, 3, &PRECOMP), 3050);
    }

    #[test]
    fn gentest_1976() {
        let board = Board::from_fen("6N1/8/4P3/P2k1n2/6P1/3b3p/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 231);
        assert_eq!(perft(&board, 3, &PRECOMP), 2490);
    }

    #[test]
    fn gentest_1977() {
        let board = Board::from_fen("6N1/4n3/4P3/P2k2P1/8/3b3p/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 279);
        assert_eq!(perft(&board, 3, &PRECOMP), 5722);
    }

    #[test]
    fn gentest_1978() {
        let board = Board::from_fen("8/4N3/4P3/P4nP1/4k3/3b3p/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 284);
        assert_eq!(perft(&board, 3, &PRECOMP), 3738);
    }

    #[test]
    fn gentest_1979() {
        let board = Board::from_fen("8/8/4P2n/P2N2P1/4k3/K2b3p/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 271);
        assert_eq!(perft(&board, 3, &PRECOMP), 4835);
    }

    #[test]
    fn gentest_1980() {
        let board = Board::from_fen("8/4n3/4P1P1/P2N4/4k3/K2b3p/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 257);
        assert_eq!(perft(&board, 3, &PRECOMP), 3431);
    }

    #[test]
    fn gentest_1981() {
        let board = Board::from_fen("8/4n3/4P1P1/P2N4/8/2Kb1k1p/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 330);
        assert_eq!(perft(&board, 3, &PRECOMP), 6866);
    }

    #[test]
    fn gentest_1982() {
        let board = Board::from_fen("8/4n3/4P1P1/P2N4/3K4/5k1p/2b5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 280);
        assert_eq!(perft(&board, 3, &PRECOMP), 3625);
    }

    #[test]
    fn gentest_1983() {
        let board = Board::from_fen("4N3/4n3/4P1P1/P7/3K4/7p/2b3k1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 237);
        assert_eq!(perft(&board, 3, &PRECOMP), 4983);
    }

    #[test]
    fn gentest_1984() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_1985() {
        let board = Board::from_fen("rnbqkb1r/pppppppp/7n/8/2P2P2/8/PP1PP1PP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 439);
        assert_eq!(perft(&board, 3, &PRECOMP), 9785);
    }

    #[test]
    fn gentest_1986() {
        let board = Board::from_fen("rnbqkbnr/ppp1pppp/8/3p4/2P2P2/3P4/PP2P1PP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 753);
    }

    #[test]
    fn gentest_1987() {
        let board = Board::from_fen("rnbqkbnr/p1p1pppp/1p6/3p4/2P2P2/N2P3P/PP2P1P1/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 750);
    }

    #[test]
    fn gentest_1988() {
        let board = Board::from_fen("rn1qkbnr/2p1pppp/pp2b3/1N1p4/2P2P2/3P3P/PP2P1P1/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 728);
    }

    #[test]
    fn gentest_1989() {
        let board = Board::from_fen("rnq1kbnr/N1p1pppp/pp2b3/3p4/2P2PP1/3P3P/PP2P3/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 670);
    }

    #[test]
    fn gentest_1990() {
        let board = Board::from_fen("rnqk1b1r/N1p1pppp/pp2b2n/3p4/2P2PP1/1Q1P3P/PP2P3/R1B1KBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 689);
    }

    #[test]
    fn gentest_1991() {
        let board = Board::from_fen("rn1k1b1r/Nqp1pppp/pp2b2n/3p4/2P2PP1/Q2P1N1P/PP2P3/R1B1KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 975);
    }

    #[test]
    fn gentest_1992() {
        let board = Board::from_fen("rn3b1r/Nqpkp1pp/pp2b2n/3p1P2/2P2P2/Q2P1N1P/PP2P3/R1B1KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 786);
    }

    #[test]
    fn gentest_1993() {
        let board = Board::from_fen("rnq2b1r/N1pkp1pp/Qp2b2n/3p1P2/2PP1P2/5N1P/PP2P3/R1B1KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 848);
    }

    #[test]
    fn gentest_1994() {
        let board = Board::from_fen("rn2qb1r/N1pkp1pp/Qp2b3/3p1P2/2PP1Pn1/7P/PP1NP3/R1B1KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 762);
    }

    #[test]
    fn gentest_1995() {
        let board = Board::from_fen("rn2qb1r/N1pkp1pp/Qp2b3/5P2/2pP1Pn1/4P2P/PP1N4/R1B1KBR1 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1084);
    }

    #[test]
    fn gentest_1996() {
        let board = Board::from_fen("rn2qb1r/N1pkp1pp/Qp6/3bnP2/2pP1P2/4P2P/PP1NB3/R1B1K1R1 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1457);
    }

    #[test]
    fn gentest_1997() {
        let board = Board::from_fen("rn2qb1r/N1pkp1pp/Qp6/3b1P2/2pP1P2/3BP2P/PP1N4/R1B1K2R b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1178);
    }

    #[test]
    fn gentest_1998() {
        let board = Board::from_fen("rn2qb1r/N1pkpbp1/Qp6/5P1p/2pP1P2/3BP2P/PP1N4/1RB1K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 820);
    }

    #[test]
    fn gentest_1999() {
        let board = Board::from_fen("rn2qbr1/N1pkpbp1/Qp6/5P1p/2pPPP2/3B3P/PP1N4/1RB1KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 695);
    }

    #[test]
    fn gentest_2000() {
        let board = Board::from_fen("rn2qbr1/N1pk1bp1/Qp2p3/5P1p/3PPP2/2pB1N1P/PP6/1RB1KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 897);
    }

    #[test]
    fn gentest_2001() {
        let board = Board::from_fen("rn2qbr1/N1pk1b2/Qp2p3/5Ppp/B2PPP2/2p2N1P/PP6/1RB1KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 251);
        assert_eq!(perft(&board, 3, &PRECOMP), 6606);
    }

    #[test]
    fn gentest_2002() {
        let board = Board::from_fen("rn2qb2/N2k1br1/Qpp1p3/5Ppp/B2PPP2/2p4P/PP5N/1RB1KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 926);
    }

    #[test]
    fn gentest_2003() {
        let board = Board::from_fen("rn2qb2/N2k1b1r/Qpp1p3/5Ppp/3PPP2/2p4P/PPB1K2N/1RB2R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1261);
    }

    #[test]
    fn gentest_2004() {
        let board = Board::from_fen("rn1kqb2/NQ3b1r/1pp1p3/5Ppp/3PPP2/2p4P/PPB1K2N/1RB2R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 979);
    }

    #[test]
    fn gentest_2005() {
        let board = Board::from_fen("rn1k1b2/NQ1q1b1r/1pp1p3/5Ppp/3PPP2/2p2N1P/PP2K3/1RBB1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1457);
    }

    #[test]
    fn gentest_2006() {
        let board = Board::from_fen("rn1k1bb1/NQ1q3r/1pp1p3/5Ppp/3PPP2/P4N1P/1Pp1K3/1RBB1R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1445);
    }

    #[test]
    fn gentest_2007() {
        let board = Board::from_fen("rn1k1bb1/N2q2r1/1pQ1P3/6pp/3PPP2/P4N1P/1Pp1K3/1RBB1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1757);
    }

    #[test]
    fn gentest_2008() {
        let board = Board::from_fen("rnNk2b1/6r1/1pQ1q3/6pp/1b1PPP2/P4N1P/1Pp1K3/1RBB1R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 2236);
    }

    #[test]
    fn gentest_2009() {
        let board = Board::from_fen("r1Nk2b1/3n2r1/1p2q3/6pp/Qb1PPP2/P3BN1P/1Pp1K3/1R1B1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 62);
        assert_eq!(perft(&board, 2, &PRECOMP), 2375);
    }

    #[test]
    fn gentest_2010() {
        let board = Board::from_fen("rnNk2b1/6r1/1p2q3/6pp/Qb1PPP2/P3BN1P/1P3K2/1b1B1R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 2107);
    }

    #[test]
    fn gentest_2011() {
        let board = Board::from_fen("rnNk4/6rb/1p2q3/6pp/Qb1PPP2/P3BN1P/1P4K1/1b1B3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 58);
        assert_eq!(perft(&board, 2, &PRECOMP), 2426);
    }

    #[test]
    fn gentest_2012() {
        let board = Board::from_fen("rnNk4/4b1rb/1p2q3/6pp/Q2PPP2/P4N1P/bP3BK1/3B3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 2046);
    }

    #[test]
    fn gentest_2013() {
        let board = Board::from_fen("rnNk4/4b1rb/1p6/6pp/Q2PPPP1/P3BN2/bP4K1/3B3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1607);
    }

    #[test]
    fn gentest_2014() {
        let board = Board::from_fen("rnN5/2k3rb/1p6/6pp/Qb1PPPP1/PP2BN2/b5K1/3B3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1405);
    }

    #[test]
    fn gentest_2015() {
        let board = Board::from_fen("rnN5/2k3rb/1p6/1Q4p1/1b1PPPPp/PP2BN2/b6K/3B3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1469);
    }

    #[test]
    fn gentest_2016() {
        let board = Board::from_fen("rnNk4/4r2b/1p6/5Qp1/1b1PPPPp/PP2BN2/b6K/3B3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1266);
    }

    #[test]
    fn gentest_2017() {
        let board = Board::from_fen("rnNk4/5r1b/1p6/3Q2N1/1b1PPPPp/PP2B3/b6K/3B3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 232);
        assert_eq!(perft(&board, 3, &PRECOMP), 6484);
    }

    #[test]
    fn gentest_2018() {
        let board = Board::from_fen("rnk5/5N1b/1p6/3Q4/3PPPPp/PP2B3/b6K/3Bb2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 702);
    }

    #[test]
    fn gentest_2019() {
        let board = Board::from_fen("1nk5/r4N1b/1p6/6Q1/3PPPPp/PP6/b4B1K/3Bb2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1109);
    }

    #[test]
    fn gentest_2020() {
        let board = Board::from_fen("8/r1k4b/np5N/6Q1/3PPPPp/PP6/b4B1K/3Bb2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 747);
    }

    #[test]
    fn gentest_2021() {
        let board = Board::from_fen("6b1/r1k5/np5N/6Q1/P2PPPPp/1P6/b4B1K/3BR3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 794);
    }

    #[test]
    fn gentest_2022() {
        let board = Board::from_fen("6b1/r5Q1/np1k3N/8/P2PPPP1/1P5p/b4B1K/3BR3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 656);
    }

    #[test]
    fn gentest_2023() {
        let board = Board::from_fen("6b1/2r3Q1/np1k3N/4P3/P2P1PP1/1P5K/b4B2/3BR3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 109);
        assert_eq!(perft(&board, 3, &PRECOMP), 2052);
    }

    #[test]
    fn gentest_2024() {
        let board = Board::from_fen("6b1/2r1k3/np5N/4P3/P2P1PP1/1P5K/b4B2/3BR3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 630);
    }

    #[test]
    fn gentest_2025() {
        let board = Board::from_fen("6b1/1r2k3/np5N/4P3/P2P1PP1/1P4BK/b7/3B1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 525);
    }

    #[test]
    fn gentest_2026() {
        let board = Board::from_fen("8/1r2kb2/np5N/4P3/P2P1PP1/1b4BK/2B5/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 786);
    }

    #[test]
    fn gentest_2027() {
        let board = Board::from_fen("8/r3kb2/np5N/4PP2/P2P2P1/1b3RBK/2B5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 705);
    }

    #[test]
    fn gentest_2028() {
        let board = Board::from_fen("8/r3kb2/np5N/4PP2/P2P2P1/6BK/b1B2R2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 570);
    }

    #[test]
    fn gentest_2029() {
        let board = Board::from_fen("5k2/r4b2/np5N/P3PP2/3P2P1/6BK/b1B5/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 835);
    }

    #[test]
    fn gentest_2030() {
        let board = Board::from_fen("6b1/r3k3/np5N/P2PPP2/6P1/6BK/b1B5/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 601);
    }

    #[test]
    fn gentest_2031() {
        let board = Board::from_fen("6b1/3rk3/np5N/P2PPP2/6P1/6BK/b1B5/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 663);
    }

    #[test]
    fn gentest_2032() {
        let board = Board::from_fen("6b1/1r2k3/1p5N/P2PPP2/1n4P1/6BK/b1B5/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 605);
    }

    #[test]
    fn gentest_2033() {
        let board = Board::from_fen("6b1/1r2k3/1p5N/P2PPP2/Bn4P1/6BK/8/1b3R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 728);
    }

    #[test]
    fn gentest_2034() {
        let board = Board::from_fen("6b1/1r1Bk3/1p5N/P2nPP2/4b1P1/6BK/8/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 678);
    }

    #[test]
    fn gentest_2035() {
        let board = Board::from_fen("6b1/1r1Bk3/1p5N/P3PP2/4b1PK/4n3/8/4BR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 826);
    }

    #[test]
    fn gentest_2036() {
        let board = Board::from_fen("6b1/1r1Bk3/1p2P2N/P4P2/6PK/8/2n3b1/4BR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 544);
    }

    #[test]
    fn gentest_2037() {
        let board = Board::from_fen("6b1/1r1Bk3/1p2P2N/P4P1K/6P1/7b/2n5/4B1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 479);
        assert_eq!(perft(&board, 3, &PRECOMP), 9494);
    }

    #[test]
    fn gentest_2038() {
        let board = Board::from_fen("6b1/1r1Bk3/1p2P2N/P4P1K/6P1/n5R1/8/4Bb2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 567);
    }

    #[test]
    fn gentest_2039() {
        let board = Board::from_fen("6b1/2r1k3/1pB1P2N/P4P1K/6P1/n7/8/4BbR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 704);
    }

    #[test]
    fn gentest_2040() {
        let board = Board::from_fen("8/2r1k2b/1pB1P2N/P4P1K/6P1/n7/6b1/4B2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 682);
    }

    #[test]
    fn gentest_2041() {
        let board = Board::from_fen("8/1B2k2b/1p2P2N/P4P1K/6PR/n7/2r3b1/4B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 715);
    }

    #[test]
    fn gentest_2042() {
        let board = Board::from_fen("8/4k2b/2B1P2N/Pp3P1K/6PR/n7/1r4b1/4B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 529);
    }

    #[test]
    fn gentest_2043() {
        let board = Board::from_fen("8/7b/2B1Pk1N/Pp3P1K/1B4P1/n7/1r4bR/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 614);
    }

    #[test]
    fn gentest_2044() {
        let board = Board::from_fen("8/7b/2B1Pk1N/Pp3P1K/1B2b1PR/n7/7r/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 483);
    }

    #[test]
    fn gentest_2045() {
        let board = Board::from_fen("6N1/8/2B1Pk2/Pp3P1K/1B2b1P1/n7/7R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 70);
        assert_eq!(perft(&board, 3, &PRECOMP), 958);
    }

    #[test]
    fn gentest_2046() {
        let board = Board::from_fen("6N1/6k1/P1B1P3/1p3b1K/1B4P1/n7/7R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 510);
    }

    #[test]
    fn gentest_2047() {
        let board = Board::from_fen("6N1/6k1/P3P3/1p3P1K/1B2B3/8/7R/1n6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 223);
        assert_eq!(perft(&board, 3, &PRECOMP), 1472);
    }

    #[test]
    fn gentest_2048() {
        let board = Board::from_fen("6k1/8/P3P3/1p3P1K/1B2B3/n6R/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 213);
        assert_eq!(perft(&board, 3, &PRECOMP), 7466);
    }

    #[test]
    fn gentest_2049() {
        let board = Board::from_fen("6k1/8/P2BP3/1p3P1K/2n1B3/6R1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 80);
        assert_eq!(perft(&board, 3, &PRECOMP), 800);
    }

    #[test]
    fn gentest_2050() {
        let board = Board::from_fen("8/7k/P2BP3/1p3P1K/8/6R1/1n6/7B w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 230);
        assert_eq!(perft(&board, 3, &PRECOMP), 7997);
    }

    #[test]
    fn gentest_2051() {
        let board = Board::from_fen("4B2k/8/P2BP3/1p3P1K/8/6R1/1n6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 211);
        assert_eq!(perft(&board, 3, &PRECOMP), 1561);
    }

    #[test]
    fn gentest_2052() {
        let board = Board::from_fen("4B2k/8/P2BP1R1/1pn2P1K/8/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 257);
        assert_eq!(perft(&board, 3, &PRECOMP), 7783);
    }

    #[test]
    fn gentest_2053() {
        let board = Board::from_fen("4B2k/8/n2BP1R1/1p3P1K/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 175);
        assert_eq!(perft(&board, 3, &PRECOMP), 1053);
    }

    #[test]
    fn gentest_2054() {
        let board = Board::from_fen("4B2k/8/4P1R1/1p3P1K/8/1n6/7B/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 189);
        assert_eq!(perft(&board, 3, &PRECOMP), 5129);
    }

    #[test]
    fn gentest_2055() {
        let board = Board::from_fen("4B2k/8/4P1R1/1p2BP1K/8/8/8/2n5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 31);
        assert_eq!(perft(&board, 3, &PRECOMP), 159);
        assert_eq!(perft(&board, 4, &PRECOMP), 4690);
    }

    #[test]
    fn gentest_2056() {
        let board = Board::from_fen("4B1k1/8/4PR2/1p2BP1K/8/8/8/2n5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 173);
        assert_eq!(perft(&board, 3, &PRECOMP), 4241);
    }

    #[test]
    fn gentest_2057() {
        let board = Board::from_fen("8/2B2B1k/4PR2/1p3P1K/8/8/8/2n5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 128);
        assert_eq!(perft(&board, 3, &PRECOMP), 941);
    }

    #[test]
    fn gentest_2058() {
        let board = Board::from_fen("8/2B2Bk1/4P2R/5P1K/1p6/8/8/2n5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 119);
        assert_eq!(perft(&board, 3, &PRECOMP), 2654);
    }

    #[test]
    fn gentest_2059() {
        let board = Board::from_fen("5k2/5B2/3BP2R/5P2/1p5K/8/8/2n5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 26);
        assert_eq!(perft(&board, 3, &PRECOMP), 144);
        assert_eq!(perft(&board, 4, &PRECOMP), 3549);
    }

    #[test]
    fn gentest_2060() {
        let board = Board::from_fen("8/5Bk1/3BP2R/5P1K/1p6/3n4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 3217);
    }

    #[test]
    fn gentest_2061() {
        let board = Board::from_fen("1B6/5Bk1/4P2R/2n2PK1/1p6/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 220);
        assert_eq!(perft(&board, 3, &PRECOMP), 1565);
    }

    #[test]
    fn gentest_2062() {
        let board = Board::from_fen("8/5Bk1/4P2R/5PK1/1p3B2/8/8/2n5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 146);
        assert_eq!(perft(&board, 3, &PRECOMP), 3961);
    }

    #[test]
    fn gentest_2063() {
        let board = Board::from_fen("5k2/4PB2/7R/5P2/1p3B1K/8/8/2n5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 104);
        assert_eq!(perft(&board, 3, &PRECOMP), 742);
    }

    #[test]
    fn gentest_2064() {
        let board = Board::from_fen("8/4k3/4B2R/5P2/1p3B1K/3n4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 297);
        assert_eq!(perft(&board, 3, &PRECOMP), 8581);
    }

    #[test]
    fn gentest_2065() {
        let board = Board::from_fen("8/4k3/4B2R/4nP1K/1p3B2/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 317);
        assert_eq!(perft(&board, 3, &PRECOMP), 3068);
    }

    #[test]
    fn gentest_2066() {
        let board = Board::from_fen("8/4k3/2n1B2R/5P1K/8/1p6/8/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 227);
        assert_eq!(perft(&board, 3, &PRECOMP), 5825);
    }

    #[test]
    fn gentest_2067() {
        let board = Board::from_fen("8/n3kB2/7R/5P1K/8/1p2B3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 239);
        assert_eq!(perft(&board, 3, &PRECOMP), 2008);
    }

    #[test]
    fn gentest_2068() {
        let board = Board::from_fen("8/4kB2/7R/4nP2/7K/1p2B3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 391);
    }

    #[test]
    fn gentest_2069() {
        let board = Board::from_fen("6B1/B3k3/7R/4nP2/7K/8/1p6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 413);
        assert_eq!(perft(&board, 3, &PRECOMP), 6375);
    }

    #[test]
    fn gentest_2070() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2071() {
        let board = Board::from_fen("rnbqkb1r/pppppppp/7n/8/5P2/8/PPPPPKPP/RNBQ1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 457);
    }

    #[test]
    fn gentest_2072() {
        let board = Board::from_fen("rnbqkb1r/pppp1p1p/4p1pn/8/5P2/7N/PPPPPKPP/RNBQ1B1R w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 694);
    }

    #[test]
    fn gentest_2073() {
        let board = Board::from_fen("rnb1kb1r/ppppqp1p/4p1pn/8/1P3PP1/7N/P1PPPK1P/RNBQ1B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 639);
    }

    #[test]
    fn gentest_2074() {
        let board = Board::from_fen("rnb1kbr1/ppp1qp1p/3pp1pn/8/1P3PP1/B6N/P1PPPK1P/RN1Q1B1R w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 644);
    }

    #[test]
    fn gentest_2075() {
        let board = Board::from_fen("r1b1kbr1/pppnqp1p/3pp1pn/5P2/1P1P2P1/B6N/P1P1PK1P/RN1Q1B1R b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 748);
    }

    #[test]
    fn gentest_2076() {
        let board = Board::from_fen("r1b1kbr1/pppnqpnp/3pp1p1/8/1P1P2P1/B6N/P1P1PK1P/RNQ2B1R w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 774);
    }

    #[test]
    fn gentest_2077() {
        let board = Board::from_fen("r1b1kb1r/pppnqpnp/3pp1p1/6N1/1P1P2P1/B3Q3/P1P1PK1P/RN3B1R b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 870);
    }

    #[test]
    fn gentest_2078() {
        let board = Board::from_fen("r1bk1b1r/pp1nqpnp/2ppp1p1/6N1/1P1P2P1/B1N1Q3/P1P1PK1P/R4B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1004);
    }

    #[test]
    fn gentest_2079() {
        let board = Board::from_fen("r1bk1b1r/pp1nqp1p/2ppp1p1/7n/1P1PN1P1/B1N1Q3/P1P1PK1P/1R3B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1129);
    }

    #[test]
    fn gentest_2080() {
        let board = Board::from_fen("r1bk1b1r/pp1nqp2/2ppp1pp/8/1P1P1nP1/B1N1Q3/P1PNPK1P/1R3B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1179);
    }

    #[test]
    fn gentest_2081() {
        let board = Board::from_fen("r1bk1b1r/pp1nqp2/3pp1pp/1Pp5/3P1nP1/B1N1Q3/P1PNP2P/1R2KB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1110);
    }

    #[test]
    fn gentest_2082() {
        let board = Board::from_fen("r1bk1b1r/1p2qp2/1n1pp1pp/pPp5/3P1nP1/B1N1Q2P/P1PNP3/1R2KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1253);
    }

    #[test]
    fn gentest_2083() {
        let board = Board::from_fen("2bk1b1r/1p2qp2/rn1pp1pp/pPp5/3P1nP1/B1N2Q1P/P1PNP3/3RKB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1170);
    }

    #[test]
    fn gentest_2084() {
        let board = Board::from_fen("r1bk1b1r/1p2qp2/1n1p2pp/pPp1p3/3P1nPP/B1N2Q2/P1PNP3/3RKB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1577);
    }

    #[test]
    fn gentest_2085() {
        let board = Board::from_fen("r2k1b1r/1p2qp2/1n1p2pp/pPp1pP2/3P1n1P/2N2Q2/PBPNP3/3RKB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1581);
    }

    #[test]
    fn gentest_2086() {
        let board = Board::from_fen("3k1br1/rp2qp2/1n1p2pp/pPp1pP2/3P1Q1P/2N5/PBPNP3/3RKB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1319);
    }

    #[test]
    fn gentest_2087() {
        let board = Board::from_fen("3k1br1/rp3p2/1n1p2pp/pPp1pP2/3P1Q1R/P1N5/1BPNP3/3RKB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1159);
    }

    #[test]
    fn gentest_2088() {
        let board = Board::from_fen("3k1b2/rp3pr1/1n1p2pp/pPp2P1R/3P1p2/P1N5/1BPNP3/3RKB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 763);
    }

    #[test]
    fn gentest_2089() {
        let board = Board::from_fen("3k1b2/rp3pr1/1n4pp/pPpp1P1R/2NP1p2/P1N5/1BP1P3/1R2KB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 774);
    }

    #[test]
    fn gentest_2090() {
        let board = Board::from_fen("4kbr1/rp3p2/1n4pp/pPpp1P1R/2NP1p2/P1N5/2P1P3/BR2KB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 781);
    }

    #[test]
    fn gentest_2091() {
        let board = Board::from_fen("4kbr1/rp3p2/1n5R/pPPp1Pp1/2N2p2/P1N5/2P1P3/BR2KB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 972);
    }

    #[test]
    fn gentest_2092() {
        let board = Board::from_fen("2n1k1r1/rp2bp2/7R/pPPp1Pp1/5p2/P1N1N3/2P1P3/BR2KB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 883);
    }

    #[test]
    fn gentest_2093() {
        let board = Board::from_fen("2n1k1r1/rp3p2/3b1P1R/pPPp2p1/5p2/P1N1N3/2P1P3/B1R1KB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 725);
    }

    #[test]
    fn gentest_2094() {
        let board = Board::from_fen("r1n1k1r1/1pb2p2/5P2/pPPp2p1/5p1R/P1N1N3/2P1P3/B1R1KB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 809);
    }

    #[test]
    fn gentest_2095() {
        let board = Board::from_fen("r1n1k1r1/2b2p2/2p2P2/pP1p2p1/5p1R/P1N1N3/1BP1P3/2R1KB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 882);
    }

    #[test]
    fn gentest_2096() {
        let board = Board::from_fen("r1n1k1rR/2b2p2/2p2P2/pP4p1/3p4/P1N1p3/1BP1P3/2R1KB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 602);
    }

    #[test]
    fn gentest_2097() {
        let board = Board::from_fen("r1n1k1r1/5p2/2p2P2/pP2b1p1/3p3R/P3p3/NBP1P3/2R1KB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 690);
    }

    #[test]
    fn gentest_2098() {
        let board = Board::from_fen("r1n1k1r1/5p2/2p2P2/1P2b3/p2p3p/P1P1p3/NB2P3/2R1KB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 407);
        assert_eq!(perft(&board, 3, &PRECOMP), 5902);
    }

    #[test]
    fn gentest_2099() {
        let board = Board::from_fen("r1n3r1/3k1p2/2p2P2/1P2b3/p2p3p/P1P1p3/NB2P3/2R1K2B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 580);
    }

    #[test]
    fn gentest_2100() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2101() {
        let board = Board::from_fen("rnbqkbnr/pppppp1p/8/3P2p1/8/8/PPP1PPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 564);
    }

    #[test]
    fn gentest_2102() {
        let board = Board::from_fen("rnbqk1nr/ppppp2p/7b/3P1pp1/8/2N5/PPP1PPPP/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 507);
    }

    #[test]
    fn gentest_2103() {
        let board = Board::from_fen("rnbqk1nr/pppp3p/7b/3Pppp1/8/P1N5/1PPQPPPP/R1B1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 608);
    }

    #[test]
    fn gentest_2104() {
        let board = Board::from_fen("rnbqk1nr/p2p3p/1p5b/2pPppp1/8/P7/1PPQPPPP/RNB1KBNR w KQkq c6").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 643);
    }

    #[test]
    fn gentest_2105() {
        let board = Board::from_fen("r1bqk1nr/p2p3p/np5b/Q1pPppp1/6P1/P7/1PP1PP1P/RNB1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 735);
    }

    #[test]
    fn gentest_2106() {
        let board = Board::from_fen("r1bqk1nr/p2p3p/n6b/p1pPpP2/6p1/P7/1PP1PP1P/RNB1KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 706);
    }

    #[test]
    fn gentest_2107() {
        let board = Board::from_fen("1rbqk1nr/p2p3p/n6b/p1pPpP2/P5p1/2P5/1P2PP1P/RNB1KBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 759);
    }

    #[test]
    fn gentest_2108() {
        let board = Board::from_fen("2bqk1nr/p6p/n2p1P1b/p1pPp3/P5p1/1rP5/1P2PP1P/RNB1KBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 728);
    }

    #[test]
    fn gentest_2109() {
        let board = Board::from_fen("3qk1nr/p2b3p/n2p1P1b/p1pPp3/P5p1/RrP5/1P2PP1P/1NB1KBNR b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 829);
    }

    #[test]
    fn gentest_2110() {
        let board = Board::from_fen("2bqk1nr/p5bp/n2p1P2/p1pPp3/P5p1/RrP5/1P1NPP1P/2B1KBNR w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 711);
    }

    #[test]
    fn gentest_2111() {
        let board = Board::from_fen("2b1k1nr/p5bp/n2p1q2/p1pPp3/P1P3p1/Rr6/1P1NPPBP/2B1K1NR b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1069);
    }

    #[test]
    fn gentest_2112() {
        let board = Board::from_fen("1nb1k1nr/6bp/p2p1q2/p1pPp3/P1P3p1/Rr3P2/1P1NP1BP/2B1K1NR w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 783);
    }

    #[test]
    fn gentest_2113() {
        let board = Board::from_fen("1nb1k1nr/6bp/p2p1q2/p1pP4/P1P1p1p1/Rr3P2/1P1NPNBP/2B1K2R b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1212);
    }

    #[test]
    fn gentest_2114() {
        let board = Board::from_fen("1nb1k1nr/6bp/p2p1q2/p1pP4/P1P1N1p1/R4P2/2r1PNBP/2B1K2R w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1415);
    }

    #[test]
    fn gentest_2115() {
        let board = Board::from_fen("1nb2knr/6bp/p2N1q2/p1pP4/P1P3p1/R4P2/2r1PNBP/2B1K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1315);
    }

    #[test]
    fn gentest_2116() {
        let board = Board::from_fen("1nb2knr/7p/p2N4/p1pP4/P1Pb2p1/R3PP2/2r2NBP/q1B1K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1091);
    }

    #[test]
    fn gentest_2117() {
        let board = Board::from_fen("1nb2knr/7p/p2N4/p1pP4/P1rb2p1/3RPP2/5N1P/q1B1KBR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1029);
    }

    #[test]
    fn gentest_2118() {
        let board = Board::from_fen("2N2knr/3n3p/p7/p1pP4/P1rb2p1/3RPP2/1q3N1P/2B1KBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1255);
    }

    #[test]
    fn gentest_2119() {
        let board = Board::from_fen("5knr/3n3p/p7/pNpP4/P2b2p1/2rRPP2/1q3N1P/2B1KBR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1104);
    }

    #[test]
    fn gentest_2120() {
        let board = Board::from_fen("5knr/7p/p7/pNpPn3/P5P1/2rRb3/1q3N1P/2B1KBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1255);
    }

    #[test]
    fn gentest_2121() {
        let board = Board::from_fen("5knr/7p/p7/pNpPn3/P5P1/2rR4/1q1bKN1P/2B2B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 908);
    }

    #[test]
    fn gentest_2122() {
        let board = Board::from_fen("6nr/6kp/p7/pNpPn3/P5P1/2rR4/1q2KNBP/2b4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 162);
        assert_eq!(perft(&board, 3, &PRECOMP), 4042);
    }

    #[test]
    fn gentest_2123() {
        let board = Board::from_fen("7r/6kp/p4n2/pNpPn3/P5P1/2rR3N/1q4BP/2bK3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 1193);
    }

    #[test]
    fn gentest_2124() {
        let board = Board::from_fen("7r/6kp/p4n2/pNpP4/P1n1B1P1/2rR3N/7P/1qbK3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1331);
    }

    #[test]
    fn gentest_2125() {
        let board = Board::from_fen("7r/6kp/p4n2/pNpP2P1/P1n1B3/r2R4/5N1P/1qbK3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1092);
    }

    #[test]
    fn gentest_2126() {
        let board = Board::from_fen("2r5/6kp/p4n2/pNpP2P1/P1n5/r2B4/5N1P/2bK3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1185);
    }

    #[test]
    fn gentest_2127() {
        let board = Board::from_fen("2r5/6kp/p4n2/p1pP2P1/P1nN4/1r1B3P/5N2/2bK3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1323);
    }

    #[test]
    fn gentest_2128() {
        let board = Board::from_fen("2r5/6kp/p4nB1/prpP2P1/P2N4/7P/3n1N2/2bK3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1135);
    }

    #[test]
    fn gentest_2129() {
        let board = Board::from_fen("2r3k1/7p/p4nB1/prpP2P1/P2N4/7P/3n1N2/2b1KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 997);
    }

    #[test]
    fn gentest_2130() {
        let board = Board::from_fen("2r5/5k1B/p4n2/prpP2P1/P2N4/7P/1b1n1N2/4KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1007);
    }

    #[test]
    fn gentest_2131() {
        let board = Board::from_fen("2r5/5k1B/p4n2/prpP2P1/P1nN4/2N4P/1b6/4KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 974);
    }

    #[test]
    fn gentest_2132() {
        let board = Board::from_fen("4k3/2r4B/p4n2/prpP2P1/P1n5/2N4P/1b2N3/4KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1068);
    }

    #[test]
    fn gentest_2133() {
        let board = Board::from_fen("4k3/2r4B/p4n2/prpP2P1/P7/2N4P/1b1nN3/4KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1113);
    }

    #[test]
    fn gentest_2134() {
        let board = Board::from_fen("4k3/2r4B/p7/prpP2P1/P3n3/1nN3NP/1b6/4KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 909);
    }

    #[test]
    fn gentest_2135() {
        let board = Board::from_fen("4k3/r6B/p2P4/pNp3P1/P3n3/1n4NP/1b6/4KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 870);
    }

    #[test]
    fn gentest_2136() {
        let board = Board::from_fen("4k3/r6B/p2P4/p1p3n1/P7/N5NP/1b1n4/4KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 905);
    }

    #[test]
    fn gentest_2137() {
        let board = Board::from_fen("4k3/r7/p2P2B1/p1p3n1/P7/N6P/1b6/1n2KR1N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 106);
        assert_eq!(perft(&board, 3, &PRECOMP), 2527);
    }

    #[test]
    fn gentest_2138() {
        let board = Board::from_fen("4k3/4rn2/p2P2B1/p1p5/P7/N6P/1b3R2/1n2K2N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 117);
        assert_eq!(perft(&board, 3, &PRECOMP), 2961);
    }

    #[test]
    fn gentest_2139() {
        let board = Board::from_fen("4k3/4rB2/p2P1b2/p1p5/P7/N6P/5R2/1n3K1N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 132);
        assert_eq!(perft(&board, 3, &PRECOMP), 3150);
    }

    #[test]
    fn gentest_2140() {
        let board = Board::from_fen("5k2/3P1r2/p4b2/p1p5/P7/N6P/5R2/1n3K1N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 497);
        assert_eq!(perft(&board, 3, &PRECOMP), 9730);
    }

    #[test]
    fn gentest_2141() {
        let board = Board::from_fen("5k2/1N3r2/p4b2/p1p5/P7/N1n4P/5R2/5K1N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 596);
    }

    #[test]
    fn gentest_2142() {
        let board = Board::from_fen("5k2/1N3r2/p4b2/p1p5/P4n1P/N7/5R2/5K1N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 619);
    }

    #[test]
    fn gentest_2143() {
        let board = Board::from_fen("5k2/1N3r2/p4b2/p1p4n/P7/N4R2/8/5K1N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 534);
    }

    #[test]
    fn gentest_2144() {
        let board = Board::from_fen("5k2/1Nr5/p4b2/p1p5/P7/N4Rn1/4K3/7N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 157);
        assert_eq!(perft(&board, 3, &PRECOMP), 3541);
    }

    #[test]
    fn gentest_2145() {
        let board = Board::from_fen("5k2/2r5/p2N1b2/p1p5/P3n3/N3KR2/8/7N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 466);
    }

    #[test]
    fn gentest_2146() {
        let board = Board::from_fen("2N3k1/2r5/p4b2/p1p5/P7/N1n1KR2/8/7N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 590);
    }

    #[test]
    fn gentest_2147() {
        let board = Board::from_fen("2N3k1/2r5/p4b2/p1p5/P7/N3KR2/8/1n5N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 591);
    }

    #[test]
    fn gentest_2148() {
        let board = Board::from_fen("2N4b/2r3k1/p7/p1p5/P7/N3K3/8/1n3R1N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 414);
    }

    #[test]
    fn gentest_2149() {
        let board = Board::from_fen("2N2R1b/2r5/p5k1/p1p5/P7/N3K3/8/1n5N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 605);
    }

    #[test]
    fn gentest_2150() {
        let board = Board::from_fen("2N4R/1r6/p5k1/p7/P1p5/N3K3/8/1n5N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 512);
    }

    #[test]
    fn gentest_2151() {
        let board = Board::from_fen("2N4R/8/p5k1/pN6/P1p5/4K1N1/8/1n6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 291);
        assert_eq!(perft(&board, 3, &PRECOMP), 2615);
    }

    #[test]
    fn gentest_2152() {
        let board = Board::from_fen("2N4R/6k1/p7/pN6/P1pK4/2n3N1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 349);
        assert_eq!(perft(&board, 3, &PRECOMP), 9378);
    }

    #[test]
    fn gentest_2153() {
        let board = Board::from_fen("2N4R/5k2/p7/p1K5/P1p5/N1n3N1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 313);
        assert_eq!(perft(&board, 3, &PRECOMP), 3254);
    }

    #[test]
    fn gentest_2154() {
        let board = Board::from_fen("2N4R/5k2/p1K5/p7/P7/N1p3N1/8/3n4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 256);
        assert_eq!(perft(&board, 3, &PRECOMP), 8074);
    }

    #[test]
    fn gentest_2155() {
        let board = Board::from_fen("2N1R3/5k2/p1K5/p6N/P7/N7/2p5/3n4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 238);
        assert_eq!(perft(&board, 3, &PRECOMP), 2779);
    }

    #[test]
    fn gentest_2156() {
        let board = Board::from_fen("2N1R3/5k2/pK6/p6N/P7/N3n3/8/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 502);
    }

    #[test]
    fn gentest_2157() {
        let board = Board::from_fen("2N2R2/5k2/pK3N2/p7/P7/N7/8/2r2n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 91);
        assert_eq!(perft(&board, 3, &PRECOMP), 1490);
    }

    #[test]
    fn gentest_2158() {
        let board = Board::from_fen("2N2R2/1K6/p3kN2/p7/P7/N7/3n4/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 561);
    }

    #[test]
    fn gentest_2159() {
        let board = Board::from_fen("2N4R/1K6/p3k3/p7/P5N1/N7/3n4/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 687);
    }

    #[test]
    fn gentest_2160() {
        let board = Board::from_fen("2N4R/1K6/p3k3/pN6/P3n1N1/8/8/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 805);
    }

    #[test]
    fn gentest_2161() {
        let board = Board::from_fen("7R/1K6/p2Nk3/pN6/P3n3/8/5N2/5r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 768);
    }

    #[test]
    fn gentest_2162() {
        let board = Board::from_fen("8/1K6/p2Nk3/pN5r/P3n3/8/5N2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 606);
    }

    #[test]
    fn gentest_2163() {
        let board = Board::from_fen("8/8/p1Knk3/pN5r/P7/8/8/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 319);
        assert_eq!(perft(&board, 3, &PRECOMP), 7036);
    }

    #[test]
    fn gentest_2164() {
        let board = Board::from_fen("6k1/N7/p1Kn4/p6r/P7/8/8/3N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 253);
        assert_eq!(perft(&board, 3, &PRECOMP), 3040);
    }

    #[test]
    fn gentest_2165() {
        let board = Board::from_fen("6k1/N1K5/p7/p4r2/P7/8/8/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 242);
        assert_eq!(perft(&board, 3, &PRECOMP), 4291);
    }

    #[test]
    fn gentest_2166() {
        let board = Board::from_fen("2K3k1/N7/p7/p7/P7/8/8/3N1r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 183);
        assert_eq!(perft(&board, 3, &PRECOMP), 2263);
    }

    #[test]
    fn gentest_2167() {
        let board = Board::from_fen("2K2k2/8/p1N5/p7/P7/8/5N2/5r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 208);
        assert_eq!(perft(&board, 3, &PRECOMP), 3352);
    }

    #[test]
    fn gentest_2168() {
        let board = Board::from_fen("8/2K2k2/p1N5/p7/P7/8/5N2/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 237);
        assert_eq!(perft(&board, 3, &PRECOMP), 3691);
    }

    #[test]
    fn gentest_2169() {
        let board = Board::from_fen("8/2K2k2/p1N5/p7/P7/8/1N6/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 292);
        assert_eq!(perft(&board, 3, &PRECOMP), 4670);
    }

    #[test]
    fn gentest_2170() {
        let board = Board::from_fen("1K6/5k2/p1N5/p7/P7/8/1N6/4r3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 287);
        assert_eq!(perft(&board, 3, &PRECOMP), 4164);
    }

    #[test]
    fn gentest_2171() {
        let board = Board::from_fen("1K2k3/8/p1N5/p7/P7/8/3N4/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 272);
        assert_eq!(perft(&board, 3, &PRECOMP), 4293);
    }

    #[test]
    fn gentest_2172() {
        let board = Board::from_fen("1K2k3/4N3/p7/p7/P7/8/3N4/4r3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 288);
        assert_eq!(perft(&board, 3, &PRECOMP), 4440);
    }

    #[test]
    fn gentest_2173() {
        let board = Board::from_fen("1K2k3/4N3/p7/p7/P7/8/3N4/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 270);
        assert_eq!(perft(&board, 3, &PRECOMP), 4489);
    }

    #[test]
    fn gentest_2174() {
        let board = Board::from_fen("1K6/4Nk2/p7/p7/P1N5/8/8/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 309);
        assert_eq!(perft(&board, 3, &PRECOMP), 4805);
    }

    #[test]
    fn gentest_2175() {
        let board = Board::from_fen("8/1K2Nk2/p7/p7/P7/8/1N6/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 322);
        assert_eq!(perft(&board, 3, &PRECOMP), 5925);
    }

    #[test]
    fn gentest_2176() {
        let board = Board::from_fen("8/K3Nk2/p7/p3r3/P7/8/1N6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 256);
        assert_eq!(perft(&board, 3, &PRECOMP), 3449);
    }

    #[test]
    fn gentest_2177() {
        let board = Board::from_fen("4k3/K3N3/p7/p3r3/P7/8/1N6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 218);
        assert_eq!(perft(&board, 3, &PRECOMP), 3645);
    }

    #[test]
    fn gentest_2178() {
        let board = Board::from_fen("4k3/K3N3/p4r2/p7/P7/8/8/3N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 219);
        assert_eq!(perft(&board, 3, &PRECOMP), 2999);
    }

    #[test]
    fn gentest_2179() {
        let board = Board::from_fen("4k3/K3N3/p1r5/p7/P3N3/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 296);
        assert_eq!(perft(&board, 3, &PRECOMP), 4479);
    }

    #[test]
    fn gentest_2180() {
        let board = Board::from_fen("6N1/K2k4/p6r/p7/P3N3/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 212);
        assert_eq!(perft(&board, 3, &PRECOMP), 2921);
    }

    #[test]
    fn gentest_2181() {
        let board = Board::from_fen("3k2N1/K7/p6r/p7/P3N3/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 236);
        assert_eq!(perft(&board, 3, &PRECOMP), 3525);
    }

    #[test]
    fn gentest_2182() {
        let board = Board::from_fen("8/K2kN3/p6r/p7/P3N3/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 279);
        assert_eq!(perft(&board, 3, &PRECOMP), 4578);
    }

    #[test]
    fn gentest_2183() {
        let board = Board::from_fen("4k3/K3N3/p6r/p7/P7/1N6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 271);
        assert_eq!(perft(&board, 3, &PRECOMP), 4574);
    }

    #[test]
    fn gentest_2184() {
        let board = Board::from_fen("4k3/K3N3/p7/p7/P6r/8/8/N7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 239);
        assert_eq!(perft(&board, 3, &PRECOMP), 3079);
    }

    #[test]
    fn gentest_2185() {
        let board = Board::from_fen("4k3/K7/p6N/p7/r7/8/8/N7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 149);
        assert_eq!(perft(&board, 3, &PRECOMP), 2457);
    }

    #[test]
    fn gentest_2186() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2187() {
        let board = Board::from_fen("rnbqkbnr/pp1ppppp/2p5/8/8/4P3/PPPPNPPP/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 481);
    }

    #[test]
    fn gentest_2188() {
        let board = Board::from_fen("rnbqkb1r/p2ppppp/1pp2n2/8/3N4/4P3/PPPP1PPP/RNBQKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 746);
    }

    #[test]
    fn gentest_2189() {
        let board = Board::from_fen("rnbqkb1r/p2p1ppp/1pp1pn2/8/P2N4/3PP3/1PP2PPP/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 922);
    }

    #[test]
    fn gentest_2190() {
        let board = Board::from_fen("rnbqk2r/p2pbpp1/1pp1pn1p/P7/3N4/3PP3/1PP2PPP/RNBQKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1078);
    }

    #[test]
    fn gentest_2191() {
        let board = Board::from_fen("rnbqk2r/p2pbpp1/1pp1pn2/P6p/1P1N4/3PP3/2P2PPP/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1035);
    }

    #[test]
    fn gentest_2192() {
        let board = Board::from_fen("rnbqk2r/p2pbp2/1pp1pn2/P5p1/1P1N1P1p/3PP3/2P3PP/RNBQKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1145);
    }

    #[test]
    fn gentest_2193() {
        let board = Board::from_fen("rnbqk2r/p2pbp2/1p2pn2/P1p3p1/1P1N1P1p/3PP3/1BPK2PP/RN1Q1B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1191);
    }

    #[test]
    fn gentest_2194() {
        let board = Board::from_fen("rnbqkb1r/p2p1p2/1p2p3/P1p3pQ/1P1N1P1p/3PP3/1BPK2PP/RN3B1R w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1225);
    }

    #[test]
    fn gentest_2195() {
        let board = Board::from_fen("rnbqkb1r/3p1p2/pP2p3/2p2NpQ/1P3P1p/3PP3/1BPK2PP/RN3B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1237);
    }

    #[test]
    fn gentest_2196() {
        let board = Board::from_fen("rnb1k2r/3pqpb1/pP2p3/2p2NpQ/1P3P1p/B2PP3/2PK2PP/RN3B1R w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1148);
    }

    #[test]
    fn gentest_2197() {
        let board = Board::from_fen("rnb1k2r/3pqpb1/1P2p1Q1/p1p2Np1/1P3P1p/B2PP3/2PK2PP/RN3B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1366);
    }

    #[test]
    fn gentest_2198() {
        let board = Board::from_fen("rnb1k1r1/3pqpb1/1P2p1Q1/p1p2Np1/1P1P1P2/B3P2p/2PK2PP/RN3B1R w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1295);
    }

    #[test]
    fn gentest_2199() {
        let board = Board::from_fen("rnbk2r1/3pqpb1/1P1Np1Q1/p1p3p1/1P1PPP2/B6p/2PK2PP/RN3B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1420);
    }

    #[test]
    fn gentest_2200() {
        let board = Board::from_fen("rn1k2r1/1b1pqpb1/1P1N2Q1/p1p1p1p1/1PPPPP2/B6p/3K2PP/RN3B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1293);
    }

    #[test]
    fn gentest_2201() {
        let board = Board::from_fen("rn1k2r1/3pqQb1/bP1N4/p1p1p1p1/1PPPPP2/B6p/6PP/RN2KB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1124);
    }

    #[test]
    fn gentest_2202() {
        let board = Board::from_fen("rnNk1br1/3pqQ2/bP6/p1p1p1p1/1PPPPP2/B6p/6PP/RN2KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1020);
    }

    #[test]
    fn gentest_2203() {
        let board = Board::from_fen("rnNk1br1/1b1pQ3/1P6/p1p1p1p1/1PPPPP2/7p/6PP/RNB1KB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 76);
        assert_eq!(perft(&board, 3, &PRECOMP), 1888);
    }

    #[test]
    fn gentest_2204() {
        let board = Board::from_fen("rnk2br1/1b1pQ3/1P6/p3p1p1/1PPpPP2/7p/3N2PP/R1B1KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 773);
    }

    #[test]
    fn gentest_2205() {
        let board = Board::from_fen("rnk1Q1r1/1b1p2b1/1P6/p3p1p1/1PPpPP2/7p/3N2PP/1RB1KB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 22);
        assert_eq!(perft(&board, 3, &PRECOMP), 604);
    }

    #[test]
    fn gentest_2206() {
        let board = Board::from_fen("rnk4r/1b1p2b1/1P6/pP2p1p1/2PpPP2/7p/3N2PP/1RB1KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
    }

    #[test]
    fn gentest_2207() {
        let board = Board::from_fen("rnk5/1b1p2b1/1P6/pP2p1pr/2PpPP2/B5Pp/3N3P/1R2KB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 680);
    }

    #[test]
    fn gentest_2208() {
        let board = Board::from_fen("rn1k4/1b4b1/1P1p4/pP2p1pr/2PpPP2/B5PB/3N3P/1R2K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 876);
    }

    #[test]
    fn gentest_2209() {
        let board = Board::from_fen("rn1k4/1b4b1/1P1p4/pP2p2r/2PpPPp1/BN4P1/6BP/1R2K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 915);
    }

    #[test]
    fn gentest_2210() {
        let board = Board::from_fen("rn6/1b2k1b1/1P1p4/pP2pr2/2PpPPp1/BN4P1/3K2BP/1R5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1064);
    }

    #[test]
    fn gentest_2211() {
        let board = Board::from_fen("r7/1b2k1b1/nP1p4/pP2pr2/2PNPPp1/B5P1/1R1K2BP/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1351);
    }

    #[test]
    fn gentest_2212() {
        let board = Board::from_fen("8/rb4b1/nP1p1k2/pP2pr2/2PNPPp1/B3K1P1/1R4BP/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 877);
    }

    #[test]
    fn gentest_2213() {
        let board = Board::from_fen("1n6/rb4b1/1P1p1k2/pP2Pr2/2P1P1p1/BN2K1P1/1R4BP/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 282);
        assert_eq!(perft(&board, 3, &PRECOMP), 8387);
    }

    #[test]
    fn gentest_2214() {
        let board = Board::from_fen("1n6/rb2B1b1/1P4k1/pP2pr2/2P1P1p1/1N2K1P1/1R4BP/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1116);
    }

    #[test]
    fn gentest_2215() {
        let board = Board::from_fen("1n6/rb2B3/1P4kb/pP2pr2/2P1P1p1/1N1K2P1/6BP/1R5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1146);
    }

    #[test]
    fn gentest_2216() {
        let board = Board::from_fen("1n6/rb2B1b1/1P4k1/pP2p3/2P1P1p1/1N1K2P1/1R4BP/5r1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1158);
    }

    #[test]
    fn gentest_2217() {
        let board = Board::from_fen("1n6/rb2B1b1/1P4k1/pP2p3/2P1P1p1/1N3rP1/1R1K2BP/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1073);
    }

    #[test]
    fn gentest_2218() {
        let board = Board::from_fen("1n6/rb2B1b1/1P4k1/pP2p3/2P1P1p1/1N3rP1/1R4BP/4K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1062);
    }

    #[test]
    fn gentest_2219() {
        let board = Board::from_fen("1n1B4/rb4b1/1P4k1/pP2p3/2P1P1p1/1N2r1P1/1R4BP/5K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 697);
    }

    #[test]
    fn gentest_2220() {
        let board = Board::from_fen("1nb2b2/r1B5/1P4k1/pP2p3/2P1P1p1/1N2r1P1/1R4BP/5K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 916);
    }

    #[test]
    fn gentest_2221() {
        let board = Board::from_fen("1nb2b2/r7/1P4k1/pP2B3/2P1P1p1/1N4P1/1R3KBP/4r2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1184);
    }

    #[test]
    fn gentest_2222() {
        let board = Board::from_fen("5b2/r1B5/nP4k1/pP3b2/2P1P1p1/1N4P1/1R3KBP/4r2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1068);
    }

    #[test]
    fn gentest_2223() {
        let board = Board::from_fen("5b2/r1B5/nP4k1/pP2Pb2/2P3p1/1N4P1/5KBP/1R1r3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1321);
    }

    #[test]
    fn gentest_2224() {
        let board = Board::from_fen("5b2/r1B5/nP6/pP2P1k1/2P1B1p1/1N1b2P1/5K1P/1R1r3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1037);
    }

    #[test]
    fn gentest_2225() {
        let board = Board::from_fen("5b2/r1B5/nP6/pP2P1k1/2P3p1/1N1bK1P1/3r2BP/1R5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1218);
    }

    #[test]
    fn gentest_2226() {
        let board = Board::from_fen("5b2/r1B5/nP4k1/NP2P3/2P3p1/3bK1P1/1r4BP/1R5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1322);
    }

    #[test]
    fn gentest_2227() {
        let board = Board::from_fen("5b2/r1B5/nP4k1/NP2P3/2P3p1/3bKBP1/5r1P/4R2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1160);
    }

    #[test]
    fn gentest_2228() {
        let board = Board::from_fen("1B3b2/r7/nP4k1/NP2P3/2P3p1/4KBP1/2r4P/4Rb1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1269);
    }

    #[test]
    fn gentest_2229() {
        let board = Board::from_fen("1B3b2/r7/nP4k1/1P2P3/2P3pP/1N1bKBP1/2r5/4R2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1417);
    }

    #[test]
    fn gentest_2230() {
        let board = Board::from_fen("1B3b2/r1r5/nP4k1/1P1BP3/6pP/1N1bK1P1/8/4R2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1375);
    }

    #[test]
    fn gentest_2231() {
        let board = Board::from_fen("1B3b2/r4r2/nP4k1/1PN1P3/6pP/3bK1P1/8/4R2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1073);
    }

    #[test]
    fn gentest_2232() {
        let board = Board::from_fen("1B6/r2Nbr2/nP4k1/1b2P3/6pP/4K1P1/8/4R2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 821);
    }

    #[test]
    fn gentest_2233() {
        let board = Board::from_fen("1B6/1r1Nbr2/nP4k1/1b2P3/3K2pP/6P1/7R/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1110);
    }

    #[test]
    fn gentest_2234() {
        let board = Board::from_fen("1B6/1r1N3r/nP3bk1/1b2P3/3K2pP/6P1/2R5/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1212);
    }

    #[test]
    fn gentest_2235() {
        let board = Board::from_fen("1B3N2/1r4kr/nPR2b2/1b2P3/3K2pP/6P1/8/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 953);
    }

    #[test]
    fn gentest_2236() {
        let board = Board::from_fen("1B3N2/1r4kr/nPR2b2/4P2P/3K2p1/6P1/4b3/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 804);
    }

    #[test]
    fn gentest_2237() {
        let board = Board::from_fen("1r6/6kN/nP3b2/2R1P2P/3K2p1/6P1/4b3/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 724);
    }

    #[test]
    fn gentest_2238() {
        let board = Board::from_fen("5N2/4r1k1/nP3b2/2R1P2P/3K2p1/6P1/4b3/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 675);
    }

    #[test]
    fn gentest_2239() {
        let board = Board::from_fen("7k/4r3/nP2Nb1P/2R1P3/3K2p1/6P1/4b3/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 707);
    }

    #[test]
    fn gentest_2240() {
        let board = Board::from_fen("3N3k/5r2/1P3b1P/2n1P3/3K2p1/6P1/4b3/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 538);
    }

    #[test]
    fn gentest_2241() {
        let board = Board::from_fen("1B1N3k/4r3/5b1P/2n1P3/3K2p1/6P1/4b3/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 587);
    }

    #[test]
    fn gentest_2242() {
        let board = Board::from_fen("1B1N3k/2r5/5P1P/1bn5/3K2p1/6P1/8/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 656);
    }

    #[test]
    fn gentest_2243() {
        let board = Board::from_fen("3N3k/B4P2/2r4P/1bn5/3K2p1/6P1/8/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 609);
    }

    #[test]
    fn gentest_2244() {
        let board = Board::from_fen("3N3k/B4P2/n6P/1b6/3K2p1/6P1/8/2r4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 567);
    }

    #[test]
    fn gentest_2245() {
        let board = Board::from_fen("3N1B1k/B7/n6P/1b6/3K2p1/2r3P1/7R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 705);
    }

    #[test]
    fn gentest_2246() {
        let board = Board::from_fen("3N1B1k/Bn5P/8/1b6/3K2p1/2r3P1/7R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 714);
    }

    #[test]
    fn gentest_2247() {
        let board = Board::from_fen("3N3k/Bn5P/7B/7R/3K2p1/2rb2P1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 675);
    }

    #[test]
    fn gentest_2248() {
        let board = Board::from_fen("3N3k/Bnr4b/7B/8/3K2p1/6P1/8/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 555);
    }

    #[test]
    fn gentest_2249() {
        let board = Board::from_fen("3N2bk/1nr1B3/7B/8/3K2p1/6P1/8/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 627);
    }

    #[test]
    fn gentest_2250() {
        let board = Board::from_fen("3N2b1/1n2r1k1/8/8/3K2p1/4B1P1/8/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 560);
    }

    #[test]
    fn gentest_2251() {
        let board = Board::from_fen("3N4/1n2r1kb/8/8/2K3p1/4B1P1/8/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 631);
    }

    #[test]
    fn gentest_2252() {
        let board = Board::from_fen("3N3k/1n2r3/7B/8/2K3p1/6P1/8/1b5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 489);
    }

    #[test]
    fn gentest_2253() {
        let board = Board::from_fen("3N3k/4r3/2Kn3B/8/6p1/6P1/8/1b5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 708);
    }

    #[test]
    fn gentest_2254() {
        let board = Board::from_fen("2nN4/4r1k1/2K5/8/5Bp1/6P1/8/1b5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 643);
    }

    #[test]
    fn gentest_2255() {
        let board = Board::from_fen("2n5/4rNk1/8/2K5/4bBp1/6P1/8/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 879);
    }

    #[test]
    fn gentest_2256() {
        let board = Board::from_fen("r1n5/5Nk1/8/2K5/4bBp1/6PR/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 686);
    }

    #[test]
    fn gentest_2257() {
        let board = Board::from_fen("r1n5/8/6kB/2K3N1/4b1p1/6PR/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 366);
        assert_eq!(perft(&board, 3, &PRECOMP), 9569);
    }

    #[test]
    fn gentest_2258() {
        let board = Board::from_fen("2n5/8/6kB/1K4N1/6p1/6PR/r1b5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 337);
        assert_eq!(perft(&board, 3, &PRECOMP), 5287);
    }

    #[test]
    fn gentest_2259() {
        let board = Board::from_fen("2n5/8/K3N1kB/8/b5p1/6PR/r7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 389);
        assert_eq!(perft(&board, 3, &PRECOMP), 8977);
    }

    #[test]
    fn gentest_2260() {
        let board = Board::from_fen("2n5/8/4N1kB/1K6/6p1/rb4PR/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 461);
        assert_eq!(perft(&board, 3, &PRECOMP), 8706);
    }

    #[test]
    fn gentest_2261() {
        let board = Board::from_fen("2n5/8/6kB/1K6/r5p1/1b1N2PR/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 533);
    }

    #[test]
    fn gentest_2262() {
        let board = Board::from_fen("2n5/8/6kB/1KN5/6p1/6PR/2b5/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 639);
    }

    #[test]
    fn gentest_2263() {
        let board = Board::from_fen("2n2B2/8/6k1/2N5/2K3p1/6PR/2b5/3r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 554);
    }

    #[test]
    fn gentest_2264() {
        let board = Board::from_fen("5B2/8/1n4k1/2N5/1K6/6Pp/2b5/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 545);
        assert_eq!(perft(&board, 3, &PRECOMP), 8702);
    }

    #[test]
    fn gentest_2265() {
        let board = Board::from_fen("5B2/3n4/6k1/8/1K6/2N3Pp/2b5/3r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 529);
    }

    #[test]
    fn gentest_2266() {
        let board = Board::from_fen("5B2/3n4/6k1/8/K7/2N3Pp/2b5/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 124);
        assert_eq!(perft(&board, 3, &PRECOMP), 2162);
    }

    #[test]
    fn gentest_2267() {
        let board = Board::from_fen("5B2/3n4/3r2k1/1K1N4/8/6Pp/2b5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 366);
        assert_eq!(perft(&board, 3, &PRECOMP), 9355);
    }

    #[test]
    fn gentest_2268() {
        let board = Board::from_fen("5B2/3n4/r5k1/K2N1b2/8/6Pp/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 75);
        assert_eq!(perft(&board, 3, &PRECOMP), 1256);
    }

    #[test]
    fn gentest_2269() {
        let board = Board::from_fen("8/3n4/K5k1/2BN4/8/6Pp/2b5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 446);
        assert_eq!(perft(&board, 3, &PRECOMP), 8663);
    }

    #[test]
    fn gentest_2270() {
        let board = Board::from_fen("8/5k2/5n2/1KBN4/8/6Pp/2b5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 590);
    }

    #[test]
    fn gentest_2271() {
        let board = Board::from_fen("8/5k2/3B1nb1/3N4/K7/6Pp/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 430);
        assert_eq!(perft(&board, 3, &PRECOMP), 8250);
    }

    #[test]
    fn gentest_2272() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2273() {
        let board = Board::from_fen("rnbqkbnr/p1pppppp/1p6/8/1P1P4/8/P1P1PPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 610);
    }

    #[test]
    fn gentest_2274() {
        let board = Board::from_fen("rnbqkbnr/p1p2ppp/1p1pp3/8/1P1P4/8/P1PKPPPP/RNBQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 749);
    }

    #[test]
    fn gentest_2275() {
        let board = Board::from_fen("rnbqkbnr/p1p3pp/1p1ppp2/8/PP1P3P/8/2PKPPP1/RNBQ1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 703);
    }

    #[test]
    fn gentest_2276() {
        let board = Board::from_fen("rnbqkb1r/p3n1pp/1p1ppp2/2p5/PP1P1P1P/8/2PKP1P1/RNBQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 805);
    }

    #[test]
    fn gentest_2277() {
        let board = Board::from_fen("rnbqkb1r/p3n1p1/1p1ppp2/2p3Pp/PP1P1P1P/8/2PKP3/RNBQ1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 820);
    }

    #[test]
    fn gentest_2278() {
        let board = Board::from_fen("rnbqkb1r/p5p1/1p1pp3/2pn2pp/PP1P1P1P/7R/2PKP3/RNBQ1BN1 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1077);
    }

    #[test]
    fn gentest_2279() {
        let board = Board::from_fen("rnbq1b1r/p4kp1/1p1pp3/1Ppn2pp/P2P1P1P/R7/2PKP3/RNBQ1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 972);
    }

    #[test]
    fn gentest_2280() {
        let board = Board::from_fen("r1bq1b1r/p2n1kp1/1p1pp3/1Pp3pp/Pn1P1P1P/7R/2PKP3/RNBQ1BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1078);
    }

    #[test]
    fn gentest_2281() {
        let board = Board::from_fen("r1bq1b2/p2n1kp1/1p1pp2r/1Pp3pp/Pn1P1P1P/2K1B2R/2P1P3/RN1Q1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 914);
    }

    #[test]
    fn gentest_2282() {
        let board = Board::from_fen("r1bq1b2/p2n1kp1/1p1pp2r/1Pp3pp/P1KP1P1P/4B2R/2P1P3/RNnQ1BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 845);
    }

    #[test]
    fn gentest_2283() {
        let board = Board::from_fen("r1bq1b2/p4kp1/1p1pp2r/1Pp1P1pp/P1K2P1P/7R/2P1PB2/RNnQ1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1078);
    }

    #[test]
    fn gentest_2284() {
        let board = Board::from_fen("r1bq1bkr/p5p1/1p1pp3/1Pp1P1pp/P1K2P1P/7R/2P1PBB1/RNnQ2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1165);
    }

    #[test]
    fn gentest_2285() {
        let board = Board::from_fen("r1bq1bk1/p5p1/1p1pp2r/1Pp1P1Rp/P1K2P1P/8/2P1PBB1/RNnQ2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1100);
    }

    #[test]
    fn gentest_2286() {
        let board = Board::from_fen("r4bk1/p1qb2p1/1p1pp2r/1Pp1P1Rp/P1K2P1P/6B1/2P1P1B1/RNnQ2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1139);
    }

    #[test]
    fn gentest_2287() {
        let board = Board::from_fen("r4b2/p1qb2k1/1p1pp2r/1Pp1P2p/P1K2P1P/3Q2B1/2P1P1B1/RNn3N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1075);
    }

    #[test]
    fn gentest_2288() {
        let board = Board::from_fen("2r2b2/p1qb2k1/1p2p2r/1Pp1p2p/P1K2P1P/6B1/2PQP1B1/RNn3N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1146);
    }

    #[test]
    fn gentest_2289() {
        let board = Board::from_fen("2r2b2/p1qb4/1p2pk1r/1PpBp2p/P1K2P1P/8/2PQP2B/RNn3N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 935);
    }

    #[test]
    fn gentest_2290() {
        let board = Board::from_fen("r4b2/pBqb2k1/1p2p2r/1Pp1p2p/P1K2P1P/8/2PQP2B/RNn3N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1142);
    }

    #[test]
    fn gentest_2291() {
        let board = Board::from_fen("r4b2/p1qb2kr/1p2p3/1Pp1p2p/P1K1BP1P/5N2/2PQP2B/RNn5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_2292() {
        let board = Board::from_fen("r4b1r/2qb2k1/pp2p3/1PpQp2p/P1K1BP1P/5N2/2P1P2B/RNn5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1121);
    }

    #[test]
    fn gentest_2293() {
        let board = Board::from_fen("r4br1/2qb2k1/pp2p3/1PpQp2p/P1K2P1P/3B1N2/2PNP2B/R1n5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1096);
    }

    #[test]
    fn gentest_2294() {
        let board = Board::from_fen("Qqb2br1/6k1/pp2p3/1Pp1p2p/P1K2P1P/3B1N2/2PNP2B/R1n5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 712);
    }

    #[test]
    fn gentest_2295() {
        let board = Board::from_fen("Qqb3r1/4b1k1/pp2p3/1Pp1P2p/P1K4P/3B4/2PNP2B/R1n1N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 911);
    }

    #[test]
    fn gentest_2296() {
        let board = Board::from_fen("Qqb2r2/4b1k1/pp2p3/1Pp1P2p/P1K4P/1n1B4/2PNP1NB/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1359);
    }

    #[test]
    fn gentest_2297() {
        let board = Board::from_fen("Q1b2r2/q3b1k1/pp2p3/1Pp1P2p/P1K1B2P/1n6/2PNP1NB/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1197);
    }

    #[test]
    fn gentest_2298() {
        let board = Board::from_fen("Q1b5/q3b1k1/pp2p3/1Pp1P2p/P1K1B2P/1n6/2P1P1NB/3r1N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1075);
    }

    #[test]
    fn gentest_2299() {
        let board = Board::from_fen("1Qb5/q3b1k1/pp2p3/1Pp1P2p/P3B2P/1n1K4/2P1P1NB/2r2N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 924);
    }

    #[test]
    fn gentest_2300() {
        let board = Board::from_fen("Q1b5/q3b1k1/pp2p3/1Pp1P2p/P3B2P/1n1K4/4P1NB/2r2N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 848);
    }

    #[test]
    fn gentest_2301() {
        let board = Board::from_fen("Q7/q2bb1k1/pp2p3/PPp1P2p/4B2P/1n1KP3/6NB/2r2N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 751);
    }

    #[test]
    fn gentest_2302() {
        let board = Board::from_fen("Q7/q2bb1k1/pp2p3/PPp1P2p/3nBB1P/3KP3/6N1/4rN2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 915);
    }

    #[test]
    fn gentest_2303() {
        let board = Board::from_fen("Q7/q2bb1k1/pp2p2B/PPp1Pn1p/4B2P/3KP3/8/4NN2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 169);
        assert_eq!(perft(&board, 3, &PRECOMP), 3574);
    }

    #[test]
    fn gentest_2304() {
        let board = Board::from_fen("4b3/Q3b1k1/pp2p2n/PPp1P2p/4B2P/3KP3/8/4NN2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 525);
    }

    #[test]
    fn gentest_2305() {
        let board = Board::from_fen("4b3/4Qnk1/pp2p3/PPp1P2p/4B2P/4P3/3K4/4NN2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 354);
        assert_eq!(perft(&board, 3, &PRECOMP), 3920);
    }

    #[test]
    fn gentest_2306() {
        let board = Board::from_fen("7k/3bQn2/pp2p3/PPp1P2p/4B2P/4P3/4K3/4NN2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 465);
    }

    #[test]
    fn gentest_2307() {
        let board = Board::from_fen("7k/3Q1n2/pp2p3/PP2P2p/2p1B2P/4P3/3NK3/4N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 429);
        assert_eq!(perft(&board, 3, &PRECOMP), 3875);
    }

    #[test]
    fn gentest_2308() {
        let board = Board::from_fen("7k/8/pp1Qp2n/PP2P2p/4B2P/2p1P3/3NK3/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 414);
    }

    #[test]
    fn gentest_2309() {
        let board = Board::from_fen("7k/8/1p2p2n/Pp2P2p/7P/Q1p1P3/3NK3/4N2B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 397);
        assert_eq!(perft(&board, 3, &PRECOMP), 4760);
    }

    #[test]
    fn gentest_2310() {
        let board = Board::from_fen("B6k/8/1p2p2n/Pp2P2p/7P/Q3P3/4K3/3bN3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 69);
        assert_eq!(perft(&board, 3, &PRECOMP), 1962);
    }

    #[test]
    fn gentest_2311() {
        let board = Board::from_fen("B6k/8/4p2n/pp2P2p/7P/Q3P3/8/3bN1K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 450);
        assert_eq!(perft(&board, 3, &PRECOMP), 6582);
    }

    #[test]
    fn gentest_2312() {
        let board = Board::from_fen("B6k/5n2/4p3/pp2P2p/7P/Q3P3/2b2K2/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 564);
    }

    #[test]
    fn gentest_2313() {
        let board = Board::from_fen("7k/1B3n2/4p1b1/pp2P2p/7P/Q2NP3/5K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 485);
        assert_eq!(perft(&board, 3, &PRECOMP), 7615);
    }

    #[test]
    fn gentest_2314() {
        let board = Board::from_fen("8/1B3n1k/4p1b1/1p2P2p/p6P/Q2NP3/8/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 474);
    }

    #[test]
    fn gentest_2315() {
        let board = Board::from_fen("3n4/1B5k/4p1b1/1p2P2p/p6P/Q3P3/3K4/2N5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 431);
        assert_eq!(perft(&board, 3, &PRECOMP), 6497);
    }

    #[test]
    fn gentest_2316() {
        let board = Board::from_fen("3n4/1B5k/4p1b1/1p2P2p/p6P/Q3P3/8/2N1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 450);
    }

    #[test]
    fn gentest_2317() {
        let board = Board::from_fen("3n2k1/8/4p1b1/1p2P2p/Q6P/4P3/8/2N1K2B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
        assert_eq!(perft(&board, 3, &PRECOMP), 9155);
    }

    #[test]
    fn gentest_2318() {
        let board = Board::from_fen("3n4/5k2/4p1b1/4P2p/Qp5P/4P3/4K3/2N4B w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 383);
    }

    #[test]
    fn gentest_2319() {
        let board = Board::from_fen("3n2k1/8/4p1b1/4P2p/Qp2P2P/8/3K4/2N4B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 376);
        assert_eq!(perft(&board, 3, &PRECOMP), 4858);
    }

    #[test]
    fn gentest_2320() {
        let board = Board::from_fen("3nb3/5k2/4p3/4P2p/Qp2P2P/8/3K2B1/2N5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 316);
        assert_eq!(perft(&board, 3, &PRECOMP), 8505);
    }

    #[test]
    fn gentest_2321() {
        let board = Board::from_fen("3nb3/8/4p1k1/4P2p/Qp2P2P/4K3/N5B1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 327);
        assert_eq!(perft(&board, 3, &PRECOMP), 4300);
    }

    #[test]
    fn gentest_2322() {
        let board = Board::from_fen("3n4/5b1k/4p3/4P2p/Qp2P2P/8/N3K1B1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 299);
        assert_eq!(perft(&board, 3, &PRECOMP), 8356);
    }

    #[test]
    fn gentest_2323() {
        let board = Board::from_fen("3n4/5b2/4p1k1/4P2p/Qp2P2P/5B2/4K3/2N5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 230);
        assert_eq!(perft(&board, 3, &PRECOMP), 2371);
    }

    #[test]
    fn gentest_2324() {
        let board = Board::from_fen("3nQ1b1/7k/4p3/4P2p/1p2P2P/5B2/4K3/2N5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 180);
        assert_eq!(perft(&board, 3, &PRECOMP), 5028);
    }

    #[test]
    fn gentest_2325() {
        let board = Board::from_fen("3nQ1b1/8/4p2k/4P2p/1p2P1BP/8/8/2NK4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 233);
        assert_eq!(perft(&board, 3, &PRECOMP), 2007);
    }

    #[test]
    fn gentest_2326() {
        let board = Board::from_fen("8/5Q1b/4p2k/4P2p/1p2P1BP/8/8/2NK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 167);
        assert_eq!(perft(&board, 3, &PRECOMP), 4972);
    }

    #[test]
    fn gentest_2327() {
        let board = Board::from_fen("8/6kb/4p3/4PB1p/1p2P2P/8/8/2NK4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 121);
        assert_eq!(perft(&board, 3, &PRECOMP), 1068);
    }

    #[test]
    fn gentest_2328() {
        let board = Board::from_fen("5k2/8/4p1b1/4PB1p/1p2P2P/8/4N3/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 147);
        assert_eq!(perft(&board, 3, &PRECOMP), 2162);
    }

    #[test]
    fn gentest_2329() {
        let board = Board::from_fen("8/4k3/4p1b1/4PB1p/1p2P2P/8/2K5/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 146);
        assert_eq!(perft(&board, 3, &PRECOMP), 1485);
    }

    #[test]
    fn gentest_2330() {
        let board = Board::from_fen("8/4kb2/4p3/4PB1p/4P2P/1p6/3K4/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 132);
        assert_eq!(perft(&board, 3, &PRECOMP), 1887);
    }

    #[test]
    fn gentest_2331() {
        let board = Board::from_fen("8/4kb2/4p3/4PB1p/4P2P/2K5/1p6/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 167);
        assert_eq!(perft(&board, 3, &PRECOMP), 2360);
    }

    #[test]
    fn gentest_2332() {
        let board = Board::from_fen("8/3k4/4p1B1/4P2p/4P2P/2K5/1p6/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 139);
        assert_eq!(perft(&board, 3, &PRECOMP), 1950);
    }

    #[test]
    fn gentest_2333() {
        let board = Board::from_fen("8/8/2k1p1B1/4P2p/4P2P/1K3N2/1p6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 153);
        assert_eq!(perft(&board, 3, &PRECOMP), 1577);
    }

    #[test]
    fn gentest_2334() {
        let board = Board::from_fen("8/2k5/4p1B1/4P2p/4P2P/1K6/7N/1q6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 100);
        assert_eq!(perft(&board, 3, &PRECOMP), 860);
    }

    #[test]
    fn gentest_2335() {
        let board = Board::from_fen("8/2k5/4p1B1/4P2p/4P2P/8/1K5N/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 668);
    }

    #[test]
    fn gentest_2336() {
        let board = Board::from_fen("4B3/8/k3p3/4P2p/4P2P/8/1K5N/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 76);
        assert_eq!(perft(&board, 3, &PRECOMP), 1294);
        assert_eq!(perft(&board, 4, &PRECOMP), 7230);
    }

    #[test]
    fn gentest_2337() {
        let board = Board::from_fen("8/k2B4/4p3/4P2p/4P2P/8/7N/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 60);
        assert_eq!(perft(&board, 3, &PRECOMP), 289);
        assert_eq!(perft(&board, 4, &PRECOMP), 3998);
    }

    #[test]
    fn gentest_2338() {
        let board = Board::from_fen("8/k2B4/4p3/4P2p/4P2P/8/7N/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 66);
        assert_eq!(perft(&board, 3, &PRECOMP), 1016);
        assert_eq!(perft(&board, 4, &PRECOMP), 4997);
    }

    #[test]
    fn gentest_2339() {
        let board = Board::from_fen("1k6/3B4/4p3/4P2p/4P2P/1K6/7N/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 68);
        assert_eq!(perft(&board, 3, &PRECOMP), 325);
        assert_eq!(perft(&board, 4, &PRECOMP), 5361);
    }

    #[test]
    fn gentest_2340() {
        let board = Board::from_fen("1k6/3B4/4p3/4P2p/4P2P/K7/7N/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 59);
        assert_eq!(perft(&board, 3, &PRECOMP), 911);
        assert_eq!(perft(&board, 4, &PRECOMP), 4346);
    }

    #[test]
    fn gentest_2341() {
        let board = Board::from_fen("k7/3B4/4p3/K3P2p/4P2P/8/7N/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 38);
        assert_eq!(perft(&board, 3, &PRECOMP), 152);
        assert_eq!(perft(&board, 4, &PRECOMP), 2171);
        assert_eq!(perft(&board, 5, &PRECOMP), 8342);
    }

    #[test]
    fn gentest_2342() {
        let board = Board::from_fen("1k6/8/2B1p3/K3P2p/4P2P/8/7N/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 52);
        assert_eq!(perft(&board, 3, &PRECOMP), 717);
        assert_eq!(perft(&board, 4, &PRECOMP), 2717);
    }

    #[test]
    fn gentest_2343() {
        let board = Board::from_fen("8/k7/2B1p3/1K2P2p/4P2P/8/8/5N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 16);
        assert_eq!(perft(&board, 3, &PRECOMP), 50);
        assert_eq!(perft(&board, 4, &PRECOMP), 782);
        assert_eq!(perft(&board, 5, &PRECOMP), 2796);
    }

    #[test]
    fn gentest_2344() {
        let board = Board::from_fen("8/k7/2B1p3/4P2p/K3P2P/8/8/5N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 48);
        assert_eq!(perft(&board, 3, &PRECOMP), 695);
        assert_eq!(perft(&board, 4, &PRECOMP), 2824);
    }

    #[test]
    fn gentest_2345() {
        let board = Board::from_fen("1k6/8/4p3/1B2P2p/1K2P2P/8/8/5N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 95);
        assert_eq!(perft(&board, 3, &PRECOMP), 428);
        assert_eq!(perft(&board, 4, &PRECOMP), 7798);
    }

    #[test]
    fn gentest_2346() {
        let board = Board::from_fen("1k6/8/B3p3/4P2p/1K2P2P/8/8/5N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 63);
        assert_eq!(perft(&board, 3, &PRECOMP), 1092);
        assert_eq!(perft(&board, 4, &PRECOMP), 4489);
    }

    #[test]
    fn gentest_2347() {
        let board = Board::from_fen("8/k7/B3p3/2K1P2p/4P2P/8/3N4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 48);
        assert_eq!(perft(&board, 3, &PRECOMP), 139);
        assert_eq!(perft(&board, 4, &PRECOMP), 2134);
        assert_eq!(perft(&board, 5, &PRECOMP), 8160);
    }

    #[test]
    fn gentest_2348() {
        let board = Board::from_fen("8/1k6/4p3/2K1P2p/2B1P2P/8/3N4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 92);
        assert_eq!(perft(&board, 3, &PRECOMP), 1655);
        assert_eq!(perft(&board, 4, &PRECOMP), 6633);
    }

    #[test]
    fn gentest_2349() {
        let board = Board::from_fen("2k5/8/4p3/4P2p/1KB1P2P/5N2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 110);
        assert_eq!(perft(&board, 3, &PRECOMP), 628);
    }

    #[test]
    fn gentest_2350() {
        let board = Board::from_fen("2k5/8/4p3/4P2p/1K2P2P/3B1N2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 103);
        assert_eq!(perft(&board, 3, &PRECOMP), 1986);
    }

    #[test]
    fn gentest_2351() {
        let board = Board::from_fen("8/2k5/4p3/4P2p/4P2P/1K3N2/2B5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 667);
    }

    #[test]
    fn gentest_2352() {
        let board = Board::from_fen("8/8/k3p3/4P2p/K3P2P/5N2/2B5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 43);
        assert_eq!(perft(&board, 3, &PRECOMP), 611);
        assert_eq!(perft(&board, 4, &PRECOMP), 3590);
    }

    #[test]
    fn gentest_2353() {
        let board = Board::from_fen("8/8/1k2p3/1N2P2p/K3P2P/8/2B5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 54);
        assert_eq!(perft(&board, 3, &PRECOMP), 223);
        assert_eq!(perft(&board, 4, &PRECOMP), 3073);
    }

    #[test]
    fn gentest_2354() {
        let board = Board::from_fen("8/8/2k1p3/1N2P2p/K3P2P/1B6/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 63);
        assert_eq!(perft(&board, 3, &PRECOMP), 949);
        assert_eq!(perft(&board, 4, &PRECOMP), 4544);
    }

    #[test]
    fn gentest_2355() {
        let board = Board::from_fen("8/8/1k1Np3/4P2p/K1B1P2P/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 77);
        assert_eq!(perft(&board, 3, &PRECOMP), 306);
        assert_eq!(perft(&board, 4, &PRECOMP), 5536);
    }

    #[test]
    fn gentest_2356() {
        let board = Board::from_fen("8/8/2kNp3/4P2p/K3P2P/3B4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 72);
        assert_eq!(perft(&board, 3, &PRECOMP), 1230);
        assert_eq!(perft(&board, 4, &PRECOMP), 5629);
    }

    #[test]
    fn gentest_2357() {
        let board = Board::from_fen("8/8/1k1Np3/4P2p/K3P2P/8/6B1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 75);
        assert_eq!(perft(&board, 3, &PRECOMP), 293);
        assert_eq!(perft(&board, 4, &PRECOMP), 4335);
    }

    #[test]
    fn gentest_2358() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2359() {
        let board = Board::from_fen("rnbqkbnr/1ppppppp/8/p7/3P4/8/PPPNPPPP/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 483);
    }

    #[test]
    fn gentest_2360() {
        let board = Board::from_fen("1nbqkbnr/2pppppp/rp6/p7/3P4/8/PPPNPPPP/1RBQKBNR w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 439);
    }

    #[test]
    fn gentest_2361() {
        let board = Board::from_fen("1nbqkb1r/2pppppp/rp5n/p7/3PP3/5N2/PPPN1PPP/1RBQKB1R b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 540);
    }

    #[test]
    fn gentest_2362() {
        let board = Board::from_fen("rnbqkb1r/2pppppp/1p5n/8/p1BPP3/5N2/PPPN1PPP/1RBQK2R w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 709);
    }

    #[test]
    fn gentest_2363() {
        let board = Board::from_fen("rnbqkb1r/2pppppp/1p5n/8/1PBPP3/p4N2/P1PNQPPP/1RB1K2R b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 806);
    }

    #[test]
    fn gentest_2364() {
        let board = Board::from_fen("rnbqkb1r/2ppp1pp/1p6/5p2/1PBPP1n1/p4N2/P1PN1PPP/1RBQK2R w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 947);
    }

    #[test]
    fn gentest_2365() {
        let board = Board::from_fen("1nbqkb1r/2ppp1pp/1p6/5p2/rP1PP1n1/pB3N2/PBPN1PPP/1R1QK2R b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1013);
    }

    #[test]
    fn gentest_2366() {
        let board = Board::from_fen("1nbqkb1r/3pp1pp/1pp5/4Pp2/rP1P4/pB3N2/PBPN1PPn/1R1QK2R w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 738);
    }

    #[test]
    fn gentest_2367() {
        let board = Board::from_fen("1nbqkb1r/3pp1pp/1p6/2p1Pp2/rP1P4/pBB2N2/P1PN1PPn/2RQK2R b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 751);
    }

    #[test]
    fn gentest_2368() {
        let board = Board::from_fen("1n1qkb1r/1b1pp1pp/8/1pp1Pp2/rP1P4/pB3N2/PBPN1PPn/2RQK2R w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1041);
    }

    #[test]
    fn gentest_2369() {
        let board = Board::from_fen("1n1q1b1r/1b1ppkpp/8/1pp1Pp2/rPNP4/pB3NP1/PBP2P1n/2RQK2R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1179);
    }

    #[test]
    fn gentest_2370() {
        let board = Board::from_fen("1n1q1b1r/1b2pkpp/8/1pppPp2/rPNP2n1/pB3NP1/PBP2P2/2RQK1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1062);
    }

    #[test]
    fn gentest_2371() {
        let board = Board::from_fen("1n1q1b1r/1b2pkpp/8/1pppPp2/1r1P2n1/NB4P1/PBPN1P2/2RQK1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1078);
    }

    #[test]
    fn gentest_2372() {
        let board = Board::from_fen("1n1q1br1/1b2pkpp/8/1pppP3/Br1P1pn1/N5P1/PBPN1P2/2RQK1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1081);
    }

    #[test]
    fn gentest_2373() {
        let board = Board::from_fen("1n1q1br1/1b2pkpp/8/1NppP3/B1NP1pn1/1r4P1/PBP2P2/2RQK1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1435);
    }

    #[test]
    fn gentest_2374() {
        let board = Board::from_fen("1n1q1br1/Nb2pkpp/8/2ppP3/B1NP1pn1/1r4P1/PBP2P2/2RQK1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1424);
    }

    #[test]
    fn gentest_2375() {
        let board = Board::from_fen("1n1qBbr1/Nb2p1pp/4k3/2ppP3/P1NP1pn1/1r4P1/1BP2P2/2RQK1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1403);
    }

    #[test]
    fn gentest_2376() {
        let board = Board::from_fen("1n1qBbr1/Nb2p1pp/3Nk3/2ppP3/P2P1pn1/1r4P1/1BP2P2/2RQK1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1415);
    }

    #[test]
    fn gentest_2377() {
        let board = Board::from_fen("1n1qBbr1/1b2p1p1/2NNk3/2ppP2p/P2P1pn1/Br4P1/2P2P2/2RQK1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1498);
    }

    #[test]
    fn gentest_2378() {
        let board = Board::from_fen("1n1q1br1/1b1kpBp1/2NN1n2/2ppP2p/P2P1p2/Br4P1/2P2P2/2RQK1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1534);
    }

    #[test]
    fn gentest_2379() {
        let board = Board::from_fen("1n1qNbr1/1b1kpBp1/2N2n2/2ppP2p/P2P1p2/B1r3P1/5P2/2RQK1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1420);
    }

    #[test]
    fn gentest_2380() {
        let board = Board::from_fen("1n1qnbr1/1b1kpBp1/2N5/2ppP2p/P2P4/B1r2Pp1/8/2RQK1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 982);
    }

    #[test]
    fn gentest_2381() {
        let board = Board::from_fen("1n1qnbr1/1b2pBp1/2k5/2BpP2p/P2P4/2r2Pp1/2R5/3QK1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1060);
    }

    #[test]
    fn gentest_2382() {
        let board = Board::from_fen("bn2nbr1/2q1p1p1/2k3B1/2BpP2p/P2P4/2r2Pp1/2R5/3QK1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1018);
    }

    #[test]
    fn gentest_2383() {
        let board = Board::from_fen("bn2nbr1/2q1p1p1/1Bk3B1/3pP2p/P2P4/2r2P2/2R3p1/Q3K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 756);
    }

    #[test]
    fn gentest_2384() {
        let board = Board::from_fen("b3nbr1/2qnp1p1/1Bk3B1/3pP2p/P2P4/5P2/Q1r3p1/4K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 739);
    }

    #[test]
    fn gentest_2385() {
        let board = Board::from_fen("b3nbr1/2qnpBp1/1k6/3pP2p/P2P4/5P2/2Q3p1/4K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 956);
    }

    #[test]
    fn gentest_2386() {
        let board = Board::from_fen("b3nbr1/2q1pBp1/1k6/3p3p/P2P4/5n2/2QK2p1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 190);
        assert_eq!(perft(&board, 3, &PRECOMP), 5721);
    }

    #[test]
    fn gentest_2387() {
        let board = Board::from_fen("b3nbr1/1q2pBp1/1k6/3p3p/P2P4/3K1n2/6Q1/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 892);
    }

    #[test]
    fn gentest_2388() {
        let board = Board::from_fen("b3nbr1/5Bp1/qk2p3/3p3p/P2P4/2K2n2/6Q1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1099);
    }

    #[test]
    fn gentest_2389() {
        let board = Board::from_fen("b3nbr1/k4Bp1/q3p3/3p3p/P2P4/2K2nQ1/6R1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1003);
    }

    #[test]
    fn gentest_2390() {
        let board = Board::from_fen("b3nbr1/k4Bp1/1q2p3/3p3p/P2P4/1K3nQ1/6R1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 3143);
    }

    #[test]
    fn gentest_2391() {
        let board = Board::from_fen("b3nbr1/k4Bp1/4p3/3p3p/P2P4/5nQ1/KR6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 953);
    }

    #[test]
    fn gentest_2392() {
        let board = Board::from_fen("b3n1r1/k5p1/4B3/2bp3p/P2P4/5nQ1/KR6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1019);
    }

    #[test]
    fn gentest_2393() {
        let board = Board::from_fen("b3nbr1/k5p1/4B3/3p3p/P2P4/5n2/KR1Q4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 807);
    }

    #[test]
    fn gentest_2394() {
        let board = Board::from_fen("4n1r1/k5p1/2b1B3/3p3p/P2P4/b4n2/KR5Q/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1116);
    }

    #[test]
    fn gentest_2395() {
        let board = Board::from_fen("4n1r1/k5p1/2b5/3p3p/P2P4/b6B/K6Q/1R2n3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 915);
    }

    #[test]
    fn gentest_2396() {
        let board = Board::from_fen("b3n1r1/k2B4/8/3p2pp/P2P4/b7/K6Q/1R2n3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 881);
    }

    #[test]
    fn gentest_2397() {
        let board = Board::from_fen("b3n1r1/1k1B4/8/3p2pp/P2P4/K7/7Q/4n3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 487);
        assert_eq!(perft(&board, 3, &PRECOMP), 8708);
    }

    #[test]
    fn gentest_2398() {
        let board = Board::from_fen("b3n1r1/1k1B4/8/3p2p1/P2P3p/8/1Kn4Q/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 510);
    }

    #[test]
    fn gentest_2399() {
        let board = Board::from_fen("b5r1/1k1B4/3n4/3p2p1/P2P3p/8/1Kn5/2Q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 735);
    }

    #[test]
    fn gentest_2400() {
        let board = Board::from_fen("b3r3/1k1B4/8/3p1np1/P2P3p/8/1KQ5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 664);
    }

    #[test]
    fn gentest_2401() {
        let board = Board::from_fen("b3r3/1k1B4/8/3p1n2/P2P2pp/2Q5/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 801);
    }

    #[test]
    fn gentest_2402() {
        let board = Board::from_fen("b7/1k6/4r3/1B1p4/P2P2pp/2Q3n1/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 703);
    }

    #[test]
    fn gentest_2403() {
        let board = Board::from_fen("b7/1k6/8/1B1p4/P2P2pp/1Q4n1/1K6/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 629);
    }

    #[test]
    fn gentest_2404() {
        let board = Board::from_fen("b1k5/8/8/3p1n2/P2P2pp/1Q6/1K2B3/4r3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 594);
    }

    #[test]
    fn gentest_2405() {
        let board = Board::from_fen("b1k5/8/8/3p4/P2n2pp/2Q5/1K2B3/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 182);
        assert_eq!(perft(&board, 3, &PRECOMP), 3862);
    }

    #[test]
    fn gentest_2406() {
        let board = Board::from_fen("2k5/8/2b5/3p4/P2n2pp/2Q2B2/1K2r3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 183);
        assert_eq!(perft(&board, 3, &PRECOMP), 4048);
    }

    #[test]
    fn gentest_2407() {
        let board = Board::from_fen("8/2k5/2b5/3B4/P2n2pp/2Q5/4r3/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 858);
    }

    #[test]
    fn gentest_2408() {
        let board = Board::from_fen("8/2k5/2b5/r2B4/3n2pp/2Q5/8/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 907);
    }

    #[test]
    fn gentest_2409() {
        let board = Board::from_fen("8/8/1kb5/r7/3Q2pp/8/B7/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 3362);
    }

    #[test]
    fn gentest_2410() {
        let board = Board::from_fen("8/8/2bQ4/1k6/6pp/8/r7/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 560);
    }

    #[test]
    fn gentest_2411() {
        let board = Board::from_fen("2Q5/1b6/8/1k6/6pp/8/r7/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 570);
    }

    #[test]
    fn gentest_2412() {
        let board = Board::from_fen("8/1Q6/8/2k5/6pp/8/r7/2K4b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 454);
        assert_eq!(perft(&board, 3, &PRECOMP), 9390);
    }

    #[test]
    fn gentest_2413() {
        let board = Board::from_fen("8/8/Q7/2k5/6pp/8/5r2/1K5b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 547);
        assert_eq!(perft(&board, 3, &PRECOMP), 9621);
    }

    #[test]
    fn gentest_2414() {
        let board = Board::from_fen("8/Qb6/8/3k4/6pp/8/5r2/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 287);
        assert_eq!(perft(&board, 3, &PRECOMP), 5535);
    }

    #[test]
    fn gentest_2415() {
        let board = Board::from_fen("8/1b6/2k5/8/6pp/2Q5/5r2/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 135);
        assert_eq!(perft(&board, 3, &PRECOMP), 2743);
    }

    #[test]
    fn gentest_2416() {
        let board = Board::from_fen("8/1b6/2k5/8/6pp/8/5r2/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 52);
        assert_eq!(perft(&board, 3, &PRECOMP), 112);
        assert_eq!(perft(&board, 4, &PRECOMP), 2892);
    }

    #[test]
    fn gentest_2417() {
        let board = Board::from_fen("8/1b6/2k5/8/6pp/8/3r4/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 72);
        assert_eq!(perft(&board, 3, &PRECOMP), 1833);
        assert_eq!(perft(&board, 4, &PRECOMP), 5835);
    }

    #[test]
    fn gentest_2418() {
        let board = Board::from_fen("8/8/1k6/8/6pp/8/3r4/2K4b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 48);
        assert_eq!(perft(&board, 3, &PRECOMP), 214);
        assert_eq!(perft(&board, 4, &PRECOMP), 4681);
    }

    #[test]
    fn gentest_2419() {
        let board = Board::from_fen("8/8/1k6/8/6pp/8/K7/3r3b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 2927);
    }

    #[test]
    fn gentest_2420() {
        let board = Board::from_fen("8/8/1k6/8/6pp/1K6/8/r6b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 735);
    }

    #[test]
    fn gentest_2421() {
        let board = Board::from_fen("8/1b6/1k6/8/6pp/2K5/8/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 228);
        assert_eq!(perft(&board, 3, &PRECOMP), 6705);
    }

    #[test]
    fn gentest_2422() {
        let board = Board::from_fen("8/1b6/1k6/8/3K2p1/7p/8/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 96);
        assert_eq!(perft(&board, 3, &PRECOMP), 506);
    }

    #[test]
    fn gentest_2423() {
        let board = Board::from_fen("b7/8/1k6/8/3K2p1/7p/8/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 106);
        assert_eq!(perft(&board, 3, &PRECOMP), 3015);
    }

    #[test]
    fn gentest_2424() {
        let board = Board::from_fen("b7/8/1k5r/8/4K1p1/7p/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 155);
        assert_eq!(perft(&board, 3, &PRECOMP), 809);
    }

    #[test]
    fn gentest_2425() {
        let board = Board::from_fen("8/8/1kb4r/8/6p1/6Kp/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 106);
        assert_eq!(perft(&board, 3, &PRECOMP), 2924);
    }

    #[test]
    fn gentest_2426() {
        let board = Board::from_fen("b7/8/1k5r/8/5Kp1/8/7p/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 178);
        assert_eq!(perft(&board, 3, &PRECOMP), 764);
    }

    #[test]
    fn gentest_2427() {
        let board = Board::from_fen("b7/8/7r/k7/3K2p1/8/7p/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 159);
        assert_eq!(perft(&board, 3, &PRECOMP), 4589);
    }

    #[test]
    fn gentest_2428() {
        let board = Board::from_fen("8/8/r7/k7/2K1b1p1/8/7p/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 118);
        assert_eq!(perft(&board, 3, &PRECOMP), 534);
    }

    #[test]
    fn gentest_2429() {
        let board = Board::from_fen("8/8/1r6/k7/2K1b1p1/8/7p/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 119);
        assert_eq!(perft(&board, 3, &PRECOMP), 3837);
    }

    #[test]
    fn gentest_2430() {
        let board = Board::from_fen("8/8/7r/k7/4b1p1/1K6/8/7r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 205);
        assert_eq!(perft(&board, 3, &PRECOMP), 744);
    }

    #[test]
    fn gentest_2431() {
        let board = Board::from_fen("8/8/7r/k7/3Kb1p1/8/8/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 250);
    }

    #[test]
    fn gentest_2432() {
        let board = Board::from_fen("7r/8/1k6/8/2K1b1p1/8/8/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 91);
        assert_eq!(perft(&board, 3, &PRECOMP), 376);
    }

    #[test]
    fn gentest_2433() {
        let board = Board::from_fen("3r4/8/1k6/8/4K1p1/8/8/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 4813);
    }

    #[test]
    fn gentest_2434() {
        let board = Board::from_fen("4r3/8/8/1k6/3K2p1/8/8/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 93);
        assert_eq!(perft(&board, 3, &PRECOMP), 355);
    }

    #[test]
    fn gentest_2435() {
        let board = Board::from_fen("4r3/8/3K4/1k6/1r4p1/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 104);
        assert_eq!(perft(&board, 3, &PRECOMP), 2954);
    }

    #[test]
    fn gentest_2436() {
        let board = Board::from_fen("2r1r3/8/8/1k1K4/6p1/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 56);
        assert_eq!(perft(&board, 3, &PRECOMP), 134);
        assert_eq!(perft(&board, 4, &PRECOMP), 4039);
    }

    #[test]
    fn gentest_2437() {
        let board = Board::from_fen("2r1r3/8/2k5/8/2K3p1/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 2695);
    }

    #[test]
    fn gentest_2438() {
        let board = Board::from_fen("3r3r/8/2k5/8/3K2p1/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 154);
        assert_eq!(perft(&board, 3, &PRECOMP), 689);
    }

    #[test]
    fn gentest_2439() {
        let board = Board::from_fen("3r3r/8/1k6/8/6p1/8/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 133);
        assert_eq!(perft(&board, 3, &PRECOMP), 4282);
    }

    #[test]
    fn gentest_2440() {
        let board = Board::from_fen("3r4/8/8/2k5/6p1/7r/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 185);
        assert_eq!(perft(&board, 3, &PRECOMP), 656);
    }

    #[test]
    fn gentest_2441() {
        let board = Board::from_fen("3r4/8/8/2k4r/6p1/8/5K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 216);
        assert_eq!(perft(&board, 3, &PRECOMP), 7095);
    }

    #[test]
    fn gentest_2442() {
        let board = Board::from_fen("8/8/8/2kr4/6p1/7r/8/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 424);
    }

    #[test]
    fn gentest_2443() {
        let board = Board::from_fen("8/8/3r4/2k5/6p1/7r/8/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 3792);
    }

    #[test]
    fn gentest_2444() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2445() {
        let board = Board::from_fen("rnbqkbnr/1ppppppp/8/p7/2P2P2/8/PP1PP1PP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 463);
    }

    #[test]
    fn gentest_2446() {
        let board = Board::from_fen("rnb1kbnr/1p1ppppp/1q6/p1p5/2P2P2/8/PP1PPKPP/RNBQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 794);
    }

    #[test]
    fn gentest_2447() {
        let board = Board::from_fen("rnb1kb1r/1p1ppppp/1q3n2/p1p5/P1P2P2/8/1P1PP1PP/RNBQKBNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 596);
    }

    #[test]
    fn gentest_2448() {
        let board = Board::from_fen("rn2kb1r/1p2pppp/1q3n2/p1pp4/P1P2Pb1/8/1P1PP2P/RNBQKBNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 816);
    }

    #[test]
    fn gentest_2449() {
        let board = Board::from_fen("r3kb1r/1p2pppp/1qn2n2/p1pp4/P1P2Pb1/4PQ2/1P1P3P/RNB1KBNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1289);
    }

    #[test]
    fn gentest_2450() {
        let board = Board::from_fen("r3kb1r/1p2pppp/1q6/p1pp3n/P1Pn1PQ1/4P3/1P1P3P/RNB1KBNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1403);
    }

    #[test]
    fn gentest_2451() {
        let board = Board::from_fen("r3kb1r/1p2pppp/8/p1pQ3n/P1Pn1P2/4P3/1q1P3P/RNB1KBNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1248);
    }

    #[test]
    fn gentest_2452() {
        let board = Board::from_fen("r3kb1r/4pppp/2p5/p1p4n/P1Pn1P2/4P3/q2P3P/RNB1KBNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 682);
    }

    #[test]
    fn gentest_2453() {
        let board = Board::from_fen("r3kb1r/4pppp/2p5/p1p4n/q1Pn1P2/R3P2N/3P3P/1NB1KB1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 617);
    }

    #[test]
    fn gentest_2454() {
        let board = Board::from_fen("1r2kb1r/4p1pp/2p2p2/p1p4n/q1PnPP2/R6N/3P3P/1NB1KB1R w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 793);
    }

    #[test]
    fn gentest_2455() {
        let board = Board::from_fen("1r2kb1r/4p1pp/2p2p2/p1p2n1n/q1P1PP2/7N/R2PK2P/1NB2B1R b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 657);
    }

    #[test]
    fn gentest_2456() {
        let board = Board::from_fen("1r2kb1r/4p1pp/2p2p2/p1p2n1n/2P1PP2/2q5/R2PKN1P/1NB2B1R w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1094);
    }

    #[test]
    fn gentest_2457() {
        let board = Board::from_fen("1r2kb1r/4p1pp/2p2p2/p1p2n1n/2PPPP2/6q1/R2K1N1P/1NB2B1R b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1109);
    }

    #[test]
    fn gentest_2458() {
        let board = Board::from_fen("1r3b1r/3kp1pp/2p2p2/p1p2n1n/2PPPP1q/8/2RK1N1P/1NB2B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 997);
    }

    #[test]
    fn gentest_2459() {
        let board = Board::from_fen("1r2kb1r/4p1pp/2p2p2/p1p1Pn1n/2PP1P1q/8/2R1KN1P/1NB2B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 863);
    }

    #[test]
    fn gentest_2460() {
        let board = Board::from_fen("4kb1r/4p1pp/1rp2p2/p1p1P2n/2PP1P1q/4n3/1BR1KN1P/1N3B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1039);
    }

    #[test]
    fn gentest_2461() {
        let board = Board::from_fen("4kb1r/4p1pp/2p2p2/p1p1PP1n/2PP3q/4n2N/1rR1K2P/1N3B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 660);
    }

    #[test]
    fn gentest_2462() {
        let board = Board::from_fen("4kb1r/4p1pp/2p2p2/p3PP1n/2Ppq3/4n2N/1rR1K2P/1N3BR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 911);
    }

    #[test]
    fn gentest_2463() {
        let board = Board::from_fen("4kb1r/4p1pp/2p2p2/p3PP1n/2Ppq3/2N4N/1rR2KnP/5BR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 709);
    }

    #[test]
    fn gentest_2464() {
        let board = Board::from_fen("4k2r/6pp/2p1pp2/p3PP1n/1bPpq3/2N4N/1rR2KBP/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1125);
    }

    #[test]
    fn gentest_2465() {
        let board = Board::from_fen("4k2r/6pp/2p1pp2/p2BPP1n/1bPp4/2N4N/1rR2K1P/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1112);
    }

    #[test]
    fn gentest_2466() {
        let board = Board::from_fen("4k2r/6pp/2p1pP2/p2B1P1n/1bP5/2Np3N/2R2K1P/1r4R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1249);
    }

    #[test]
    fn gentest_2467() {
        let board = Board::from_fen("4k2r/6pp/2p2n2/p2B1P2/1bP5/2Np3N/2R2K1P/1r4R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1192);
    }

    #[test]
    fn gentest_2468() {
        let board = Board::from_fen("4k2r/6pp/5n2/p2p1P2/1bP1N3/7N/2Rp1K1P/1r4R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1148);
    }

    #[test]
    fn gentest_2469() {
        let board = Board::from_fen("4k2r/6Rp/5n2/p2p1P2/2P1N3/b3K2N/2Rp3P/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1361);
    }

    #[test]
    fn gentest_2470() {
        let board = Board::from_fen("4k2r/6Rp/5n2/p2p1P2/2P1N3/3K3N/2Rp3P/2b4r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 869);
    }

    #[test]
    fn gentest_2471() {
        let board = Board::from_fen("3k3r/2R4p/5n2/p2p1P2/2P1N3/3K3N/2Rp3P/2b4r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 787);
    }

    #[test]
    fn gentest_2472() {
        let board = Board::from_fen("3k3r/2R4p/8/p2p1P2/2P3n1/3K3N/2RN3P/2bq3r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 635);
    }

    #[test]
    fn gentest_2473() {
        let board = Board::from_fen("3k3r/5R1p/8/p2p1P2/2P3n1/3K1N1N/2R4P/2b1q2r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1042);
    }

    #[test]
    fn gentest_2474() {
        let board = Board::from_fen("3k3r/5R1p/8/p1Pp1P2/6n1/3KbN1N/2R4P/4q1r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_2475() {
        let board = Board::from_fen("3k3r/7R/8/2Pp1P2/p5n1/3KbN1N/2R4P/4q1r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1033);
    }

    #[test]
    fn gentest_2476() {
        let board = Board::from_fen("3k3r/7R/8/2Pp1P2/p5n1/3K1N1N/3b3P/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 831);
    }

    #[test]
    fn gentest_2477() {
        let board = Board::from_fen("3k3r/1R6/7n/2Pp1PN1/p7/3K1N2/3b3P/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 998);
    }

    #[test]
    fn gentest_2478() {
        let board = Board::from_fen("3k3r/5R2/7n/2Pp1PN1/p7/3K1Nr1/7P/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 453);
    }

    #[test]
    fn gentest_2479() {
        let board = Board::from_fen("3k3r/1R6/7n/2Pp1PN1/8/p2K1Nr1/7P/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 620);
    }

    #[test]
    fn gentest_2480() {
        let board = Board::from_fen("3k3r/1R6/2P4n/3p1PN1/8/3K1Nr1/7P/n3b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 556);
    }

    #[test]
    fn gentest_2481() {
        let board = Board::from_fen("3k3r/1R6/2P4n/3p1PN1/8/5NP1/2n1K3/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 655);
    }

    #[test]
    fn gentest_2482() {
        let board = Board::from_fen("3k3r/1R6/2P4n/3p1PN1/8/5NP1/4n3/3Kb3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 625);
    }

    #[test]
    fn gentest_2483() {
        let board = Board::from_fen("3k3r/6R1/2P4n/3p1PN1/1b6/5NP1/4n3/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 653);
    }

    #[test]
    fn gentest_2484() {
        let board = Board::from_fen("3kr3/6R1/2P4n/3p1PN1/1b6/6P1/3N4/2nK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 613);
    }

    #[test]
    fn gentest_2485() {
        let board = Board::from_fen("3krb2/1R6/2P1N2n/3p1P2/8/6P1/3N4/2nK4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 60);
        assert_eq!(perft(&board, 3, &PRECOMP), 1259);
    }

    #[test]
    fn gentest_2486() {
        let board = Board::from_fen("3k1b2/1R6/2P1r2n/3p1P2/8/6P1/2KNn3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 733);
    }

    #[test]
    fn gentest_2487() {
        let board = Board::from_fen("3k1b2/1R6/2P1r2n/3p1P2/8/6n1/2KN4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 829);
    }

    #[test]
    fn gentest_2488() {
        let board = Board::from_fen("3k1b2/R7/2P4n/3prP2/8/6n1/2KN4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 718);
    }

    #[test]
    fn gentest_2489() {
        let board = Board::from_fen("3krb2/3R4/2P4n/3p1P2/8/5Nn1/2K5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 28);
        assert_eq!(perft(&board, 3, &PRECOMP), 671);
    }

    #[test]
    fn gentest_2490() {
        let board = Board::from_fen("2k1rbn1/3R4/2P5/3p1P2/3N4/6n1/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 574);
    }

    #[test]
    fn gentest_2491() {
        let board = Board::from_fen("2k1rbn1/3R4/2P5/3p1P2/3N4/8/2K5/5n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 498);
    }

    #[test]
    fn gentest_2492() {
        let board = Board::from_fen("2k1r3/3Rn3/2Pb4/3p1P2/3N4/8/8/3K1n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 357);
        assert_eq!(perft(&board, 3, &PRECOMP), 6599);
    }

    #[test]
    fn gentest_2493() {
        let board = Board::from_fen("2k1r3/1R6/2nbN3/3p1P2/8/8/8/3K1n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 766);
    }

    #[test]
    fn gentest_2494() {
        let board = Board::from_fen("2k3r1/5R2/2n1N3/3pbP2/8/8/8/3K1n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 727);
    }

    #[test]
    fn gentest_2495() {
        let board = Board::from_fen("6r1/3k2N1/2n5/3pbP2/8/8/8/3K1n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 280);
    }

    #[test]
    fn gentest_2496() {
        let board = Board::from_fen("3k2r1/6N1/2n5/3pbP2/8/8/7n/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 220);
        assert_eq!(perft(&board, 3, &PRECOMP), 1906);
    }

    #[test]
    fn gentest_2497() {
        let board = Board::from_fen("3k2r1/6N1/2n2P2/3p4/8/6b1/7n/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 229);
        assert_eq!(perft(&board, 3, &PRECOMP), 5840);
    }

    #[test]
    fn gentest_2498() {
        let board = Board::from_fen("6r1/1k6/2n1NP2/3p4/8/6b1/7n/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 411);
        assert_eq!(perft(&board, 3, &PRECOMP), 5251);
    }

    #[test]
    fn gentest_2499() {
        let board = Board::from_fen("6r1/1k3P2/2n5/6N1/3p4/6b1/7n/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 564);
    }

    #[test]
    fn gentest_2500() {
        let board = Board::from_fen("k4Nr1/8/2n5/6N1/3p4/6b1/7n/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 398);
        assert_eq!(perft(&board, 3, &PRECOMP), 5497);
    }

    #[test]
    fn gentest_2501() {
        let board = Board::from_fen("5Nr1/1k6/2nN4/8/3p4/6b1/7n/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 105);
        assert_eq!(perft(&board, 3, &PRECOMP), 2839);
    }

    #[test]
    fn gentest_2502() {
        let board = Board::from_fen("5Nr1/5N2/1kn5/8/3p4/6b1/8/3K1n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 404);
        assert_eq!(perft(&board, 3, &PRECOMP), 5285);
    }

    #[test]
    fn gentest_2503() {
        let board = Board::from_fen("3N2r1/2kN4/2n5/8/3p4/6b1/8/3K1n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 364);
    }

    #[test]
    fn gentest_2504() {
        let board = Board::from_fen("3N2r1/2kN4/2nb4/8/3p4/8/8/2K2n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 459);
        assert_eq!(perft(&board, 3, &PRECOMP), 6308);
    }

    #[test]
    fn gentest_2505() {
        let board = Board::from_fen("3N1N2/2k5/2nb2r1/8/3p4/8/8/1K3n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 425);
    }

    #[test]
    fn gentest_2506() {
        let board = Board::from_fen("5N2/2k2Nr1/2nb4/8/3p4/8/3n4/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 180);
        assert_eq!(perft(&board, 3, &PRECOMP), 2277);
    }

    #[test]
    fn gentest_2507() {
        let board = Board::from_fen("5N2/2k3r1/3N4/n7/3p4/8/K2n4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 394);
        assert_eq!(perft(&board, 3, &PRECOMP), 9029);
    }

    #[test]
    fn gentest_2508() {
        let board = Board::from_fen("8/2kN1r2/2nN4/8/3p4/8/K2n4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 418);
        assert_eq!(perft(&board, 3, &PRECOMP), 6472);
    }

    #[test]
    fn gentest_2509() {
        let board = Board::from_fen("8/2k1nr2/1N6/8/3pN3/8/K2n4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 451);
    }

    #[test]
    fn gentest_2510() {
        let board = Board::from_fen("8/2k4r/1N4n1/8/3p4/8/K2N4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 372);
        assert_eq!(perft(&board, 3, &PRECOMP), 5882);
    }

    #[test]
    fn gentest_2511() {
        let board = Board::from_fen("8/2k5/1N4n1/8/3p4/8/8/K4N1r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 211);
        assert_eq!(perft(&board, 3, &PRECOMP), 4228);
    }

    #[test]
    fn gentest_2512() {
        let board = Board::from_fen("8/2k5/8/4n3/2N5/3p4/8/K4N1r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 253);
        assert_eq!(perft(&board, 3, &PRECOMP), 2729);
    }

    #[test]
    fn gentest_2513() {
        let board = Board::from_fen("3k4/8/8/4n3/8/3pN3/8/1K3N1r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 253);
        assert_eq!(perft(&board, 3, &PRECOMP), 5783);
    }

    #[test]
    fn gentest_2514() {
        let board = Board::from_fen("4k3/8/8/4n3/8/3p4/6N1/1K3N1r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 172);
        assert_eq!(perft(&board, 3, &PRECOMP), 1882);
    }

    #[test]
    fn gentest_2515() {
        let board = Board::from_fen("4k3/8/8/4n3/8/3p3r/1K1N2N1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 361);
        assert_eq!(perft(&board, 3, &PRECOMP), 8042);
    }

    #[test]
    fn gentest_2516() {
        let board = Board::from_fen("4k2r/8/2n5/8/8/1K1p4/3N2N1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 332);
        assert_eq!(perft(&board, 3, &PRECOMP), 5052);
    }

    #[test]
    fn gentest_2517() {
        let board = Board::from_fen("4k2r/4n3/8/8/8/1K1p2N1/6N1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 335);
        assert_eq!(perft(&board, 3, &PRECOMP), 7157);
    }

    #[test]
    fn gentest_2518() {
        let board = Board::from_fen("3k4/4n3/8/8/7N/1K1p2N1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 188);
        assert_eq!(perft(&board, 3, &PRECOMP), 3080);
    }

    #[test]
    fn gentest_2519() {
        let board = Board::from_fen("3k4/8/8/5n1N/8/1K1p1N2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 254);
        assert_eq!(perft(&board, 3, &PRECOMP), 3301);
    }

    #[test]
    fn gentest_2520() {
        let board = Board::from_fen("3k4/8/6n1/7N/8/2Kp1N2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 221);
        assert_eq!(perft(&board, 3, &PRECOMP), 3941);
    }

    #[test]
    fn gentest_2521() {
        let board = Board::from_fen("2k5/8/6n1/7N/8/3K1N2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 196);
        assert_eq!(perft(&board, 3, &PRECOMP), 2130);
    }

    #[test]
    fn gentest_2522() {
        let board = Board::from_fen("2k3n1/8/8/7N/8/5N2/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 150);
        assert_eq!(perft(&board, 3, &PRECOMP), 2707);
    }

    #[test]
    fn gentest_2523() {
        let board = Board::from_fen("2k5/8/5N1n/8/8/8/3NK3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 165);
        assert_eq!(perft(&board, 3, &PRECOMP), 1609);
    }

    #[test]
    fn gentest_2524() {
        let board = Board::from_fen("2k5/8/5N1n/8/8/8/3N4/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 149);
        assert_eq!(perft(&board, 3, &PRECOMP), 2541);
    }

    #[test]
    fn gentest_2525() {
        let board = Board::from_fen("2k3n1/8/8/8/8/4N3/3N4/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 136);
        assert_eq!(perft(&board, 3, &PRECOMP), 1349);
    }

    #[test]
    fn gentest_2526() {
        let board = Board::from_fen("2k3n1/8/8/8/8/8/3N2N1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 1712);
    }

    #[test]
    fn gentest_2527() {
        let board = Board::from_fen("3k2n1/8/8/8/8/1N6/6N1/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 1096);
    }

    #[test]
    fn gentest_2528() {
        let board = Board::from_fen("6n1/5k2/8/8/8/1N6/6N1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 2213);
    }

    #[test]
    fn gentest_2529() {
        let board = Board::from_fen("6n1/6k1/8/8/7N/8/8/N2K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 839);
    }

    #[test]
    fn gentest_2530() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2531() {
        let board = Board::from_fen("rnbqkbnr/ppppppp1/7p/8/8/1P1P4/P1P1PPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 531);
    }

    #[test]
    fn gentest_2532() {
        let board = Board::from_fen("rnbqkbnr/pp1ppp2/2p4p/6B1/8/1P1P4/P1P1PPPP/RN1QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 595);
    }

    #[test]
    fn gentest_2533() {
        let board = Board::from_fen("rnbqkbnr/pp1ppp2/2p5/6p1/8/1P1P4/P1PNPPPP/R1Q1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 668);
    }

    #[test]
    fn gentest_2534() {
        let board = Board::from_fen("rnbqk1n1/pp1pppb1/2p5/6p1/8/1P1P4/P1P1PPPr/RNQ1KBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 953);
    }

    #[test]
    fn gentest_2535() {
        let board = Board::from_fen("rnbqk1nr/pp1pppb1/2p5/6p1/8/NP1P4/P1PQPPP1/R3KBNR b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1139);
    }

    #[test]
    fn gentest_2536() {
        let board = Board::from_fen("rn1qk1nr/pb1pppb1/2p5/Qp4p1/8/NP1P4/P1P1PPP1/R3KBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1264);
    }

    #[test]
    fn gentest_2537() {
        let board = Board::from_fen("rn1qk1nr/pb2ppb1/2pp4/1p4p1/4P3/NPQP4/P1P2PP1/R3KBNR b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1315);
    }

    #[test]
    fn gentest_2538() {
        let board = Board::from_fen("rn1qk1nr/p3pp2/b1pp4/1p4p1/3bP3/NPQP4/P1P1NPP1/R3KB1R w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1197);
    }

    #[test]
    fn gentest_2539() {
        let board = Board::from_fen("rn1qk1nr/p3pp2/b1pp4/1p4p1/1Q2P3/NP1P4/P1P1NbP1/2KR1B1R b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1185);
    }

    #[test]
    fn gentest_2540() {
        let board = Board::from_fen("rn1qk1nr/pb2pp2/2pp4/1p4p1/1QN1P3/1P1P4/P1P1N1P1/2KRbB1R w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1396);
    }

    #[test]
    fn gentest_2541() {
        let board = Board::from_fen("rnbqk1nr/p3pp2/2pp4/1p4p1/2N1P3/1P1P4/P1P1N1P1/2KRbBQR b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1510);
    }

    #[test]
    fn gentest_2542() {
        let board = Board::from_fen("rnb1k1n1/p3pp1r/1qpp4/1p4p1/P1N1P3/1P1P4/2P1N1P1/2KRbBQR w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1692);
    }

    #[test]
    fn gentest_2543() {
        let board = Board::from_fen("rnb1k1n1/p3pp1r/1qpp4/1p6/P3P1p1/1P1PN3/2PRN1P1/2K1bBQR b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1189);
    }

    #[test]
    fn gentest_2544() {
        let board = Board::from_fen("rn2k1n1/p3pp1r/bqpp4/1p2P3/P5p1/1P1PN3/2PRN1P1/2K1bBQR w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1059);
    }

    #[test]
    fn gentest_2545() {
        let board = Board::from_fen("rn2k1n1/p4p1R/bqppp3/1p2P3/PP4p1/3PN3/2PRN1P1/2K1bBQ1 b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 863);
    }

    #[test]
    fn gentest_2546() {
        let board = Board::from_fen("rnb1k1n1/p6R/1qppp3/Pp2Pp2/1P4p1/3PN3/2PRN1P1/2K1bBQ1 w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1028);
    }

    #[test]
    fn gentest_2547() {
        let board = Board::from_fen("rnb1k3/p3n2R/Pqppp3/1p1NPp2/1P4p1/3P4/2PRN1P1/2K1bBQ1 b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1086);
    }

    #[test]
    fn gentest_2548() {
        let board = Board::from_fen("rnb1k3/p5R1/Pqppp3/1p1nPp2/1P4p1/3P2b1/2PRN1P1/2K2BQ1 w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 909);
    }

    #[test]
    fn gentest_2549() {
        let board = Board::from_fen("rnb1k3/p7/Pqppp3/1p1nP3/1P4p1/3P2b1/2PRN1PQ/2K2B2 b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 763);
    }

    #[test]
    fn gentest_2550() {
        let board = Board::from_fen("rnb1k3/p7/P1ppp3/1pq1P3/1P3np1/2PP2b1/3RN1PQ/2K2B2 w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 737);
    }

    #[test]
    fn gentest_2551() {
        let board = Board::from_fen("rn2k3/pb6/P1ppp3/1pqPP3/1P3np1/2P3b1/3RN1PQ/2K2B2 b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 823);
    }

    #[test]
    fn gentest_2552() {
        let board = Board::from_fen("rn2k3/pb6/P1ppp3/1pqPP3/1P4p1/2P5/3RBbPQ/2K5 w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 824);
    }

    #[test]
    fn gentest_2553() {
        let board = Board::from_fen("Rn6/p2k4/2ppp3/1pqPP3/1P4p1/2P5/3RBbPQ/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 825);
    }

    #[test]
    fn gentest_2554() {
        let board = Board::from_fen("Rn5Q/p1k5/2ppp3/1pqPP3/1P4p1/2P5/3RBbP1/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 814);
    }

    #[test]
    fn gentest_2555() {
        let board = Board::from_fen("Rn5Q/p1k5/2pPp3/1pqP4/1P1b2p1/2P5/2KRB1P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 202);
        assert_eq!(perft(&board, 3, &PRECOMP), 4357);
    }

    #[test]
    fn gentest_2556() {
        let board = Board::from_fen("Rn5Q/p1k5/2pqP3/1pb5/1P4p1/2P5/2KRB1P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 870);
    }

    #[test]
    fn gentest_2557() {
        let board = Board::from_fen("2R5/p1k5/n1pqP2Q/1pb5/1P4p1/2P5/2KRB1P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 123);
        assert_eq!(perft(&board, 3, &PRECOMP), 3026);
    }

    #[test]
    fn gentest_2558() {
        let board = Board::from_fen("2R5/p1q5/nkp1PQ2/1pb5/1P4p1/2P5/2KRB1P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1166);
    }

    #[test]
    fn gentest_2559() {
        let board = Board::from_fen("2R5/p1q5/nkB1PQ2/8/1P4p1/2P5/2KR2P1/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1181);
    }

    #[test]
    fn gentest_2560() {
        let board = Board::from_fen("R2q4/p7/nkB1PQ2/8/1P4p1/2P5/2KR2Pb/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1249);
    }

    #[test]
    fn gentest_2561() {
        let board = Board::from_fen("R2q4/p7/1kB1PQ2/8/1P4p1/3R4/2K3Pb/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1466);
    }

    #[test]
    fn gentest_2562() {
        let board = Board::from_fen("R7/p7/1kBqP2Q/8/1P3bp1/3R4/2K3P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1328);
    }

    #[test]
    fn gentest_2563() {
        let board = Board::from_fen("7R/p7/1kB1P2Q/3q4/1P3bp1/8/2KR2P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1215);
    }

    #[test]
    fn gentest_2564() {
        let board = Board::from_fen("7R/8/1kB1P2Q/p7/1P3bp1/1K6/3q2P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1140);
    }

    #[test]
    fn gentest_2565() {
        let board = Board::from_fen("1R6/8/1kB1P2Q/p7/1P4p1/K5b1/3q2P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 177);
        assert_eq!(perft(&board, 3, &PRECOMP), 5178);
    }

    #[test]
    fn gentest_2566() {
        let board = Board::from_fen("1R6/6Q1/k1B1P3/8/1p4p1/K5b1/3q2P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 91);
        assert_eq!(perft(&board, 3, &PRECOMP), 3159);
    }

    #[test]
    fn gentest_2567() {
        let board = Board::from_fen("8/1B1q2Q1/k3P3/8/1R4p1/K5b1/6P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 116);
        assert_eq!(perft(&board, 3, &PRECOMP), 2847);
    }

    #[test]
    fn gentest_2568() {
        let board = Board::from_fen("4q3/kB6/4P3/8/1R4p1/K1Q3b1/6P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1005);
    }

    #[test]
    fn gentest_2569() {
        let board = Board::from_fen("4q3/k7/4P3/3B4/1R4p1/K7/5bP1/4Q3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 961);
    }

    #[test]
    fn gentest_2570() {
        let board = Board::from_fen("4q3/8/k3P3/3B4/1R4pb/K3Q3/6P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 994);
    }

    #[test]
    fn gentest_2571() {
        let board = Board::from_fen("4q3/8/k1B1P3/8/1R4p1/KQ6/6P1/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 800);
    }

    #[test]
    fn gentest_2572() {
        let board = Board::from_fen("5q2/k7/2B1P3/8/5Rp1/KQ6/6P1/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 166);
        assert_eq!(perft(&board, 3, &PRECOMP), 6368);
    }

    #[test]
    fn gentest_2573() {
        let board = Board::from_fen("8/k7/2B1P3/8/6p1/KQb2R2/6P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 480);
        assert_eq!(perft(&board, 3, &PRECOMP), 5117);
    }

    #[test]
    fn gentest_2574() {
        let board = Board::from_fen("8/k5b1/2B1P3/8/8/1Q3p2/K5P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 329);
    }

    #[test]
    fn gentest_2575() {
        let board = Board::from_fen("8/6b1/1kB1P3/8/8/QK3p2/6P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 407);
        assert_eq!(perft(&board, 3, &PRECOMP), 4987);
    }

    #[test]
    fn gentest_2576() {
        let board = Board::from_fen("8/8/1kB1P3/8/Q7/1K3p2/6P1/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 310);
        assert_eq!(perft(&board, 3, &PRECOMP), 9931);
    }

    #[test]
    fn gentest_2577() {
        let board = Board::from_fen("8/8/1k2P3/4b3/Q3B3/1K3p2/6P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 581);
        assert_eq!(perft(&board, 3, &PRECOMP), 6885);
    }

    #[test]
    fn gentest_2578() {
        let board = Board::from_fen("8/8/1k2P3/4b3/4B3/1K3p2/Q5P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 546);
    }

    #[test]
    fn gentest_2579() {
        let board = Board::from_fen("8/Q1b5/1k2P3/8/8/1K3B2/6P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 53);
        assert_eq!(perft(&board, 3, &PRECOMP), 499);
    }

    #[test]
    fn gentest_2580() {
        let board = Board::from_fen("1b6/8/4P3/1k6/3Q4/1K3B2/6P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 333);
    }

    #[test]
    fn gentest_2581() {
        let board = Board::from_fen("1b6/8/1k2P3/8/2Q3B1/1K6/6P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 322);
        assert_eq!(perft(&board, 3, &PRECOMP), 2980);
    }

    #[test]
    fn gentest_2582() {
        let board = Board::from_fen("8/k7/4P3/8/2Q2bB1/8/1K4P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 428);
    }

    #[test]
    fn gentest_2583() {
        let board = Board::from_fen("8/k7/4P3/8/6B1/2Q5/6P1/1Kb5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 437);
        assert_eq!(perft(&board, 3, &PRECOMP), 4224);
    }

    #[test]
    fn gentest_2584() {
        let board = Board::from_fen("8/k7/1b2P3/8/6B1/2Q5/2K3P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 377);
    }

    #[test]
    fn gentest_2585() {
        let board = Board::from_fen("8/k7/4P3/8/3b4/5B2/2KQ2P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 519);
        assert_eq!(perft(&board, 3, &PRECOMP), 5770);
    }

    #[test]
    fn gentest_2586() {
        let board = Board::from_fen("B7/k7/4P3/8/8/8/2KQ2P1/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 280);
        assert_eq!(perft(&board, 3, &PRECOMP), 9249);
    }

    #[test]
    fn gentest_2587() {
        let board = Board::from_fen("8/k7/4P3/Q7/8/5B2/2K2bP1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 41);
        assert_eq!(perft(&board, 3, &PRECOMP), 364);
    }

    #[test]
    fn gentest_2588() {
        let board = Board::from_fen("2k5/8/4P3/Q6B/8/8/2K2bP1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 376);
    }

    #[test]
    fn gentest_2589() {
        let board = Board::from_fen("1k6/8/4P3/7B/8/3Q4/2K2bP1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 544);
        assert_eq!(perft(&board, 3, &PRECOMP), 6237);
    }

    #[test]
    fn gentest_2590() {
        let board = Board::from_fen("8/b1k5/4P3/7B/8/7Q/2K3P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 377);
    }

    #[test]
    fn gentest_2591() {
        let board = Board::from_fen("8/2k5/1b2P3/8/6B1/7Q/6P1/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 316);
        assert_eq!(perft(&board, 3, &PRECOMP), 4064);
    }

    #[test]
    fn gentest_2592() {
        let board = Board::from_fen("8/2k5/4P3/8/8/7Q/4BbP1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 415);
    }

    #[test]
    fn gentest_2593() {
        let board = Board::from_fen("7Q/b1k5/4P3/8/8/8/4B1P1/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 389);
        assert_eq!(perft(&board, 3, &PRECOMP), 3928);
    }

    #[test]
    fn gentest_2594() {
        let board = Board::from_fen("8/b1k5/4P3/8/8/8/4B1P1/Q2K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 341);
    }

    #[test]
    fn gentest_2595() {
        let board = Board::from_fen("3k1Q2/b7/4P3/8/8/8/4B1P1/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 36);
        assert_eq!(perft(&board, 3, &PRECOMP), 328);
    }

    #[test]
    fn gentest_2596() {
        let board = Board::from_fen("6Q1/b7/2k1P3/8/8/8/4B1P1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 317);
        assert_eq!(perft(&board, 3, &PRECOMP), 9732);
    }

    #[test]
    fn gentest_2597() {
        let board = Board::from_fen("8/bk6/4P1Q1/8/8/8/6P1/3K1B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 374);
        assert_eq!(perft(&board, 3, &PRECOMP), 4275);
    }

    #[test]
    fn gentest_2598() {
        let board = Board::from_fen("k7/8/4P3/5Q2/3b4/8/6P1/3K1B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 455);
    }

    #[test]
    fn gentest_2599() {
        let board = Board::from_fen("k7/8/4P3/2b2Q2/8/3K4/6P1/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 393);
        assert_eq!(perft(&board, 3, &PRECOMP), 4117);
    }

    #[test]
    fn gentest_2600() {
        let board = Board::from_fen("8/1k6/3bPQ2/8/8/3K4/6P1/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 497);
    }

    #[test]
    fn gentest_2601() {
        let board = Board::from_fen("8/4P3/2kb4/8/5Q2/3K4/6P1/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 524);
        assert_eq!(perft(&board, 3, &PRECOMP), 5952);
    }

    #[test]
    fn gentest_2602() {
        let board = Board::from_fen("1b2Q3/1k6/8/8/5Q2/3K4/6P1/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 55);
        assert_eq!(perft(&board, 2, &PRECOMP), 444);
    }

    #[test]
    fn gentest_2603() {
        let board = Board::from_fen("8/1k6/3b4/1Q6/8/3K4/6PQ/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 172);
        assert_eq!(perft(&board, 3, &PRECOMP), 1569);
    }

    #[test]
    fn gentest_2604() {
        let board = Board::from_fen("kb6/8/8/6Q1/8/3K4/6PQ/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 336);
    }

    #[test]
    fn gentest_2605() {
        let board = Board::from_fen("1b6/k7/8/8/3K2Q1/8/6PQ/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 329);
        assert_eq!(perft(&board, 3, &PRECOMP), 3515);
    }

    #[test]
    fn gentest_2606() {
        let board = Board::from_fen("8/k7/3b4/8/6Q1/3K4/6PQ/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 575);
    }

    #[test]
    fn gentest_2607() {
        let board = Board::from_fen("8/k7/7Q/4b3/8/3K1Q2/6P1/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 660);
        assert_eq!(perft(&board, 3, &PRECOMP), 6176);
    }

    #[test]
    fn gentest_2608() {
        let board = Board::from_fen("7Q/k7/8/b7/8/3K1Q2/6P1/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 362);
    }

    #[test]
    fn gentest_2609() {
        let board = Board::from_fen("3b4/k7/8/8/8/3K1Q1Q/6P1/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 396);
        assert_eq!(perft(&board, 3, &PRECOMP), 3770);
    }

    #[test]
    fn gentest_2610() {
        let board = Board::from_fen("8/k7/8/8/8/3K1QbQ/8/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 433);
    }

    #[test]
    fn gentest_2611() {
        let board = Board::from_fen("8/8/1k6/8/8/3K3Q/6Q1/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 267);
        assert_eq!(perft(&board, 3, &PRECOMP), 1027);
    }

    #[test]
    fn gentest_2612() {
        let board = Board::from_fen("8/3Q4/1k6/8/8/3K4/6Q1/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 140);
        assert_eq!(perft(&board, 3, &PRECOMP), 6967);
    }

    #[test]
    fn gentest_2613() {
        let board = Board::from_fen("8/3Q4/8/2k5/4Q3/3K4/8/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 54);
        assert_eq!(perft(&board, 3, &PRECOMP), 143);
        assert_eq!(perft(&board, 4, &PRECOMP), 7321);
    }

    #[test]
    fn gentest_2614() {
        let board = Board::from_fen("4Q3/3Q4/8/2k5/8/3K4/8/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 86);
        assert_eq!(perft(&board, 3, &PRECOMP), 4225);
    }

    #[test]
    fn gentest_2615() {
        let board = Board::from_fen("4Q3/5Q2/1k6/8/8/3K3B/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 163);
        assert_eq!(perft(&board, 3, &PRECOMP), 427);
    }

    #[test]
    fn gentest_2616() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2617() {
        let board = Board::from_fen("rnbqkbnr/pppp1ppp/4p3/8/2P5/1P6/P2PPPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 622);
    }

    #[test]
    fn gentest_2618() {
        let board = Board::from_fen("rnb1kbnr/pppp1pp1/4pq1p/8/2P1P3/1P6/P2P1PPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1014);
    }

    #[test]
    fn gentest_2619() {
        let board = Board::from_fen("rnb1kbnr/pppp1pp1/4p2p/8/P1PPP2q/1P6/5PPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1219);
    }

    #[test]
    fn gentest_2620() {
        let board = Board::from_fen("rnb2bnr/ppppkpp1/4p2p/8/P1PPP3/1P4q1/3K1PPP/RNBQ1BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1089);
    }

    #[test]
    fn gentest_2621() {
        let board = Board::from_fen("rnb2bnr/ppppk1p1/4p2p/5p2/P1PPP3/RP3Qq1/3K1PPP/1NB2BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1133);
    }

    #[test]
    fn gentest_2622() {
        let board = Board::from_fen("rnb2bnr/p1ppk3/4p1pp/1p3p2/P1PPP3/RP4Q1/3K1PPP/1NB2BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 948);
    }

    #[test]
    fn gentest_2623() {
        let board = Board::from_fen("rnb2bnr/p1p1k3/4p1pp/1p1p1p2/PPPPP3/R2B2Q1/3K1PPP/1NB3NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1092);
    }

    #[test]
    fn gentest_2624() {
        let board = Board::from_fen("rn3bnr/p1p5/b2Qpkpp/1p1p1p2/PPPPP3/R2B4/3K1PPP/1NB3NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 920);
    }

    #[test]
    fn gentest_2625() {
        let board = Board::from_fen("r4bnr/p1pn4/b2Qpkpp/1p1p1p2/PPPPP3/R7/2B2PPP/1NBK2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1415);
    }

    #[test]
    fn gentest_2626() {
        let board = Board::from_fen("rn3bnr/p7/b2ppkpp/1p1p1p2/PPPPP3/R2B4/5PPP/1NBK2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 681);
    }

    #[test]
    fn gentest_2627() {
        let board = Board::from_fen("rn3bnr/p7/b2ppkpp/1p3p2/PPpPP3/R2B4/3B1PPP/1N1K2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 670);
    }

    #[test]
    fn gentest_2628() {
        let board = Board::from_fen("rn3bnr/p7/b2ppkpp/5p2/pP1PP3/R2p4/3BNPPP/1N1K3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 658);
    }

    #[test]
    fn gentest_2629() {
        let board = Board::from_fen("rn3bnr/p7/b2ppk1p/5pp1/pP1PP3/R2p4/4NPPP/1NK1B2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 609);
    }

    #[test]
    fn gentest_2630() {
        let board = Board::from_fen("rn3bnr/p7/3ppk1p/1b1P1pp1/pP2P3/R7/3pNPPP/1NK1B2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 182);
        assert_eq!(perft(&board, 3, &PRECOMP), 5932);
    }

    #[test]
    fn gentest_2631() {
        let board = Board::from_fen("rn3bnr/8/p2ppk1p/1b1P1pp1/pP2P3/3R4/3KNPPP/1N2B2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 792);
    }

    #[test]
    fn gentest_2632() {
        let board = Board::from_fen("rn4n1/4b2r/p2ppk1p/1b1P1pp1/pP2P3/3R4/2K1NPPP/1N2B2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 888);
    }

    #[test]
    fn gentest_2633() {
        let board = Board::from_fen("rn4n1/4b2r/p2ppk1p/1b1P1pp1/1P2P2P/p2R2P1/2K1NP2/1N2B2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 884);
    }

    #[test]
    fn gentest_2634() {
        let board = Board::from_fen("rn4n1/4b2r/3pPk1p/pb3p2/1P2P1pP/p2R2P1/2K1NP2/1N2B2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 928);
    }

    #[test]
    fn gentest_2635() {
        let board = Board::from_fen("rn4n1/4b1kr/3pP2p/pb3p2/1P2P1pP/pKR3P1/4NP2/1N2B2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 859);
    }

    #[test]
    fn gentest_2636() {
        let board = Board::from_fen("rn4n1/4b1kr/3pP2p/1b6/pP2PppP/p1R3P1/2K1NP2/1N2B2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 801);
    }

    #[test]
    fn gentest_2637() {
        let board = Board::from_fen("rn2b1n1/4b1kr/3pP2p/8/pP2PppP/p1R3P1/2KB1P2/1NN4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 876);
    }

    #[test]
    fn gentest_2638() {
        let board = Board::from_fen("rn2bknr/4b3/3pP2p/8/pP2PPpP/p1R5/2KB1P2/1NN4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 732);
    }

    #[test]
    fn gentest_2639() {
        let board = Board::from_fen("rn2bk1r/4b3/2RpPn1p/8/pP2PPpP/p7/2KB1P2/1NN4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 793);
    }

    #[test]
    fn gentest_2640() {
        let board = Board::from_fen("rnR1b2r/4b2k/3pPn1p/8/pP2PPpP/p7/2KB1P2/1NN4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 858);
    }

    #[test]
    fn gentest_2641() {
        let board = Board::from_fen("rn2b2r/4b2k/2RpPn1p/8/pP2PP1P/p5p1/2KB1P1R/1NN5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 850);
    }

    #[test]
    fn gentest_2642() {
        let board = Board::from_fen("rn2b1nr/4b2k/1R1pP3/7p/pP2PP1P/p5p1/2KB1P1R/1NN5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 656);
    }

    #[test]
    fn gentest_2643() {
        let board = Board::from_fen("rn4nr/4b2k/1R1pP3/1b5p/pP2PP1P/p2N2P1/2KB3R/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 687);
    }

    #[test]
    fn gentest_2644() {
        let board = Board::from_fen("rn5r/3bb2k/1R1pP2n/7p/pP2PP1P/p1NN2P1/2KB3R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1011);
    }

    #[test]
    fn gentest_2645() {
        let board = Board::from_fen("rn4nr/3bb2k/1R1pP3/4N2p/pP2PPPP/p1N5/2KB3R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 845);
    }

    #[test]
    fn gentest_2646() {
        let board = Board::from_fen("rnb4r/4b2k/1R1pPn2/4N2p/pP2PPPP/p1N5/3B3R/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1001);
    }

    #[test]
    fn gentest_2647() {
        let board = Board::from_fen("rnb4r/4b2k/1R1pP3/4N2P/pP2nP1P/p1N5/3B4/1K5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1119);
    }

    #[test]
    fn gentest_2648() {
        let board = Board::from_fen("rnb5/4b1kr/1R1pP3/4N2P/pP2nP1P/p1N5/8/1KB4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1130);
    }

    #[test]
    fn gentest_2649() {
        let board = Board::from_fen("rRbb4/6kr/3pP3/1P2N2P/p3nP1P/p1N5/8/1KB4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1054);
    }

    #[test]
    fn gentest_2650() {
        let board = Board::from_fen("rRb5/2b3kr/3pP3/1P1NN2P/p3nP1P/8/p7/1KB4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 4143);
    }

    #[test]
    fn gentest_2651() {
        let board = Board::from_fen("rR6/2b3kr/3pb3/1P1NN2P/p3nP1P/8/8/1KB4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1070);
    }

    #[test]
    fn gentest_2652() {
        let board = Board::from_fen("rR6/2b3k1/3pb3/1P1NN2r/p4P1P/2n5/2K5/2B4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1346);
    }

    #[test]
    fn gentest_2653() {
        let board = Board::from_fen("rR6/2b3k1/4b3/1P1Np2r/p4P1P/2n2R2/2K5/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1208);
    }

    #[test]
    fn gentest_2654() {
        let board = Board::from_fen("rR6/6k1/4b3/1P1Np2r/pb3P1P/2n5/2K5/2B2R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1145);
    }

    #[test]
    fn gentest_2655() {
        let board = Board::from_fen("R7/4Nk2/4b3/1P2p2r/pb3P1P/2n5/2K5/2B2R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1022);
    }

    #[test]
    fn gentest_2656() {
        let board = Board::from_fen("R7/3bNk2/8/1P2pr2/pb3P1P/2n5/2KB4/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 982);
    }

    #[test]
    fn gentest_2657() {
        let board = Board::from_fen("8/3bNk2/8/RP2Pr2/pb2n2P/8/2KB4/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1074);
    }

    #[test]
    fn gentest_2658() {
        let board = Board::from_fen("8/3bk3/8/bP2Pr2/p3n2P/8/3B4/1K3R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 833);
    }

    #[test]
    fn gentest_2659() {
        let board = Board::from_fen("4b3/4k3/8/bP2Pr2/p3n2P/2B5/1K6/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 802);
    }

    #[test]
    fn gentest_2660() {
        let board = Board::from_fen("4b3/4k3/8/1P2Pr2/p6P/6n1/1K6/4bR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 492);
        assert_eq!(perft(&board, 3, &PRECOMP), 7370);
    }

    #[test]
    fn gentest_2661() {
        let board = Board::from_fen("4b3/4k3/4P3/bP3R2/p6P/6n1/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 422);
        assert_eq!(perft(&board, 3, &PRECOMP), 9394);
    }

    #[test]
    fn gentest_2662() {
        let board = Board::from_fen("3bb3/4k3/4P3/1P6/7P/p5n1/1K6/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 142);
        assert_eq!(perft(&board, 3, &PRECOMP), 2596);
    }

    #[test]
    fn gentest_2663() {
        let board = Board::from_fen("4b3/4k3/1b2P3/1P6/7P/p5n1/8/KR6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 300);
        assert_eq!(perft(&board, 3, &PRECOMP), 7721);
    }

    #[test]
    fn gentest_2664() {
        let board = Board::from_fen("8/4kb2/1b2P3/1P6/7P/p5n1/8/K3R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 347);
        assert_eq!(perft(&board, 3, &PRECOMP), 4824);
    }

    #[test]
    fn gentest_2665() {
        let board = Board::from_fen("8/4kP2/8/1P6/7P/p3b1n1/4R3/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 220);
        assert_eq!(perft(&board, 3, &PRECOMP), 3974);
    }

    #[test]
    fn gentest_2666() {
        let board = Board::from_fen("8/4kP2/8/1P6/7P/p3b1n1/K3R3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 271);
        assert_eq!(perft(&board, 3, &PRECOMP), 5139);
    }

    #[test]
    fn gentest_2667() {
        let board = Board::from_fen("3k4/5P2/8/1P6/7P/pK2R1n1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 239);
        assert_eq!(perft(&board, 3, &PRECOMP), 2166);
    }

    #[test]
    fn gentest_2668() {
        let board = Board::from_fen("3k1N2/8/8/1P6/7P/pK2R3/5n2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 215);
        assert_eq!(perft(&board, 3, &PRECOMP), 5135);
    }

    #[test]
    fn gentest_2669() {
        let board = Board::from_fen("5N2/2k5/8/1P6/7P/pK6/4Rn2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 330);
        assert_eq!(perft(&board, 3, &PRECOMP), 3589);
    }

    #[test]
    fn gentest_2670() {
        let board = Board::from_fen("1k3N2/8/8/1P6/7P/1K2R3/p4n2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 356);
        assert_eq!(perft(&board, 3, &PRECOMP), 8198);
    }

    #[test]
    fn gentest_2671() {
        let board = Board::from_fen("5N2/k7/8/1P6/7P/2K3R1/p4n2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 259);
        assert_eq!(perft(&board, 3, &PRECOMP), 3627);
    }

    #[test]
    fn gentest_2672() {
        let board = Board::from_fen("5N2/k5b1/8/1P6/1K5P/6R1/5n2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 422);
        assert_eq!(perft(&board, 3, &PRECOMP), 8951);
    }

    #[test]
    fn gentest_2673() {
        let board = Board::from_fen("5N2/k5b1/5R2/1P6/1K4nP/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 289);
        assert_eq!(perft(&board, 3, &PRECOMP), 4075);
    }

    #[test]
    fn gentest_2674() {
        let board = Board::from_fen("5N2/k5b1/8/1P3R2/1K4nP/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 393);
        assert_eq!(perft(&board, 3, &PRECOMP), 8223);
    }

    #[test]
    fn gentest_2675() {
        let board = Board::from_fen("8/k6N/5b2/1P3R2/2K3nP/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 392);
        assert_eq!(perft(&board, 3, &PRECOMP), 6798);
    }

    #[test]
    fn gentest_2676() {
        let board = Board::from_fen("8/7N/1k6/1P3R2/6nP/1Kb5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
        assert_eq!(perft(&board, 3, &PRECOMP), 9138);
    }

    #[test]
    fn gentest_2677() {
        let board = Board::from_fen("8/7N/8/1k6/6nP/2b2R2/K7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 493);
    }

    #[test]
    fn gentest_2678() {
        let board = Board::from_fen("8/7N/8/8/1k4nP/8/K7/4bR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 268);
        assert_eq!(perft(&board, 3, &PRECOMP), 4949);
    }

    #[test]
    fn gentest_2679() {
        let board = Board::from_fen("8/7N/8/8/1k5P/3R4/K6n/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 271);
        assert_eq!(perft(&board, 3, &PRECOMP), 3801);
    }

    #[test]
    fn gentest_2680() {
        let board = Board::from_fen("8/3R3N/8/8/1k5b/5n2/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 338);
        assert_eq!(perft(&board, 3, &PRECOMP), 6518);
    }

    #[test]
    fn gentest_2681() {
        let board = Board::from_fen("8/7N/8/4n3/1k5b/4R3/K7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 363);
        assert_eq!(perft(&board, 3, &PRECOMP), 6179);
    }

    #[test]
    fn gentest_2682() {
        let board = Board::from_fen("8/8/8/4n1N1/1k5b/4R3/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 318);
        assert_eq!(perft(&board, 3, &PRECOMP), 6444);
    }

    #[test]
    fn gentest_2683() {
        let board = Board::from_fen("8/8/8/4n1N1/k6b/2R5/K7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 328);
        assert_eq!(perft(&board, 3, &PRECOMP), 4778);
    }

    #[test]
    fn gentest_2684() {
        let board = Board::from_fen("8/3n4/8/6b1/k7/1R6/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 256);
        assert_eq!(perft(&board, 3, &PRECOMP), 3994);
    }

    #[test]
    fn gentest_2685() {
        let board = Board::from_fen("2R5/8/5n2/6b1/k7/8/K7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 288);
        assert_eq!(perft(&board, 3, &PRECOMP), 4670);
    }

    #[test]
    fn gentest_2686() {
        let board = Board::from_fen("5nR1/8/8/6b1/k7/8/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 117);
        assert_eq!(perft(&board, 3, &PRECOMP), 1539);
    }

    #[test]
    fn gentest_2687() {
        let board = Board::from_fen("5n2/8/8/8/k4b2/8/K7/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 295);
        assert_eq!(perft(&board, 3, &PRECOMP), 4873);
    }

    #[test]
    fn gentest_2688() {
        let board = Board::from_fen("8/6R1/6n1/8/k7/8/K2b4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 197);
        assert_eq!(perft(&board, 3, &PRECOMP), 3019);
    }

    #[test]
    fn gentest_2689() {
        let board = Board::from_fen("8/R7/6n1/8/1k6/8/3b4/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 316);
        assert_eq!(perft(&board, 3, &PRECOMP), 5498);
    }

    #[test]
    fn gentest_2690() {
        let board = Board::from_fen("8/R7/8/8/1k5n/8/K7/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 173);
        assert_eq!(perft(&board, 3, &PRECOMP), 2800);
    }

    #[test]
    fn gentest_2691() {
        let board = Board::from_fen("8/8/8/2R5/1k5n/2b5/K7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 204);
        assert_eq!(perft(&board, 3, &PRECOMP), 2845);
    }

    #[test]
    fn gentest_2692() {
        let board = Board::from_fen("8/8/6n1/6R1/1k6/8/Kb6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 219);
        assert_eq!(perft(&board, 3, &PRECOMP), 3159);
    }

    #[test]
    fn gentest_2693() {
        let board = Board::from_fen("8/8/8/1R6/1k5n/8/Kb6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 47);
        assert_eq!(perft(&board, 3, &PRECOMP), 575);
        assert_eq!(perft(&board, 4, &PRECOMP), 7985);
    }

    #[test]
    fn gentest_2694() {
        let board = Board::from_fen("1R6/8/8/8/7n/2k5/K7/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 230);
        assert_eq!(perft(&board, 3, &PRECOMP), 3529);
    }

    #[test]
    fn gentest_2695() {
        let board = Board::from_fen("8/8/8/8/2k4n/5R2/K7/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 246);
        assert_eq!(perft(&board, 3, &PRECOMP), 3980);
    }

    #[test]
    fn gentest_2696() {
        let board = Board::from_fen("8/5R2/8/8/1k5n/8/K7/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 243);
        assert_eq!(perft(&board, 3, &PRECOMP), 3763);
    }

    #[test]
    fn gentest_2697() {
        let board = Board::from_fen("8/8/8/1k6/4R2n/8/K7/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 279);
        assert_eq!(perft(&board, 3, &PRECOMP), 4515);
    }

    #[test]
    fn gentest_2698() {
        let board = Board::from_fen("8/8/4R3/1k6/8/5n2/Kb6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 342);
        assert_eq!(perft(&board, 3, &PRECOMP), 5444);
    }

    #[test]
    fn gentest_2699() {
        let board = Board::from_fen("8/8/3R4/1k6/3b4/1K3n2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 346);
        assert_eq!(perft(&board, 3, &PRECOMP), 6217);
    }

    #[test]
    fn gentest_2700() {
        let board = Board::from_fen("8/8/8/1k6/3R3n/1K6/8/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 254);
        assert_eq!(perft(&board, 3, &PRECOMP), 4774);
    }

    #[test]
    fn gentest_2701() {
        let board = Board::from_fen("8/8/8/1kb1R3/7n/1K6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 133);
        assert_eq!(perft(&board, 3, &PRECOMP), 2121);
    }

    #[test]
    fn gentest_2702() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2703() {
        let board = Board::from_fen("r1bqkbnr/pppppppp/2n5/8/3P4/2N5/PPP1PPPP/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 637);
    }

    #[test]
    fn gentest_2704() {
        let board = Board::from_fen("r1bqkb1r/pppp1ppp/2n1p2n/8/3P4/2N5/PPPQPPPP/R1B1KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 920);
    }

    #[test]
    fn gentest_2705() {
        let board = Board::from_fen("r1bqkb1r/pppp1p1p/2n1p2n/6p1/3P4/6P1/PPPQPP1P/RNB1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 861);
    }

    #[test]
    fn gentest_2706() {
        let board = Board::from_fen("r1bqkb1r/p1pp1p1p/2n4n/1p2p1p1/3P4/3Q2P1/PPP1PP1P/RNB1KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1266);
    }

    #[test]
    fn gentest_2707() {
        let board = Board::from_fen("r2qkb1r/p1pp1p1p/b1n4n/1p2p1B1/2QP4/6P1/PPP1PP1P/RN2KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1307);
    }

    #[test]
    fn gentest_2708() {
        let board = Board::from_fen("rq2kb1r/p1pp1p1p/b6n/np2p1B1/2QP4/6P1/PPP1PP1P/RN1K1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1275);
    }

    #[test]
    fn gentest_2709() {
        let board = Board::from_fen("rq2k2r/p1pp1pbp/b6n/np1Qp1B1/3PP3/6P1/PPP2P1P/RN1K1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1261);
    }

    #[test]
    fn gentest_2710() {
        let board = Board::from_fen("r1q1k2r/p1p2pbp/b2p3n/np1Qp1B1/3PP3/P5P1/1PP2P1P/RN1K1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1291);
    }

    #[test]
    fn gentest_2711() {
        let board = Board::from_fen("r1q1k2r/p1p2pbp/b2p3n/1p1Qp3/3PP3/Pn2B1PN/1PP2P1P/RN1K1B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1282);
    }

    #[test]
    fn gentest_2712() {
        let board = Board::from_fen("r1q1kr2/p1p2pbp/b2p3n/1p2p3/2QPP3/P3B1PN/1PP2P1P/nN1K1B1R w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1106);
    }

    #[test]
    fn gentest_2713() {
        let board = Board::from_fen("r1q2r2/p1pk1pbp/b2p3n/Pp2p3/2QPP3/4B1PN/1PP2P1P/nN1K1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1131);
    }

    #[test]
    fn gentest_2714() {
        let board = Board::from_fen("r1q4r/pbpk1pbp/3p3n/Pp2p3/2QPP3/4B1PN/1PP1BP1P/nN1K3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1275);
    }

    #[test]
    fn gentest_2715() {
        let board = Board::from_fen("r1q4r/pbpk1pbp/P2p3n/4p3/2pPP3/6PN/1PPBBP1P/nN1K3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1114);
    }

    #[test]
    fn gentest_2716() {
        let board = Board::from_fen("r3q2r/pb1k1pbp/P1pp3n/4p3/2pPP3/6P1/1PPBBP1P/nN1K2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 992);
    }

    #[test]
    fn gentest_2717() {
        let board = Board::from_fen("r3q2r/pb1k2bp/P1pp1p1n/4p1B1/2pPP3/6P1/1PP1BP1P/nN1K2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1106);
    }

    #[test]
    fn gentest_2718() {
        let board = Board::from_fen("r3q2r/pb1k2bp/P1p2p1n/3pp1B1/2pPP3/1P4P1/1P2BP1P/1N1K2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1080);
    }

    #[test]
    fn gentest_2719() {
        let board = Board::from_fen("r3q2r/pb1k2bp/P1p2p2/3pp1B1/1PBPP1n1/6P1/1P3P1P/1N1K2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1195);
    }

    #[test]
    fn gentest_2720() {
        let board = Board::from_fen("r1q4r/pb1k2bp/P1p2p2/3pp1B1/1PBPP3/6P1/1P2Kn1P/1N4NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1034);
    }

    #[test]
    fn gentest_2721() {
        let board = Board::from_fen("rq5r/pb1k2bp/P1p2B2/3pp3/1PBPP3/6P1/1P1NKn1P/6NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1012);
    }

    #[test]
    fn gentest_2722() {
        let board = Board::from_fen("r4q1r/pb1k2bp/P1p2B2/3pp3/1PBPP3/5NP1/1P1NKn1P/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1373);
    }

    #[test]
    fn gentest_2723() {
        let board = Board::from_fen("r4q1r/pb1k2b1/P1p4p/3Pp1B1/1PBP4/5NP1/1P1NKn1P/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1458);
    }

    #[test]
    fn gentest_2724() {
        let board = Board::from_fen("r6r/pb1k4/P1p4p/3Pb1B1/1PBP1q2/6P1/1P1NKn1P/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1550);
    }

    #[test]
    fn gentest_2725() {
        let board = Board::from_fen("r6r/pb1k4/P6p/2pPb1B1/1PBP1q2/6P1/1P3n1P/1N2K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1383);
    }

    #[test]
    fn gentest_2726() {
        let board = Board::from_fen("r3r3/pb1k4/P6p/2pPb1B1/1PBP2q1/6P1/1P3n1P/1N2KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1472);
    }

    #[test]
    fn gentest_2727() {
        let board = Board::from_fen("r3r3/pb1k4/P6B/2PPb3/1PB1n1q1/6P1/1P5P/1N2KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 1471);
    }

    #[test]
    fn gentest_2728() {
        let board = Board::from_fen("r3r3/p2k2B1/P1b5/2PPb1q1/1PB1n3/6P1/1P5P/1N2KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1461);
    }

    #[test]
    fn gentest_2729() {
        let board = Board::from_fen("r3r3/p2k2B1/P1b5/2PPbq2/BP2n3/6P1/1P5P/1N2KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1288);
    }

    #[test]
    fn gentest_2730() {
        let board = Board::from_fen("r2r4/p2k2B1/P1b5/1PPPbq2/B7/2n3P1/1P5P/1N2KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1231);
    }

    #[test]
    fn gentest_2731() {
        let board = Board::from_fen("r2r4/p2k1RB1/P1b5/1PPPb1q1/B7/2n3P1/1P5P/1N2K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 3787);
    }

    #[test]
    fn gentest_2732() {
        let board = Board::from_fen("1r1rk3/p4RB1/P1P5/2PPb1q1/B7/2n3P1/1P5P/1N2K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1270);
    }

    #[test]
    fn gentest_2733() {
        let board = Board::from_fen("1r1rk2B/p4R2/P1P5/1nPPb1q1/B7/N5P1/1P5P/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1156);
    }

    #[test]
    fn gentest_2734() {
        let board = Board::from_fen("1r1rk2B/p4R2/P1P5/1nPP4/B4b2/N5P1/1P2K2P/2q5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1148);
    }

    #[test]
    fn gentest_2735() {
        let board = Board::from_fen("1r1rk2B/p1b5/P1P5/1RPP4/B7/N5P1/1P2K2P/2q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 755);
    }

    #[test]
    fn gentest_2736() {
        let board = Board::from_fen("r3k2B/pRb5/P1P5/2Pr4/B7/N5P1/1P2K2P/2q5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1119);
    }

    #[test]
    fn gentest_2737() {
        let board = Board::from_fen("r6B/pRb1k3/P1P5/2Pr4/B1N5/5KP1/1P5P/2q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1029);
    }

    #[test]
    fn gentest_2738() {
        let board = Board::from_fen("r4k1B/p1b5/PRP5/2P4r/B1N5/5KP1/1P5P/2q5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1191);
    }

    #[test]
    fn gentest_2739() {
        let board = Board::from_fen("4rk2/p1b5/PRP5/2P4r/2N5/2B2KP1/1P5P/2qB4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1222);
    }

    #[test]
    fn gentest_2740() {
        let board = Board::from_fen("4r1k1/p5B1/PRP5/2P4r/2N5/5Kb1/1P5P/2qB4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1440);
    }

    #[test]
    fn gentest_2741() {
        let board = Board::from_fen("3r2k1/p7/PRP5/2P1B2r/2N5/5KP1/1P6/2qB4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 994);
    }

    #[test]
    fn gentest_2742() {
        let board = Board::from_fen("3r2k1/p7/PRP5/2PqB2r/8/5KP1/1PB5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 225);
        assert_eq!(perft(&board, 3, &PRECOMP), 5055);
    }

    #[test]
    fn gentest_2743() {
        let board = Board::from_fen("3r2k1/p7/PRP5/2P1q2r/8/6P1/1PB2K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 818);
    }

    #[test]
    fn gentest_2744() {
        let board = Board::from_fen("1r4k1/p7/PRP5/2P4r/B7/4q1P1/1P3K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 119);
        assert_eq!(perft(&board, 3, &PRECOMP), 1621);
    }

    #[test]
    fn gentest_2745() {
        let board = Board::from_fen("1r4k1/p7/PRP5/2Pr4/8/4K1P1/1PB5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 498);
    }

    #[test]
    fn gentest_2746() {
        let board = Board::from_fen("4r1k1/p7/PRP5/2P1r3/8/5KP1/1PB5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 458);
        assert_eq!(perft(&board, 3, &PRECOMP), 8992);
    }

    #[test]
    fn gentest_2747() {
        let board = Board::from_fen("1r4k1/p7/P1P5/2P1r3/1R6/3B1KP1/1P6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 639);
    }

    #[test]
    fn gentest_2748() {
        let board = Board::from_fen("5rk1/p7/P1P5/2P2r2/1R4K1/3B2P1/1P6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 449);
        assert_eq!(perft(&board, 3, &PRECOMP), 9375);
    }

    #[test]
    fn gentest_2749() {
        let board = Board::from_fen("5r2/p6k/P1P5/2P2r2/1R4PK/3B4/1P6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 336);
        assert_eq!(perft(&board, 3, &PRECOMP), 5839);
    }

    #[test]
    fn gentest_2750() {
        let board = Board::from_fen("8/p6k/P1P5/2P2r2/1R4rK/8/1P2B3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 78);
        assert_eq!(perft(&board, 3, &PRECOMP), 1597);
    }

    #[test]
    fn gentest_2751() {
        let board = Board::from_fen("8/p6k/P1P5/2P2r2/1R5K/6r1/1P2B3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 606);
    }

    #[test]
    fn gentest_2752() {
        let board = Board::from_fen("1R6/p6k/P1P5/2P3r1/7K/8/1P2Br2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 570);
    }

    #[test]
    fn gentest_2753() {
        let board = Board::from_fen("6R1/p6k/P1P5/2P3r1/5rBK/8/1P6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 363);
        assert_eq!(perft(&board, 3, &PRECOMP), 7542);
    }

    #[test]
    fn gentest_2754() {
        let board = Board::from_fen("6R1/p6k/P1P5/2P1r3/6BK/1P6/5r2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 562);
    }

    #[test]
    fn gentest_2755() {
        let board = Board::from_fen("6R1/p6k/P1P5/2P1rr2/7K/1P6/8/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 391);
        assert_eq!(perft(&board, 3, &PRECOMP), 8933);
    }

    #[test]
    fn gentest_2756() {
        let board = Board::from_fen("6R1/p1P4k/P7/2P5/4r2K/1P3r2/8/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 1662);
    }

    #[test]
    fn gentest_2757() {
        let board = Board::from_fen("8/p1P4k/P7/2P5/4r1R1/1P4K1/8/5r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 479);
    }

    #[test]
    fn gentest_2758() {
        let board = Board::from_fen("2Q2r2/p6k/P7/2P5/r5R1/1P4K1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 557);
    }

    #[test]
    fn gentest_2759() {
        let board = Board::from_fen("2Q5/p6k/P7/2P5/r2R4/1P3r2/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 720);
    }

    #[test]
    fn gentest_2760() {
        let board = Board::from_fen("2Q5/p4r1k/P7/2P5/8/1P6/3R3K/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 752);
    }

    #[test]
    fn gentest_2761() {
        let board = Board::from_fen("6Q1/p6k/P7/2P5/8/1P6/5rRK/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 22);
        assert_eq!(perft(&board, 3, &PRECOMP), 390);
    }

    #[test]
    fn gentest_2762() {
        let board = Board::from_fen("8/p4Q2/P6k/2P5/8/1P6/1r4RK/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 452);
    }

    #[test]
    fn gentest_2763() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2764() {
        let board = Board::from_fen("rnbqkbnr/ppppppp1/8/7P/8/8/PPPPPP1P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 440);
    }

    #[test]
    fn gentest_2765() {
        let board = Board::from_fen("rnbqkbn1/ppppppp1/8/8/2P5/8/PP1PPP1r/RNBQKBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 546);
    }

    #[test]
    fn gentest_2766() {
        let board = Board::from_fen("rnbqkbn1/pp1pppp1/2p5/8/2P5/7R/PP1PPP2/RNBQKBN1 b Qq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 605);
    }

    #[test]
    fn gentest_2767() {
        let board = Board::from_fen("rnbq1bn1/pp1ppkp1/2p5/5p2/P1P5/7R/1P1PPP2/RNBQKBN1 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 728);
    }

    #[test]
    fn gentest_2768() {
        let board = Board::from_fen("rnbq1bn1/p2ppkp1/1pp5/5p2/P1P5/1R6/RP1PPP2/1NBQKBN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 593);
    }

    #[test]
    fn gentest_2769() {
        let board = Board::from_fen("rn1q1bn1/p2p1kp1/bpp1p3/5p2/P1P5/5R2/RP1PPP2/1NBQKBN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 779);
    }

    #[test]
    fn gentest_2770() {
        let board = Board::from_fen("rn1q1bn1/p2p1kp1/1pp1p3/5p2/P1b5/R4R1B/1P1PPP2/1NBQK1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1021);
    }

    #[test]
    fn gentest_2771() {
        let board = Board::from_fen("rn1q1b2/p2p2p1/1pp1pnk1/5p2/PPb5/R4R1B/3PPP2/1NBQK1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 935);
    }

    #[test]
    fn gentest_2772() {
        let board = Board::from_fen("rn1q1b2/p2p2p1/1pp1pnk1/3b1p2/PP1R4/5R1B/3PPP2/1NBQK1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 984);
    }

    #[test]
    fn gentest_2773() {
        let board = Board::from_fen("rn1q4/p2p2p1/1pp1p1k1/3b1p1n/Pb1R4/4PR1B/3P1P2/1NBQK1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 937);
    }

    #[test]
    fn gentest_2774() {
        let board = Board::from_fen("rn1q4/p2p2p1/1pp1p1k1/5p1n/Pb3R2/N3Pb1B/3P1P2/2BQK1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1052);
    }

    #[test]
    fn gentest_2775() {
        let board = Board::from_fen("rn1q4/p2p2p1/1pp1p2k/5p1n/P4R2/N3Pb1B/3K1P2/2BQ2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1001);
    }

    #[test]
    fn gentest_2776() {
        let board = Board::from_fen("rn6/p2p2p1/1pp1pq1k/5p1n/PR6/N3Pb2/3K1PB1/2BQ2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1085);
    }

    #[test]
    fn gentest_2777() {
        let board = Board::from_fen("rn6/p2p2p1/1pp1pqk1/5p2/P2R1n2/N3Pb2/3K1PB1/2BQ2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1072);
    }

    #[test]
    fn gentest_2778() {
        let board = Board::from_fen("rn6/p2pq1p1/1pp1p1k1/4Rp2/P4n2/N3Pb2/3K1PB1/2BQ2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_2779() {
        let board = Board::from_fen("rn6/p2pq3/1pp1p1pk/4Rp2/P4P2/N4b2/3K1PB1/2BQ2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1041);
    }

    #[test]
    fn gentest_2780() {
        let board = Board::from_fen("rn6/p2p1q2/1pp1p1pk/4Rp2/P4P2/N2Q1b2/3K1PB1/2B3N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1119);
    }

    #[test]
    fn gentest_2781() {
        let board = Board::from_fen("rn6/p2p1q1k/1pp1p1p1/1R3p2/P4P2/N2Q4/3K1Pb1/2B3N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1016);
    }

    #[test]
    fn gentest_2782() {
        let board = Board::from_fen("rn6/p2p2qk/1pp1p1p1/1R3p2/P4P2/N7/2K1QPb1/2B3N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1000);
    }

    #[test]
    fn gentest_2783() {
        let board = Board::from_fen("rn5k/p2p2q1/1pp1p3/1R3pp1/P4P2/N7/3KQPb1/2B3N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1057);
    }

    #[test]
    fn gentest_2784() {
        let board = Board::from_fen("rn6/p2p2qk/1pp1p3/1R3pp1/P4P2/N3Q3/3K1Pb1/2B3N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1161);
    }

    #[test]
    fn gentest_2785() {
        let board = Board::from_fen("rn5k/3p2q1/1pp1p3/pR3pp1/P4P2/4Q3/2NK1Pb1/2B3N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1194);
    }

    #[test]
    fn gentest_2786() {
        let board = Board::from_fen("rn5k/3p4/1pp1p3/pR3pp1/P4P2/3Q1N2/2NK1Pb1/q1B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1071);
    }

    #[test]
    fn gentest_2787() {
        let board = Board::from_fen("rn5k/3pq3/1pp1p3/pR1Q1pp1/P4P2/5N2/2NK1Pb1/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1139);
    }

    #[test]
    fn gentest_2788() {
        let board = Board::from_fen("rn5k/3p3q/1pp1p3/pR1Q1pp1/P4P2/5P2/2NK2b1/2B3N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1006);
    }

    #[test]
    fn gentest_2789() {
        let board = Board::from_fen("rn4k1/7q/1pppp3/pR1Q1pp1/P4P2/B4P2/2NK2b1/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1250);
    }

    #[test]
    fn gentest_2790() {
        let board = Board::from_fen("rn4k1/7q/1pp1p3/pR1p1pp1/P4P2/B2Q1P2/3K2b1/N5N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1231);
    }

    #[test]
    fn gentest_2791() {
        let board = Board::from_fen("rn4k1/7q/1p1Bp3/pp1p1pp1/P4P2/3Q1b2/3K4/N5N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1231);
    }

    #[test]
    fn gentest_2792() {
        let board = Board::from_fen("rn4k1/2q5/1p1Bp3/pp1p1pp1/P4P2/3QKb2/2N5/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1146);
    }

    #[test]
    fn gentest_2793() {
        let board = Board::from_fen("r5k1/2q5/1pn1p3/pp1pBpp1/P4P2/3QK3/2N3b1/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1365);
    }

    #[test]
    fn gentest_2794() {
        let board = Board::from_fen("r5k1/2q5/1pn1p3/pp1pBp2/P4Pp1/3QN3/5Kb1/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1463);
    }

    #[test]
    fn gentest_2795() {
        let board = Board::from_fen("2r3k1/2q5/1pn1p3/pp1NBp2/P4Pp1/3Q3b/5K2/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1276);
    }

    #[test]
    fn gentest_2796() {
        let board = Board::from_fen("2r3k1/2q1n1B1/1p2p3/pp1N1p2/P4Pp1/2Q4b/5K2/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1069);
    }

    #[test]
    fn gentest_2797() {
        let board = Board::from_fen("2r5/2Q1n1k1/1p2p3/p2N1p2/Pp3Pp1/7b/5K2/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 667);
    }

    #[test]
    fn gentest_2798() {
        let board = Board::from_fen("r1Q5/4n1k1/1p2p3/p2N1p2/Pp3Pp1/7b/4NK2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 600);
    }

    #[test]
    fn gentest_2799() {
        let board = Board::from_fen("r7/4n2k/1pQ1p3/p2N1p2/Pp3Pp1/7b/4NK2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 724);
    }

    #[test]
    fn gentest_2800() {
        let board = Board::from_fen("8/r3n2k/1NQ1p3/p4p2/Pp1N1Pp1/7b/5K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 668);
    }

    #[test]
    fn gentest_2801() {
        let board = Board::from_fen("8/r3n2k/2Q1p3/p2N1p2/Pp1N1Pp1/7b/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 673);
    }

    #[test]
    fn gentest_2802() {
        let board = Board::from_fen("8/r6k/2n1p3/p4p2/PN3Pp1/7b/2N2K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 346);
        assert_eq!(perft(&board, 3, &PRECOMP), 8253);
    }

    #[test]
    fn gentest_2803() {
        let board = Board::from_fen("8/1r5k/2N1p3/p4p2/P4Pp1/7b/2N2K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 407);
        assert_eq!(perft(&board, 3, &PRECOMP), 6468);
    }

    #[test]
    fn gentest_2804() {
        let board = Board::from_fen("8/1r6/2N1p1k1/p4p2/PN3Pp1/7b/8/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 344);
        assert_eq!(perft(&board, 3, &PRECOMP), 6657);
    }

    #[test]
    fn gentest_2805() {
        let board = Board::from_fen("8/1r2Nk2/4p3/p4p2/PN3Pp1/8/8/4Kb2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 372);
        assert_eq!(perft(&board, 3, &PRECOMP), 5337);
    }

    #[test]
    fn gentest_2806() {
        let board = Board::from_fen("2N5/3r1k2/4p3/p4p2/P4Pp1/8/N7/4Kb2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 234);
        assert_eq!(perft(&board, 3, &PRECOMP), 5449);
    }

    #[test]
    fn gentest_2807() {
        let board = Board::from_fen("2N5/3r4/4p1k1/p4p2/PN3Pp1/3b4/8/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 325);
        assert_eq!(perft(&board, 3, &PRECOMP), 4194);
    }

    #[test]
    fn gentest_2808() {
        let board = Board::from_fen("8/2r5/3Np1k1/p4p2/P4Pp1/3N4/8/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 381);
        assert_eq!(perft(&board, 3, &PRECOMP), 6715);
    }

    #[test]
    fn gentest_2809() {
        let board = Board::from_fen("8/4r2k/3Np3/p1N2p2/P4Pp1/8/8/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 271);
        assert_eq!(perft(&board, 3, &PRECOMP), 4947);
    }

    #[test]
    fn gentest_2810() {
        let board = Board::from_fen("8/4r3/3NN2k/p4p2/P4Pp1/8/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 278);
        assert_eq!(perft(&board, 3, &PRECOMP), 3711);
    }

    #[test]
    fn gentest_2811() {
        let board = Board::from_fen("8/2r5/3NN2k/p4p2/P4Pp1/2K5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 125);
        assert_eq!(perft(&board, 3, &PRECOMP), 2289);
    }

    #[test]
    fn gentest_2812() {
        let board = Board::from_fen("8/6r1/3NN2k/p4p2/P4Pp1/2K5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 293);
        assert_eq!(perft(&board, 3, &PRECOMP), 3512);
    }

    #[test]
    fn gentest_2813() {
        let board = Board::from_fen("8/4rN1k/4N3/p4p2/P4Pp1/2K5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 219);
        assert_eq!(perft(&board, 3, &PRECOMP), 3625);
    }

    #[test]
    fn gentest_2814() {
        let board = Board::from_fen("8/4r2k/3NN3/p4p2/P1K2P2/6p1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 250);
        assert_eq!(perft(&board, 3, &PRECOMP), 3535);
    }

    #[test]
    fn gentest_2815() {
        let board = Board::from_fen("8/r7/4N2k/pN3p2/P1K2P2/6p1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 230);
        assert_eq!(perft(&board, 3, &PRECOMP), 3891);
    }

    #[test]
    fn gentest_2816() {
        let board = Board::from_fen("8/2N2r2/4N2k/p2K1p2/P4P2/6p1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 158);
        assert_eq!(perft(&board, 3, &PRECOMP), 1940);
    }

    #[test]
    fn gentest_2817() {
        let board = Board::from_fen("8/2Nr4/4N2k/p4p2/P1K2P2/6p1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 244);
        assert_eq!(perft(&board, 3, &PRECOMP), 3615);
    }

    #[test]
    fn gentest_2818() {
        let board = Board::from_fen("8/2Nr4/4N2k/p4p2/P1K2P2/8/6p1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 276);
        assert_eq!(perft(&board, 3, &PRECOMP), 5319);
    }

    #[test]
    fn gentest_2819() {
        let board = Board::from_fen("4N3/3r4/4N2k/p4p2/P1K2P2/8/5b2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 338);
        assert_eq!(perft(&board, 3, &PRECOMP), 4518);
    }

    #[test]
    fn gentest_2820() {
        let board = Board::from_fen("4N3/8/4N2k/p2r1p2/P1K2P2/8/5b2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 289);
        assert_eq!(perft(&board, 3, &PRECOMP), 5714);
    }

    #[test]
    fn gentest_2821() {
        let board = Board::from_fen("4N3/8/1b2N3/p2r1p1k/P4P2/2K5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 259);
        assert_eq!(perft(&board, 3, &PRECOMP), 3563);
    }

    #[test]
    fn gentest_2822() {
        let board = Board::from_fen("4N3/8/1b2N3/p3rp1k/P4P2/8/8/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 258);
        assert_eq!(perft(&board, 3, &PRECOMP), 4341);
    }

    #[test]
    fn gentest_2823() {
        let board = Board::from_fen("3NN3/8/1b6/p4p2/P4Pk1/8/4r3/K7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 224);
        assert_eq!(perft(&board, 3, &PRECOMP), 2325);
    }

    #[test]
    fn gentest_2824() {
        let board = Board::from_fen("4N3/8/1b5N/p4p2/P4P2/5k2/4r3/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 239);
        assert_eq!(perft(&board, 3, &PRECOMP), 6057);
    }

    #[test]
    fn gentest_2825() {
        let board = Board::from_fen("4r3/8/7N/p1b2p2/P4P2/5k2/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 288);
        assert_eq!(perft(&board, 3, &PRECOMP), 2678);
    }

    #[test]
    fn gentest_2826() {
        let board = Board::from_fen("4r3/8/7N/p4p2/P4P2/4bk2/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 207);
        assert_eq!(perft(&board, 3, &PRECOMP), 5561);
    }

    #[test]
    fn gentest_2827() {
        let board = Board::from_fen("8/4r3/8/p4N2/P2b1P2/5k2/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 297);
        assert_eq!(perft(&board, 3, &PRECOMP), 3111);
    }

    #[test]
    fn gentest_2828() {
        let board = Board::from_fen("8/4r3/8/p7/P2b1P2/4k3/6N1/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 39);
        assert_eq!(perft(&board, 3, &PRECOMP), 1110);
        assert_eq!(perft(&board, 4, &PRECOMP), 8885);
    }

    #[test]
    fn gentest_2829() {
        let board = Board::from_fen("8/b3r3/8/p4P2/P7/8/5kN1/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 238);
        assert_eq!(perft(&board, 3, &PRECOMP), 2359);
    }

    #[test]
    fn gentest_2830() {
        let board = Board::from_fen("8/b3r3/8/p4P2/P6N/8/2K5/5k2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 256);
        assert_eq!(perft(&board, 3, &PRECOMP), 6023);
    }

    #[test]
    fn gentest_2831() {
        let board = Board::from_fen("8/b7/8/p4P2/P3r2N/8/8/1K4k1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 198);
        assert_eq!(perft(&board, 3, &PRECOMP), 1811);
    }

    #[test]
    fn gentest_2832() {
        let board = Board::from_fen("5N2/b7/8/p4P2/P7/8/4r3/1K4k1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 184);
        assert_eq!(perft(&board, 3, &PRECOMP), 4373);
    }

    #[test]
    fn gentest_2833() {
        let board = Board::from_fen("8/4r3/4N3/p1b2P2/P7/8/8/1K4k1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 334);
        assert_eq!(perft(&board, 3, &PRECOMP), 3919);
    }

    #[test]
    fn gentest_2834() {
        let board = Board::from_fen("8/2N2r2/8/p1b2P2/P7/8/2K5/6k1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 326);
        assert_eq!(perft(&board, 3, &PRECOMP), 7728);
    }

    #[test]
    fn gentest_2835() {
        let board = Board::from_fen("8/2N3r1/8/p1b2P2/P7/2K5/7k/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 376);
        assert_eq!(perft(&board, 3, &PRECOMP), 4470);
    }

    #[test]
    fn gentest_2836() {
        let board = Board::from_fen("8/r7/4N3/p1b2P2/P7/8/3K3k/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 356);
        assert_eq!(perft(&board, 3, &PRECOMP), 8117);
    }

    #[test]
    fn gentest_2837() {
        let board = Board::from_fen("8/r7/4N3/p4P2/Pb6/8/4K3/6k1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 255);
        assert_eq!(perft(&board, 3, &PRECOMP), 3009);
    }

    #[test]
    fn gentest_2838() {
        let board = Board::from_fen("8/r5N1/8/p4P2/Pb6/3K4/6k1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 229);
        assert_eq!(perft(&board, 3, &PRECOMP), 5332);
    }

    #[test]
    fn gentest_2839() {
        let board = Board::from_fen("8/3r2N1/8/p4P2/Pb6/8/4K1k1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 133);
        assert_eq!(perft(&board, 3, &PRECOMP), 1017);
    }

    #[test]
    fn gentest_2840() {
        let board = Board::from_fen("4N3/8/8/p4P2/Pb1r4/4K3/6k1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 180);
        assert_eq!(perft(&board, 3, &PRECOMP), 4318);
    }

    #[test]
    fn gentest_2841() {
        let board = Board::from_fen("4N3/8/5P2/p7/Pb6/3rK3/6k1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 100);
        assert_eq!(perft(&board, 3, &PRECOMP), 766);
    }

    #[test]
    fn gentest_2842() {
        let board = Board::from_fen("4N3/8/5P2/p3K3/Pb6/2r5/6k1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 245);
        assert_eq!(perft(&board, 3, &PRECOMP), 6409);
    }

    #[test]
    fn gentest_2843() {
        let board = Board::from_fen("4N3/8/5P2/p2K4/Pb6/7r/8/5k2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 268);
        assert_eq!(perft(&board, 3, &PRECOMP), 2678);
    }

    #[test]
    fn gentest_2844() {
        let board = Board::from_fen("8/8/3N1P2/p7/Pb1K4/r7/8/5k2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 233);
        assert_eq!(perft(&board, 3, &PRECOMP), 5063);
    }

    #[test]
    fn gentest_2845() {
        let board = Board::from_fen("8/8/5P2/p4N2/Pb1K4/5r2/8/4k3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 271);
        assert_eq!(perft(&board, 3, &PRECOMP), 2907);
    }

    #[test]
    fn gentest_2846() {
        let board = Board::from_fen("8/8/5P2/p7/Pb1K2N1/5r2/3k4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 199);
        assert_eq!(perft(&board, 3, &PRECOMP), 4555);
    }

    #[test]
    fn gentest_2847() {
        let board = Board::from_fen("5b2/8/5r2/p3K3/P5N1/8/3k4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 214);
        assert_eq!(perft(&board, 3, &PRECOMP), 1969);
    }

    #[test]
    fn gentest_2848() {
        let board = Board::from_fen("8/6b1/4KN2/p7/P7/8/3k4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 169);
        assert_eq!(perft(&board, 3, &PRECOMP), 2174);
    }

    #[test]
    fn gentest_2849() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2850() {
        let board = Board::from_fen("rnbqkb1r/pppppppp/5n2/5P2/8/8/PPPPP1PP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 423);
    }

    #[test]
    fn gentest_2851() {
        let board = Board::from_fen("rnbqkb1r/pp1ppp1p/5np1/2p2P2/3P4/8/PPP1P1PP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 776);
    }

    #[test]
    fn gentest_2852() {
        let board = Board::from_fen("rnbqkb1r/pp1ppp1p/3P1n2/2p2Pp1/8/8/PPP1P1PP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 651);
    }

    #[test]
    fn gentest_2853() {
        let board = Board::from_fen("rnbqk2r/pp1pppbp/3P4/2pn1Pp1/8/8/PPPBP1PP/RN1QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 939);
    }

    #[test]
    fn gentest_2854() {
        let board = Board::from_fen("rnb1k2r/pp1pppbp/1q1P4/2pn1Pp1/6P1/2P5/PP1BP2P/RN1QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 937);
    }

    #[test]
    fn gentest_2855() {
        let board = Board::from_fen("rnb1k2r/pp1p1p1p/1q1P4/2pnpPp1/6P1/2N5/PP1BP2P/R2QKBNR w KQkq e6").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 949);
    }

    #[test]
    fn gentest_2856() {
        let board = Board::from_fen("r1b1k2r/pp1p1p1p/1qnP4/2pnpPp1/6P1/1QN4P/PP1BP3/R3KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1111);
    }

    #[test]
    fn gentest_2857() {
        let board = Board::from_fen("r1b1k2r/ppqp1p1p/2nP4/2pN1Pp1/4p1P1/1Q5P/PP1BP3/R3KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1128);
    }

    #[test]
    fn gentest_2858() {
        let board = Board::from_fen("r1b1k2r/ppqp1p2/2nP4/2pN1Ppp/4p1P1/1QB4P/PP2PK2/R4BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1184);
    }

    #[test]
    fn gentest_2859() {
        let board = Board::from_fen("r1b1k2r/ppqp1p2/2nP4/2pN1Ppp/4p1P1/1Q5P/PP2PK2/R3BBNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1153);
    }

    #[test]
    fn gentest_2860() {
        let board = Board::from_fen("rqb1k2r/pp1p1p2/2nP4/2p2Ppp/1N2p1P1/1Q5P/PP2PKB1/R3B1NR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 882);
    }

    #[test]
    fn gentest_2861() {
        let board = Board::from_fen("rqb1k2r/pp1p1p2/3P2n1/2p2Ppp/1N2p1P1/Q6P/PP2PKB1/R3B1NR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 805);
    }

    #[test]
    fn gentest_2862() {
        let board = Board::from_fen("rqbk3r/pp1p1p2/3P2n1/2pN1Ppp/4p1P1/Q4N1P/PP2PKB1/R3B2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1026);
    }

    #[test]
    fn gentest_2863() {
        let board = Board::from_fen("rqbk1r2/pp1p1p2/3P4/2pN1PNp/4p1Pn/Q6P/PP2PKB1/R3B2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 778);
    }

    #[test]
    fn gentest_2864() {
        let board = Board::from_fen("rqbk2r1/pp1p1p2/1N1P4/2p2PNp/4p1Pn/Q6P/PP2PK2/R3BB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 775);
    }

    #[test]
    fn gentest_2865() {
        let board = Board::from_fen("rqb1k1r1/pp1p1p2/1N1P4/2p2PNp/4p1P1/2Q4P/PP2PKn1/R3BB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 959);
    }

    #[test]
    fn gentest_2866() {
        let board = Board::from_fen("rqb1k1r1/pp1p1p2/1N1P4/2p2PN1/4p1Pp/P1Q4P/1P1BPKn1/R4B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 773);
    }

    #[test]
    fn gentest_2867() {
        let board = Board::from_fen("rqb1k1r1/pp1p1p2/1N1P4/2Q2PN1/4p1Pp/P6P/1P1BPKn1/R4B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 768);
    }

    #[test]
    fn gentest_2868() {
        let board = Board::from_fen("rqb1k1r1/pp1N1N2/3P4/2Q2P2/4p1Pp/P3n2P/1P1BPK2/R4B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1020);
    }

    #[test]
    fn gentest_2869() {
        let board = Board::from_fen("rqb1k3/1p1N1N2/3P4/p4P2/4p1rp/P3Q2P/1P1BPK2/R4B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 784);
    }

    #[test]
    fn gentest_2870() {
        let board = Board::from_fen("rqb1kN2/5N2/3P4/pp3P2/4p1rp/P3Q2P/1P1BPKB1/R6R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1086);
    }

    #[test]
    fn gentest_2871() {
        let board = Board::from_fen("r3kN2/2q2N2/3P4/pp3b2/4p1rp/P3Q2P/1P1BPKB1/R1R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 1853);
    }

    #[test]
    fn gentest_2872() {
        let board = Board::from_fen("r3kN2/2qb1N2/3P4/pp6/4B1rp/P3Q2P/1P1BPK2/R5R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1978);
    }

    #[test]
    fn gentest_2873() {
        let board = Board::from_fen("r3k3/3N1N2/3P4/pp6/4B1rp/P3q2P/1P1BPK2/R5R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 110);
        assert_eq!(perft(&board, 3, &PRECOMP), 4371);
    }

    #[test]
    fn gentest_2874() {
        let board = Board::from_fen("rN2k3/5N2/3P4/pp6/4B2p/P3K2P/1P1BP3/R5r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 813);
    }

    #[test]
    fn gentest_2875() {
        let board = Board::from_fen("rN6/5Nk1/3P4/pp6/3KB2p/P6P/1P1BP3/R5r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 966);
    }

    #[test]
    fn gentest_2876() {
        let board = Board::from_fen("rN1N4/6k1/3P4/pp6/3KB1Pp/P7/1P1BP3/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 484);
        assert_eq!(perft(&board, 3, &PRECOMP), 4907);
    }

    #[test]
    fn gentest_2877() {
        let board = Board::from_fen("rN6/5k2/3P4/pp6/3KB1Pp/P7/1P1BP3/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 528);
    }

    #[test]
    fn gentest_2878() {
        let board = Board::from_fen("BN6/8/3Pk2B/pp6/3K2Pp/P7/1P2P3/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 222);
        assert_eq!(perft(&board, 3, &PRECOMP), 1383);
    }

    #[test]
    fn gentest_2879() {
        let board = Board::from_fen("BN6/6B1/3k4/p7/1p1K2Pp/P7/1P2P3/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 218);
        assert_eq!(perft(&board, 3, &PRECOMP), 7565);
    }

    #[test]
    fn gentest_2880() {
        let board = Board::from_fen("B7/3Nk1B1/8/p7/1p1K2Pp/P7/1P2P3/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 393);
        assert_eq!(perft(&board, 3, &PRECOMP), 3031);
    }

    #[test]
    fn gentest_2881() {
        let board = Board::from_fen("B7/3N2B1/3k4/p7/1p1K2P1/P4R1p/1P2P3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 269);
    }

    #[test]
    fn gentest_2882() {
        let board = Board::from_fen("B7/2kN2B1/8/p5P1/1p1K1R2/P6p/1P2P3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 318);
        assert_eq!(perft(&board, 3, &PRECOMP), 2491);
    }

    #[test]
    fn gentest_2883() {
        let board = Board::from_fen("B7/2kN4/7B/p5P1/1p1K1R2/P6p/1P2P3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 298);
    }

    #[test]
    fn gentest_2884() {
        let board = Board::from_fen("B7/3k4/7B/p3P1P1/1p1K1R2/P6p/1P6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 297);
        assert_eq!(perft(&board, 3, &PRECOMP), 2420);
    }

    #[test]
    fn gentest_2885() {
        let board = Board::from_fen("3k4/8/7B/3BP1P1/pp1K1R2/P6p/1P6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 256);
        assert_eq!(perft(&board, 3, &PRECOMP), 8350);
    }

    #[test]
    fn gentest_2886() {
        let board = Board::from_fen("4k3/8/7B/2K1P1P1/pp3R2/P4B1p/1P6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 208);
        assert_eq!(perft(&board, 3, &PRECOMP), 1353);
    }

    #[test]
    fn gentest_2887() {
        let board = Board::from_fen("8/5k2/7B/2K1P1P1/ppR5/P4B1p/1P6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 237);
        assert_eq!(perft(&board, 3, &PRECOMP), 7545);
    }

    #[test]
    fn gentest_2888() {
        let board = Board::from_fen("8/8/4k2B/2K1P1PB/pp6/P6p/1P6/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 200);
        assert_eq!(perft(&board, 3, &PRECOMP), 1347);
    }

    #[test]
    fn gentest_2889() {
        let board = Board::from_fen("4B3/8/7B/2K1PkP1/pp6/P7/1P5p/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 306);
        assert_eq!(perft(&board, 3, &PRECOMP), 9116);
    }

    #[test]
    fn gentest_2890() {
        let board = Board::from_fen("4B3/8/7B/4P1P1/ppK1k3/PP6/7p/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 287);
        assert_eq!(perft(&board, 3, &PRECOMP), 3195);
    }

    #[test]
    fn gentest_2891() {
        let board = Board::from_fen("4B3/8/7B/4P1P1/ppK1k2q/PP6/8/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 393);
        assert_eq!(perft(&board, 3, &PRECOMP), 8158);
    }

    #[test]
    fn gentest_2892() {
        let board = Board::from_fen("4B3/8/7B/4P1P1/pK2k3/PP5q/8/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 664);
    }

    #[test]
    fn gentest_2893() {
        let board = Board::from_fen("4q3/8/7B/4P1P1/pK2k3/PP4R1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 334);
        assert_eq!(perft(&board, 3, &PRECOMP), 5306);
    }

    #[test]
    fn gentest_2894() {
        let board = Board::from_fen("4q3/3R4/7B/4P1P1/1K2k3/Pp6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 427);
        assert_eq!(perft(&board, 3, &PRECOMP), 9235);
    }

    #[test]
    fn gentest_2895() {
        let board = Board::from_fen("q7/3R4/7B/4PkP1/2K5/Pp6/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 621);
    }

    #[test]
    fn gentest_2896() {
        let board = Board::from_fen("q7/R7/7B/4P1P1/3K1k2/Pp6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 323);
        assert_eq!(perft(&board, 3, &PRECOMP), 6888);
    }

    #[test]
    fn gentest_2897() {
        let board = Board::from_fen("q7/8/7B/R3P1P1/3K1k2/Pp6/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 323);
        assert_eq!(perft(&board, 3, &PRECOMP), 4610);
    }

    #[test]
    fn gentest_2898() {
        let board = Board::from_fen("8/8/3K3B/R3P1P1/5k2/Pp3q2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 364);
        assert_eq!(perft(&board, 3, &PRECOMP), 8357);
    }

    #[test]
    fn gentest_2899() {
        let board = Board::from_fen("8/8/7B/R1K1P1P1/4qk2/P7/1p6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 360);
        assert_eq!(perft(&board, 3, &PRECOMP), 4727);
    }

    #[test]
    fn gentest_2900() {
        let board = Board::from_fen("8/6B1/8/R1K1P1P1/P3qk2/8/8/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 333);
    }

    #[test]
    fn gentest_2901() {
        let board = Board::from_fen("8/6B1/1K6/R3P1P1/P4k2/3b4/4q3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 539);
        assert_eq!(perft(&board, 3, &PRECOMP), 9013);
    }

    #[test]
    fn gentest_2902() {
        let board = Board::from_fen("8/6B1/1K6/4P1P1/P3qk2/3b4/2R5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 602);
    }

    #[test]
    fn gentest_2903() {
        let board = Board::from_fen("8/6B1/1K6/4P1k1/P3q3/8/4bR2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 569);
    }

    #[test]
    fn gentest_2904() {
        let board = Board::from_fen("8/8/1K5B/1b2P1k1/P3q3/8/5R2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 138);
        assert_eq!(perft(&board, 3, &PRECOMP), 4469);
    }

    #[test]
    fn gentest_2905() {
        let board = Board::from_fen("8/8/bK6/4P3/P3qBk1/8/5R2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 729);
    }

    #[test]
    fn gentest_2906() {
        let board = Board::from_fen("8/8/bK6/4q3/P5k1/8/7R/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 685);
    }

    #[test]
    fn gentest_2907() {
        let board = Board::from_fen("8/7R/1K6/6q1/P5k1/3b4/8/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 776);
    }

    #[test]
    fn gentest_2908() {
        let board = Board::from_fen("8/2K4R/8/5bq1/P5k1/8/3B4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 468);
    }

    #[test]
    fn gentest_2909() {
        let board = Board::from_fen("8/2K4R/6bq/6B1/P5k1/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 580);
    }

    #[test]
    fn gentest_2910() {
        let board = Board::from_fen("1K6/7R/6b1/6q1/P5kB/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 507);
    }

    #[test]
    fn gentest_2911() {
        let board = Board::from_fen("1K6/R7/6b1/5q2/P6B/5k2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 611);
    }

    #[test]
    fn gentest_2912() {
        let board = Board::from_fen("8/R1K1B3/6b1/5q2/P7/8/6k1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 583);
    }

    #[test]
    fn gentest_2913() {
        let board = Board::from_fen("2K5/R3B3/5q2/8/P3b3/8/6k1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 748);
    }

    #[test]
    fn gentest_2914() {
        let board = Board::from_fen("2K5/R7/3B1q2/P7/8/3b4/6k1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 783);
    }

    #[test]
    fn gentest_2915() {
        let board = Board::from_fen("2K5/R7/b5q1/P7/8/8/6kB/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 191);
        assert_eq!(perft(&board, 3, &PRECOMP), 2358);
    }

    #[test]
    fn gentest_2916() {
        let board = Board::from_fen("R7/3K4/b5q1/P7/8/8/7k/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 344);
    }

    #[test]
    fn gentest_2917() {
        let board = Board::from_fen("8/R2K4/8/P7/2b5/8/2q4k/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 396);
        assert_eq!(perft(&board, 3, &PRECOMP), 4489);
    }

    #[test]
    fn gentest_2918() {
        let board = Board::from_fen("4R3/3K4/8/P7/2b5/8/7k/1q6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 628);
    }

    #[test]
    fn gentest_2919() {
        let board = Board::from_fen("5R2/3K4/1q6/P7/2b5/8/7k/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 639);
        assert_eq!(perft(&board, 3, &PRECOMP), 8267);
    }

    #[test]
    fn gentest_2920() {
        let board = Board::from_fen("3K4/8/2q5/P7/2b2R2/8/7k/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 462);
    }

    #[test]
    fn gentest_2921() {
        let board = Board::from_fen("3K1R2/8/2q1b3/P7/8/8/8/7k w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 337);
        assert_eq!(perft(&board, 3, &PRECOMP), 3803);
    }

    #[test]
    fn gentest_2922() {
        let board = Board::from_fen("3K4/2R5/4b3/P7/8/8/8/7k b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 241);
        assert_eq!(perft(&board, 3, &PRECOMP), 2711);
    }

    #[test]
    fn gentest_2923() {
        let board = Board::from_fen("3Kb3/8/8/P1R5/8/8/8/7k w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 151);
        assert_eq!(perft(&board, 3, &PRECOMP), 2599);
    }

    #[test]
    fn gentest_2924() {
        let board = Board::from_fen("2RK4/8/P7/8/b7/8/8/7k b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 122);
        assert_eq!(perft(&board, 3, &PRECOMP), 1304);
    }

    #[test]
    fn gentest_2925() {
        let board = Board::from_fen("3Kb3/2R5/P7/8/8/8/6k1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 227);
        assert_eq!(perft(&board, 3, &PRECOMP), 3861);
    }

    #[test]
    fn gentest_2926() {
        let board = Board::from_fen("1K2b3/2R5/P7/8/8/8/8/7k b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 176);
        assert_eq!(perft(&board, 3, &PRECOMP), 1845);
    }

    #[test]
    fn gentest_2927() {
        let board = Board::from_fen("2K1b3/2R5/P7/8/8/8/8/5k2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 176);
        assert_eq!(perft(&board, 3, &PRECOMP), 2915);
    }

    #[test]
    fn gentest_2928() {
        let board = Board::from_fen("3K4/5R2/P7/7b/8/8/8/5k2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 103);
        assert_eq!(perft(&board, 3, &PRECOMP), 1047);
    }

    #[test]
    fn gentest_2929() {
        let board = Board::from_fen("3K4/8/P5b1/8/8/5R2/8/4k3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 213);
        assert_eq!(perft(&board, 3, &PRECOMP), 3933);
    }

    #[test]
    fn gentest_2930() {
        let board = Board::from_fen("8/3K3b/P7/8/8/1R6/8/4k3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 252);
        assert_eq!(perft(&board, 3, &PRECOMP), 3105);
    }

    #[test]
    fn gentest_2931() {
        let board = Board::from_fen("8/3K3b/P7/8/8/8/1R6/4k3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 213);
        assert_eq!(perft(&board, 3, &PRECOMP), 4221);
    }

    #[test]
    fn gentest_2932() {
        let board = Board::from_fen("8/8/P3K3/8/8/8/3R4/1b2k3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 146);
        assert_eq!(perft(&board, 3, &PRECOMP), 1544);
    }

    #[test]
    fn gentest_2933() {
        let board = Board::from_fen("8/8/P3K3/8/8/8/2b1R3/5k2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 162);
        assert_eq!(perft(&board, 3, &PRECOMP), 2885);
    }

    #[test]
    fn gentest_2934() {
        let board = Board::from_fen("8/8/P2K4/8/8/8/2b4R/4k3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 240);
        assert_eq!(perft(&board, 3, &PRECOMP), 2571);
    }

    #[test]
    fn gentest_2935() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_2936() {
        let board = Board::from_fen("rnbqkbnr/pppp1ppp/8/4p3/5P2/P7/1PPPP1PP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 597);
    }

    #[test]
    fn gentest_2937() {
        let board = Board::from_fen("r1bqkbnr/pp1p1ppp/n1p5/4p3/4PP2/P7/1PPP2PP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 948);
    }

    #[test]
    fn gentest_2938() {
        let board = Board::from_fen("r1b1kbnr/pp1p1ppp/n1p2q2/4p3/4PP2/P7/1PPPB1PP/RNBQ1KNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 868);
    }

    #[test]
    fn gentest_2939() {
        let board = Board::from_fen("1rb1k1nr/pp1p1ppp/n1p2q2/4p3/P3PP2/b7/1PPPB1PP/RNBQ1KNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 991);
    }

    #[test]
    fn gentest_2940() {
        let board = Board::from_fen("1rbk2nr/pp1p1ppp/n1p2q2/4p3/P1B1PP2/b6P/1PPP2P1/RNBQ1KNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1152);
    }

    #[test]
    fn gentest_2941() {
        let board = Board::from_fen("1rbk2nr/pp1pbppp/n1pq4/4p3/P1B1PP2/2P4P/1P1P2P1/RNBQ1KNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1175);
    }

    #[test]
    fn gentest_2942() {
        let board = Board::from_fen("1rbk1bnr/pp1p1ppp/n1pq4/4pP1Q/P1B1P3/2P4P/1P1P2P1/RNB2KNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1107);
    }

    #[test]
    fn gentest_2943() {
        let board = Board::from_fen("1rbk1bnr/pp1p1ppp/n1q5/2p1pP1Q/P1B1P3/2PP3P/1P4P1/RNB2KNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1135);
    }

    #[test]
    fn gentest_2944() {
        let board = Board::from_fen("1rbk1bnr/pp1p1ppp/n4q2/2p1p2Q/P1B1P3/2PP3P/1P4P1/RNB1K1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1153);
    }

    #[test]
    fn gentest_2945() {
        let board = Board::from_fen("1rbk1bnr/pp3pp1/n2p1q1p/2p1p2Q/P1B1P3/2PP3P/1P1K2P1/RNB3NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1063);
    }

    #[test]
    fn gentest_2946() {
        let board = Board::from_fen("1r1k1bnr/pp1b1pp1/B2p1q1p/2p1p2Q/P3P1P1/2PP3P/1P1K4/RNB3NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 865);
    }

    #[test]
    fn gentest_2947() {
        let board = Board::from_fen("1r1k1bnr/pp1bqpp1/B6p/2ppp2Q/P3P1P1/2PP3P/1P1KN3/RNB4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1053);
    }

    #[test]
    fn gentest_2948() {
        let board = Board::from_fen("1r1k1bnr/pp1bqpp1/B6p/2p1p2Q/P3p1PP/2PP4/1P1K4/RNB3NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 844);
    }

    #[test]
    fn gentest_2949() {
        let board = Board::from_fen("r2k1bnr/pp2qpp1/B6p/2p1p2Q/P3p1bP/R1PP4/1P1K4/1NB3NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 921);
    }

    #[test]
    fn gentest_2950() {
        let board = Board::from_fen("r2k1bnr/pp2qp2/B6p/1Pp1p1pQ/P3p1bP/R1PP4/3K4/1NB3NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 775);
    }

    #[test]
    fn gentest_2951() {
        let board = Board::from_fen("r2k1bnr/pp3p2/B3q2p/1Pp1p1pQ/P5bP/R1PPp3/8/1NB1K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 967);
    }

    #[test]
    fn gentest_2952() {
        let board = Board::from_fen("r2k1bnr/pp6/B3qp1p/1Pp1p1Q1/P1P3bP/R2Pp3/8/1NB1K1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1145);
    }

    #[test]
    fn gentest_2953() {
        let board = Board::from_fen("r1qk1bn1/pp5r/B4p1p/1Pp1p1Q1/P1P3bP/R2PB3/8/1N2K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1165);
    }

    #[test]
    fn gentest_2954() {
        let board = Board::from_fen("r1qk1bn1/pp5r/B4p1p/1Pp1p2Q/P1P4P/2RPBb2/8/1N2K1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1238);
    }

    #[test]
    fn gentest_2955() {
        let board = Board::from_fen("r2k1bn1/pp5r/B4p1p/1Pp1p2Q/P1P4P/2Rq1b2/8/1NB1K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1303);
    }

    #[test]
    fn gentest_2956() {
        let board = Board::from_fen("r2k1bn1/pB5r/5p1p/1Pp1p2Q/P1P4P/2R2b2/3N4/2B1K1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1164);
    }

    #[test]
    fn gentest_2957() {
        let board = Board::from_fen("r2k1bn1/pB5r/5p1p/1Pp1p2Q/P1P4P/2R2N2/8/2B1K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 813);
    }

    #[test]
    fn gentest_2958() {
        let board = Board::from_fen("r3kbn1/pB5r/1P3p1p/2p1p3/P1P4P/2R2N2/8/2B1K1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 826);
    }

    #[test]
    fn gentest_2959() {
        let board = Board::from_fen("r3kbn1/pB2r3/1P3p1p/2p1p2P/P1P5/2R2N2/8/2B1K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 661);
    }

    #[test]
    fn gentest_2960() {
        let board = Board::from_fen("r3kbn1/p1r5/1PB2p1B/2p1p2P/P1P5/2R2N2/8/4K1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 188);
        assert_eq!(perft(&board, 3, &PRECOMP), 3809);
    }

    #[test]
    fn gentest_2961() {
        let board = Board::from_fen("r1k2bn1/p1r5/1PB2p1B/P1p1p2P/2P5/2R2N2/8/4K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 764);
    }

    #[test]
    fn gentest_2962() {
        let board = Board::from_fen("B1k2bn1/p4r2/1P3p1B/P1p1p2P/2P5/2R2N2/4N3/4K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 754);
    }

    #[test]
    fn gentest_2963() {
        let board = Board::from_fen("B4b2/p2k1r2/1P3p1n/P1p1p2P/2P2N2/2R2N2/8/4K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 657);
    }

    #[test]
    fn gentest_2964() {
        let board = Board::from_fen("B1k2b2/p4r2/1P3p1n/P1p1p1NP/2P2N2/R7/8/4K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 859);
    }

    #[test]
    fn gentest_2965() {
        let board = Board::from_fen("2k2b2/p4r2/1P6/P1p1pnpP/2P2N2/R4B2/8/4K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 965);
    }

    #[test]
    fn gentest_2966() {
        let board = Board::from_fen("3k1b2/p4r2/1P6/P1p1pnpP/2P5/R4B1R/6N1/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 820);
    }

    #[test]
    fn gentest_2967() {
        let board = Board::from_fen("3k1b2/p6r/1P1n4/P1p1p1pP/2P3B1/R6R/6N1/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 923);
    }

    #[test]
    fn gentest_2968() {
        let board = Board::from_fen("3k1b2/p3r3/1P1n4/P1p1p1pP/2P3B1/R4R2/6N1/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 796);
    }

    #[test]
    fn gentest_2969() {
        let board = Board::from_fen("3k1b2/pn4r1/1P2B3/P1p1p1pP/2P5/R4R2/6N1/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 623);
    }

    #[test]
    fn gentest_2970() {
        let board = Board::from_fen("3k1b2/pn1r4/1P2B3/P1pNp1pP/2P5/R4R2/8/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 777);
    }

    #[test]
    fn gentest_2971() {
        let board = Board::from_fen("3knb2/p2r4/1P2B3/P1pNp1pP/2P5/R7/8/4KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 849);
    }

    #[test]
    fn gentest_2972() {
        let board = Board::from_fen("3knb2/p5r1/1P2B3/P1p1p1pP/1NP5/6R1/8/4KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 782);
    }

    #[test]
    fn gentest_2973() {
        let board = Board::from_fen("3knb2/p4r2/PP2B3/2p3pP/1NP1p3/6R1/8/4KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 834);
    }

    #[test]
    fn gentest_2974() {
        let board = Board::from_fen("3knb2/p5r1/PP2B3/2p2RpP/1NP1p3/1R6/8/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 673);
    }

    #[test]
    fn gentest_2975() {
        let board = Board::from_fen("3knR2/pr6/PP2B3/2p4P/1NP1p1p1/1R6/8/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 494);
    }

    #[test]
    fn gentest_2976() {
        let board = Board::from_fen("3kn3/1r3R2/Pp6/2p2B1P/1NP1p1p1/1R6/8/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 489);
        assert_eq!(perft(&board, 3, &PRECOMP), 6841);
    }

    #[test]
    fn gentest_2977() {
        let board = Board::from_fen("2rkn3/5R1B/Pp6/2p4P/1NP1p1p1/1R6/8/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
    }

    #[test]
    fn gentest_2978() {
        let board = Board::from_fen("3kn3/R1r4B/Pp6/2p4P/1NP1p1p1/3R4/8/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 140);
        assert_eq!(perft(&board, 3, &PRECOMP), 2136);
    }

    #[test]
    fn gentest_2979() {
        let board = Board::from_fen("3k4/R6B/Pprn4/2p4P/1NP1p1p1/3R4/8/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 304);
        assert_eq!(perft(&board, 3, &PRECOMP), 9438);
    }

    #[test]
    fn gentest_2980() {
        let board = Board::from_fen("3k4/R7/Pprn4/2p4P/2P1B3/3R2p1/2N5/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 222);
        assert_eq!(perft(&board, 3, &PRECOMP), 2450);
    }

    #[test]
    fn gentest_2981() {
        let board = Board::from_fen("3k4/r7/Pp1n4/2p4P/2PNB3/3R2p1/8/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 662);
    }

    #[test]
    fn gentest_2982() {
        let board = Board::from_fen("8/r2k4/Pp1n4/2p4P/2P5/3R1Np1/8/3K3B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 304);
        assert_eq!(perft(&board, 3, &PRECOMP), 5290);
    }

    #[test]
    fn gentest_2983() {
        let board = Board::from_fen("r7/2k5/Pp1n4/2p4P/2P5/3R1Np1/6B1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 582);
    }

    #[test]
    fn gentest_2984() {
        let board = Board::from_fen("r7/2k2n2/Pp6/2pR3P/2P5/5Np1/4K1B1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 539);
        assert_eq!(perft(&board, 3, &PRECOMP), 8851);
    }

    #[test]
    fn gentest_2985() {
        let board = Board::from_fen("r7/2k5/Pp4n1/2pR3P/2P5/6p1/4K1B1/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 496);
    }

    #[test]
    fn gentest_2986() {
        let board = Board::from_fen("4r3/2k5/Pp4n1/2p3RP/2P5/6p1/6B1/3K2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 623);
    }

    #[test]
    fn gentest_2987() {
        let board = Board::from_fen("1k6/8/Pp4P1/2p3R1/2P1r3/6p1/6B1/3K2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 313);
        assert_eq!(perft(&board, 3, &PRECOMP), 6795);
    }

    #[test]
    fn gentest_2988() {
        let board = Board::from_fen("1k2r3/8/PpB3P1/2R5/2P5/6p1/8/3K2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 417);
        assert_eq!(perft(&board, 3, &PRECOMP), 6250);
    }

    #[test]
    fn gentest_2989() {
        let board = Board::from_fen("1k6/6r1/Pp4P1/2R5/2P5/6p1/6B1/3K2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 335);
        assert_eq!(perft(&board, 3, &PRECOMP), 8823);
    }

    #[test]
    fn gentest_2990() {
        let board = Board::from_fen("1k6/3r4/Pp4P1/3R4/2P1B3/6p1/8/3K2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 408);
        assert_eq!(perft(&board, 3, &PRECOMP), 5829);
    }

    #[test]
    fn gentest_2991() {
        let board = Board::from_fen("1k6/8/Pp4r1/3R4/2P1B3/5Np1/8/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 446);
    }

    #[test]
    fn gentest_2992() {
        let board = Board::from_fen("k7/P7/1p4r1/3R4/2P1B3/5Np1/8/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 439);
        assert_eq!(perft(&board, 3, &PRECOMP), 4180);
    }

    #[test]
    fn gentest_2993() {
        let board = Board::from_fen("8/8/kp4r1/7R/2P1B3/5Np1/8/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 434);
    }

    #[test]
    fn gentest_2994() {
        let board = Board::from_fen("8/7B/k7/1p5R/2P5/5Np1/8/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 230);
        assert_eq!(perft(&board, 3, &PRECOMP), 1701);
    }

    #[test]
    fn gentest_2995() {
        let board = Board::from_fen("8/7B/8/kp5R/2P5/8/6p1/2K1N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 232);
        assert_eq!(perft(&board, 3, &PRECOMP), 6380);
    }

    #[test]
    fn gentest_2996() {
        let board = Board::from_fen("6BR/8/1k6/1p6/2P5/8/6p1/2K1N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 275);
        assert_eq!(perft(&board, 3, &PRECOMP), 3334);
    }

    #[test]
    fn gentest_2997() {
        let board = Board::from_fen("6B1/7R/1k6/1p6/2P5/5n2/8/2K1N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 355);
        assert_eq!(perft(&board, 3, &PRECOMP), 9326);
    }

    #[test]
    fn gentest_2998() {
        let board = Board::from_fen("6B1/R7/k7/1p6/2P5/5n2/8/2K1N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 42);
        assert_eq!(perft(&board, 3, &PRECOMP), 533);
    }

    #[test]
    fn gentest_2999() {
        let board = Board::from_fen("6B1/k7/8/8/1pP5/5n2/8/1K2N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 185);
        assert_eq!(perft(&board, 3, &PRECOMP), 2660);
    }

    #[test]
    fn gentest_3000() {
        let board = Board::from_fen("6B1/k7/8/2P5/1p1n4/3N4/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 243);
        assert_eq!(perft(&board, 3, &PRECOMP), 2831);
    }

    #[test]
    fn gentest_3001() {
        let board = Board::from_fen("k5B1/8/4n3/2P1N3/1p6/8/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 192);
        assert_eq!(perft(&board, 3, &PRECOMP), 3499);
    }

    #[test]
    fn gentest_3002() {
        let board = Board::from_fen("k5B1/4N3/4n3/2P5/8/1p6/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 167);
        assert_eq!(perft(&board, 3, &PRECOMP), 1596);
    }

    #[test]
    fn gentest_3003() {
        let board = Board::from_fen("k7/4N3/2n5/2P5/2B5/1p6/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 206);
        assert_eq!(perft(&board, 3, &PRECOMP), 3743);
    }

    #[test]
    fn gentest_3004() {
        let board = Board::from_fen("kn6/4N3/8/2P5/2B5/1p6/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 898);
    }

    #[test]
    fn gentest_3005() {
        let board = Board::from_fen("kn6/8/6N1/2P5/2B5/1p6/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 2075);
    }

    #[test]
    fn gentest_3006() {
        let board = Board::from_fen("k7/8/n5N1/2P5/8/1B6/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 158);
        assert_eq!(perft(&board, 3, &PRECOMP), 1260);
    }

    #[test]
    fn gentest_3007() {
        let board = Board::from_fen("2k5/8/n5N1/2P5/8/8/1K6/3B4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 183);
        assert_eq!(perft(&board, 3, &PRECOMP), 3681);
    }

    #[test]
    fn gentest_3008() {
        let board = Board::from_fen("7N/3k4/n7/2P4B/8/8/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 175);
        assert_eq!(perft(&board, 3, &PRECOMP), 1637);
    }

    #[test]
    fn gentest_3009() {
        let board = Board::from_fen("7N/3k1B2/8/2P5/8/8/nK6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 129);
        assert_eq!(perft(&board, 3, &PRECOMP), 2124);
    }

    #[test]
    fn gentest_3010() {
        let board = Board::from_fen("7N/2k5/8/2P5/8/8/B7/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 77);
        assert_eq!(perft(&board, 3, &PRECOMP), 402);
        assert_eq!(perft(&board, 4, &PRECOMP), 6532);
    }

    #[test]
    fn gentest_3011() {
        let board = Board::from_fen("4k2N/8/4B3/2P5/8/8/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 61);
        assert_eq!(perft(&board, 3, &PRECOMP), 1074);
        assert_eq!(perft(&board, 4, &PRECOMP), 4417);
    }

    #[test]
    fn gentest_3012() {
        let board = Board::from_fen("8/4k3/3NB3/2P5/8/8/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 89);
        assert_eq!(perft(&board, 3, &PRECOMP), 331);
        assert_eq!(perft(&board, 4, &PRECOMP), 6576);
    }

    #[test]
    fn gentest_3013() {
        let board = Board::from_fen("8/4k3/3N4/2P5/6B1/8/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 94);
        assert_eq!(perft(&board, 3, &PRECOMP), 2008);
        assert_eq!(perft(&board, 4, &PRECOMP), 8531);
    }

    #[test]
    fn gentest_3014() {
        let board = Board::from_fen("3k4/8/8/1NP5/6B1/8/8/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 38);
        assert_eq!(perft(&board, 3, &PRECOMP), 176);
        assert_eq!(perft(&board, 4, &PRECOMP), 3339);
    }

    #[test]
    fn gentest_3015() {
        let board = Board::from_fen("5k2/8/8/1NP5/6B1/8/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 97);
        assert_eq!(perft(&board, 3, &PRECOMP), 2015);
    }

    #[test]
    fn gentest_3016() {
        let board = Board::from_fen("8/2NB1k2/8/2P5/8/8/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 126);
        assert_eq!(perft(&board, 3, &PRECOMP), 693);
    }

    #[test]
    fn gentest_3017() {
        let board = Board::from_fen("8/2NB2k1/8/2P5/8/8/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 159);
        assert_eq!(perft(&board, 3, &PRECOMP), 3185);
    }

    #[test]
    fn gentest_3018() {
        let board = Board::from_fen("4N2k/8/8/2P5/B7/8/K7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 32);
        assert_eq!(perft(&board, 3, &PRECOMP), 129);
        assert_eq!(perft(&board, 4, &PRECOMP), 2245);
        assert_eq!(perft(&board, 5, &PRECOMP), 8944);
    }

    #[test]
    fn gentest_3019() {
        let board = Board::from_fen("7k/8/5N2/2P5/B7/8/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 35);
        assert_eq!(perft(&board, 3, &PRECOMP), 660);
        assert_eq!(perft(&board, 4, &PRECOMP), 3467);
    }

    #[test]
    fn gentest_3020() {
        let board = Board::from_fen("8/6k1/8/2P5/B3N3/8/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 161);
        assert_eq!(perft(&board, 3, &PRECOMP), 752);
    }

    #[test]
    fn gentest_3021() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3022() {
        let board = Board::from_fen("rnbqkbnr/p1pppppp/1p6/8/8/N1P5/PP1PPPPP/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 483);
    }

    #[test]
    fn gentest_3023() {
        let board = Board::from_fen("rnbqkbnr/p1p1p1pp/1p1p1p2/8/7P/N1P5/PP1PPPP1/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 624);
    }

    #[test]
    fn gentest_3024() {
        let board = Board::from_fen("rnbq1bnr/p1pkp1pp/1p1p1p2/8/7P/N1P1P2R/PP1P1PP1/R1BQKBN1 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 768);
    }

    #[test]
    fn gentest_3025() {
        let board = Board::from_fen("rnbq1bnr/2pk2pp/1p1p1p2/p3p3/7P/N1P1P3/PP1P1PP1/R1BQKBNR w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 814);
    }

    #[test]
    fn gentest_3026() {
        let board = Board::from_fen("rnbq1bnr/2pk2p1/1p1p1p2/pN2p2p/3P3P/2P1P3/PP3PP1/R1BQKBNR b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 962);
    }

    #[test]
    fn gentest_3027() {
        let board = Board::from_fen("rnbq1b1r/2pk2p1/1p1p1p1n/1N2p2p/p2P3P/2P1PQ2/PP3PP1/R1B1KBNR w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 995);
    }

    #[test]
    fn gentest_3028() {
        let board = Board::from_fen("r1bq1b1r/2pk2p1/np1p1p1n/1N2p2p/p2P3P/1PP1PQ2/P4PP1/1RB1KBNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1162);
    }

    #[test]
    fn gentest_3029() {
        let board = Board::from_fen("r1bq1b1r/2p3p1/np1pkp1n/1N2p2p/3P3P/1pP1PQ2/P3NPP1/1RB1KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 967);
    }

    #[test]
    fn gentest_3030() {
        let board = Board::from_fen("Q1bq1b1r/6p1/np1pkp1n/2p1p2p/3P3P/NpP1P3/P3NPP1/1RB1KB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1081);
    }

    #[test]
    fn gentest_3031() {
        let board = Board::from_fen("2bq1b1r/6p1/Qp1pkp2/2p4p/3p2nP/NpP1P3/P3NPP1/1RB1KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1009);
    }

    #[test]
    fn gentest_3032() {
        let board = Board::from_fen("Q1bq1b1r/6p1/1p1pkp2/2p4p/3p3P/NpP1n1N1/P4PP1/1RB1KB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1241);
    }

    #[test]
    fn gentest_3033() {
        let board = Board::from_fen("Q1bq1b2/6pr/1p1pkp2/2p4p/3p3P/NpP3N1/P1n2PP1/1RB1KBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 4344);
    }

    #[test]
    fn gentest_3034() {
        let board = Board::from_fen("Q1bq1b2/6pr/1p1pkp2/2p4p/3p3P/N1P3N1/Pp3PP1/1RB1KBR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 943);
    }

    #[test]
    fn gentest_3035() {
        let board = Board::from_fen("2bq1b2/5kp1/1p1p1p1r/2p4p/3pQ2P/N1P3N1/Pp3PP1/1RB1KBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1152);
    }

    #[test]
    fn gentest_3036() {
        let board = Board::from_fen("2bq1b2/4k1p1/1p1p1p1r/2p2Q1N/3p3P/N1P5/Pp3PP1/1RB1KBR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1043);
    }

    #[test]
    fn gentest_3037() {
        let board = Board::from_fen("2bq1b2/4k3/1p3ppr/2pp1Q1N/3p3P/2P5/PpN2PP1/1RB1KBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1167);
    }

    #[test]
    fn gentest_3038() {
        let board = Board::from_fen("2bq1b2/8/1p1k1ppr/2ppQ2N/3p3P/2P5/PpN1BPP1/1RB1K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 184);
        assert_eq!(perft(&board, 3, &PRECOMP), 4964);
    }

    #[test]
    fn gentest_3039() {
        let board = Board::from_fen("3q1b2/3b4/1pk2ppr/2ppQ2N/3p3P/P1P5/1pN1BPP1/1RB1K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 1359);
    }

    #[test]
    fn gentest_3040() {
        let board = Board::from_fen("3q1b2/3b4/Bpk2ppr/2ppQ2N/3p3P/P1P5/2NK1PP1/1Rr3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1582);
    }

    #[test]
    fn gentest_3041() {
        let board = Board::from_fen("3qbb2/7r/Bpk2Np1/2ppQ3/3p3P/P1P5/2NK1PP1/1Rr3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 61);
        assert_eq!(perft(&board, 2, &PRECOMP), 1858);
    }

    #[test]
    fn gentest_3042() {
        let board = Board::from_fen("3q1b2/5b1N/1pk3p1/2ppQ3/2Bp3P/P1P5/2NK1PP1/1Rr3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1528);
    }

    #[test]
    fn gentest_3043() {
        let board = Board::from_fen("1q3b2/5b1N/1k4p1/2ppQ3/2Bp3P/P1P5/2NK1PP1/2r3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 1511);
    }

    #[test]
    fn gentest_3044() {
        let board = Board::from_fen("5b2/1q3b1N/1k4p1/2pp3Q/2Bp3P/P1P3P1/2NK1P2/2r3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1104);
    }

    #[test]
    fn gentest_3045() {
        let board = Board::from_fen("5b2/1q3b1N/1k4p1/2pQ4/2Bp3P/P1P3P1/2NK1P2/2r3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1330);
    }

    #[test]
    fn gentest_3046() {
        let board = Board::from_fen("5b2/1q3b1N/1k1Q4/2p3p1/2Bp3P/P1P3P1/2NK1P2/2r1R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 208);
        assert_eq!(perft(&board, 3, &PRECOMP), 7178);
    }

    #[test]
    fn gentest_3047() {
        let board = Board::from_fen("5b2/k3qb1N/3Q4/2p3p1/2Bp3P/P1P3P1/2NK1P2/2r4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1566);
    }

    #[test]
    fn gentest_3048() {
        let board = Board::from_fen("5b2/k3Q2N/8/2pb2p1/2Bp3P/P1P3P1/2NK1P2/2r4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 243);
        assert_eq!(perft(&board, 3, &PRECOMP), 5729);
    }

    #[test]
    fn gentest_3049() {
        let board = Board::from_fen("1k3b2/4Q2N/8/2pb2pP/2Bp4/P1P3P1/2NK1P2/3r3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 66);
        assert_eq!(perft(&board, 3, &PRECOMP), 2869);
    }

    #[test]
    fn gentest_3050() {
        let board = Board::from_fen("1k3b2/4Q3/4b3/2p3NP/2Bp4/P1P3P1/2N1KP2/3r3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 971);
    }

    #[test]
    fn gentest_3051() {
        let board = Board::from_fen("1k3b2/4Q3/8/2p3NP/2bp4/P1P2KP1/2N2P2/1r5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1170);
    }

    #[test]
    fn gentest_3052() {
        let board = Board::from_fen("3Q1b2/k7/8/2p3NP/2bp4/P1P2KP1/2N2P1R/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1140);
    }

    #[test]
    fn gentest_3053() {
        let board = Board::from_fen("k4b2/4Q3/8/2p3NP/2bp4/P1P2KP1/1rN2P1R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 956);
    }

    #[test]
    fn gentest_3054() {
        let board = Board::from_fen("k4b2/8/8/2pb2NP/3p1K2/P1P1Q1P1/1rN2P1R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1068);
    }

    #[test]
    fn gentest_3055() {
        let board = Board::from_fen("k4b2/8/8/2p3NP/4bK2/P1P1p1P1/1rN2PR1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 657);
    }

    #[test]
    fn gentest_3056() {
        let board = Board::from_fen("k4b2/8/7N/7P/2p1bK2/P1P1p1P1/1rN2PR1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 572);
    }

    #[test]
    fn gentest_3057() {
        let board = Board::from_fen("k7/8/5b1N/7P/2p1bKP1/P1P1p3/1rN2PR1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 591);
    }

    #[test]
    fn gentest_3058() {
        let board = Board::from_fen("k7/8/5b1N/6PP/2pNbK2/PrP1p3/5PR1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 742);
    }

    #[test]
    fn gentest_3059() {
        let board = Board::from_fen("k7/8/5b1N/6PP/2pNb1K1/2P1p3/5PR1/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 816);
    }

    #[test]
    fn gentest_3060() {
        let board = Board::from_fen("k7/8/5P1N/5N1P/2p1b1K1/2P1p3/5PR1/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 447);
    }

    #[test]
    fn gentest_3061() {
        let board = Board::from_fen("k7/8/5P1N/7P/2pNb1K1/2P1p3/4rPR1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 469);
    }

    #[test]
    fn gentest_3062() {
        let board = Board::from_fen("k7/8/5P1N/7P/2pNb2K/2P1p3/1r3PR1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 764);
    }

    #[test]
    fn gentest_3063() {
        let board = Board::from_fen("6R1/1k5b/5P1N/7P/2pN3K/2P1p3/1r3P2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 723);
    }

    #[test]
    fn gentest_3064() {
        let board = Board::from_fen("5R2/1k5b/5P1N/5N1P/2p4K/2P5/1r3p2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 453);
        assert_eq!(perft(&board, 3, &PRECOMP), 9827);
    }

    #[test]
    fn gentest_3065() {
        let board = Board::from_fen("3R4/1k5b/5P1N/5N1P/2p4K/2P5/1r6/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 765);
    }

    #[test]
    fn gentest_3066() {
        let board = Board::from_fen("2R5/1k2N2b/5P1N/1r5P/2p4K/2P5/8/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 700);
    }

    #[test]
    fn gentest_3067() {
        let board = Board::from_fen("2R5/1k2N2b/5P1N/6r1/2p3K1/2P5/8/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 151);
        assert_eq!(perft(&board, 3, &PRECOMP), 3291);
    }

    #[test]
    fn gentest_3068() {
        let board = Board::from_fen("1R6/1k2N2b/5P1N/6r1/2p2K2/2P5/2r5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 98);
        assert_eq!(perft(&board, 3, &PRECOMP), 2596);
    }

    #[test]
    fn gentest_3069() {
        let board = Board::from_fen("7R/4N2b/k4P1N/6r1/2p2K2/2P5/3r4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 780);
    }

    #[test]
    fn gentest_3070() {
        let board = Board::from_fen("7R/7b/k4P1N/7r/1Np2K2/2P5/3r4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 115);
        assert_eq!(perft(&board, 3, &PRECOMP), 3712);
    }

    #[test]
    fn gentest_3071() {
        let board = Board::from_fen("5R2/1k6/5P1N/7r/1Np2K2/2Pb4/3r4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 655);
    }

    #[test]
    fn gentest_3072() {
        let board = Board::from_fen("5R1r/1k6/5P2/5N2/2p2K2/2PN4/3r4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 657);
    }

    #[test]
    fn gentest_3073() {
        let board = Board::from_fen("5R1r/8/2kN1P2/8/2p2K2/2PN4/7r/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 767);
    }

    #[test]
    fn gentest_3074() {
        let board = Board::from_fen("5R1r/5N2/2k2P1r/8/2p2K2/2P5/8/4N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 390);
        assert_eq!(perft(&board, 3, &PRECOMP), 7081);
    }

    #[test]
    fn gentest_3075() {
        let board = Board::from_fen("5R1r/k4N2/5P1r/8/2p5/2P3K1/8/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 296);
        assert_eq!(perft(&board, 3, &PRECOMP), 5790);
    }

    #[test]
    fn gentest_3076() {
        let board = Board::from_fen("2r5/k4N2/5P1r/8/2p5/2P2K2/8/4N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 371);
        assert_eq!(perft(&board, 3, &PRECOMP), 8839);
    }

    #[test]
    fn gentest_3077() {
        let board = Board::from_fen("2r5/k4Nr1/5P2/8/2p1K3/2P5/8/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 437);
        assert_eq!(perft(&board, 3, &PRECOMP), 6968);
    }

    #[test]
    fn gentest_3078() {
        let board = Board::from_fen("k1r5/5Nr1/5P2/8/2pK4/2P5/6N1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 267);
        assert_eq!(perft(&board, 3, &PRECOMP), 5796);
    }

    #[test]
    fn gentest_3079() {
        let board = Board::from_fen("k7/2r2N2/5P2/6r1/2pK4/2P5/8/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 292);
        assert_eq!(perft(&board, 3, &PRECOMP), 3733);
    }

    #[test]
    fn gentest_3080() {
        let board = Board::from_fen("k5N1/8/2r2P2/6r1/2pK4/2P5/8/4N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 218);
        assert_eq!(perft(&board, 3, &PRECOMP), 5410);
    }

    #[test]
    fn gentest_3081() {
        let board = Board::from_fen("k7/8/5r1N/8/2pK4/2P5/6r1/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 408);
        assert_eq!(perft(&board, 3, &PRECOMP), 5203);
    }

    #[test]
    fn gentest_3082() {
        let board = Board::from_fen("k7/8/4r3/8/2pK2N1/2P2N2/6r1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 397);
    }

    #[test]
    fn gentest_3083() {
        let board = Board::from_fen("k7/8/8/8/2pK4/2P1rN2/6r1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 292);
        assert_eq!(perft(&board, 3, &PRECOMP), 2707);
    }

    #[test]
    fn gentest_3084() {
        let board = Board::from_fen("k7/8/8/8/2pK4/2P1r3/4N3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 98);
        assert_eq!(perft(&board, 3, &PRECOMP), 1433);
    }

    #[test]
    fn gentest_3085() {
        let board = Board::from_fen("k7/8/8/3K4/2p4r/2P5/4N3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 137);
        assert_eq!(perft(&board, 3, &PRECOMP), 1507);
    }

    #[test]
    fn gentest_3086() {
        let board = Board::from_fen("k7/7r/8/8/2pK4/2P5/4N3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 151);
        assert_eq!(perft(&board, 3, &PRECOMP), 2472);
    }

    #[test]
    fn gentest_3087() {
        let board = Board::from_fen("k7/4r3/8/8/2pK4/2P5/8/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 101);
        assert_eq!(perft(&board, 3, &PRECOMP), 878);
    }

    #[test]
    fn gentest_3088() {
        let board = Board::from_fen("k7/8/8/8/2pK4/2P1r3/8/2N5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 109);
        assert_eq!(perft(&board, 3, &PRECOMP), 1649);
    }

    #[test]
    fn gentest_3089() {
        let board = Board::from_fen("k7/7r/8/8/2pK4/2PN4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 242);
        assert_eq!(perft(&board, 3, &PRECOMP), 2812);
    }

    #[test]
    fn gentest_3090() {
        let board = Board::from_fen("k7/2r5/8/8/2p2K2/2PN4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 186);
        assert_eq!(perft(&board, 3, &PRECOMP), 2837);
    }

    #[test]
    fn gentest_3091() {
        let board = Board::from_fen("k7/r7/8/8/2p2K2/2P5/8/2N5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 181);
        assert_eq!(perft(&board, 3, &PRECOMP), 1982);
    }

    #[test]
    fn gentest_3092() {
        let board = Board::from_fen("k7/1r6/8/5K2/2p5/2PN4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 239);
        assert_eq!(perft(&board, 3, &PRECOMP), 3751);
    }

    #[test]
    fn gentest_3093() {
        let board = Board::from_fen("k5r1/8/8/6K1/2p5/2PN4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 1105);
    }

    #[test]
    fn gentest_3094() {
        let board = Board::from_fen("k7/8/6r1/8/2p2K2/2P5/8/4N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 159);
        assert_eq!(perft(&board, 3, &PRECOMP), 2607);
    }

    #[test]
    fn gentest_3095() {
        let board = Board::from_fen("k7/8/8/4K3/2p5/2P3r1/8/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 176);
        assert_eq!(perft(&board, 3, &PRECOMP), 1789);
    }

    #[test]
    fn gentest_3096() {
        let board = Board::from_fen("k7/8/8/4K3/2p5/2P4r/1N6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 156);
        assert_eq!(perft(&board, 3, &PRECOMP), 2492);
    }

    #[test]
    fn gentest_3097() {
        let board = Board::from_fen("k7/4r3/8/8/2pK4/2P5/1N6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 1099);
    }

    #[test]
    fn gentest_3098() {
        let board = Board::from_fen("k7/8/8/3K4/2N1r3/2P5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 2319);
    }

    #[test]
    fn gentest_3099() {
        let board = Board::from_fen("k7/8/3N4/3K4/8/2P5/4r3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 210);
        assert_eq!(perft(&board, 3, &PRECOMP), 2571);
    }

    #[test]
    fn gentest_3100() {
        let board = Board::from_fen("k7/4r3/8/3KN3/8/2P5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 177);
        assert_eq!(perft(&board, 3, &PRECOMP), 2656);
    }

    #[test]
    fn gentest_3101() {
        let board = Board::from_fen("k7/8/3K4/7r/8/2P5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 673);
    }

    #[test]
    fn gentest_3102() {
        let board = Board::from_fen("k7/8/4K3/8/8/2P5/8/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 135);
        assert_eq!(perft(&board, 3, &PRECOMP), 2287);
    }

    #[test]
    fn gentest_3103() {
        let board = Board::from_fen("k7/8/8/5K1r/8/2P5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 646);
    }

    #[test]
    fn gentest_3104() {
        let board = Board::from_fen("k7/8/8/3r4/2P3K1/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 117);
        assert_eq!(perft(&board, 3, &PRECOMP), 1887);
    }

    #[test]
    fn gentest_3105() {
        let board = Board::from_fen("k7/1r6/8/7K/2P5/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 96);
        assert_eq!(perft(&board, 3, &PRECOMP), 614);
        assert_eq!(perft(&board, 4, &PRECOMP), 9734);
    }

    #[test]
    fn gentest_3106() {
        let board = Board::from_fen("8/kr6/8/8/2P3K1/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 138);
        assert_eq!(perft(&board, 3, &PRECOMP), 2346);
    }

    #[test]
    fn gentest_3107() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3108() {
        let board = Board::from_fen("rnbqkbnr/ppppp1pp/8/5p2/8/1P5P/P1PPPPP1/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 399);
        assert_eq!(perft(&board, 3, &PRECOMP), 8921);
    }

    #[test]
    fn gentest_3109() {
        let board = Board::from_fen("rnbqkbnr/ppp1p1pp/8/3p1p2/6P1/1P5P/P1PPPP2/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 544);
    }

    #[test]
    fn gentest_3110() {
        let board = Board::from_fen("rnbqkbnr/p1p1p1pp/1p6/3p1p2/PP4P1/7P/2PPPP2/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 591);
    }

    #[test]
    fn gentest_3111() {
        let board = Board::from_fen("rnb1kbnr/p1p3pp/1p2pq2/3p1p2/PP4P1/5P1P/2PPP3/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 851);
    }

    #[test]
    fn gentest_3112() {
        let board = Board::from_fen("rnbqkbnr/p1p3pp/1p2p3/3p1p2/PP4P1/B4P1P/2PPP1B1/RN1QK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 710);
    }

    #[test]
    fn gentest_3113() {
        let board = Board::from_fen("rnbqkbnr/6pp/1p2p3/p1pp1p2/PPP3P1/B4P1P/3PP1B1/RN1QK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 800);
    }

    #[test]
    fn gentest_3114() {
        let board = Board::from_fen("rnbq1bnr/4k1pp/Pp2p3/2pp1p2/P1P3P1/B4P1P/3PP1B1/RN1QK1NR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 690);
    }

    #[test]
    fn gentest_3115() {
        let board = Board::from_fen("rnbq1bnr/6pp/Pp1kp3/2p2p2/P1p3P1/B1N2P1P/3PP1B1/R2QK1NR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 884);
    }

    #[test]
    fn gentest_3116() {
        let board = Board::from_fen("rnb1qbnr/6pp/Pp1kp3/2p2p2/P1p3P1/BQN2P1P/3PPKB1/R5NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1421);
    }

    #[test]
    fn gentest_3117() {
        let board = Board::from_fen("rnb1qbnr/6pp/1p1kp3/2p2p2/P1p3P1/BQN1KP1P/3PP1B1/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1198);
    }

    #[test]
    fn gentest_3118() {
        let board = Board::from_fen("1nb1qbnr/6pp/1p1kp3/r1p2p2/PQp3P1/B1N2P1P/3PPKB1/R5NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1366);
    }

    #[test]
    fn gentest_3119() {
        let board = Board::from_fen("1n2qbnr/4k1pp/bp2p3/r1p2p2/PQp1N1P1/B4P1P/3PPKB1/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1110);
    }

    #[test]
    fn gentest_3120() {
        let board = Board::from_fen("1n2qbnr/4k2p/bp2p1p1/r1p2p2/P1p1N1P1/BQ2KP1P/3PP1B1/R5NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1094);
    }

    #[test]
    fn gentest_3121() {
        let board = Board::from_fen("1nq2bnr/3k3p/bp2p1p1/r1p2p2/P1p1N1P1/BQ2KP1P/3PP1B1/3R2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1040);
    }

    #[test]
    fn gentest_3122() {
        let board = Board::from_fen("1nq3nr/3k3p/bp2p1pb/r1p2p2/P1p1N1P1/BQ3P1P/3PPKB1/5RNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1130);
    }

    #[test]
    fn gentest_3123() {
        let board = Board::from_fen("1nq3nr/3k3p/bp2p1p1/r1B5/P1p1pbP1/1Q3P1P/3PPKB1/5RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1273);
    }

    #[test]
    fn gentest_3124() {
        let board = Board::from_fen("1nq3nr/3k3p/bp2p1p1/r1B5/P3QbP1/2p2P1P/3PPKB1/5RNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1327);
    }

    #[test]
    fn gentest_3125() {
        let board = Board::from_fen("1nq3nr/3k3p/1p2p1p1/r2b4/PB2QbP1/2p2P1P/3PPKB1/5RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1387);
    }

    #[test]
    fn gentest_3126() {
        let board = Board::from_fen("1nq3nr/3k3p/1p2p1p1/r2b4/PB3bP1/2Q2P1P/3pPKB1/5RNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1518);
    }

    #[test]
    fn gentest_3127() {
        let board = Board::from_fen("rnq2Bnr/3k3p/1p2p1p1/8/P4bP1/2Q2b1P/3pPKB1/5RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1708);
    }

    #[test]
    fn gentest_3128() {
        let board = Board::from_fen("rnq2Bnr/3k3p/1p2p1p1/8/P4bP1/2Q2b1P/4PKB1/3r1RNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 2043);
    }

    #[test]
    fn gentest_3129() {
        let board = Board::from_fen("rnq3nr/3k2Bp/1p2p1p1/8/P5P1/2Q4P/3bPKb1/3r1RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1574);
    }

    #[test]
    fn gentest_3130() {
        let board = Board::from_fen("rnq4r/3kn2p/1p2p1p1/8/P2B2P1/7P/3bPKb1/2Qr1RNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 55);
        assert_eq!(perft(&board, 2, &PRECOMP), 1644);
    }

    #[test]
    fn gentest_3131() {
        let board = Board::from_fen("rn2k2r/4n2p/1p2p1p1/8/P2B2P1/2q4P/3bPKb1/3r1RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 1052);
    }

    #[test]
    fn gentest_3132() {
        let board = Board::from_fen("rn2k2r/4n2p/1p2p1p1/8/P2q2P1/4P2P/3b1KbR/3r1RN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 61);
        assert_eq!(perft(&board, 2, &PRECOMP), 706);
    }

    #[test]
    fn gentest_3133() {
        let board = Board::from_fen("rn1qk1r1/4n2p/1p2p1p1/8/P5P1/4P2P/3b1KbR/3rR1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 636);
        assert_eq!(perft(&board, 3, &PRECOMP), 8926);
    }

    #[test]
    fn gentest_3134() {
        let board = Board::from_fen("rn1qk1r1/4n2p/1p2p1p1/8/P3P1P1/7P/3bRKbR/1r4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 609);
    }

    #[test]
    fn gentest_3135() {
        let board = Board::from_fen("r2qk1r1/4n2p/1pn1p3/6p1/P3P1P1/7P/3b1KbR/1r2R1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 863);
    }

    #[test]
    fn gentest_3136() {
        let board = Board::from_fen("r3k1r1/4n2p/1pn1p3/6p1/P3P1P1/3q3P/3R1KbR/1r4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 65);
        assert_eq!(perft(&board, 2, &PRECOMP), 876);
    }

    #[test]
    fn gentest_3137() {
        let board = Board::from_fen("r3k1r1/7p/1pn1p3/5np1/P3P1P1/5N1P/3R1KbR/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1213);
    }

    #[test]
    fn gentest_3138() {
        let board = Board::from_fen("r2nk1r1/7p/1p2p3/5Pp1/P5P1/5N1P/3RK1bR/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 835);
    }

    #[test]
    fn gentest_3139() {
        let board = Board::from_fen("r2nkr2/7p/1p2p3/5Pp1/P5P1/5b1P/1R2K2R/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 186);
        assert_eq!(perft(&board, 3, &PRECOMP), 4024);
    }

    #[test]
    fn gentest_3140() {
        let board = Board::from_fen("r2n1r2/4k2p/1p2p3/5Pp1/P5P1/5b1P/1R1K2R1/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 779);
    }

    #[test]
    fn gentest_3141() {
        let board = Board::from_fen("r2n1r2/4k2p/1p6/5pp1/P5P1/7P/1R1Kb3/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 583);
        assert_eq!(perft(&board, 3, &PRECOMP), 8830);
    }

    #[test]
    fn gentest_3142() {
        let board = Board::from_fen("r4r2/4k2p/1p2n3/5pp1/P5P1/4K2P/4b3/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 721);
    }

    #[test]
    fn gentest_3143() {
        let board = Board::from_fen("7r/r3k2p/1p2n3/5pp1/P5P1/4K2P/4b3/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 564);
        assert_eq!(perft(&board, 3, &PRECOMP), 8971);
    }

    #[test]
    fn gentest_3144() {
        let board = Board::from_fen("7r/r3k2p/4n3/1p3pp1/P5P1/7P/4K2R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 479);
    }

    #[test]
    fn gentest_3145() {
        let board = Board::from_fen("r7/4k2p/4n3/1p3pp1/r5PP/8/4K2R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 627);
        assert_eq!(perft(&board, 3, &PRECOMP), 9656);
    }

    #[test]
    fn gentest_3146() {
        let board = Board::from_fen("r3k3/7p/4n3/1p3pp1/r5PP/5K1R/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 354);
    }

    #[test]
    fn gentest_3147() {
        let board = Board::from_fen("r3k3/7p/8/1pn2pp1/2r3PP/5K2/7R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 608);
        assert_eq!(perft(&board, 3, &PRECOMP), 8949);
    }

    #[test]
    fn gentest_3148() {
        let board = Board::from_fen("r3k3/7p/8/1pn2pp1/4r1PP/4RK2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 418);
    }

    #[test]
    fn gentest_3149() {
        let board = Board::from_fen("r7/3k3p/8/1p3pp1/4r1PP/3n1K2/4R3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 697);
        assert_eq!(perft(&board, 3, &PRECOMP), 9944);
    }

    #[test]
    fn gentest_3150() {
        let board = Board::from_fen("8/3k3p/8/rp3Pp1/4r2P/3n1K2/8/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 616);
    }

    #[test]
    fn gentest_3151() {
        let board = Board::from_fen("8/3k3p/8/rpn2Pp1/7P/5K2/4r3/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 506);
        assert_eq!(perft(&board, 3, &PRECOMP), 7304);
    }

    #[test]
    fn gentest_3152() {
        let board = Board::from_fen("8/3k4/5P1p/rpn3p1/7P/5K2/4rR2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 399);
    }

    #[test]
    fn gentest_3153() {
        let board = Board::from_fen("8/3k4/n4P1p/rp4p1/7P/8/2r2RK1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 357);
        assert_eq!(perft(&board, 3, &PRECOMP), 5169);
    }

    #[test]
    fn gentest_3154() {
        let board = Board::from_fen("8/3k4/n4P1p/1p4p1/7P/8/2r2RK1/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 408);
    }

    #[test]
    fn gentest_3155() {
        let board = Board::from_fen("8/8/n3kP1p/1p6/6pP/8/2rR2K1/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 226);
        assert_eq!(perft(&board, 3, &PRECOMP), 2593);
    }

    #[test]
    fn gentest_3156() {
        let board = Board::from_fen("8/8/n3kP1p/rp6/6pP/8/2r2R2/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 394);
    }

    #[test]
    fn gentest_3157() {
        let board = Board::from_fen("8/8/4kP1p/rpr5/1n4pP/8/1R6/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 538);
        assert_eq!(perft(&board, 3, &PRECOMP), 8357);
    }

    #[test]
    fn gentest_3158() {
        let board = Board::from_fen("8/8/4kP1p/rpr5/6pP/8/2n5/6KR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 249);
        assert_eq!(perft(&board, 3, &PRECOMP), 8316);
    }

    #[test]
    fn gentest_3159() {
        let board = Board::from_fen("8/8/5k1p/rp4r1/6pP/8/2n2K2/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 469);
        assert_eq!(perft(&board, 3, &PRECOMP), 6640);
    }

    #[test]
    fn gentest_3160() {
        let board = Board::from_fen("6r1/8/5k1p/rp6/6pP/8/2n1K2R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 322);
        assert_eq!(perft(&board, 3, &PRECOMP), 9879);
    }

    #[test]
    fn gentest_3161() {
        let board = Board::from_fen("3r4/8/4k2p/rp6/6pP/7R/2n1K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 417);
        assert_eq!(perft(&board, 3, &PRECOMP), 5688);
    }

    #[test]
    fn gentest_3162() {
        let board = Board::from_fen("8/8/4k2p/rp5P/3r2p1/2R5/2n1K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 500);
    }

    #[test]
    fn gentest_3163() {
        let board = Board::from_fen("8/8/4k2p/rp1r3P/6p1/n1R1K3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 360);
        assert_eq!(perft(&board, 3, &PRECOMP), 5236);
    }

    #[test]
    fn gentest_3164() {
        let board = Board::from_fen("5R2/8/4k2p/rp5r/6p1/n3K3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 402);
        assert_eq!(perft(&board, 3, &PRECOMP), 9453);
    }

    #[test]
    fn gentest_3165() {
        let board = Board::from_fen("7R/4k3/7p/1p5r/r5p1/n3K3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 318);
        assert_eq!(perft(&board, 3, &PRECOMP), 4348);
    }

    #[test]
    fn gentest_3166() {
        let board = Board::from_fen("8/4k3/7R/1p4r1/r5p1/n2K4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 451);
    }

    #[test]
    fn gentest_3167() {
        let board = Board::from_fen("8/4k3/8/1p4r1/2n3pR/3K4/8/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 482);
        assert_eq!(perft(&board, 3, &PRECOMP), 6486);
    }

    #[test]
    fn gentest_3168() {
        let board = Board::from_fen("8/8/3k4/1p4r1/2nK2p1/7R/8/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 572);
    }

    #[test]
    fn gentest_3169() {
        let board = Board::from_fen("8/8/3k2r1/1p6/r1nK2p1/5R2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 455);
        assert_eq!(perft(&board, 3, &PRECOMP), 5524);
    }

    #[test]
    fn gentest_3170() {
        let board = Board::from_fen("8/8/3k2r1/1p6/2nK2p1/5R2/r7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 565);
    }

    #[test]
    fn gentest_3171() {
        let board = Board::from_fen("5R2/8/3k2r1/1p6/2nK2p1/8/6r1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 439);
        assert_eq!(perft(&board, 3, &PRECOMP), 6636);
    }

    #[test]
    fn gentest_3172() {
        let board = Board::from_fen("R7/8/3k4/1p4r1/2n3p1/2K5/6r1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 552);
    }

    #[test]
    fn gentest_3173() {
        let board = Board::from_fen("8/8/1n1k4/Rp4r1/6p1/2K5/r7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 364);
        assert_eq!(perft(&board, 3, &PRECOMP), 4337);
    }

    #[test]
    fn gentest_3174() {
        let board = Board::from_fen("8/R7/1n1k4/1p4r1/6p1/1K6/6r1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 469);
    }

    #[test]
    fn gentest_3175() {
        let board = Board::from_fen("R7/8/8/1pkn2r1/6p1/1K6/6r1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 405);
        assert_eq!(perft(&board, 3, &PRECOMP), 4948);
    }

    #[test]
    fn gentest_3176() {
        let board = Board::from_fen("8/8/8/1pkn2r1/6p1/1K6/8/4R1r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 392);
    }

    #[test]
    fn gentest_3177() {
        let board = Board::from_fen("6r1/8/8/1p1n4/3k2p1/1K6/8/2R3r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 477);
        assert_eq!(perft(&board, 3, &PRECOMP), 6935);
    }

    #[test]
    fn gentest_3178() {
        let board = Board::from_fen("8/6r1/8/1p1n4/3k2p1/8/8/K1R3r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 242);
        assert_eq!(perft(&board, 3, &PRECOMP), 6852);
    }

    #[test]
    fn gentest_3179() {
        let board = Board::from_fen("8/6r1/8/1p6/4k1p1/4n3/8/K4Rr1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 227);
        assert_eq!(perft(&board, 3, &PRECOMP), 2290);
    }

    #[test]
    fn gentest_3180() {
        let board = Board::from_fen("8/r7/8/1p6/4k1p1/4n3/8/1K4R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 303);
        assert_eq!(perft(&board, 3, &PRECOMP), 7540);
    }

    #[test]
    fn gentest_3181() {
        let board = Board::from_fen("8/r7/8/1p6/4k3/6p1/6n1/1K1R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 328);
        assert_eq!(perft(&board, 3, &PRECOMP), 4916);
    }

    #[test]
    fn gentest_3182() {
        let board = Board::from_fen("8/7r/8/1p6/4k3/6p1/1K4n1/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 506);
    }

    #[test]
    fn gentest_3183() {
        let board = Board::from_fen("8/7r/8/1pk5/8/6p1/6n1/1K3R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 388);
        assert_eq!(perft(&board, 3, &PRECOMP), 6514);
    }

    #[test]
    fn gentest_3184() {
        let board = Board::from_fen("8/8/8/1pk5/8/4R1p1/6nr/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 303);
        assert_eq!(perft(&board, 3, &PRECOMP), 5837);
    }

    #[test]
    fn gentest_3185() {
        let board = Board::from_fen("7r/8/8/1pk5/8/4n1p1/8/K7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 93);
        assert_eq!(perft(&board, 3, &PRECOMP), 469);
    }

    #[test]
    fn gentest_3186() {
        let board = Board::from_fen("8/8/8/1pk5/8/4n1pr/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 97);
        assert_eq!(perft(&board, 3, &PRECOMP), 2383);
    }

    #[test]
    fn gentest_3187() {
        let board = Board::from_fen("8/8/1k6/1p5r/8/4n1p1/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 642);
    }

    #[test]
    fn gentest_3188() {
        let board = Board::from_fen("8/8/1k6/1p6/8/K3n1p1/7r/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 78);
        assert_eq!(perft(&board, 3, &PRECOMP), 2121);
        assert_eq!(perft(&board, 4, &PRECOMP), 8544);
    }

    #[test]
    fn gentest_3189() {
        let board = Board::from_fen("8/8/1k6/1p6/1K6/4n1p1/5r2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 93);
        assert_eq!(perft(&board, 3, &PRECOMP), 300);
        assert_eq!(perft(&board, 4, &PRECOMP), 8304);
    }

    #[test]
    fn gentest_3190() {
        let board = Board::from_fen("8/8/1k6/1p6/8/K3n1p1/4r3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 51);
        assert_eq!(perft(&board, 3, &PRECOMP), 1287);
        assert_eq!(perft(&board, 4, &PRECOMP), 4210);
    }

    #[test]
    fn gentest_3191() {
        let board = Board::from_fen("8/8/1k6/3n4/1K6/6p1/4r3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 116);
        assert_eq!(perft(&board, 3, &PRECOMP), 375);
    }

    #[test]
    fn gentest_3192() {
        let board = Board::from_fen("8/8/1k6/8/1n6/1K4p1/4r3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 130);
        assert_eq!(perft(&board, 3, &PRECOMP), 3352);
    }

    #[test]
    fn gentest_3193() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3194() {
        let board = Board::from_fen("rnbqkbnr/pp1ppppp/8/2p5/2P5/7P/PP1PPPP1/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 420);
        assert_eq!(perft(&board, 3, &PRECOMP), 9998);
    }

    #[test]
    fn gentest_3195() {
        let board = Board::from_fen("r1bqkbnr/pp2pppp/2n5/2pp4/2P5/P6P/1P1PPPP1/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 656);
    }

    #[test]
    fn gentest_3196() {
        let board = Board::from_fen("r1bqkbnr/pp2pppp/2n5/2p5/2PpP3/PQ5P/1P1P1PP1/RNB1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 952);
    }

    #[test]
    fn gentest_3197() {
        let board = Board::from_fen("1r1qkbnr/pp2pppp/1Qn1b3/2p5/2PpP3/P6P/1P1P1PP1/RNB1KBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 880);
    }

    #[test]
    fn gentest_3198() {
        let board = Board::from_fen("1r1qkbnr/1p2pppp/1pn1b3/2p5/2PpP3/P2P2PP/1P3P2/RNB1KBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 678);
    }

    #[test]
    fn gentest_3199() {
        let board = Board::from_fen("1r1qkbnr/1p1bpppp/1pn5/2p5/2PpP3/P2P2PP/1P1N1P2/R1B1KBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 479);
    }

    #[test]
    fn gentest_3200() {
        let board = Board::from_fen("1r1qkbnr/1p1bppp1/1pn5/2p4p/2PpP3/PN1P1PPP/1P6/R1B1KBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 604);
    }

    #[test]
    fn gentest_3201() {
        let board = Board::from_fen("1rbqkb1r/1p2ppp1/1pn2n2/2p4p/2PpP3/PN1P1PPP/1P2K3/R1B2BNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 663);
    }

    #[test]
    fn gentest_3202() {
        let board = Board::from_fen("1rb1kb1r/1p1qppp1/1pn2n2/2p1P2p/2Pp3P/PN1P1PP1/1P2K3/R1B2BNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 668);
    }

    #[test]
    fn gentest_3203() {
        let board = Board::from_fen("1rb1k2r/1p1qppb1/1pn1Pnp1/2p4p/2Pp3P/PN1P1PP1/1P2K3/R1B2BNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 658);
    }

    #[test]
    fn gentest_3204() {
        let board = Board::from_fen("1rb2rk1/1p1qppb1/1pn1Pnp1/2p4p/2Pp3P/PN1PBPP1/1P6/R2K1BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 852);
    }

    #[test]
    fn gentest_3205() {
        let board = Board::from_fen("1rb2rk1/np2ppb1/1p1qPnp1/2p4p/2Pp3P/PN1PBPP1/1P2N3/R2K1B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 992);
    }

    #[test]
    fn gentest_3206() {
        let board = Board::from_fen("1rb2rk1/np1qppb1/1p2Pnp1/2p4p/2Pp1N1P/P2PBPP1/1P1N4/R2K1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 808);
    }

    #[test]
    fn gentest_3207() {
        let board = Board::from_fen("1rb2rk1/np1qppb1/1p3np1/2p4p/2Pp1N1P/P2PBPP1/1P1NB3/R2K3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 896);
    }

    #[test]
    fn gentest_3208() {
        let board = Board::from_fen("1rbq1rk1/np2ppb1/1p3np1/2p4p/P1Pp1N1P/3PBPP1/RP1NB3/3K3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 819);
    }

    #[test]
    fn gentest_3209() {
        let board = Board::from_fen("1r1q1rk1/np1bpp2/1p3npb/2p4p/P1PB1N1P/3P1PP1/RP1NB3/3K3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1084);
    }

    #[test]
    fn gentest_3210() {
        let board = Board::from_fen("1r1q1rk1/np2pp2/1p3npb/2p2b1p/P1PB1N1P/3P1PP1/1P1NB3/2RK3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1227);
    }

    #[test]
    fn gentest_3211() {
        let board = Board::from_fen("1r3rk1/npq1ppb1/1p3np1/2p2b1p/P1PB1N1P/3P1PP1/1P1NB3/2RKR3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1165);
    }

    #[test]
    fn gentest_3212() {
        let board = Board::from_fen("1r3rk1/np2ppb1/1p3np1/2p2b1p/PPPB1q1P/3P1PP1/3NB3/1R1KR3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1212);
    }

    #[test]
    fn gentest_3213() {
        let board = Board::from_fen("1r3rk1/np2ppb1/1p3np1/2p2b1p/PPq1N2P/3P1PP1/4B3/1R1KR3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 981);
    }

    #[test]
    fn gentest_3214() {
        let board = Board::from_fen("1rN2rk1/np2ppb1/1p3np1/1qp2b1p/PP5P/3P1PP1/4B3/1R1KR3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 743);
    }

    #[test]
    fn gentest_3215() {
        let board = Board::from_fen("1r3rk1/np2p1b1/1p1N1pp1/1qpn1b1p/PP5P/3P1PP1/4B3/1R1KR3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1004);
    }

    #[test]
    fn gentest_3216() {
        let board = Board::from_fen("1r2Nrk1/np2p1b1/1p3pp1/1qpn3p/PP5P/1R1P1PPb/4B3/3KR3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 762);
    }

    #[test]
    fn gentest_3217() {
        let board = Board::from_fen("1r2rbk1/np2p3/1p3pp1/1qpn3p/PP5P/3P1PPb/1R2B3/3KR3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 697);
    }

    #[test]
    fn gentest_3218() {
        let board = Board::from_fen("1r2rb2/np2p1k1/1p3pp1/Pqpn3p/1P5P/3P1PPb/1R2B3/2K1R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 793);
    }

    #[test]
    fn gentest_3219() {
        let board = Board::from_fen("1r2rbk1/np2p3/1p3pp1/Pqp4p/1P5P/3PnPPb/1R2B3/2K2R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 818);
    }

    #[test]
    fn gentest_3220() {
        let board = Board::from_fen("1r2rbk1/np2p3/1pq2pp1/P1p4p/1P3P1P/3Pn1Pb/1R1KB3/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1270);
    }

    #[test]
    fn gentest_3221() {
        let board = Board::from_fen("1r2rbk1/np2p3/1P3pp1/2p4p/1P3P1P/3Pn1Pb/1R1KB1q1/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 970);
    }

    #[test]
    fn gentest_3222() {
        let board = Board::from_fen("1r2rbk1/np2p3/1P3pp1/2p4p/1P3PnP/3P2Pb/1R1KB1q1/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 976);
    }

    #[test]
    fn gentest_3223() {
        let board = Board::from_fen("1r2rbk1/np2p3/1P3ppn/2p4p/RP3P1P/3P2Pb/1R1KB3/5q2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 936);
    }

    #[test]
    fn gentest_3224() {
        let board = Board::from_fen("1r1r1bk1/np2p3/1P3ppn/1Pp4p/R4PPP/3P3b/1R1KB3/5q2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 896);
    }

    #[test]
    fn gentest_3225() {
        let board = Board::from_fen("1r1r1bk1/np2p3/1P3ppn/1Pp4p/R4P1P/3P1b2/1R1K4/5q2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 941);
    }

    #[test]
    fn gentest_3226() {
        let board = Board::from_fen("1r1r1bk1/1p2p3/1Pn2ppn/1Pp4p/R2P1P1P/5b2/R2K4/5q2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 694);
    }

    #[test]
    fn gentest_3227() {
        let board = Board::from_fen("1r1r1bk1/1p2p3/1Pn2ppn/1Pp4p/R2P1P1P/R7/3K4/q2b4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 832);
    }

    #[test]
    fn gentest_3228() {
        let board = Board::from_fen("1r1r1bk1/1p2p3/1P3ppn/1Pp4p/1n1P1P1P/1R6/3K4/R2b4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 861);
    }

    #[test]
    fn gentest_3229() {
        let board = Board::from_fen("1r1r1b2/1p2p2k/1P3ppn/1Pp4p/1n1P1P1P/5b2/3K4/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 718);
    }

    #[test]
    fn gentest_3230() {
        let board = Board::from_fen("1r1r1bn1/1p2p2k/RP3pp1/1Pp4p/1n1P1P1P/5b2/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 452);
    }

    #[test]
    fn gentest_3231() {
        let board = Board::from_fen("1r1r1bn1/1p2p2k/1P3pp1/1Ppb3p/1n1P1P1P/8/R2K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 560);
        assert_eq!(perft(&board, 3, &PRECOMP), 9383);
    }

    #[test]
    fn gentest_3232() {
        let board = Board::from_fen("1rr2bn1/1p2p2k/1P3pp1/1PPb3p/1n3P1P/8/R7/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 585);
    }

    #[test]
    fn gentest_3233() {
        let board = Board::from_fen("1rr3n1/1p5k/1P2ppp1/1Pbb3p/1n3P1P/8/R3K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 527);
        assert_eq!(perft(&board, 3, &PRECOMP), 7441);
    }

    #[test]
    fn gentest_3234() {
        let board = Board::from_fen("1rr3n1/1p5k/1P2p1p1/1Pbb1p1p/1n3P1P/8/5R2/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 413);
    }

    #[test]
    fn gentest_3235() {
        let board = Board::from_fen("1rr3n1/1p5k/1P2p1p1/1Pb2p1p/1n3P1P/8/1R6/3K3b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 452);
        assert_eq!(perft(&board, 3, &PRECOMP), 5642);
    }

    #[test]
    fn gentest_3236() {
        let board = Board::from_fen("1rr3n1/1p5k/1Pn1p1p1/1Pb2p1p/5P1P/1R6/2K5/7b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 561);
    }

    #[test]
    fn gentest_3237() {
        let board = Board::from_fen("r1r3n1/1p5k/1PP1p1p1/5p1p/5P1P/1R6/2K2b2/7b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 673);
    }

    #[test]
    fn gentest_3238() {
        let board = Board::from_fen("r1r3n1/1p5k/1PP1p1p1/5p1p/R4P1P/6b1/2K5/7b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 556);
    }

    #[test]
    fn gentest_3239() {
        let board = Board::from_fen("r1r4k/1pP1n3/1P2p1p1/5p1p/R4P1P/6b1/2K5/7b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 558);
        assert_eq!(perft(&board, 3, &PRECOMP), 9507);
    }

    #[test]
    fn gentest_3240() {
        let board = Board::from_fen("r6k/1pr1n3/1P2p1p1/5p1p/5P1P/6b1/R2K4/7b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 468);
    }

    #[test]
    fn gentest_3241() {
        let board = Board::from_fen("7k/1pr1n3/rP2p1p1/5p1p/5P1P/6b1/R7/3K3b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 496);
        assert_eq!(perft(&board, 3, &PRECOMP), 5985);
    }

    #[test]
    fn gentest_3242() {
        let board = Board::from_fen("7k/1pr1n3/rP2p1p1/5p1p/R4P1P/5bb1/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 391);
    }

    #[test]
    fn gentest_3243() {
        let board = Board::from_fen("7k/rpr1n3/1P2p1p1/5p1p/5b1P/5b2/R2K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 80);
        assert_eq!(perft(&board, 3, &PRECOMP), 1156);
    }

    #[test]
    fn gentest_3244() {
        let board = Board::from_fen("7k/rpr5/1P2p1p1/R2n1p1p/5b1P/5b2/8/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 495);
    }

    #[test]
    fn gentest_3245() {
        let board = Board::from_fen("7k/rp6/1P2p1p1/2Rn1p1p/5b1P/2r5/6b1/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 484);
        assert_eq!(perft(&board, 3, &PRECOMP), 5919);
    }

    #[test]
    fn gentest_3246() {
        let board = Board::from_fen("8/rp4k1/1PR1p1p1/3n1p1p/5b1P/2r5/4K1b1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 521);
    }

    #[test]
    fn gentest_3247() {
        let board = Board::from_fen("8/rp4k1/1P2pnp1/5p1p/2R4P/2r5/3bK1b1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 654);
        assert_eq!(perft(&board, 3, &PRECOMP), 8966);
    }

    #[test]
    fn gentest_3248() {
        let board = Board::from_fen("7k/Pp6/4pnp1/5p1p/5R1P/2r5/3bK1b1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 606);
    }

    #[test]
    fn gentest_3249() {
        let board = Board::from_fen("7k/P7/4pnp1/1p1b1p1p/7P/2r5/3bK3/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 688);
    }

    #[test]
    fn gentest_3250() {
        let board = Board::from_fen("8/P5k1/4pnp1/1p1b1R1p/7P/2r5/3b4/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 663);
    }

    #[test]
    fn gentest_3251() {
        let board = Board::from_fen("8/P5k1/4pnp1/1p1R3p/7P/6r1/8/4bK2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 565);
    }

    #[test]
    fn gentest_3252() {
        let board = Board::from_fen("8/P2n2k1/4p1p1/1p5p/5R1P/6r1/8/4bK2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 505);
    }

    #[test]
    fn gentest_3253() {
        let board = Board::from_fen("8/P2n2k1/4p1p1/7p/1p5P/7r/5R2/4bK2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 557);
    }

    #[test]
    fn gentest_3254() {
        let board = Board::from_fen("8/3n2k1/4p1p1/7p/1p5P/2b4r/5R2/5K1B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 578);
    }

    #[test]
    fn gentest_3255() {
        let board = Board::from_fen("5n2/7k/4p1p1/7p/1p5P/2b4r/2R5/5K1B w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 468);
        assert_eq!(perft(&board, 3, &PRECOMP), 9214);
    }

    #[test]
    fn gentest_3256() {
        let board = Board::from_fen("5n2/7k/4p1p1/7p/1p5P/7r/1R6/4bK1B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 433);
    }

    #[test]
    fn gentest_3257() {
        let board = Board::from_fen("5n2/7k/4p1p1/7p/1b5P/3r4/8/5K1B w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 314);
        assert_eq!(perft(&board, 3, &PRECOMP), 3492);
    }

    #[test]
    fn gentest_3258() {
        let board = Board::from_fen("5n2/7k/6p1/4p2p/Bb5P/3r4/8/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 310);
        assert_eq!(perft(&board, 3, &PRECOMP), 8729);
    }

    #[test]
    fn gentest_3259() {
        let board = Board::from_fen("4Bn2/7k/6p1/b3p2p/7P/3r4/8/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 265);
        assert_eq!(perft(&board, 3, &PRECOMP), 2830);
    }

    #[test]
    fn gentest_3260() {
        let board = Board::from_fen("5n2/7k/2B3p1/b3p2p/7P/8/4K3/3r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 399);
    }

    #[test]
    fn gentest_3261() {
        let board = Board::from_fen("5n1k/8/6p1/4p2p/B6P/8/4K3/3rb3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 253);
        assert_eq!(perft(&board, 3, &PRECOMP), 2679);
    }

    #[test]
    fn gentest_3262() {
        let board = Board::from_fen("5n1k/8/6p1/4p2p/B6P/4K3/8/2r1b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 255);
        assert_eq!(perft(&board, 3, &PRECOMP), 6578);
    }

    #[test]
    fn gentest_3263() {
        let board = Board::from_fen("5n1k/8/2B3p1/4p2p/4r2P/4K3/8/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 74);
        assert_eq!(perft(&board, 3, &PRECOMP), 841);
    }

    #[test]
    fn gentest_3264() {
        let board = Board::from_fen("5n1k/8/2B3p1/4p2p/4r2P/8/3b1K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 329);
        assert_eq!(perft(&board, 3, &PRECOMP), 8430);
    }

    #[test]
    fn gentest_3265() {
        let board = Board::from_fen("5n1k/8/2B3p1/4p1bp/7P/8/6K1/4r3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 380);
        assert_eq!(perft(&board, 3, &PRECOMP), 4844);
    }

    #[test]
    fn gentest_3266() {
        let board = Board::from_fen("5n1k/8/6p1/4p2p/6BP/4b3/6K1/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 337);
        assert_eq!(perft(&board, 3, &PRECOMP), 9285);
    }

    #[test]
    fn gentest_3267() {
        let board = Board::from_fen("5n1k/8/6p1/4p2p/5bBP/5K2/8/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 284);
        assert_eq!(perft(&board, 3, &PRECOMP), 3076);
    }

    #[test]
    fn gentest_3268() {
        let board = Board::from_fen("5n1k/8/4B1p1/4p2p/5b1P/5K2/8/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 287);
        assert_eq!(perft(&board, 3, &PRECOMP), 7074);
    }

    #[test]
    fn gentest_3269() {
        let board = Board::from_fen("5n1k/8/4B1p1/4p2p/5b1P/5r2/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 106);
        assert_eq!(perft(&board, 3, &PRECOMP), 1317);
    }

    #[test]
    fn gentest_3270() {
        let board = Board::from_fen("5n1k/3B4/6p1/4p2p/7P/5Kb1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 158);
        assert_eq!(perft(&board, 3, &PRECOMP), 2230);
    }

    #[test]
    fn gentest_3271() {
        let board = Board::from_fen("5n1k/8/2B3p1/4p2p/7P/4bK2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 233);
        assert_eq!(perft(&board, 3, &PRECOMP), 2960);
    }

    #[test]
    fn gentest_3272() {
        let board = Board::from_fen("2B2n1k/8/6p1/4p2p/7P/5K2/8/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 155);
        assert_eq!(perft(&board, 3, &PRECOMP), 2481);
    }

    #[test]
    fn gentest_3273() {
        let board = Board::from_fen("5n1k/3B4/6p1/4p2p/7P/5K2/8/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 195);
        assert_eq!(perft(&board, 3, &PRECOMP), 2376);
    }

    #[test]
    fn gentest_3274() {
        let board = Board::from_fen("5n1k/8/2B3p1/4p2p/1b5P/8/6K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 266);
        assert_eq!(perft(&board, 3, &PRECOMP), 4386);
    }

    #[test]
    fn gentest_3275() {
        let board = Board::from_fen("5n1k/8/2B3p1/4p2p/7P/b7/7K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 222);
        assert_eq!(perft(&board, 3, &PRECOMP), 3090);
    }

    #[test]
    fn gentest_3276() {
        let board = Board::from_fen("B4n1k/8/3b2p1/4p2p/7P/8/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 2443);
    }

    #[test]
    fn gentest_3277() {
        let board = Board::from_fen("5n1k/1B6/3b2p1/4p2p/7P/8/7K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 194);
        assert_eq!(perft(&board, 3, &PRECOMP), 2542);
    }

    #[test]
    fn gentest_3278() {
        let board = Board::from_fen("5n1k/8/6p1/4p2p/7P/b7/7K/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 168);
        assert_eq!(perft(&board, 3, &PRECOMP), 2600);
    }

    #[test]
    fn gentest_3279() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3280() {
        let board = Board::from_fen("rnbqkbnr/pppp1ppp/8/4p3/6P1/7B/PPPPPP1P/RNBQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 563);
    }

    #[test]
    fn gentest_3281() {
        let board = Board::from_fen("rnbqkb1r/p1pp1ppp/1p3n2/4p3/P5P1/7B/1PPPPP1P/RNBQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
    }

    #[test]
    fn gentest_3282() {
        let board = Board::from_fen("r1bqkb1r/p1pp1ppp/1pn2n2/4p3/P2P2P1/7B/RPP1PP1P/1NBQK1NR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 897);
    }

    #[test]
    fn gentest_3283() {
        let board = Board::from_fen("r1bqkb1r/p1pp1ppp/1p3n2/6B1/Pn1p2P1/7B/RPP1PP1P/1N1QK1NR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 905);
    }

    #[test]
    fn gentest_3284() {
        let board = Board::from_fen("r1bqkb1r/p2p1ppp/1p3n2/2p5/Pn1p1BP1/7B/RPPKPP1P/1N1Q2NR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 848);
    }

    #[test]
    fn gentest_3285() {
        let board = Board::from_fen("r1b1kb1r/p1qp1ppp/5n2/1pp5/Pn1p1BP1/8/RPPKPP1P/1N1Q1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1161);
    }

    #[test]
    fn gentest_3286() {
        let board = Board::from_fen("r1b1kb1r/p1qp1ppp/5n2/1pp3P1/P2p1B2/8/RPK1PP1P/1N1Q1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1136);
    }

    #[test]
    fn gentest_3287() {
        let board = Board::from_fen("r1b1kb1r/p4ppp/3p1n2/1pp1q1P1/P2p4/8/RPK1PP1P/1NBQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1229);
    }

    #[test]
    fn gentest_3288() {
        let board = Board::from_fen("r1b1kb1r/p4ppp/3p1n2/1pp3P1/P2p1q2/R7/1PK1P2P/1NBQ1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1257);
    }

    #[test]
    fn gentest_3289() {
        let board = Board::from_fen("r3kb1r/p4ppp/3p1n2/1pp3P1/P2pP3/R6b/1PK4P/1NBQ1qNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1436);
    }

    #[test]
    fn gentest_3290() {
        let board = Board::from_fen("3rkb1r/p4ppp/3p1n2/1pp3PQ/P2pP3/R6b/1PKN3P/2B2qNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1284);
    }

    #[test]
    fn gentest_3291() {
        let board = Board::from_fen("3rkb1r/p4p1Q/3p1np1/1pp3P1/P2pP3/R6b/1PKN2qP/2B3NR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1249);
    }

    #[test]
    fn gentest_3292() {
        let board = Board::from_fen("3rkb1r/p4p1Q/3p1np1/1pp3P1/P2pP3/5R1b/1PK4P/1NB3qR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1424);
    }

    #[test]
    fn gentest_3293() {
        let board = Board::from_fen("3rk2r/p4p1Q/3p1npb/1pp3P1/P2pP3/4qR1b/1PKN3P/2B4R w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1293);
    }

    #[test]
    fn gentest_3294() {
        let board = Board::from_fen("3rk2r/p4pQ1/3p1npb/1pp3P1/P2pN3/5R1b/1PK4P/2B4R b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1392);
    }

    #[test]
    fn gentest_3295() {
        let board = Board::from_fen("3rk2r/p4pQ1/3p2pb/1pp3P1/P2p4/2n2R1b/1PKN3P/2B4R w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1049);
    }

    #[test]
    fn gentest_3296() {
        let board = Board::from_fen("3r3r/p2k1pQ1/3p2pb/1pp3P1/P2p4/2nR3b/1PK4P/2B2N1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1185);
    }

    #[test]
    fn gentest_3297() {
        let board = Board::from_fen("r1k4r/p4pQ1/3p2pb/1pp3P1/P2p4/2nR2Nb/1PK4P/2B4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1128);
    }

    #[test]
    fn gentest_3298() {
        let board = Board::from_fen("r1k4r/p4pQ1/3p2pb/1pp2NP1/P2R4/7b/1PK4P/1nB4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1116);
    }

    #[test]
    fn gentest_3299() {
        let board = Board::from_fen("r1k4r/5pQ1/p2p3b/1pp2pP1/P2R4/7b/1PK4P/1nB2R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1060);
    }

    #[test]
    fn gentest_3300() {
        let board = Board::from_fen("r1k4r/5pQ1/p2p3b/Ppp2pP1/3R4/n6b/1P1K3P/2B2R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 834);
    }

    #[test]
    fn gentest_3301() {
        let board = Board::from_fen("3r3r/2k2p2/p2p3b/Ppp1QpP1/3R4/n6b/1P1K3P/2B2R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1246);
    }

    #[test]
    fn gentest_3302() {
        let board = Board::from_fen("2kr3r/5p2/p2p3b/Ppp1QpP1/3R4/n4R1b/1P2K2P/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1310);
    }

    #[test]
    fn gentest_3303() {
        let board = Board::from_fen("k2r3r/5p2/p2p3b/Ppp1QpP1/3R4/R6b/1P2K2P/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1216);
    }

    #[test]
    fn gentest_3304() {
        let board = Board::from_fen("k2r1b1r/5p2/p2p1Q2/Ppp2pP1/3R4/R2K3b/1P5P/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 756);
    }

    #[test]
    fn gentest_3305() {
        let board = Board::from_fen("k4b1r/5Q2/p2p4/Ppp2pP1/3R4/R2K3b/1P2r2P/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1067);
    }

    #[test]
    fn gentest_3306() {
        let board = Board::from_fen("1k3b1r/8/p2p2Q1/Ppp2pP1/1R6/R2K3b/1P2r2P/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 941);
    }

    #[test]
    fn gentest_3307() {
        let board = Board::from_fen("1k6/4b3/p2p2Qr/Ppp2pP1/4R3/R2K3b/1P2r2P/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1019);
    }

    #[test]
    fn gentest_3308() {
        let board = Board::from_fen("1k6/4b2r/p2p3Q/Ppp2pP1/R7/R2K3b/1P2r2P/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 836);
    }

    #[test]
    fn gentest_3309() {
        let board = Board::from_fen("1k6/4b2r/p2p3Q/Ppp2pP1/3R4/R2K3b/1P5r/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 847);
    }

    #[test]
    fn gentest_3310() {
        let board = Board::from_fen("8/2k1b2r/p2p3Q/Ppp2pP1/3R1B2/3K3b/1P5r/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 912);
    }

    #[test]
    fn gentest_3311() {
        let board = Board::from_fen("1k1b4/7r/p2p3Q/Ppp2pP1/3R1B2/3K3b/RP5r/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 955);
    }

    #[test]
    fn gentest_3312() {
        let board = Board::from_fen("1k6/2b4r/p3Q3/Ppp2pP1/3R1B2/3K3b/RP5r/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1081);
    }

    #[test]
    fn gentest_3313() {
        let board = Board::from_fen("1k3r2/2b5/p7/Ppp2pP1/3RQB2/3K3b/RP5r/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 871);
    }

    #[test]
    fn gentest_3314() {
        let board = Board::from_fen("1k1r4/2b5/p7/Ppp2pP1/3R1B2/3K3b/RP5r/6Q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 833);
    }

    #[test]
    fn gentest_3315() {
        let board = Board::from_fen("1k1r4/2b5/p7/PppR1pP1/5B2/3K3b/RP6/2r3Q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 938);
    }

    #[test]
    fn gentest_3316() {
        let board = Board::from_fen("2kr4/2b5/p7/PppR1pP1/5B2/3K3b/RP1Q4/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 769);
    }

    #[test]
    fn gentest_3317() {
        let board = Board::from_fen("2kr4/8/pb6/PppR1pP1/8/3KB3/RP1Q2b1/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 781);
    }

    #[test]
    fn gentest_3318() {
        let board = Board::from_fen("2kr4/8/pb6/PppR1pP1/8/R3B2b/1P1QK3/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 871);
    }

    #[test]
    fn gentest_3319() {
        let board = Board::from_fen("3r4/1k6/pb4P1/PppR1p2/8/R1r1B2b/1P1QK3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1109);
    }

    #[test]
    fn gentest_3320() {
        let board = Board::from_fen("2r5/1k6/pb4P1/PppR1p2/5B2/RPr4b/3QK3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 917);
    }

    #[test]
    fn gentest_3321() {
        let board = Board::from_fen("2r5/1kb5/p5P1/PppR1p2/2r2B2/RP5b/3Q4/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1166);
    }

    #[test]
    fn gentest_3322() {
        let board = Board::from_fen("6r1/1kb5/p2B2PQ/PppR1p2/2r5/RP5b/8/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1106);
    }

    #[test]
    fn gentest_3323() {
        let board = Board::from_fen("r7/1kb4Q/p2B2P1/PppR1p2/5r2/RP5b/8/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 851);
    }

    #[test]
    fn gentest_3324() {
        let board = Board::from_fen("r7/1kb4Q/p2B2P1/Ppp2p2/3Rr3/RP5b/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1005);
    }

    #[test]
    fn gentest_3325() {
        let board = Board::from_fen("rr6/1kb2Q2/p2B2P1/Ppp2p2/3R4/RP5b/3K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 709);
    }

    #[test]
    fn gentest_3326() {
        let board = Board::from_fen("1r6/rkb2Q2/p5P1/Ppp2p2/1P1R4/R6b/3K3B/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 882);
    }

    #[test]
    fn gentest_3327() {
        let board = Board::from_fen("kr6/r1Q5/p5P1/Pp3p2/1P1p4/R6b/3K3B/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 661);
    }

    #[test]
    fn gentest_3328() {
        let board = Board::from_fen("k7/rr6/pQ4P1/Pp3p2/1P1p4/7b/R2K3B/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 389);
        assert_eq!(perft(&board, 3, &PRECOMP), 5861);
    }

    #[test]
    fn gentest_3329() {
        let board = Board::from_fen("k7/2r4r/p5P1/PpQ2p2/1P1p4/7b/R2K3B/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 769);
    }

    #[test]
    fn gentest_3330() {
        let board = Board::from_fen("k7/6rr/p2B2P1/PpQ2p2/1P1p4/3K3b/R7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 593);
    }

    #[test]
    fn gentest_3331() {
        let board = Board::from_fen("k7/1r6/p2B2Pr/Pp3Q2/1P1p4/3K3b/R7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 809);
    }

    #[test]
    fn gentest_3332() {
        let board = Board::from_fen("k7/1r6/p1QB2r1/Pp6/1P1p4/3K3b/R7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 665);
    }

    #[test]
    fn gentest_3333() {
        let board = Board::from_fen("k7/1r6/p1QB4/Pp6/1P1p4/3K3b/3r4/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 27);
        assert_eq!(perft(&board, 3, &PRECOMP), 946);
    }

    #[test]
    fn gentest_3334() {
        let board = Board::from_fen("k7/1r6/pQ1B4/Pp6/1P6/3p3b/3K4/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 577);
        assert_eq!(perft(&board, 3, &PRECOMP), 8499);
    }

    #[test]
    fn gentest_3335() {
        let board = Board::from_fen("k7/4Br2/pQ2b3/Pp6/1P6/3p4/3K4/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 653);
    }

    #[test]
    fn gentest_3336() {
        let board = Board::from_fen("8/1k2Br2/p3b3/PpQ5/1P6/3p4/8/R1K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 642);
    }

    #[test]
    fn gentest_3337() {
        let board = Board::from_fen("2k5/4Br2/p7/PQ6/1Pb5/3p4/8/R1K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 428);
    }

    #[test]
    fn gentest_3338() {
        let board = Board::from_fen("2k5/4Br1Q/p3b3/P7/1P6/3p4/8/R1K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 601);
    }

    #[test]
    fn gentest_3339() {
        let board = Board::from_fen("2k5/4B1Q1/p3b3/P7/1r6/3p4/8/R1K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 744);
    }

    #[test]
    fn gentest_3340() {
        let board = Board::from_fen("2k5/4Bb2/p7/P7/1r6/3p4/8/QRK5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 621);
    }

    #[test]
    fn gentest_3341() {
        let board = Board::from_fen("2k5/5b2/p7/Pr4B1/8/3p4/8/QRK5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 585);
    }

    #[test]
    fn gentest_3342() {
        let board = Board::from_fen("2k1b3/2Q5/p7/Pr4B1/8/3p4/8/1RK5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 15);
        assert_eq!(perft(&board, 3, &PRECOMP), 325);
        assert_eq!(perft(&board, 4, &PRECOMP), 5397);
    }

    #[test]
    fn gentest_3343() {
        let board = Board::from_fen("4b3/1k6/p7/Pr4B1/8/3p4/8/1R1K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 293);
        assert_eq!(perft(&board, 3, &PRECOMP), 4818);
    }

    #[test]
    fn gentest_3344() {
        let board = Board::from_fen("4b3/1k6/p7/Pr6/1R6/4B3/3p4/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 256);
        assert_eq!(perft(&board, 3, &PRECOMP), 4798);
    }

    #[test]
    fn gentest_3345() {
        let board = Board::from_fen("k7/8/p1b5/Pr6/1R6/8/3p1B2/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 504);
    }

    #[test]
    fn gentest_3346() {
        let board = Board::from_fen("k7/8/p1b5/r7/2R5/8/3pKB2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 607);
    }

    #[test]
    fn gentest_3347() {
        let board = Board::from_fen("k7/8/p1b5/3r4/8/8/4KB2/2Rq4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 59);
        assert_eq!(perft(&board, 3, &PRECOMP), 887);
    }

    #[test]
    fn gentest_3348() {
        let board = Board::from_fen("k7/8/p1b5/8/8/8/4K3/3rB3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 246);
        assert_eq!(perft(&board, 3, &PRECOMP), 5930);
    }

    #[test]
    fn gentest_3349() {
        let board = Board::from_fen("k7/8/p1b5/4r3/8/8/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 333);
        assert_eq!(perft(&board, 4, &PRECOMP), 8658);
    }

    #[test]
    fn gentest_3350() {
        let board = Board::from_fen("k7/8/2b5/p3r3/8/8/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 87);
        assert_eq!(perft(&board, 3, &PRECOMP), 2213);
        assert_eq!(perft(&board, 4, &PRECOMP), 9521);
    }

    #[test]
    fn gentest_3351() {
        let board = Board::from_fen("4b3/1k6/8/p3r3/8/6K1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 224);
        assert_eq!(perft(&board, 3, &PRECOMP), 1093);
    }

    #[test]
    fn gentest_3352() {
        let board = Board::from_fen("8/1k6/8/p3r3/b7/6K1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 202);
        assert_eq!(perft(&board, 3, &PRECOMP), 5551);
    }

    #[test]
    fn gentest_3353() {
        let board = Board::from_fen("2k5/8/8/p3r3/8/1b5K/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 140);
        assert_eq!(perft(&board, 3, &PRECOMP), 774);
    }

    #[test]
    fn gentest_3354() {
        let board = Board::from_fen("2k5/8/8/p2br3/8/8/8/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 95);
        assert_eq!(perft(&board, 3, &PRECOMP), 2721);
        assert_eq!(perft(&board, 4, &PRECOMP), 9987);
    }

    #[test]
    fn gentest_3355() {
        let board = Board::from_fen("2k5/4rb2/8/p7/8/8/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 130);
        assert_eq!(perft(&board, 3, &PRECOMP), 737);
    }

    #[test]
    fn gentest_3356() {
        let board = Board::from_fen("8/1k2rb2/8/p7/8/8/8/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 85);
        assert_eq!(perft(&board, 3, &PRECOMP), 2367);
    }

    #[test]
    fn gentest_3357() {
        let board = Board::from_fen("8/4r3/k5b1/p7/8/8/8/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 140);
        assert_eq!(perft(&board, 3, &PRECOMP), 667);
    }

    #[test]
    fn gentest_3358() {
        let board = Board::from_fen("8/k3r3/6b1/p7/8/8/8/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 128);
        assert_eq!(perft(&board, 3, &PRECOMP), 3508);
    }

    #[test]
    fn gentest_3359() {
        let board = Board::from_fen("k3r3/8/6b1/p7/8/8/8/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 75);
        assert_eq!(perft(&board, 3, &PRECOMP), 432);
    }

    #[test]
    fn gentest_3360() {
        let board = Board::from_fen("4r3/1k6/6b1/p7/8/8/8/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 106);
        assert_eq!(perft(&board, 3, &PRECOMP), 3110);
    }

    #[test]
    fn gentest_3361() {
        let board = Board::from_fen("4r3/1k5b/8/p7/8/8/8/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 150);
        assert_eq!(perft(&board, 3, &PRECOMP), 711);
    }

    #[test]
    fn gentest_3362() {
        let board = Board::from_fen("8/1k5b/8/p7/8/7K/4r3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 2839);
    }

    #[test]
    fn gentest_3363() {
        let board = Board::from_fen("8/1k5b/8/p7/7K/8/2r5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 140);
        assert_eq!(perft(&board, 3, &PRECOMP), 688);
    }

    #[test]
    fn gentest_3364() {
        let board = Board::from_fen("2k5/7b/8/p7/8/6K1/2r5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 128);
        assert_eq!(perft(&board, 3, &PRECOMP), 3298);
    }

    #[test]
    fn gentest_3365() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3366() {
        let board = Board::from_fen("rnbqkbnr/p1pppppp/1p6/8/3P4/4B3/PPP1PPPP/RN1QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 567);
    }

    #[test]
    fn gentest_3367() {
        let board = Board::from_fen("rnbqkbnr/p1pp1pp1/1p5p/4p3/3P4/2N1B3/PPP1PPPP/R2QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 954);
    }

    #[test]
    fn gentest_3368() {
        let board = Board::from_fen("rnbqk1nr/p1pp1pp1/1p5p/4p3/1b1P2P1/2N5/PPPBPP1P/R2QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1010);
    }

    #[test]
    fn gentest_3369() {
        let board = Board::from_fen("rn1qk1nr/p1pp1pp1/bp5p/8/1b1p1PP1/2N5/PPPBP2P/R2QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 897);
    }

    #[test]
    fn gentest_3370() {
        let board = Board::from_fen("rn2k1nr/p1pp1pp1/bp5p/6q1/1b1p1PP1/2N1B3/PPP1P2P/2RQKBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 972);
    }

    #[test]
    fn gentest_3371() {
        let board = Board::from_fen("rnb1k1nr/p1ppbpp1/1p5p/6q1/1P1p1PP1/2N1B3/P1P1P2P/2RQKBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1004);
    }

    #[test]
    fn gentest_3372() {
        let board = Board::from_fen("rnb1k1nr/2ppbpp1/1p5p/p5q1/NP1p1PP1/3QB3/P1P1P2P/2R1KBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1405);
    }

    #[test]
    fn gentest_3373() {
        let board = Board::from_fen("rnb1k1nr/2ppbpp1/1p3q1p/pQ6/NP1p1PP1/4B3/P1P1P2P/2R1KBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1180);
    }

    #[test]
    fn gentest_3374() {
        let board = Board::from_fen("rnb1k1nr/2ppbpp1/1p5p/pQ3q2/NP1p1PP1/4B3/P1P1P2P/2R1KBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1445);
    }

    #[test]
    fn gentest_3375() {
        let board = Board::from_fen("rnb1k1nr/2pp2p1/1p3p1p/pQb2q2/NP1p1PP1/4B2P/P1P1P3/2R1KBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1098);
    }

    #[test]
    fn gentest_3376() {
        let board = Board::from_fen("rnb1k1nr/2pp2p1/1N3p1p/p1b5/1PQp1PP1/4B2P/P1q1P3/2R1KBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1392);
    }

    #[test]
    fn gentest_3377() {
        let board = Board::from_fen("1nb1k1nr/r1pp4/1N3ppp/p1b3P1/1PQp1P2/4B2P/P1q1P3/2R1KBNR w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1414);
    }

    #[test]
    fn gentest_3378() {
        let board = Board::from_fen("Nnb1k1nr/r1pp4/5pp1/p1b3p1/1P1p1P2/1Q2B2P/P1q1P3/2R1KBNR b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1313);
    }

    #[test]
    fn gentest_3379() {
        let board = Board::from_fen("Nnb3nr/r1ppk3/5pp1/pPb3p1/3p1P2/1Q2B2P/P2qP3/2R1KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 100);
        assert_eq!(perft(&board, 3, &PRECOMP), 3759);
    }

    #[test]
    fn gentest_3380() {
        let board = Board::from_fen("Nnb3nr/r1pp4/3k1pp1/pPb3p1/3p1P2/5Q1P/P2BP3/2R1KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 974);
    }

    #[test]
    fn gentest_3381() {
        let board = Board::from_fen("2b3n1/r1Np4/2nk1ppr/pPb3p1/3p1P2/5Q1P/P2BP3/2R1KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1051);
    }

    #[test]
    fn gentest_3382() {
        let board = Board::from_fen("2b3n1/r1Npk3/2n2ppr/pPb3p1/P2p1P2/2R2Q1P/3BP3/4KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1076);
    }

    #[test]
    fn gentest_3383() {
        let board = Board::from_fen("2b3n1/r1Npk2r/2n3p1/pPb2pp1/P2p1P2/2R3QP/3BP3/4KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1099);
    }

    #[test]
    fn gentest_3384() {
        let board = Board::from_fen("2b3n1/r2p3r/2nk2p1/pPbN1pp1/P2p1P2/6QP/2RBP3/4KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1220);
    }

    #[test]
    fn gentest_3385() {
        let board = Board::from_fen("2b5/r2pn2r/1bnk2p1/pP1N1pQ1/P2p1P2/7P/2RBP3/4KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 846);
    }

    #[test]
    fn gentest_3386() {
        let board = Board::from_fen("2b5/r2pn2r/1Nn1k1p1/pP3pQ1/P2p1P1P/8/2RBP3/4KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 883);
    }

    #[test]
    fn gentest_3387() {
        let board = Board::from_fen("2b5/1r2n2r/1Nn1k1p1/pP1p1p1Q/P2p1P1P/8/2RBP3/4KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 746);
    }

    #[test]
    fn gentest_3388() {
        let board = Board::from_fen("2b4Q/1r2n3/1N2k1p1/pP1p1p2/Pn1p1P1P/8/2RBP3/4KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 619);
    }

    #[test]
    fn gentest_3389() {
        let board = Board::from_fen("1rb4Q/4n3/1N2k1p1/pP1p1p2/Pn3P1P/3p4/3BP3/2R1KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 701);
    }

    #[test]
    fn gentest_3390() {
        let board = Board::from_fen("1rbQ2n1/8/1N2k1p1/pP1p1p2/Pn3P1P/3p3R/3BP3/2R1KBN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 697);
    }

    #[test]
    fn gentest_3391() {
        let board = Board::from_fen("1rbQ4/8/1Nn1k1pn/pP1p1p2/P4P1P/3p3R/3BP3/2RK1BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 659);
    }

    #[test]
    fn gentest_3392() {
        let board = Board::from_fen("1rb1Q3/5k2/1Nn3pn/pP1p1p2/P4P1P/3pR3/3BP3/2RK1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 90);
        assert_eq!(perft(&board, 3, &PRECOMP), 1413);
    }

    #[test]
    fn gentest_3393() {
        let board = Board::from_fen("1rb5/5k2/1NQ3pn/pP1p1p2/P4P1P/3pR3/3BP3/2RK1BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 591);
    }

    #[test]
    fn gentest_3394() {
        let board = Board::from_fen("1rb5/5k2/1NQ3p1/pP1p1p2/P4PnP/3pR2N/3BP3/2R1KB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 850);
    }

    #[test]
    fn gentest_3395() {
        let board = Board::from_fen("1r4k1/1b6/1NQ3p1/pP1p1p2/P4PnP/3pR3/3BPN2/2R1KB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 986);
    }

    #[test]
    fn gentest_3396() {
        let board = Board::from_fen("1r4k1/1b6/1NQ3p1/1P1p1p2/Pp3PnP/3pR3/4PNB1/2R1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1253);
    }

    #[test]
    fn gentest_3397() {
        let board = Board::from_fen("4Q3/1b4k1/1N4p1/1P1p1p2/Pp3PnP/3pR3/4PNB1/2R1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 56);
        assert_eq!(perft(&board, 2, &PRECOMP), 865);
    }

    #[test]
    fn gentest_3398() {
        let board = Board::from_fen("2R3k1/1b1Q4/1N4p1/1P1p1p2/Pp3PnP/3pR3/4PNB1/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 46);
        assert_eq!(perft(&board, 3, &PRECOMP), 606);
    }

    #[test]
    fn gentest_3399() {
        let board = Board::from_fen("2bQ4/6k1/1N4p1/1P1p1p2/Pp3PnP/3pR3/4PNB1/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 665);
    }

    #[test]
    fn gentest_3400() {
        let board = Board::from_fen("3Q4/6k1/1N2b1p1/1P1p1p2/Pp3PnP/3P4/4RNB1/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 701);
        assert_eq!(perft(&board, 3, &PRECOMP), 9721);
    }

    #[test]
    fn gentest_3401() {
        let board = Board::from_fen("3Q4/3b2k1/1N4p1/1P1pnp2/Pp3P1P/3P4/4R1B1/4K2N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 590);
    }

    #[test]
    fn gentest_3402() {
        let board = Board::from_fen("7Q/3b4/1N3kp1/1P1pnp2/Pp3P1P/3P4/4R1B1/4K2N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 123);
        assert_eq!(perft(&board, 3, &PRECOMP), 1334);
    }

    #[test]
    fn gentest_3403() {
        let board = Board::from_fen("7Q/3b4/1N2k1p1/1P1p1p2/Ppn2P1P/3P4/5RB1/4K2N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 637);
    }

    #[test]
    fn gentest_3404() {
        let board = Board::from_fen("7Q/3b4/1N1k2p1/1P1p1p2/Ppn2P1P/3P3B/5R2/5K1N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 700);
    }

    #[test]
    fn gentest_3405() {
        let board = Board::from_fen("7Q/3b4/1N1k4/1P1p1pp1/P1n2P1P/1p1P1R1B/8/5K1N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 696);
    }

    #[test]
    fn gentest_3406() {
        let board = Board::from_fen("8/3b4/1N1k4/1P1pnBp1/P4P1P/1p1P1R2/8/5K1N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 582);
    }

    #[test]
    fn gentest_3407() {
        let board = Board::from_fen("8/3bk3/1N6/1P1pnB1P/P4p2/1p1P1R2/8/5K1N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 532);
    }

    #[test]
    fn gentest_3408() {
        let board = Board::from_fen("8/4k3/1N2b3/1P1pn2P/P4pB1/1p1P1R2/6K1/7N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 520);
        assert_eq!(perft(&board, 3, &PRECOMP), 9972);
    }

    #[test]
    fn gentest_3409() {
        let board = Board::from_fen("8/5n2/1N2bk2/PP1p3P/5pB1/1p1P1R2/6K1/7N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 366);
        assert_eq!(perft(&board, 3, &PRECOMP), 9110);
    }

    #[test]
    fn gentest_3410() {
        let board = Board::from_fen("N7/4kn2/4b3/PP1p3P/5pB1/1p1P2R1/6K1/7N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 413);
        assert_eq!(perft(&board, 3, &PRECOMP), 8098);
    }

    #[test]
    fn gentest_3411() {
        let board = Board::from_fen("8/2N2n2/3k4/PP1p3P/5pb1/1p1P2R1/6K1/7N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 371);
        assert_eq!(perft(&board, 3, &PRECOMP), 6930);
    }

    #[test]
    fn gentest_3412() {
        let board = Board::from_fen("7n/8/1P1kN3/P2p3P/5pb1/1p1P2R1/6K1/7N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 336);
        assert_eq!(perft(&board, 3, &PRECOMP), 5814);
    }

    #[test]
    fn gentest_3413() {
        let board = Board::from_fen("7n/8/1P1kN3/P6P/3p1p2/1p1P2R1/8/3b2KN w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 374);
        assert_eq!(perft(&board, 3, &PRECOMP), 8611);
    }

    #[test]
    fn gentest_3414() {
        let board = Board::from_fen("7n/8/PP1kN3/7P/3p1pR1/3P4/1p6/3b2KN b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 457);
        assert_eq!(perft(&board, 3, &PRECOMP), 8773);
    }

    #[test]
    fn gentest_3415() {
        let board = Board::from_fen("8/8/PP1kN1P1/8/3p1pR1/3P4/8/1r1b2KN w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 438);
        assert_eq!(perft(&board, 3, &PRECOMP), 7135);
    }

    #[test]
    fn gentest_3416() {
        let board = Board::from_fen("8/8/PP1kN1P1/8/3p1p1R/3P4/5N2/r2b2K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 418);
        assert_eq!(perft(&board, 3, &PRECOMP), 8353);
    }

    #[test]
    fn gentest_3417() {
        let board = Board::from_fen("8/8/PP4P1/4k3/3p1N1R/3P1b2/5N2/r5K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 48);
        assert_eq!(perft(&board, 3, &PRECOMP), 999);
    }

    #[test]
    fn gentest_3418() {
        let board = Board::from_fen("8/8/PP4P1/4k3/3p1N2/r2P1b2/7R/3N2K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 648);
    }

    #[test]
    fn gentest_3419() {
        let board = Board::from_fen("7R/8/PP4P1/8/3p1k2/1r1P1b2/8/3N2K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 531);
    }

    #[test]
    fn gentest_3420() {
        let board = Board::from_fen("7R/P7/1P4P1/8/1r1p1k2/3P1b2/7K/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 508);
    }

    #[test]
    fn gentest_3421() {
        let board = Board::from_fen("7R/P7/1P4P1/3b4/3p1k2/3P3K/1r6/3N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 573);
    }

    #[test]
    fn gentest_3422() {
        let board = Board::from_fen("Q6R/6P1/1P6/3b4/3p1k2/1r1P3K/8/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 743);
    }

    #[test]
    fn gentest_3423() {
        let board = Board::from_fen("7R/6P1/1P6/1r1b1k2/3p4/3P3K/8/Q2N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 829);
    }

    #[test]
    fn gentest_3424() {
        let board = Board::from_fen("8/6P1/1P6/r2b1k2/3p4/3P3K/8/Q1RN4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 752);
    }

    #[test]
    fn gentest_3425() {
        let board = Board::from_fen("8/1P4P1/5k2/3b4/r2p4/3P3K/8/Q1RN4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 808);
    }

    #[test]
    fn gentest_3426() {
        let board = Board::from_fen("1N6/6P1/5k2/r2b4/3p4/3P3K/8/QR1N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 806);
    }

    #[test]
    fn gentest_3427() {
        let board = Board::from_fen("1N6/6P1/6k1/3b4/r2p4/3P3K/1N6/QR6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
    }

    #[test]
    fn gentest_3428() {
        let board = Board::from_fen("1N6/6P1/6k1/r2b4/2Np2K1/3P4/8/QR6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 880);
    }

    #[test]
    fn gentest_3429() {
        let board = Board::from_fen("1N4Q1/1b6/5k2/r7/2Np2K1/3P4/8/QR6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 788);
    }

    #[test]
    fn gentest_3430() {
        let board = Board::from_fen("1N4Q1/8/1Nb2k2/r7/3p2K1/3P4/Q7/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1264);
    }

    #[test]
    fn gentest_3431() {
        let board = Board::from_fen("1N4Q1/8/1N3k2/5r2/3pb1K1/3P4/5Q2/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 56);
        assert_eq!(perft(&board, 2, &PRECOMP), 653);
    }

    #[test]
    fn gentest_3432() {
        let board = Board::from_fen("1N4Q1/8/1N3k2/8/3pbr2/3P3K/4Q3/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 948);
    }

    #[test]
    fn gentest_3433() {
        let board = Board::from_fen("1N4Q1/8/3k4/3N4/3pbr2/3P3K/4Q3/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 57);
        assert_eq!(perft(&board, 2, &PRECOMP), 1003);
    }

    #[test]
    fn gentest_3434() {
        let board = Board::from_fen("1N6/8/4Q3/2k5/3pbr2/2NP3K/4Q3/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 1055);
    }

    #[test]
    fn gentest_3435() {
        let board = Board::from_fen("1N6/8/4Q3/2k5/3pbr2/2NP2K1/4Q3/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 63);
        assert_eq!(perft(&board, 2, &PRECOMP), 978);
    }

    #[test]
    fn gentest_3436() {
        let board = Board::from_fen("1N6/8/4Q3/2k5/4PK2/2p5/4Q3/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 122);
        assert_eq!(perft(&board, 3, &PRECOMP), 461);
    }

    #[test]
    fn gentest_3437() {
        let board = Board::from_fen("1N6/8/3k4/8/4PK2/8/2p1Q3/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 356);
    }

    #[test]
    fn gentest_3438() {
        let board = Board::from_fen("1N6/8/3k4/4R3/4PK2/8/4Q3/2n5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 123);
        assert_eq!(perft(&board, 3, &PRECOMP), 824);
    }

    #[test]
    fn gentest_3439() {
        let board = Board::from_fen("1N6/8/3k4/4R1K1/3nP3/8/4Q3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 317);
        assert_eq!(perft(&board, 3, &PRECOMP), 9428);
    }

    #[test]
    fn gentest_3440() {
        let board = Board::from_fen("1N6/8/2nk4/4R2K/4P3/5Q2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 335);
        assert_eq!(perft(&board, 3, &PRECOMP), 2422);
    }

    #[test]
    fn gentest_3441() {
        let board = Board::from_fen("1n6/3k4/8/4R2K/4PQ2/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 177);
        assert_eq!(perft(&board, 3, &PRECOMP), 5851);
    }

    #[test]
    fn gentest_3442() {
        let board = Board::from_fen("1nk2Q2/4R3/8/7K/4P3/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 0);
        assert_eq!(perft(&board, 2, &PRECOMP), 0);
        assert_eq!(perft(&board, 3, &PRECOMP), 0);
        assert_eq!(perft(&board, 4, &PRECOMP), 0);
        assert_eq!(perft(&board, 5, &PRECOMP), 0);
        assert_eq!(perft(&board, 6, &PRECOMP), 0);
    }

    #[test]
    fn gentest_3443() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3444() {
        let board = Board::from_fen("rnbqkbnr/ppp1pppp/8/3p4/1P6/5P2/P1PPP1PP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 559);
    }

    #[test]
    fn gentest_3445() {
        let board = Board::from_fen("r1bqkbnr/ppp2ppp/2n5/3pp3/1P2P3/5P2/P1PP2PP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1021);
    }

    #[test]
    fn gentest_3446() {
        let board = Board::from_fen("r1bqkbnr/ppp2ppp/2n5/1B2p3/1P1pP3/3P1P2/P1P3PP/RNBQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 912);
    }

    #[test]
    fn gentest_3447() {
        let board = Board::from_fen("r1b2bnr/ppp1kppp/2n5/1B1qp3/1P1pP3/3P1P2/P1PQ2PP/RNB1K1NR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1143);
    }

    #[test]
    fn gentest_3448() {
        let board = Board::from_fen("r4bnr/ppp1kppp/2n5/1B1qpb2/1P1pP3/3P1P1N/P1P1Q1PP/RNB1K2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1586);
    }

    #[test]
    fn gentest_3449() {
        let board = Board::from_fen("r4bnr/ppp1kp1p/2n5/1B1qpb2/1P1pP1p1/3P1P1N/P1P1Q1PP/RNB2K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1458);
    }

    #[test]
    fn gentest_3450() {
        let board = Board::from_fen("r4bnr/ppp2p1p/2n1k3/1B1qpb2/1P1pP1p1/3P1P1N/P1PNQ1PP/R1B2KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1222);
    }

    #[test]
    fn gentest_3451() {
        let board = Board::from_fen("r4bnr/ppp2p1p/4k3/1B1q1b2/1n1pPpp1/3P1P2/P1PNQ1PP/R1B2KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1197);
    }

    #[test]
    fn gentest_3452() {
        let board = Board::from_fen("r4bnr/ppp2p1p/4k1b1/1B1q4/1n1pPpp1/1N1P1P2/P1P1Q1PP/R1B2K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1654);
    }

    #[test]
    fn gentest_3453() {
        let board = Board::from_fen("r3B1nr/ppp2p1p/4k1b1/2b4q/1n1pPpp1/1N1P1P2/P1P1Q1PP/R1B2K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1214);
    }

    #[test]
    fn gentest_3454() {
        let board = Board::from_fen("r3B1nr/ppp2p1p/4k1bq/2b5/1n1pPpp1/3P1PP1/P1PNQ2P/R1B2K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1135);
    }

    #[test]
    fn gentest_3455() {
        let board = Board::from_fen("4B1nr/pppr1p1p/4k1bq/2b5/1n1pPpp1/3P1PP1/P1PNQ2P/R1B2KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 988);
    }

    #[test]
    fn gentest_3456() {
        let board = Board::from_fen("4B1nr/pppr1p1p/6bq/2b1k3/1n1pPpp1/3P1PPP/P1P1Q3/RNB2KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1133);
    }

    #[test]
    fn gentest_3457() {
        let board = Board::from_fen("4Bbnr/p1pr1p1p/1p4bq/4k3/1n1pPpp1/3PQPPP/P1P5/RNB2KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 969);
    }

    #[test]
    fn gentest_3458() {
        let board = Board::from_fen("4Bbnr/p1pr1p1p/1pn3bq/4k3/3pPpp1/2QP1PPP/P1P5/RNB2KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1157);
    }

    #[test]
    fn gentest_3459() {
        let board = Board::from_fen("1n2Bbnr/p1pr1p1p/1p4bq/4k3/3pPp2/2QP1pPP/P1P2K2/RNB3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 958);
    }

    #[test]
    fn gentest_3460() {
        let board = Board::from_fen("1n2Bbnr/p1pr1p1p/1p4b1/4k3/3pPpPq/2QP1K1P/P1P5/RNB3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1245);
    }

    #[test]
    fn gentest_3461() {
        let board = Board::from_fen("1n2Bbnr/p2r1p1p/1p3kb1/2p5/3pPBPq/2QP1K1P/P1P5/RN4R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1157);
    }

    #[test]
    fn gentest_3462() {
        let board = Board::from_fen("1n4nr/p2r1B1p/1p3kbb/2p5/3pPBPq/2QP1K1P/P1P5/RNR5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1094);
    }

    #[test]
    fn gentest_3463() {
        let board = Board::from_fen("1n4nr/p2r1B1p/1p5b/2p1B1kb/3pP1Pq/2QP1K1P/P1P5/RNR5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 973);
    }

    #[test]
    fn gentest_3464() {
        let board = Board::from_fen("1n4nr/p2r1B1p/1p5b/2p3kb/3pP1P1/2QP3q/P1P1K2B/RNR5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 982);
    }

    #[test]
    fn gentest_3465() {
        let board = Board::from_fen("1n4nr/3r1B1p/1p5b/p1p3kb/3pP1Pq/3P4/PQP1K2B/RNR5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1105);
    }

    #[test]
    fn gentest_3466() {
        let board = Board::from_fen("1n4nr/3r3p/7b/pppB2kb/3pP1Pq/3P4/PQPK3B/RNR5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 886);
    }

    #[test]
    fn gentest_3467() {
        let board = Board::from_fen("1n3bnr/7p/8/pppr2kb/3pP1Pq/1Q1P4/P1PK3B/RNR5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 957);
    }

    #[test]
    fn gentest_3468() {
        let board = Board::from_fen("1n3bnr/7p/8/pppQ2kb/3pP1q1/3P4/P1PK3B/RN4R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 4113);
    }

    #[test]
    fn gentest_3469() {
        let board = Board::from_fen("1n3b1r/7p/5k1n/pppQ3b/3pP1R1/3P4/P1PK3B/RN6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 643);
    }

    #[test]
    fn gentest_3470() {
        let board = Board::from_fen("1n3b1r/4k2p/3Q3n/ppp4b/3pP1R1/3P4/P1P1K2B/RN6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 74);
        assert_eq!(perft(&board, 3, &PRECOMP), 1033);
    }

    #[test]
    fn gentest_3471() {
        let board = Board::from_fen("1n3b1r/5k1p/3Q4/ppp4b/P2pP1n1/3P4/2P1K2B/RN6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 670);
    }

    #[test]
    fn gentest_3472() {
        let board = Board::from_fen("1n3b1r/5k1p/7Q/ppp4b/P2pP3/3Pn3/2P2K1B/RN6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 839);
    }

    #[test]
    fn gentest_3473() {
        let board = Board::from_fen("1n3bkr/2B4p/7Q/pppn3b/P2pP3/3P4/2P2K2/RN6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 898);
    }

    #[test]
    fn gentest_3474() {
        let board = Board::from_fen("1n3bkr/2B4p/6b1/pppn4/P2pP3/3P4/2PN1K2/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 909);
    }

    #[test]
    fn gentest_3475() {
        let board = Board::from_fen("1n4kr/2B4p/3b2b1/ppp5/Pn1pP3/3P4/2PN1K2/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 741);
    }

    #[test]
    fn gentest_3476() {
        let board = Board::from_fen("1n4kr/2B4p/2nb2b1/ppp5/P1PpP3/3P4/5K2/1N1R4 b - c3").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 630);
    }

    #[test]
    fn gentest_3477() {
        let board = Board::from_fen("6kr/3n3p/3b2b1/Bpp1n3/P1PpP3/3P4/5K2/1N1R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 639);
    }

    #[test]
    fn gentest_3478() {
        let board = Board::from_fen("5nkr/7p/3b2b1/Bpp1n3/P1PpP3/3P2K1/8/1N2R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 445);
    }

    #[test]
    fn gentest_3479() {
        let board = Board::from_fen("6kr/3n3p/3b2b1/B1p1n3/PpPpP3/3P2K1/8/1NR5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 502);
        assert_eq!(perft(&board, 3, &PRECOMP), 8858);
    }

    #[test]
    fn gentest_3480() {
        let board = Board::from_fen("6kr/3n3p/3b2b1/B1p1n3/P1PpP3/1p1P3K/8/1N4R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 474);
    }

    #[test]
    fn gentest_3481() {
        let board = Board::from_fen("7r/3n2kp/3b2b1/B1p1n3/P1PpP3/1p1P4/6K1/1N4R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 682);
    }

    #[test]
    fn gentest_3482() {
        let board = Board::from_fen("5r2/3n2kp/3b2b1/B1p1n3/P1PpP3/1pNP4/6K1/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 897);
    }

    #[test]
    fn gentest_3483() {
        let board = Board::from_fen("4b3/3n2kp/3b4/B1pNn3/P1PpPr2/1p1P4/6K1/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1064);
    }

    #[test]
    fn gentest_3484() {
        let board = Board::from_fen("1n2b3/6kp/3b4/2pNn3/P1PpPr2/1pBP3K/8/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1039);
    }

    #[test]
    fn gentest_3485() {
        let board = Board::from_fen("1n6/6kp/2bb4/2pNnr2/P1PpP3/1pBP3K/8/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1112);
    }

    #[test]
    fn gentest_3486() {
        let board = Board::from_fen("1n6/4Nnkp/2bb4/2p2r2/P1PpP3/1pBP3K/8/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 933);
    }

    #[test]
    fn gentest_3487() {
        let board = Board::from_fen("1n3k2/5n1p/2b5/2p2N2/P1PpP3/1pBP3K/7b/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 808);
    }

    #[test]
    fn gentest_3488() {
        let board = Board::from_fen("1n3k2/7p/2bn4/2p5/P1PpP1KN/1pBP4/7b/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 740);
    }

    #[test]
    fn gentest_3489() {
        let board = Board::from_fen("1n3k2/7p/2bn4/B1p5/P1PpPbKN/1p1P4/8/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 770);
    }

    #[test]
    fn gentest_3490() {
        let board = Board::from_fen("1n3k2/8/2bn4/B1p4K/P1PpPb1N/1p1PR3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 575);
    }

    #[test]
    fn gentest_3491() {
        let board = Board::from_fen("bn3k2/8/3n4/B1p5/P1PpP1KN/1p1Pb3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 425);
        assert_eq!(perft(&board, 3, &PRECOMP), 7084);
    }

    #[test]
    fn gentest_3492() {
        let board = Board::from_fen("bnn2k2/8/1B6/P1p5/2PpP1KN/1p1Pb3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 358);
        assert_eq!(perft(&board, 3, &PRECOMP), 8122);
    }

    #[test]
    fn gentest_3493() {
        let board = Board::from_fen("bnn1k3/8/1B6/P1p5/2PpP2N/1p1P3K/8/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 247);
        assert_eq!(perft(&board, 3, &PRECOMP), 3650);
    }

    #[test]
    fn gentest_3494() {
        let board = Board::from_fen("1nnBk3/1b6/8/P1p5/2PpP1KN/1p1P4/8/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 345);
        assert_eq!(perft(&board, 3, &PRECOMP), 7300);
    }

    #[test]
    fn gentest_3495() {
        let board = Board::from_fen("4k3/nb1n4/8/P1p3B1/2PpP1KN/1p1P4/8/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 413);
        assert_eq!(perft(&board, 3, &PRECOMP), 7554);
    }

    #[test]
    fn gentest_3496() {
        let board = Board::from_fen("4k3/nb6/5n2/P1p5/2PpP2N/1p1P3K/8/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 204);
        assert_eq!(perft(&board, 3, &PRECOMP), 5027);
    }

    #[test]
    fn gentest_3497() {
        let board = Board::from_fen("b3k3/n7/5nN1/P1p5/2PpP3/3P3K/1p6/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 275);
        assert_eq!(perft(&board, 3, &PRECOMP), 2831);
    }

    #[test]
    fn gentest_3498() {
        let board = Board::from_fen("b3k3/n7/5n2/P1p5/2PpPN2/3Pb3/1p4K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 355);
    }

    #[test]
    fn gentest_3499() {
        let board = Board::from_fen("b3k3/n7/P7/2p5/2PpPN2/3Pb3/1p4Kn/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 243);
        assert_eq!(perft(&board, 3, &PRECOMP), 2522);
    }

    #[test]
    fn gentest_3500() {
        let board = Board::from_fen("b3k3/n7/P7/2p5/2PpP3/3P2KN/1p5n/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 212);
        assert_eq!(perft(&board, 3, &PRECOMP), 5499);
    }

    #[test]
    fn gentest_3501() {
        let board = Board::from_fen("b2k4/n7/P7/2p3N1/2PpPb2/3P2K1/1p5n/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 131);
        assert_eq!(perft(&board, 3, &PRECOMP), 1135);
    }

    #[test]
    fn gentest_3502() {
        let board = Board::from_fen("b1k5/n4N2/P7/2p5/2PpPb2/3P4/1p4Kn/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 270);
        assert_eq!(perft(&board, 3, &PRECOMP), 6619);
    }

    #[test]
    fn gentest_3503() {
        let board = Board::from_fen("b7/n1k2N2/P7/2p3b1/2PpP3/3P2K1/1p5n/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 307);
        assert_eq!(perft(&board, 3, &PRECOMP), 3083);
    }

    #[test]
    fn gentest_3504() {
        let board = Board::from_fen("b2N4/n1k5/P7/2p5/2PpPK1b/3P4/1p5n/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 187);
        assert_eq!(perft(&board, 3, &PRECOMP), 4539);
    }

    #[test]
    fn gentest_3505() {
        let board = Board::from_fen("8/nbk5/P7/2p5/2PpPK1b/3P4/1p5n/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 115);
        assert_eq!(perft(&board, 3, &PRECOMP), 564);
    }

    #[test]
    fn gentest_3506() {
        let board = Board::from_fen("8/nbk5/P7/2p5/2PpPKnb/3P4/1p6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 162);
        assert_eq!(perft(&board, 3, &PRECOMP), 4897);
    }

    #[test]
    fn gentest_3507() {
        let board = Board::from_fen("8/1P6/2nk4/2p5/2PpPKnb/3P4/1p6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 148);
        assert_eq!(perft(&board, 3, &PRECOMP), 1393);
    }

    #[test]
    fn gentest_3508() {
        let board = Board::from_fen("1R6/8/2nk4/2p2K2/2PpP1nb/3P4/8/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 388);
        assert_eq!(perft(&board, 3, &PRECOMP), 8556);
    }

    #[test]
    fn gentest_3509() {
        let board = Board::from_fen("1n6/8/2k3K1/2p5/2PpP1nb/3P4/8/1b6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 137);
        assert_eq!(perft(&board, 3, &PRECOMP), 752);
    }

    #[test]
    fn gentest_3510() {
        let board = Board::from_fen("1n4K1/8/2k5/2p1n3/2PpP2b/3P4/8/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 103);
        assert_eq!(perft(&board, 3, &PRECOMP), 2479);
    }

    #[test]
    fn gentest_3511() {
        let board = Board::from_fen("1n5K/3n4/1k6/2p5/2PpP2b/3P4/8/1b6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 436);
        assert_eq!(perft(&board, 4, &PRECOMP), 9416);
    }

    #[test]
    fn gentest_3512() {
        let board = Board::from_fen("1n1b2K1/3n4/1k6/2p1P3/2Pp4/3P4/8/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 92);
        assert_eq!(perft(&board, 3, &PRECOMP), 1878);
        assert_eq!(perft(&board, 4, &PRECOMP), 9912);
    }

    #[test]
    fn gentest_3513() {
        let board = Board::from_fen("1n1b2K1/8/1k2P3/2p1n3/2Pp4/3b4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 117);
        assert_eq!(perft(&board, 3, &PRECOMP), 646);
    }

    #[test]
    fn gentest_3514() {
        let board = Board::from_fen("1n1b4/6K1/1k2P3/2p1n3/2Pp4/8/8/5b2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 176);
        assert_eq!(perft(&board, 3, &PRECOMP), 4689);
    }

    #[test]
    fn gentest_3515() {
        let board = Board::from_fen("1n1b4/2k1PnK1/8/2p5/2Pp4/8/8/5b2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 244);
        assert_eq!(perft(&board, 3, &PRECOMP), 2988);
    }

    #[test]
    fn gentest_3516() {
        let board = Board::from_fen("1n6/2B2nK1/2k5/2p5/2Pp4/8/8/5b2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 236);
        assert_eq!(perft(&board, 3, &PRECOMP), 4156);
    }

    #[test]
    fn gentest_3517() {
        let board = Board::from_fen("1n1B4/3k2K1/8/2p5/2Pp4/8/8/5b2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 206);
        assert_eq!(perft(&board, 3, &PRECOMP), 2554);
    }

    #[test]
    fn gentest_3518() {
        let board = Board::from_fen("1n3K2/3k4/8/2p5/2bp3B/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 173);
        assert_eq!(perft(&board, 3, &PRECOMP), 3075);
    }

    #[test]
    fn gentest_3519() {
        let board = Board::from_fen("1n2K3/8/2k5/2p5/2bp3B/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 194);
        assert_eq!(perft(&board, 3, &PRECOMP), 1936);
    }

    #[test]
    fn gentest_3520() {
        let board = Board::from_fen("1n1K4/8/2k1b3/2p5/3p4/8/8/4B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 187);
        assert_eq!(perft(&board, 3, &PRECOMP), 3419);
    }

    #[test]
    fn gentest_3521() {
        let board = Board::from_fen("1n1K4/8/2k5/2p5/2b4B/3p4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 142);
        assert_eq!(perft(&board, 3, &PRECOMP), 1422);
    }

    #[test]
    fn gentest_3522() {
        let board = Board::from_fen("1nK5/4B3/2k5/2p5/2b5/8/3p4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 166);
        assert_eq!(perft(&board, 3, &PRECOMP), 3462);
    }

    #[test]
    fn gentest_3523() {
        let board = Board::from_fen("1n1K4/3bB3/2k5/2p5/8/8/3p4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 933);
    }

    #[test]
    fn gentest_3524() {
        let board = Board::from_fen("1n1K4/3b4/5B2/1kp5/8/8/3p4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 249);
        assert_eq!(perft(&board, 3, &PRECOMP), 5586);
    }

    #[test]
    fn gentest_3525() {
        let board = Board::from_fen("1n1K4/3b4/8/1kp5/3q4/8/1B6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 243);
        assert_eq!(perft(&board, 3, &PRECOMP), 1821);
    }

    #[test]
    fn gentest_3526() {
        let board = Board::from_fen("1n6/3bK3/5B2/1kp5/8/8/8/6q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 408);
    }

    #[test]
    fn gentest_3527() {
        let board = Board::from_fen("1n6/3bK3/8/1kp5/8/8/8/B5q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 417);
        assert_eq!(perft(&board, 3, &PRECOMP), 4582);
    }

    #[test]
    fn gentest_3528() {
        let board = Board::from_fen("1n2K3/8/4b3/1kp5/8/8/8/B5q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 353);
    }

    #[test]
    fn gentest_3529() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3530() {
        let board = Board::from_fen("rnbqkbnr/1ppppppp/p7/8/8/7P/PPPPPPPR/RNBQKBN1 b Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 361);
        assert_eq!(perft(&board, 3, &PRECOMP), 7754);
    }

    #[test]
    fn gentest_3531() {
        let board = Board::from_fen("rnbqkb1r/1pp1pppp/p4n2/3p4/6P1/7P/PPPPPP1R/RNBQKBN1 w Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 561);
    }

    #[test]
    fn gentest_3532() {
        let board = Board::from_fen("rnbqkb1r/1pp1pppp/5n2/p2p4/1P4P1/3P3P/P1P1PP1R/RNBQKBN1 b Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 894);
    }

    #[test]
    fn gentest_3533() {
        let board = Board::from_fen("r2qkb1r/1ppbpppp/2n2n2/p2p4/1P4P1/3P3P/PBP1PP1R/RN1QKBN1 w Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 893);
    }

    #[test]
    fn gentest_3534() {
        let board = Board::from_fen("r2qkb1r/1ppbpppp/2n2n2/p7/1P1p2P1/3PP2P/PBP2PBR/RN1QK1N1 b Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1082);
    }

    #[test]
    fn gentest_3535() {
        let board = Board::from_fen("3qkb1r/1ppbppp1/r1n2n2/p6p/1P1p2P1/B2PP2P/P1P2PBR/RN1QK1N1 w Qk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1017);
    }

    #[test]
    fn gentest_3536() {
        let board = Board::from_fen("3qkb1r/1ppbpp2/r1n2np1/p6p/1P1p2P1/B2PPP1P/P1PN2BR/R2QK1N1 b Qk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 977);
    }

    #[test]
    fn gentest_3537() {
        let board = Board::from_fen("3qkb1r/2pbpp2/r1n3p1/pp5n/1P1p4/B2PPP1P/P1PN2BR/R2QK1N1 w Qk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 836);
    }

    #[test]
    fn gentest_3538() {
        let board = Board::from_fen("3qkb1r/2p1pp2/r1n1b1p1/pp5n/1PPp4/B2PPP1P/P2N2BR/1R1QK1N1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1039);
    }

    #[test]
    fn gentest_3539() {
        let board = Board::from_fen("4kbr1/2p1pp2/r1nqb1p1/pp5n/1PPp4/3PPP1P/PB1N2BR/1R1QK1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1274);
    }

    #[test]
    fn gentest_3540() {
        let board = Board::from_fen("r3kbr1/2p1pp2/2nqb1p1/pp5n/1PPp4/B2PPP1P/P2N2BR/1R1Q1KN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1138);
    }

    #[test]
    fn gentest_3541() {
        let board = Board::from_fen("r4br1/2pkpp2/2nqb1p1/pp6/1PPp1n2/B2PPP1P/P2N2BR/1R1QK1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1077);
    }

    #[test]
    fn gentest_3542() {
        let board = Board::from_fen("r2k1br1/2p1pp2/2nqb1p1/pp6/QPPp1n2/B2PPP1P/P2N2B1/1R2K1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1081);
    }

    #[test]
    fn gentest_3543() {
        let board = Board::from_fen("r2k1br1/2p1p3/2nqb1p1/pP3p2/p1Pp1n2/B2PPP1P/P2N2B1/1R2K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 912);
    }

    #[test]
    fn gentest_3544() {
        let board = Board::from_fen("r2k1br1/2p1p3/2n1b1p1/pPq2p2/p1Pp1P2/B2P1P1P/P2N1KB1/1R4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 768);
    }

    #[test]
    fn gentest_3545() {
        let board = Board::from_fen("r4b2/2pkp1r1/2n1b1p1/pPq2p2/p1Pp1P2/B2P1P1P/P2N1KB1/5RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 609);
    }

    #[test]
    fn gentest_3546() {
        let board = Board::from_fen("r4b2/2p1p1r1/2Pkb1p1/p1q2p2/p1Pp1P2/B2P1P1P/P2N2B1/4KRNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 265);
        assert_eq!(perft(&board, 3, &PRECOMP), 5089);
    }

    #[test]
    fn gentest_3547() {
        let board = Board::from_fen("4rb2/2p1p1r1/2Pkb3/p1q2pp1/p1Pp1P2/B2P1P1P/P5B1/1N2KRNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 288);
        assert_eq!(perft(&board, 3, &PRECOMP), 4942);
    }

    #[test]
    fn gentest_3548() {
        let board = Board::from_fen("4rb2/2p1p1r1/2k1b3/p1q2pp1/p1Pp1P2/3P1P1P/PB2K1B1/1N3RNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 592);
    }

    #[test]
    fn gentest_3549() {
        let board = Board::from_fen("4rb2/1kp1p3/4b1r1/p1q2pp1/p1Pp1P2/3P1P1P/PB1K2B1/1N3RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 778);
    }

    #[test]
    fn gentest_3550() {
        let board = Board::from_fen("4rb2/1kpbp3/6r1/p1q2pp1/p1Pp1P2/2NP1P1P/PBK3B1/5RNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1077);
    }

    #[test]
    fn gentest_3551() {
        let board = Board::from_fen("3krb2/2pbp3/6r1/p1q2pp1/p1Pp1P2/2NP1P1P/PBK2RB1/6NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 751);
    }

    #[test]
    fn gentest_3552() {
        let board = Board::from_fen("3krb2/2p1p3/4b1r1/pNq2pp1/p1Pp1P2/3P1P1P/PB3RB1/2K3NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 656);
    }

    #[test]
    fn gentest_3553() {
        let board = Board::from_fen("3krb2/2p1p3/4b2r/pN3pP1/pqPp4/3P1P1P/PB3RB1/2K3NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 786);
    }

    #[test]
    fn gentest_3554() {
        let board = Board::from_fen("3krb1r/2p1p3/4b3/pN3pP1/pqPp4/3P1P1P/PBK2R2/5BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 689);
    }

    #[test]
    fn gentest_3555() {
        let board = Board::from_fen("3krbb1/2p1p3/8/pN3pP1/pqPp3r/3P1P2/PBK2R2/5BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1048);
    }

    #[test]
    fn gentest_3556() {
        let board = Board::from_fen("3krbb1/2p1p3/8/pN3pP1/p1Pp3r/P2P1P2/1BK3R1/4qBNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 832);
    }

    #[test]
    fn gentest_3557() {
        let board = Board::from_fen("3kr1b1/2p1b3/8/pN2ppP1/p1Pp3r/P2P1PR1/1BK5/4qBNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 940);
    }

    #[test]
    fn gentest_3558() {
        let board = Board::from_fen("3kr1b1/2p5/5b2/pN2ppP1/p1P4r/P2P1PR1/2K5/B3qBNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 972);
    }

    #[test]
    fn gentest_3559() {
        let board = Board::from_fen("3k2b1/2p1r3/5b2/pN2ppPr/p1P4R/P2P1PR1/2K5/B3qBN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1188);
    }

    #[test]
    fn gentest_3560() {
        let board = Board::from_fen("3k2b1/2p1r3/5b2/pN3pPr/p1Pp2R1/P2P1P2/2K5/B3qBN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1018);
    }

    #[test]
    fn gentest_3561() {
        let board = Board::from_fen("3k2b1/2p1r3/3N4/p4pbr/p1Pp2R1/P2P1P2/2K5/B4qN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 943);
    }

    #[test]
    fn gentest_3562() {
        let board = Board::from_fen("3k2b1/2p1r3/3N4/p4pbr/p1Pp2R1/P1BP1P2/6q1/3K2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1113);
    }

    #[test]
    fn gentest_3563() {
        let board = Board::from_fen("3k2br/2p3r1/3N4/p4pb1/p1Pp3R/P1BP1P2/6q1/3K2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1200);
    }

    #[test]
    fn gentest_3564() {
        let board = Board::from_fen("3k2br/2p3r1/3N4/p5b1/pBPp1p2/P2P1P2/6q1/3K2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 802);
    }

    #[test]
    fn gentest_3565() {
        let board = Board::from_fen("3k2b1/2p3r1/3N2r1/p5b1/pBPp1p2/P2P1P2/6q1/4K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_3566() {
        let board = Board::from_fen("4k1b1/1Np3r1/6r1/p5b1/pBPp1p2/P2P1P1N/6q1/4K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 624);
    }

    #[test]
    fn gentest_3567() {
        let board = Board::from_fen("4k1b1/1Np3r1/3r4/B5b1/p1Pp1p2/P2P1q1N/8/4K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 755);
    }

    #[test]
    fn gentest_3568() {
        let board = Board::from_fen("4k1b1/1NB3r1/3r4/6b1/p1Pp1p2/P2P3N/4K3/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 811);
    }

    #[test]
    fn gentest_3569() {
        let board = Board::from_fen("4k3/1NB3r1/3r1b2/3b4/p1Pp1p2/P2P4/4K3/6NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 868);
    }

    #[test]
    fn gentest_3570() {
        let board = Board::from_fen("3bk2R/1N4r1/3r4/B2b4/p1Pp1p2/P2P4/4K3/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 144);
        assert_eq!(perft(&board, 3, &PRECOMP), 4640);
    }

    #[test]
    fn gentest_3571() {
        let board = Board::from_fen("3b3R/1N2k3/3r4/B2b4/p1Pp1p2/P2P1N2/4K3/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1096);
    }

    #[test]
    fn gentest_3572() {
        let board = Board::from_fen("3b3R/1N2k3/3r4/B7/p1bp1p1N/P2P4/5K2/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 940);
    }

    #[test]
    fn gentest_3573() {
        let board = Board::from_fen("3B3R/1N1k4/4r3/8/p1bp1p1N/P2P4/5K2/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 713);
    }

    #[test]
    fn gentest_3574() {
        let board = Board::from_fen("3B4/1N1k4/7R/8/p1bprp2/P2P4/5KN1/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 741);
    }

    #[test]
    fn gentest_3575() {
        let board = Board::from_fen("3B4/3k4/7R/N7/p1bp1p2/P2P4/4rKN1/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 66);
        assert_eq!(perft(&board, 3, &PRECOMP), 1849);
    }

    #[test]
    fn gentest_3576() {
        let board = Board::from_fen("6b1/3kB3/7R/N7/p2p1p2/P2P1K2/4r1N1/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1071);
    }

    #[test]
    fn gentest_3577() {
        let board = Board::from_fen("6b1/3k4/4R3/N7/p2p1p2/P2P1K2/4r1N1/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 741);
    }

    #[test]
    fn gentest_3578() {
        let board = Board::from_fen("6b1/3k4/4R3/N7/p2pKp2/P2P4/3r4/1r2N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 560);
    }

    #[test]
    fn gentest_3579() {
        let board = Board::from_fen("6b1/r2k4/4R3/N7/p2p1K2/P2P4/3r4/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 571);
    }

    #[test]
    fn gentest_3580() {
        let board = Board::from_fen("6b1/r1k5/2NR4/8/p2p1K2/P2P4/3r4/4N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 577);
    }

    #[test]
    fn gentest_3581() {
        let board = Board::from_fen("8/r7/1kN5/8/p2R1K2/Pb1P4/3r4/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 791);
    }

    #[test]
    fn gentest_3582() {
        let board = Board::from_fen("8/r7/2k5/8/pR3K2/Pb1P4/2Nr4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 584);
    }

    #[test]
    fn gentest_3583() {
        let board = Board::from_fen("8/r7/1R6/2k5/p4K2/Pb1P4/2N4r/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 725);
    }

    #[test]
    fn gentest_3584() {
        let board = Board::from_fen("8/3r4/2R5/2k5/pN3K2/Pb1P4/7r/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 50);
        assert_eq!(perft(&board, 3, &PRECOMP), 1535);
    }

    #[test]
    fn gentest_3585() {
        let board = Board::from_fen("8/r7/2R5/1k6/pN6/Pb1P1K2/7r/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 722);
    }

    #[test]
    fn gentest_3586() {
        let board = Board::from_fen("8/r7/8/1k6/pN1P4/P4K2/2b4r/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 582);
    }

    #[test]
    fn gentest_3587() {
        let board = Board::from_fen("8/1r6/8/1k6/pN1P4/P5K1/7r/2Rb4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 537);
        assert_eq!(perft(&board, 3, &PRECOMP), 9443);
    }

    #[test]
    fn gentest_3588() {
        let board = Board::from_fen("8/r7/8/1k2N3/p2P4/P5K1/7r/2Rb4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 671);
    }

    #[test]
    fn gentest_3589() {
        let board = Board::from_fen("8/r7/8/1k2N3/p2P4/Pb4K1/8/R6r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 726);
    }

    #[test]
    fn gentest_3590() {
        let board = Board::from_fen("8/r7/8/1kN5/p2P4/P5K1/b7/R6r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 691);
    }

    #[test]
    fn gentest_3591() {
        let board = Board::from_fen("8/r7/8/k1N5/p2P1K2/P7/b7/Rr6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 513);
        assert_eq!(perft(&board, 3, &PRECOMP), 9344);
    }

    #[test]
    fn gentest_3592() {
        let board = Board::from_fen("8/r7/1r6/k7/N2P1K2/P7/R7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 488);
    }

    #[test]
    fn gentest_3593() {
        let board = Board::from_fen("8/1r6/r7/k7/N2P4/P4K2/R7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 510);
        assert_eq!(perft(&board, 3, &PRECOMP), 9843);
    }

    #[test]
    fn gentest_3594() {
        let board = Board::from_fen("1r6/8/r7/k7/3P4/P1N2K2/5R2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 541);
    }

    #[test]
    fn gentest_3595() {
        let board = Board::from_fen("1r6/8/8/k7/N2P4/P4K2/5R2/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 506);
        assert_eq!(perft(&board, 3, &PRECOMP), 9687);
    }

    #[test]
    fn gentest_3596() {
        let board = Board::from_fen("8/1r6/8/k7/N2P1K2/P7/3R4/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 547);
    }

    #[test]
    fn gentest_3597() {
        let board = Board::from_fen("1r6/8/8/k7/N2P1K2/P2R4/8/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 539);
        assert_eq!(perft(&board, 3, &PRECOMP), 9750);
    }

    #[test]
    fn gentest_3598() {
        let board = Board::from_fen("1r6/8/1k6/8/3P1K2/P6R/1N6/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 644);
    }

    #[test]
    fn gentest_3599() {
        let board = Board::from_fen("6r1/8/1k6/8/3P2K1/P6R/1N6/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 155);
        assert_eq!(perft(&board, 3, &PRECOMP), 2827);
    }

    #[test]
    fn gentest_3600() {
        let board = Board::from_fen("6r1/8/k7/8/3P4/P4K1R/8/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 348);
        assert_eq!(perft(&board, 3, &PRECOMP), 5903);
    }

    #[test]
    fn gentest_3601() {
        let board = Board::from_fen("3r4/k7/8/8/3P4/P3K2R/8/3N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 322);
        assert_eq!(perft(&board, 3, &PRECOMP), 7082);
    }

    #[test]
    fn gentest_3602() {
        let board = Board::from_fen("3r4/1k6/8/8/3PK3/P1N4R/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 453);
        assert_eq!(perft(&board, 3, &PRECOMP), 7405);
    }

    #[test]
    fn gentest_3603() {
        let board = Board::from_fen("k1r5/8/8/8/3PK3/P6R/4N3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 417);
        assert_eq!(perft(&board, 3, &PRECOMP), 9565);
    }

    #[test]
    fn gentest_3604() {
        let board = Board::from_fen("k7/8/5K2/8/2rP4/P6R/4N3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 336);
        assert_eq!(perft(&board, 3, &PRECOMP), 4899);
    }

    #[test]
    fn gentest_3605() {
        let board = Board::from_fen("k5r1/5K2/8/8/3P4/P6R/4N3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 358);
        assert_eq!(perft(&board, 3, &PRECOMP), 7557);
    }

    #[test]
    fn gentest_3606() {
        let board = Board::from_fen("k3r3/5K2/8/8/3P1N2/P4R2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 325);
        assert_eq!(perft(&board, 3, &PRECOMP), 5019);
    }

    #[test]
    fn gentest_3607() {
        let board = Board::from_fen("1k3r2/4K3/8/8/3P1N2/P4R2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 290);
        assert_eq!(perft(&board, 3, &PRECOMP), 5935);
    }

    #[test]
    fn gentest_3608() {
        let board = Board::from_fen("1k6/5r2/4K3/8/3P1N2/P7/5R2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 318);
        assert_eq!(perft(&board, 3, &PRECOMP), 4910);
    }

    #[test]
    fn gentest_3609() {
        let board = Board::from_fen("2k5/7r/4K3/8/3P4/P6N/5R2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 358);
        assert_eq!(perft(&board, 3, &PRECOMP), 7380);
    }

    #[test]
    fn gentest_3610() {
        let board = Board::from_fen("3k4/7r/4K3/8/3P1R2/P6N/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 262);
        assert_eq!(perft(&board, 3, &PRECOMP), 3683);
    }

    #[test]
    fn gentest_3611() {
        let board = Board::from_fen("3k4/7r/5K2/8/3P1R2/P6N/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 279);
        assert_eq!(perft(&board, 3, &PRECOMP), 4901);
    }

    #[test]
    fn gentest_3612() {
        let board = Board::from_fen("3k4/5K2/7r/8/3P1R2/P7/8/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 269);
        assert_eq!(perft(&board, 3, &PRECOMP), 4249);
    }

    #[test]
    fn gentest_3613() {
        let board = Board::from_fen("3k4/5K2/1r6/8/3P2R1/P7/8/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 277);
        assert_eq!(perft(&board, 3, &PRECOMP), 4996);
    }

    #[test]
    fn gentest_3614() {
        let board = Board::from_fen("2k1K3/8/1r6/8/3P4/P7/6R1/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 336);
        assert_eq!(perft(&board, 3, &PRECOMP), 5082);
    }

    #[test]
    fn gentest_3615() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3616() {
        let board = Board::from_fen("rnbqkbnr/ppppp1pp/5p2/8/6P1/2N5/PPPPPP1P/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 438);
        assert_eq!(perft(&board, 3, &PRECOMP), 9280);
    }

    #[test]
    fn gentest_3617() {
        let board = Board::from_fen("rnbqkb1r/pppppnpp/5p2/8/5PP1/2N5/PPPPP2P/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 503);
    }

    #[test]
    fn gentest_3618() {
        let board = Board::from_fen("rnbqkb1r/ppppp1pp/5p1n/8/N4PP1/7P/PPPPP3/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 420);
        assert_eq!(perft(&board, 3, &PRECOMP), 9542);
    }

    #[test]
    fn gentest_3619() {
        let board = Board::from_fen("rnbqkb1r/ppp1p1pp/7n/3p1p2/N4PP1/7P/PPPPPK2/R1BQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 623);
    }

    #[test]
    fn gentest_3620() {
        let board = Board::from_fen("rnbqkbnr/ppp1p1pp/8/3p1p2/N4PP1/P2P3P/1PP1PK2/R1BQ1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 674);
    }

    #[test]
    fn gentest_3621() {
        let board = Board::from_fen("rnbqkbnr/pp2p1pp/8/2p2p2/N1Pp1PP1/P2P3P/1P2PK2/R1BQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 650);
    }

    #[test]
    fn gentest_3622() {
        let board = Board::from_fen("rnb1kbnr/pp2p1pp/3q4/2p2P2/N1Pp1P2/PP1P3P/4PK2/R1BQ1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 799);
    }

    #[test]
    fn gentest_3623() {
        let board = Board::from_fen("r1b1kbnr/pp2p1pp/n6q/2p2P2/NPPp1P2/P2P3P/4PK2/R1BQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 752);
    }

    #[test]
    fn gentest_3624() {
        let board = Board::from_fen("r1b1kbnr/p3p1pp/np5q/2p2P2/NPPp1P2/P2P3P/4P2R/R1BQKBN1 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 684);
    }

    #[test]
    fn gentest_3625() {
        let board = Board::from_fen("r1b1kbnr/p3p1pp/np1q4/2P2P2/N1Pp1P2/P2P3P/4P2R/R1BQKBN1 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 869);
    }

    #[test]
    fn gentest_3626() {
        let board = Board::from_fen("r3kbnr/p3p1pp/np1P4/5b2/2Pp1P2/P2P3P/1N2P2R/R1BQKBN1 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 679);
    }

    #[test]
    fn gentest_3627() {
        let board = Board::from_fen("r3kbnr/p1n1p1pp/1p1P2b1/8/2Pp1P1P/P2P4/1N2P2R/R1BQKBN1 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 672);
    }

    #[test]
    fn gentest_3628() {
        let board = Board::from_fen("r4bnr/p1n1pkpp/1p1P2b1/2P5/Q2p1P1P/P2P4/1N2P2R/R1B1KBN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 992);
    }

    #[test]
    fn gentest_3629() {
        let board = Board::from_fen("r4b1r/p1n1pkpp/3P1nb1/2p5/3p1P1P/P2P4/1NQ1P2R/R1B1KBN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1021);
    }

    #[test]
    fn gentest_3630() {
        let board = Board::from_fen("r4b1r/p3pkpp/n2P1nb1/2p5/3Q1P1P/P2P4/1N2P2R/R1B1KBN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1034);
    }

    #[test]
    fn gentest_3631() {
        let board = Board::from_fen("r4bkr/p3p1pp/n2P1Q2/2p5/5P1P/P2b4/1N2P2R/R1B1KBN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 838);
    }

    #[test]
    fn gentest_3632() {
        let board = Board::from_fen("r4bkr/p1n1p1pp/3P1Q2/2p5/5P1P/P2bP3/7R/R1BNKBN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1376);
    }

    #[test]
    fn gentest_3633() {
        let board = Board::from_fen("r4bkr/p1n1p1pp/3P4/8/2pQ1P1P/P3P3/7R/RbBNKBN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1098);
    }

    #[test]
    fn gentest_3634() {
        let board = Board::from_fen("4rbkr/p1n1p1pp/3P4/8/2pQ1P1P/P1N1P3/7R/1RB1KBN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 1073);
    }

    #[test]
    fn gentest_3635() {
        let board = Board::from_fen("4rbkr/2n1p2p/3P2p1/p7/2pQ1P1P/P1N1P3/4K2R/1RB2BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 872);
    }

    #[test]
    fn gentest_3636() {
        let board = Board::from_fen("4rbkr/2n4p/3P2p1/p3p3/2pQ1P1P/P1N1PK2/7R/R1B2BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1166);
    }

    #[test]
    fn gentest_3637() {
        let board = Board::from_fen("4rbkr/2n5/3P2p1/p3p2p/2pQ1P1P/P3PK2/7R/R1BN1BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1091);
    }

    #[test]
    fn gentest_3638() {
        let board = Board::from_fen("4rbkr/3P4/6p1/p2np2p/2pQ1P1P/P3P3/5K1R/R1BN1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1416);
    }

    #[test]
    fn gentest_3639() {
        let board = Board::from_fen("4rbkr/3P4/6p1/p2np2p/2p2P1P/P3P3/3Q1K1R/R1BN1BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1270);
    }

    #[test]
    fn gentest_3640() {
        let board = Board::from_fen("5bkr/3P4/4r1p1/p2Qp2p/2p2P1P/P3P3/3B1K1R/R2N1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 848);
    }

    #[test]
    fn gentest_3641() {
        let board = Board::from_fen("6kr/3Pb3/4r1p1/p2Qp2p/5P1P/P1p1P3/3B3R/R2NKBN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1048);
    }

    #[test]
    fn gentest_3642() {
        let board = Board::from_fen("6k1/3Pb3/4r1pr/p3p2p/5P1P/P1pQP3/3B3R/2RNKBN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1054);
    }

    #[test]
    fn gentest_3643() {
        let board = Board::from_fen("6k1/3Pb3/2r3pr/p3p2p/P4P1P/3QP3/3p3R/2RNKBN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 163);
        assert_eq!(perft(&board, 3, &PRECOMP), 7021);
    }

    #[test]
    fn gentest_3644() {
        let board = Board::from_fen("6kr/3Pb3/2r3p1/p3p2p/P3PP1P/3Q4/3pK2R/2RN1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1411);
    }

    #[test]
    fn gentest_3645() {
        let board = Board::from_fen("3b3r/5k2/2r3p1/p3p2p/P3PP1P/3Q4/3pK2R/2RN1BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1357);
    }

    #[test]
    fn gentest_3646() {
        let board = Board::from_fen("3b3r/5k2/6p1/p3p2p/P3PP1P/4Q3/2rp1K1R/2RN1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1113);
    }

    #[test]
    fn gentest_3647() {
        let board = Board::from_fen("3b1r2/4k3/6p1/p3p2p/P3PP1P/1Q6/2rp1K1R/2RN1BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1140);
    }

    #[test]
    fn gentest_3648() {
        let board = Board::from_fen("2rb1r2/4k3/B5p1/pQ2p2p/P3PP1P/8/3p1K1R/2RN2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1115);
    }

    #[test]
    fn gentest_3649() {
        let board = Board::from_fen("5r2/2b1k3/B5p1/p3p2p/P3PP1P/1Q6/2rp1K1R/2RN2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1415);
    }

    #[test]
    fn gentest_3650() {
        let board = Board::from_fen("5r2/2b2k2/B5p1/p1Q1p2p/P3PP1P/8/2rp1K1R/2RN2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1075);
    }

    #[test]
    fn gentest_3651() {
        let board = Board::from_fen("5r2/b4k2/B5p1/p1Q1p2p/P3PP1P/8/2rp1K1R/1R1N2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 809);
    }

    #[test]
    fn gentest_3652() {
        let board = Board::from_fen("5r2/5k2/1b4p1/p1Q1p2p/P3PPBP/8/2rp1K1R/1R1N2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 827);
    }

    #[test]
    fn gentest_3653() {
        let board = Board::from_fen("3b1r2/5k2/6p1/p3p2p/P3PPBP/Q7/3p1K1R/1RrN2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1133);
    }

    #[test]
    fn gentest_3654() {
        let board = Board::from_fen("3b1r2/6k1/6p1/p3p2p/P3PP1P/7B/1Q1p1K1R/1RrN2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 976);
    }

    #[test]
    fn gentest_3655() {
        let board = Board::from_fen("5r2/1Qb3k1/6p1/p3p2p/P3PP1P/2r4B/3p1K1R/1R1N2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1185);
    }

    #[test]
    fn gentest_3656() {
        let board = Board::from_fen("8/2b3k1/4Brp1/p3p2p/P3PP1P/1Qr5/3p1K1R/1R1N2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 896);
    }

    #[test]
    fn gentest_3657() {
        let board = Board::from_fen("3b4/5Bk1/5rp1/p3p2p/P1r1PP1P/1Q6/3p1K1R/1R1N2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1170);
    }

    #[test]
    fn gentest_3658() {
        let board = Board::from_fen("3b4/5rk1/6p1/p3p2p/P1r1PP1P/8/Q2pK2R/1R1N2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1138);
    }

    #[test]
    fn gentest_3659() {
        let board = Board::from_fen("3b4/1r4k1/6p1/p3p2p/P2rPP1P/8/3QK2R/1R1N2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1240);
    }

    #[test]
    fn gentest_3660() {
        let board = Board::from_fen("3b4/1r4k1/3r2p1/p3p2p/P3PP1P/1R2N3/3QK2R/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1469);
    }

    #[test]
    fn gentest_3661() {
        let board = Board::from_fen("3b3k/8/3r2p1/p3p2p/Pr2PP1P/1R2N3/3QK1R1/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1172);
    }

    #[test]
    fn gentest_3662() {
        let board = Board::from_fen("7k/8/3r2p1/p3p1bp/PR2PP1P/8/3QK1R1/3N2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 836);
    }

    #[test]
    fn gentest_3663() {
        let board = Board::from_fen("7k/8/5rpb/p3p2p/PR2PP1P/2N5/3QK1R1/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 792);
    }

    #[test]
    fn gentest_3664() {
        let board = Board::from_fen("7k/8/3Qr1Rb/p3p2p/PR2PP1P/2N5/4K3/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 585);
        assert_eq!(perft(&board, 3, &PRECOMP), 7682);
    }

    #[test]
    fn gentest_3665() {
        let board = Board::from_fen("6R1/4r2k/3Q3b/p3p2p/PR2PP1P/2N5/4K3/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 58);
        assert_eq!(perft(&board, 2, &PRECOMP), 786);
    }

    #[test]
    fn gentest_3666() {
        let board = Board::from_fen("6R1/6rk/3Q3b/p3p2p/PR2PP1P/2N2N2/5K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 1002);
    }

    #[test]
    fn gentest_3667() {
        let board = Board::from_fen("6R1/1r5k/3Q3b/3Np2p/Pp2PP1P/5N2/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 54);
        assert_eq!(perft(&board, 2, &PRECOMP), 730);
    }

    #[test]
    fn gentest_3668() {
        let board = Board::from_fen("1r1R4/7k/3Q3b/3NP2p/Pp2P2P/5N2/5K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 606);
        assert_eq!(perft(&board, 3, &PRECOMP), 7797);
    }

    #[test]
    fn gentest_3669() {
        let board = Board::from_fen("1R6/6k1/3Q4/3NP2p/Pp2Pb1P/5N2/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 422);
    }

    #[test]
    fn gentest_3670() {
        let board = Board::from_fen("1R6/6k1/3Q4/3NP2p/Pp2P2P/8/3b2K1/4N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 454);
        assert_eq!(perft(&board, 3, &PRECOMP), 3930);
    }

    #[test]
    fn gentest_3671() {
        let board = Board::from_fen("1R6/7k/3Q3b/4P2p/PN2P2P/8/6K1/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 343);
    }

    #[test]
    fn gentest_3672() {
        let board = Board::from_fen("5R2/6bk/3Q4/4P2p/PN2P2P/3N4/6K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 230);
        assert_eq!(perft(&board, 3, &PRECOMP), 1760);
    }

    #[test]
    fn gentest_3673() {
        let board = Board::from_fen("5b2/6k1/8/3QP2p/PN2P2P/3N4/6K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 282);
        assert_eq!(perft(&board, 3, &PRECOMP), 9708);
    }

    #[test]
    fn gentest_3674() {
        let board = Board::from_fen("5b2/7k/4P3/3Q3p/P3P2P/3N4/N5K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 447);
        assert_eq!(perft(&board, 3, &PRECOMP), 4679);
    }

    #[test]
    fn gentest_3675() {
        let board = Board::from_fen("8/7k/4P3/3Qb2p/P3P2P/2NN4/6K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 513);
    }

    #[test]
    fn gentest_3676() {
        let board = Board::from_fen("8/7k/3bP3/7p/P3P2P/2NN4/8/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 306);
        assert_eq!(perft(&board, 3, &PRECOMP), 4139);
    }

    #[test]
    fn gentest_3677() {
        let board = Board::from_fen("8/4b2k/4P3/7p/P3P2P/2N5/5N2/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 238);
        assert_eq!(perft(&board, 3, &PRECOMP), 4004);
    }

    #[test]
    fn gentest_3678() {
        let board = Board::from_fen("8/7k/4P3/7p/P3P2b/7N/N7/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 151);
        assert_eq!(perft(&board, 3, &PRECOMP), 1852);
    }

    #[test]
    fn gentest_3679() {
        let board = Board::from_fen("7k/8/4P3/7p/P3P3/6bN/N7/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 2351);
    }

    #[test]
    fn gentest_3680() {
        let board = Board::from_fen("7k/8/4P3/6N1/P3P2p/6b1/N5K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 164);
        assert_eq!(perft(&board, 3, &PRECOMP), 1861);
    }

    #[test]
    fn gentest_3681() {
        let board = Board::from_fen("7k/8/4P3/6N1/P3P3/7p/N4K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 53);
        assert_eq!(perft(&board, 3, &PRECOMP), 911);
        assert_eq!(perft(&board, 4, &PRECOMP), 5035);
    }

    #[test]
    fn gentest_3682() {
        let board = Board::from_fen("8/6k1/4P3/8/P3P3/5N1p/N7/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 144);
        assert_eq!(perft(&board, 3, &PRECOMP), 854);
    }

    #[test]
    fn gentest_3683() {
        let board = Board::from_fen("8/7k/4P3/8/P3P3/7p/N7/5KN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 71);
        assert_eq!(perft(&board, 3, &PRECOMP), 1036);
        assert_eq!(perft(&board, 4, &PRECOMP), 6871);
    }

    #[test]
    fn gentest_3684() {
        let board = Board::from_fen("8/8/4P2k/8/P3P3/7N/N5K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 68);
        assert_eq!(perft(&board, 3, &PRECOMP), 355);
        assert_eq!(perft(&board, 4, &PRECOMP), 6000);
    }

    #[test]
    fn gentest_3685() {
        let board = Board::from_fen("6k1/8/4P3/8/P3P3/7N/N7/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 55);
        assert_eq!(perft(&board, 3, &PRECOMP), 853);
        assert_eq!(perft(&board, 4, &PRECOMP), 3944);
    }

    #[test]
    fn gentest_3686() {
        let board = Board::from_fen("5k2/8/4P3/8/P3P3/7N/N7/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 55);
        assert_eq!(perft(&board, 3, &PRECOMP), 266);
        assert_eq!(perft(&board, 4, &PRECOMP), 4090);
    }

    #[test]
    fn gentest_3687() {
        let board = Board::from_fen("8/7k/4P3/8/P3P3/7N/N7/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 74);
        assert_eq!(perft(&board, 3, &PRECOMP), 1187);
        assert_eq!(perft(&board, 4, &PRECOMP), 5387);
    }

    #[test]
    fn gentest_3688() {
        let board = Board::from_fen("8/6k1/4P3/8/P3P3/7N/N7/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 105);
        assert_eq!(perft(&board, 3, &PRECOMP), 455);
        assert_eq!(perft(&board, 4, &PRECOMP), 7220);
    }

    #[test]
    fn gentest_3689() {
        let board = Board::from_fen("8/7k/4P3/4P3/P7/7N/N7/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 69);
        assert_eq!(perft(&board, 3, &PRECOMP), 1068);
        assert_eq!(perft(&board, 4, &PRECOMP), 4663);
    }

    #[test]
    fn gentest_3690() {
        let board = Board::from_fen("6k1/8/4P3/P3P3/8/7N/N5K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 64);
        assert_eq!(perft(&board, 3, &PRECOMP), 285);
        assert_eq!(perft(&board, 4, &PRECOMP), 4675);
    }

    #[test]
    fn gentest_3691() {
        let board = Board::from_fen("6k1/8/4P3/P3P3/8/8/N5K1/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 60);
        assert_eq!(perft(&board, 3, &PRECOMP), 936);
        assert_eq!(perft(&board, 4, &PRECOMP), 4229);
    }

    #[test]
    fn gentest_3692() {
        let board = Board::from_fen("8/6k1/4P3/P3P3/8/3N4/6K1/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 507);
        assert_eq!(perft(&board, 4, &PRECOMP), 9174);
    }

    #[test]
    fn gentest_3693() {
        let board = Board::from_fen("8/8/4P1k1/P3P3/8/3N4/7K/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 94);
        assert_eq!(perft(&board, 3, &PRECOMP), 1533);
        assert_eq!(perft(&board, 4, &PRECOMP), 7710);
    }

    #[test]
    fn gentest_3694() {
        let board = Board::from_fen("8/4P3/7k/P3P3/8/3N2K1/8/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 115);
        assert_eq!(perft(&board, 3, &PRECOMP), 556);
    }

    #[test]
    fn gentest_3695() {
        let board = Board::from_fen("8/4P3/6k1/P3P3/8/3N4/6K1/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 153);
        assert_eq!(perft(&board, 3, &PRECOMP), 3487);
    }

    #[test]
    fn gentest_3696() {
        let board = Board::from_fen("4B3/6k1/8/P3P3/8/3N1N2/6K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 150);
        assert_eq!(perft(&board, 3, &PRECOMP), 526);
    }

    #[test]
    fn gentest_3697() {
        let board = Board::from_fen("4B3/7k/8/P3P3/8/5N2/6K1/2N5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 2964);
    }

    #[test]
    fn gentest_3698() {
        let board = Board::from_fen("6k1/8/2B5/P3P3/8/5N2/8/2N2K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 130);
        assert_eq!(perft(&board, 3, &PRECOMP), 632);
    }

    #[test]
    fn gentest_3699() {
        let board = Board::from_fen("8/5k2/2B5/P3P3/8/5N2/4K3/2N5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 4322);
    }

    #[test]
    fn gentest_3700() {
        let board = Board::from_fen("8/6k1/2B1P3/P7/8/5N2/8/2N2K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 189);
        assert_eq!(perft(&board, 3, &PRECOMP), 818);
    }

    #[test]
    fn gentest_3701() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3702() {
        let board = Board::from_fen("rnbqkbnr/ppppp1pp/8/5p2/4P3/5P2/PPPP2PP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 563);
    }

    #[test]
    fn gentest_3703() {
        let board = Board::from_fen("r1bqkb1r/ppppp1pp/2n4n/4Pp2/8/5P2/PPPP2PP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 542);
    }

    #[test]
    fn gentest_3704() {
        let board = Board::from_fen("r1bqkb1r/p1ppp1pp/1pn4n/4Pp2/6P1/5P2/PPPPQ2P/RNB1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 682);
    }

    #[test]
    fn gentest_3705() {
        let board = Board::from_fen("r1bqkb1r/p1p1pnpp/1pn5/3pPp2/6P1/2N2P2/PPPPQ2P/R1B1KBNR w KQkq d6").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 976);
    }

    #[test]
    fn gentest_3706() {
        let board = Board::from_fen("r1bqkb1r/p1p1pn1p/Qpn5/3pPpp1/N5P1/5P2/PPPP3P/R1B1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 917);
    }

    #[test]
    fn gentest_3707() {
        let board = Board::from_fen("1rbqk2r/p1p1pn1p/Qpn4b/1B1pPpp1/N5P1/5P2/PPPP3P/R1B1K1NR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 681);
    }

    #[test]
    fn gentest_3708() {
        let board = Board::from_fen("r1bqk2r/p1p1pn1p/Qpn4b/1B1pPpp1/NP4P1/5P2/P1PP3P/R1BK2NR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 611);
    }

    #[test]
    fn gentest_3709() {
        let board = Board::from_fen("r1b1k2r/p1pqpn1p/Qp5b/1B1pPpp1/1P1n2P1/5P2/PNPP3P/R1BK2NR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 824);
    }

    #[test]
    fn gentest_3710() {
        let board = Board::from_fen("r1b1k2r/p1p1pn1p/Qpq4b/1B1pPpp1/1P1n2P1/3P1P2/PNP4P/R1B1K1NR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 828);
    }

    #[test]
    fn gentest_3711() {
        let board = Board::from_fen("r1b1k2r/p1p1p2p/Qpqn3b/1B1pP1p1/1P1n1pP1/3P1P2/PNPB3P/R3K1NR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1017);
    }

    #[test]
    fn gentest_3712() {
        let board = Board::from_fen("r1bk3r/p1p1p2p/Qpqn3b/1B1pP1p1/1PPn1pP1/3P1P2/PN1B3P/1R2K1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1072);
    }

    #[test]
    fn gentest_3713() {
        let board = Board::from_fen("1rbkr3/p1p1p2p/Qpqn3b/1B1pP1p1/1PPn1pP1/3P1P2/PN1B3P/2R1K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1096);
    }

    #[test]
    fn gentest_3714() {
        let board = Board::from_fen("1rbkr3/p1p1p2p/Qpqn3b/1n1pP1p1/1PP2pP1/3PBP2/PN2N2P/2R1K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1297);
    }

    #[test]
    fn gentest_3715() {
        let board = Board::from_fen("1rbk1r2/p1p1p2p/Qp1n3b/1n1pP1p1/1Pq2pP1/P2PBP2/1N2N2P/2R1K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1609);
    }

    #[test]
    fn gentest_3716() {
        let board = Board::from_fen("1rbk1r2/p1p1p2p/Qp5b/1nBpPnp1/1Pq2pP1/P2P1P2/1N2N2P/1R2K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1326);
    }

    #[test]
    fn gentest_3717() {
        let board = Board::from_fen("1rbk1r2/p1p1p2p/1p5b/QnBpPnp1/1P3pP1/P2PqP2/1N2N2P/1R2K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 988);
    }

    #[test]
    fn gentest_3718() {
        let board = Board::from_fen("1rb1kr2/p1p1p2p/1p2P2b/QnBp1np1/1P3pP1/P2PqP2/1N2N2P/3RK2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 858);
    }

    #[test]
    fn gentest_3719() {
        let board = Board::from_fen("1rb1k1r1/p1p1p2p/1p2P2b/Qn1p1np1/1P1B1pP1/P2P1P2/1N1qN2P/3RK2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 132);
        assert_eq!(perft(&board, 3, &PRECOMP), 4250);
    }

    #[test]
    fn gentest_3720() {
        let board = Board::from_fen("1rb1k1r1/p1p1p2p/1p2P2b/Q2p1np1/NP1B1pP1/P1nP1P2/3qN2P/3R1K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1348);
    }

    #[test]
    fn gentest_3721() {
        let board = Board::from_fen("1rb1k1r1/p1p1p2p/1p2P2b/Q2p1np1/NP1B1pP1/P1nP1PN1/4q2P/3R1K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 80);
        assert_eq!(perft(&board, 3, &PRECOMP), 2546);
    }

    #[test]
    fn gentest_3722() {
        let board = Board::from_fen("1rb1k1r1/p1p1p2p/1p2P2b/Q2p2p1/NP1B1pP1/P1nP1Pn1/4N2P/3R2KR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1048);
    }

    #[test]
    fn gentest_3723() {
        let board = Board::from_fen("1rb1k1r1/p1p1p1bp/1p2P3/Qn1p2p1/NP1B1NP1/P2P1Pn1/7P/3R2KR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1138);
    }

    #[test]
    fn gentest_3724() {
        let board = Board::from_fen("1rb1k1r1/p1p1p1bp/1N2P3/3p2p1/QP1B1NP1/P1nP1Pn1/7P/3R2KR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 224);
        assert_eq!(perft(&board, 3, &PRECOMP), 7699);
    }

    #[test]
    fn gentest_3725() {
        let board = Board::from_fen("1rb1k1r1/p3p1Bp/1N2P3/1npp2p1/QP3NP1/P2P1Pn1/7P/3R2KR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1007);
    }

    #[test]
    fn gentest_3726() {
        let board = Board::from_fen("1rb1k1r1/p3p1Bp/1N2P3/1npN2p1/QP4P1/P2P1P2/4n1KP/3R3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 980);
    }

    #[test]
    fn gentest_3727() {
        let board = Board::from_fen("2b1k3/p3p1rp/1r2P3/1npN2p1/1P4P1/PQ1P1P2/4n1KP/3R3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 991);
    }

    #[test]
    fn gentest_3728() {
        let board = Board::from_fen("2b1k3/p3p1rp/1r2P3/1np3p1/1P3nP1/PQNP1P2/5K1P/3R3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1117);
    }

    #[test]
    fn gentest_3729() {
        let board = Board::from_fen("2b1k3/4p1rp/1r1nP3/p1p3p1/1P3nP1/PQNP1P2/5K1P/5R1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1152);
    }

    #[test]
    fn gentest_3730() {
        let board = Board::from_fen("2b1k3/4p1rp/1r1nP3/p5p1/Pp3nP1/1QNP1P2/7P/4KR1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_3731() {
        let board = Board::from_fen("2b1k3/4p2p/1r1nP1r1/p5p1/Pp4P1/1Q1n1P2/N6P/4KR1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 118);
        assert_eq!(perft(&board, 3, &PRECOMP), 3088);
    }

    #[test]
    fn gentest_3732() {
        let board = Board::from_fen("2b1k3/4p3/1r1nP1r1/p5pP/Pp6/1Q1n1P2/N3K2P/5R1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 825);
    }

    #[test]
    fn gentest_3733() {
        let board = Board::from_fen("4k3/3bp3/1r1nPr2/p5pP/Pp6/3n1P2/N1Q1K2P/5R1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1107);
    }

    #[test]
    fn gentest_3734() {
        let board = Board::from_fen("4k3/1r1bp3/3nPr2/p1Q3pP/PN6/3n1P2/4K2P/5R1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1430);
    }

    #[test]
    fn gentest_3735() {
        let board = Board::from_fen("4k3/1r2p3/3nP1r1/p5pP/bN6/3n1P2/4KQ1P/5R1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1104);
    }

    #[test]
    fn gentest_3736() {
        let board = Board::from_fen("4k3/1r1bp3/3nP1r1/p5pP/1N6/3nQP2/4K2P/1R5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1376);
    }

    #[test]
    fn gentest_3737() {
        let board = Board::from_fen("4k3/1r1bp3/3nP1r1/p5pP/1N2Q3/5P2/4K2P/1R5n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1133);
    }

    #[test]
    fn gentest_3738() {
        let board = Board::from_fen("4k3/1r1bp3/N2nP1r1/p6P/4Q1p1/5P2/4K2P/3R3n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1271);
    }

    #[test]
    fn gentest_3739() {
        let board = Board::from_fen("Q1n1k3/2rbp3/N3P1r1/p6P/6p1/5P2/4K2P/3R3n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 828);
    }

    #[test]
    fn gentest_3740() {
        let board = Board::from_fen("Q1n1k3/2rbp3/N3P1r1/p6P/8/3K1P1p/8/3R3n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 685);
    }

    #[test]
    fn gentest_3741() {
        let board = Board::from_fen("2n1k3/3bp3/N3P1r1/p1r4P/4Q3/3K1P1p/8/3R3n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1151);
    }

    #[test]
    fn gentest_3742() {
        let board = Board::from_fen("2n1k3/1Q1bp3/N3P1r1/p6P/4K3/2r2P1p/8/3R3n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1050);
    }

    #[test]
    fn gentest_3743() {
        let board = Board::from_fen("2n2k2/3bp3/N3P1r1/p6P/1Q2K3/5P1p/2r5/3R3n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1655);
    }

    #[test]
    fn gentest_3744() {
        let board = Board::from_fen("2n2k2/3bp3/N3P3/p6P/4K3/1Q3P1p/2r5/4R1rn b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1142);
    }

    #[test]
    fn gentest_3745() {
        let board = Board::from_fen("2n2k2/3bp3/N3P3/p6P/4K3/1Q2RP1p/5r2/6rn w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1162);
    }

    #[test]
    fn gentest_3746() {
        let board = Board::from_fen("2n2k2/4p3/N3b3/p6P/4K3/4RP1p/5r1Q/6rn b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 971);
    }

    #[test]
    fn gentest_3747() {
        let board = Board::from_fen("2n2k2/3bp3/N7/p6P/4K3/R4P1p/5r1Q/1r5n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1182);
    }

    #[test]
    fn gentest_3748() {
        let board = Board::from_fen("2n2k2/3bp3/N7/p6P/5P2/R3K2p/2r4Q/1r5n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1063);
    }

    #[test]
    fn gentest_3749() {
        let board = Board::from_fen("2n2k2/3bp3/N7/p6P/5P2/1R2K2p/7Q/1r4rn w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1221);
    }

    #[test]
    fn gentest_3750() {
        let board = Board::from_fen("1Qn2k2/4p3/N3b3/p4P1P/8/1R2K2p/8/1r4rn b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 996);
    }

    #[test]
    fn gentest_3751() {
        let board = Board::from_fen("1Qn3k1/4pb2/N7/p4P1P/1R6/4K2p/8/1r4rn w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1262);
    }

    #[test]
    fn gentest_3752() {
        let board = Board::from_fen("1Qn3k1/4pb2/N7/p4P1P/3K4/7p/1R4r1/1r5n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1213);
    }

    #[test]
    fn gentest_3753() {
        let board = Board::from_fen("2n3k1/1Q2p3/N7/p4P1P/3K4/1b5p/1R1r4/1r5n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 238);
        assert_eq!(perft(&board, 3, &PRECOMP), 6988);
    }

    #[test]
    fn gentest_3754() {
        let board = Board::from_fen("6k1/3Qp3/Nn6/p1K2P1P/8/1b5p/1R1r4/1r5n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1172);
    }

    #[test]
    fn gentest_3755() {
        let board = Board::from_fen("3Q4/4p2k/Nn6/p1K2P1P/8/7p/1R1r4/1r1b3n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1016);
    }

    #[test]
    fn gentest_3756() {
        let board = Board::from_fen("3Q4/4p2k/Nn1r1P2/p1K4P/8/7p/R7/1r1b3n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 878);
    }

    #[test]
    fn gentest_3757() {
        let board = Board::from_fen("1N1Q4/4p2k/3r1P2/p1K4P/2n5/1r5p/R7/3b3n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1103);
    }

    #[test]
    fn gentest_3758() {
        let board = Board::from_fen("1N6/4p3/3Q1P1k/p1K4P/2n5/1r5p/4R3/3b3n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1141);
    }

    #[test]
    fn gentest_3759() {
        let board = Board::from_fen("1N6/8/3p1P1k/p6P/2nK4/1r6/4R2p/3b3n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 637);
    }

    #[test]
    fn gentest_3760() {
        let board = Board::from_fen("1N2R3/8/3p1P1k/p6P/2nK4/7r/7p/3b3n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 502);
    }

    #[test]
    fn gentest_3761() {
        let board = Board::from_fen("1NR5/8/3p1P1k/p3n2r/3K4/8/7p/3b3n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 473);
        assert_eq!(perft(&board, 3, &PRECOMP), 8003);
    }

    #[test]
    fn gentest_3762() {
        let board = Board::from_fen("2R5/8/3p1P1k/N3n1r1/3K4/8/7p/3b3n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 627);
    }

    #[test]
    fn gentest_3763() {
        let board = Board::from_fen("3R4/8/3p1P1k/N2r4/3K2n1/8/7p/3b3n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 90);
        assert_eq!(perft(&board, 3, &PRECOMP), 1265);
    }

    #[test]
    fn gentest_3764() {
        let board = Board::from_fen("3R4/1N6/3p1P1k/4r3/6n1/2K5/7p/3b3n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 510);
    }

    #[test]
    fn gentest_3765() {
        let board = Board::from_fen("2R5/1N6/3p1P1k/8/6n1/r1K5/7p/3b3n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 150);
        assert_eq!(perft(&board, 3, &PRECOMP), 2956);
    }

    #[test]
    fn gentest_3766() {
        let board = Board::from_fen("7R/1N6/3p1P1k/8/1K4n1/r4b2/7p/7n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 42);
        assert_eq!(perft(&board, 3, &PRECOMP), 1172);
    }

    #[test]
    fn gentest_3767() {
        let board = Board::from_fen("8/1N6/3p1P2/8/1K3kn1/r4b1R/7p/7n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 457);
        assert_eq!(perft(&board, 3, &PRECOMP), 7886);
    }

    #[test]
    fn gentest_3768() {
        let board = Board::from_fen("8/1N6/3p1P2/3b4/5knR/K7/7p/7n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 305);
        assert_eq!(perft(&board, 3, &PRECOMP), 6212);
    }

    #[test]
    fn gentest_3769() {
        let board = Board::from_fen("8/1N6/3p1P1R/1b6/5kn1/K7/7p/7n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 370);
        assert_eq!(perft(&board, 3, &PRECOMP), 6900);
    }

    #[test]
    fn gentest_3770() {
        let board = Board::from_fen("3N4/8/3p1P1R/1b6/5kn1/6n1/1K5p/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 598);
    }

    #[test]
    fn gentest_3771() {
        let board = Board::from_fen("3N4/3b4/3p1P2/8/5kn1/6nR/1K6/7q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 684);
    }

    #[test]
    fn gentest_3772() {
        let board = Board::from_fen("3N4/3b4/3p1P2/8/5kn1/6R1/K7/2q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 513);
    }

    #[test]
    fn gentest_3773() {
        let board = Board::from_fen("8/8/2Np1P2/1bq5/5kn1/6R1/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 785);
    }

    #[test]
    fn gentest_3774() {
        let board = Board::from_fen("8/4NP2/3p4/1b3q2/5kn1/6R1/K7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 754);
    }

    #[test]
    fn gentest_3775() {
        let board = Board::from_fen("5N2/4N3/3p4/5q2/5k2/3b2R1/K4n2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 671);
    }

    #[test]
    fn gentest_3776() {
        let board = Board::from_fen("5N2/8/2Np4/5q2/2b2k2/K5R1/5n2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1030);
    }

    #[test]
    fn gentest_3777() {
        let board = Board::from_fen("5N2/8/b1Np4/q7/5k2/6R1/1K3n2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 913);
    }

    #[test]
    fn gentest_3778() {
        let board = Board::from_fen("8/7N/b1Np4/q7/5k2/6R1/8/2Kn4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 759);
    }

    #[test]
    fn gentest_3779() {
        let board = Board::from_fen("q7/7N/2Np4/8/2b2k2/4R3/8/2Kn4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 960);
    }

    #[test]
    fn gentest_3780() {
        let board = Board::from_fen("8/N7/3p1N2/8/2b2k2/4R3/8/2Kn4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 505);
        assert_eq!(perft(&board, 3, &PRECOMP), 8063);
    }

    #[test]
    fn gentest_3781() {
        let board = Board::from_fen("6N1/N7/3p4/8/2b2k2/4R3/8/2Kn4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 445);
        assert_eq!(perft(&board, 3, &PRECOMP), 9704);
    }

    #[test]
    fn gentest_3782() {
        let board = Board::from_fen("6N1/N7/3p4/8/5k2/3b4/3K4/3nR3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 413);
        assert_eq!(perft(&board, 3, &PRECOMP), 7483);
    }

    #[test]
    fn gentest_3783() {
        let board = Board::from_fen("6N1/8/2Np4/5b2/5k2/8/3K4/3nR3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 455);
    }

    #[test]
    fn gentest_3784() {
        let board = Board::from_fen("2b3N1/8/3p4/8/3N1k2/8/3K4/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 310);
        assert_eq!(perft(&board, 3, &PRECOMP), 3933);
    }

    #[test]
    fn gentest_3785() {
        let board = Board::from_fen("8/4N3/3pb3/8/3N1k2/8/3K4/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 392);
    }

    #[test]
    fn gentest_3786() {
        let board = Board::from_fen("8/8/2Np4/8/5k2/1b3N2/3K4/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 396);
        assert_eq!(perft(&board, 3, &PRECOMP), 5451);
    }

    #[test]
    fn gentest_3787() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3788() {
        let board = Board::from_fen("rnbqkb1r/pppppppp/7n/1B6/8/4P3/PPPP1PPP/RNBQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 574);
    }

    #[test]
    fn gentest_3789() {
        let board = Board::from_fen("r1bqkb1r/pppppppp/2n5/1B6/3P2n1/4P3/PPP2PPP/RNBQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 904);
    }

    #[test]
    fn gentest_3790() {
        let board = Board::from_fen("rnbqkb1r/pppppppp/8/8/3P1Pn1/4P3/PPP3PP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 795);
    }

    #[test]
    fn gentest_3791() {
        let board = Board::from_fen("rnbqkbr1/pp1ppppp/B1p5/8/3P1Pn1/4P3/PPP3PP/RNBQK1NR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 823);
    }

    #[test]
    fn gentest_3792() {
        let board = Board::from_fen("rnbqkbr1/pp2pppp/B1p5/3p4/2PP1Pn1/P3P3/1P4PP/RNBQK1NR b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 924);
    }

    #[test]
    fn gentest_3793() {
        let board = Board::from_fen("rnbqkbr1/pp2ppp1/B7/2pp3p/2PP1Pn1/P3P3/1P2K1PP/RNBQ2NR w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 878);
    }

    #[test]
    fn gentest_3794() {
        let board = Board::from_fen("rnb1kbr1/pB2ppp1/1q6/2pp3p/2PP1Pn1/P3P3/RP2K1PP/1NBQ2NR b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1351);
    }

    #[test]
    fn gentest_3795() {
        let board = Board::from_fen("rn2kbr1/pb2ppp1/2q5/2pp3p/2PP1Pn1/P1N1P3/RP2K1PP/2BQ2NR w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1109);
    }

    #[test]
    fn gentest_3796() {
        let board = Board::from_fen("rn2kbr1/pb2ppp1/1Nq5/2p4p/2PP1P2/P3P3/RP2K1Pn/2BQ2NR b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 995);
    }

    #[test]
    fn gentest_3797() {
        let board = Board::from_fen("rn2kbr1/pb2pp2/1N4p1/1qp4p/2PP1P2/PQ2P3/RP2K1Pn/2B3NR w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1058);
    }

    #[test]
    fn gentest_3798() {
        let board = Board::from_fen("rn2k1r1/pb2ppb1/1N4p1/1qpP3p/2P2P2/P3P3/RP2K1Pn/2BQ2NR b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1176);
    }

    #[test]
    fn gentest_3799() {
        let board = Board::from_fen("rn3kr1/pb2pp2/1N4pb/1PpP3p/5P2/P3P3/RP2K1Pn/2BQ2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 786);
    }

    #[test]
    fn gentest_3800() {
        let board = Board::from_fen("rn3kr1/1b2pp2/1N4pb/pPpP3p/5P2/P3P3/RP1Q2Pn/2B1K1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 803);
    }

    #[test]
    fn gentest_3801() {
        let board = Board::from_fen("rn3k1r/1b2p3/1N3ppb/pPpP3p/5P2/P1Q1P3/RP4Pn/2B1K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 904);
    }

    #[test]
    fn gentest_3802() {
        let board = Board::from_fen("rn3k1r/1b2p3/1N3ppb/pPpP1Q2/5P1p/P3P3/RP4Pn/2B1K1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 977);
    }

    #[test]
    fn gentest_3803() {
        let board = Board::from_fen("r5kr/1b2p3/1Nn2ppb/pPpP1Q2/5P1p/P3PN2/RP4Pn/2B1K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1374);
    }

    #[test]
    fn gentest_3804() {
        let board = Board::from_fen("r4bkr/1b2p3/1Nn2pp1/pPpP4/1P3P1p/P3PN1Q/R5Pn/2B1K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1424);
    }

    #[test]
    fn gentest_3805() {
        let board = Board::from_fen("r4bk1/1b2p3/1Nn3p1/pPpP1p1r/1P3P1p/P3PN1Q/R5Pn/2B1K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1304);
    }

    #[test]
    fn gentest_3806() {
        let board = Board::from_fen("r1N2bk1/1b2p2r/2n3p1/pPpP1p2/1P3P1p/P3PN1Q/R4KPn/2B3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1191);
    }

    #[test]
    fn gentest_3807() {
        let board = Board::from_fen("r1N2b2/nb2p1kr/6p1/pPpP1p2/1P1N1P1p/P3P2Q/R4KPn/2B3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1018);
    }

    #[test]
    fn gentest_3808() {
        let board = Board::from_fen("r4b2/nb2N1kr/6p1/pPpPpp2/1P1N1P1p/P3P2Q/5KPn/R1B3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1099);
    }

    #[test]
    fn gentest_3809() {
        let board = Board::from_fen("r7/n3b1kr/b1N3p1/pPpPpp2/1P1N1P1p/P3P2Q/5KPn/R1B3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1378);
    }

    #[test]
    fn gentest_3810() {
        let board = Board::from_fen("r7/n3b1kr/b5p1/pP1PNp2/PP1p1P1p/4P2Q/5KPn/R1B3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1132);
    }

    #[test]
    fn gentest_3811() {
        let board = Board::from_fen("2r5/n3b1kr/6p1/pb1P1p2/PPNp1P1p/4P2Q/5KPn/R1B3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1344);
    }

    #[test]
    fn gentest_3812() {
        let board = Board::from_fen("2r5/n3b1kr/6p1/p2P1p2/PPbp1P1p/B3P1Q1/5KPn/R5R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1140);
    }

    #[test]
    fn gentest_3813() {
        let board = Board::from_fen("2r5/n3b3/5kp1/pP1P1p1r/P1bp1P1p/B3P1Q1/5KPn/R5R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1012);
    }

    #[test]
    fn gentest_3814() {
        let board = Board::from_fen("2r5/n3b3/5kp1/pP1P1p1r/P1b2P1p/B2pP1Q1/6Pn/3RK1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 825);
    }

    #[test]
    fn gentest_3815() {
        let board = Board::from_fen("3r4/n7/3P1kp1/pP3p1r/P1b2P1p/b2pP1Q1/6Pn/3RK1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 651);
    }

    #[test]
    fn gentest_3816() {
        let board = Board::from_fen("3r4/n7/3P1kp1/pP3p1r/P1b2P1p/3RP3/6PQ/2b1K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 702);
    }

    #[test]
    fn gentest_3817() {
        let board = Board::from_fen("1r6/n6r/3P1kp1/pP3p2/P1b2PPp/3RP3/7Q/2b1K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1141);
    }

    #[test]
    fn gentest_3818() {
        let board = Board::from_fen("1r6/n6r/3P1kp1/pP3p2/P1b2PPp/b3P3/3R1Q2/4K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1078);
    }

    #[test]
    fn gentest_3819() {
        let board = Board::from_fen("r7/n6r/3P1k2/pP3pp1/P1b2PPp/b3P3/3R1Q2/4KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 903);
    }

    #[test]
    fn gentest_3820() {
        let board = Board::from_fen("r7/n4b1r/3P1k2/pP3pp1/P2R1PPQ/b3P3/8/4KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 941);
    }

    #[test]
    fn gentest_3821() {
        let board = Board::from_fen("2r5/5b1r/2nP1k2/pP3pp1/P3RPPQ/b3P3/8/4KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 970);
    }

    #[test]
    fn gentest_3822() {
        let board = Board::from_fen("2r5/5b2/2nP1k2/pP3ppr/P3RPP1/b3PR2/8/4K2Q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_3823() {
        let board = Board::from_fen("1r5r/5b2/2nP1k2/pP3pp1/P2R1PP1/b3PR2/8/4K2Q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1317);
    }

    #[test]
    fn gentest_3824() {
        let board = Board::from_fen("1r5r/5bk1/2nP4/pP3pp1/P2R1PPQ/b3PR2/5K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1313);
    }

    #[test]
    fn gentest_3825() {
        let board = Board::from_fen("6r1/5bk1/2nP3r/pP3pp1/P2R1PP1/b3PR2/5K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 932);
    }

    #[test]
    fn gentest_3826() {
        let board = Board::from_fen("3r4/5bk1/2nP3r/pP3pp1/P4PP1/b2RPRK1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 795);
    }

    #[test]
    fn gentest_3827() {
        let board = Board::from_fen("2r3k1/3P1b2/2n4r/pP3pp1/P4PP1/b2RPRK1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 934);
    }

    #[test]
    fn gentest_3828() {
        let board = Board::from_fen("2B3k1/5b2/2n4r/pP3pp1/P4PP1/2R1PRK1/8/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 766);
    }

    #[test]
    fn gentest_3829() {
        let board = Board::from_fen("2Bn2k1/5b2/7r/pP3p2/P4pP1/2R1PR2/5K2/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 920);
    }

    #[test]
    fn gentest_3830() {
        let board = Board::from_fen("3n2k1/5b2/8/pP3B2/P4pP1/1R2PR2/5K2/2b4r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 623);
    }

    #[test]
    fn gentest_3831() {
        let board = Board::from_fen("6k1/5b2/3n4/pP3B2/P4pP1/1R2PR2/6K1/2b4r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 816);
    }

    #[test]
    fn gentest_3832() {
        let board = Board::from_fen("6k1/5b1r/3n4/pP6/P4pP1/1R2PR2/2B2K2/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 662);
    }

    #[test]
    fn gentest_3833() {
        let board = Board::from_fen("7k/5b1B/3n4/pP6/P4pP1/1R2PR1r/5K2/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 747);
    }

    #[test]
    fn gentest_3834() {
        let board = Board::from_fen("7k/5b1B/8/pP6/P1n1PpP1/1R3R1r/4K3/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 648);
    }

    #[test]
    fn gentest_3835() {
        let board = Board::from_fen("7k/5b2/7r/pP3B2/P3PpP1/1R3R2/3nK3/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 833);
    }

    #[test]
    fn gentest_3836() {
        let board = Board::from_fen("7k/5b2/1P6/p4BP1/P3Pp2/1R3R1r/3nK3/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 690);
    }

    #[test]
    fn gentest_3837() {
        let board = Board::from_fen("7k/5b2/1P4B1/p5P1/P3Pp2/5R1r/3nK3/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 528);
        assert_eq!(perft(&board, 3, &PRECOMP), 9190);
    }

    #[test]
    fn gentest_3838() {
        let board = Board::from_fen("6k1/5b2/1P4B1/p5P1/P3Pp2/7R/3n4/2b1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 395);
        assert_eq!(perft(&board, 3, &PRECOMP), 6985);
    }

    #[test]
    fn gentest_3839() {
        let board = Board::from_fen("6k1/5b2/1P4B1/p5P1/P3Pp2/6R1/7n/2b1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 323);
        assert_eq!(perft(&board, 3, &PRECOMP), 5711);
    }

    #[test]
    fn gentest_3840() {
        let board = Board::from_fen("8/5bk1/1P4B1/p5P1/P3Pp2/8/7n/2b1KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 252);
        assert_eq!(perft(&board, 3, &PRECOMP), 5077);
    }

    #[test]
    fn gentest_3841() {
        let board = Board::from_fen("8/6k1/1P4B1/p2b2P1/P3Pp2/4bR2/7n/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 372);
        assert_eq!(perft(&board, 3, &PRECOMP), 6062);
    }

    #[test]
    fn gentest_3842() {
        let board = Board::from_fen("8/6k1/1P4B1/p2b2P1/P3Pp2/7R/4K2n/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 464);
        assert_eq!(perft(&board, 3, &PRECOMP), 9188);
    }

    #[test]
    fn gentest_3843() {
        let board = Board::from_fen("8/6k1/1P4BR/p2b2P1/P3Pp2/8/4K2n/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 337);
        assert_eq!(perft(&board, 3, &PRECOMP), 6391);
    }

    #[test]
    fn gentest_3844() {
        let board = Board::from_fen("8/6kR/1P4B1/p2b2P1/P3Ppn1/8/4K3/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 74);
        assert_eq!(perft(&board, 3, &PRECOMP), 1497);
    }

    #[test]
    fn gentest_3845() {
        let board = Board::from_fen("6k1/7R/1P6/p2b2PB/P3Ppn1/8/1b2K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 529);
    }

    #[test]
    fn gentest_3846() {
        let board = Board::from_fen("b5k1/7R/1P2B3/p5P1/P3Pp2/8/1b2K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 56);
        assert_eq!(perft(&board, 3, &PRECOMP), 824);
    }

    #[test]
    fn gentest_3847() {
        let board = Board::from_fen("b4k2/2R5/1P2B3/p5P1/P3P3/5p2/1b2K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 118);
        assert_eq!(perft(&board, 3, &PRECOMP), 3481);
    }

    #[test]
    fn gentest_3848() {
        let board = Board::from_fen("b4k2/6R1/1P2B3/p5P1/P2bP3/5p2/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
        assert_eq!(perft(&board, 3, &PRECOMP), 7035);
    }

    #[test]
    fn gentest_3849() {
        let board = Board::from_fen("b4k2/6R1/1P6/p3bBP1/P3P3/8/3K1p2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 489);
    }

    #[test]
    fn gentest_3850() {
        let board = Board::from_fen("b4k2/6RB/1P6/p5P1/P3Pb2/8/2K2p2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 377);
        assert_eq!(perft(&board, 3, &PRECOMP), 6861);
    }

    #[test]
    fn gentest_3851() {
        let board = Board::from_fen("b4k2/4R2B/1P6/p5P1/P3P3/8/2K2p1b/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 337);
        assert_eq!(perft(&board, 3, &PRECOMP), 6816);
    }

    #[test]
    fn gentest_3852() {
        let board = Board::from_fen("b4k2/4R2B/1P6/p5P1/P3P3/6b1/1K3p2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 330);
        assert_eq!(perft(&board, 3, &PRECOMP), 6020);
    }

    #[test]
    fn gentest_3853() {
        let board = Board::from_fen("1b3k2/7B/1P6/p5P1/P3R3/8/1K3p2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 330);
        assert_eq!(perft(&board, 3, &PRECOMP), 8038);
    }

    #[test]
    fn gentest_3854() {
        let board = Board::from_fen("1b6/6kB/1P6/p5P1/P3R3/8/1K3p2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 361);
        assert_eq!(perft(&board, 3, &PRECOMP), 5674);
    }

    #[test]
    fn gentest_3855() {
        let board = Board::from_fen("8/6kB/1P6/p5P1/PR6/6b1/1K3p2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 385);
        assert_eq!(perft(&board, 3, &PRECOMP), 8775);
    }

    #[test]
    fn gentest_3856() {
        let board = Board::from_fen("5k2/8/1P6/p4BP1/P2R4/6b1/1K3p2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 520);
        assert_eq!(perft(&board, 3, &PRECOMP), 8736);
    }

    #[test]
    fn gentest_3857() {
        let board = Board::from_fen("5k2/8/1P6/p2R1BP1/P4r2/6b1/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 625);
    }

    #[test]
    fn gentest_3858() {
        let board = Board::from_fen("6k1/8/1P6/p4BP1/P4r2/3R2b1/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 521);
    }

    #[test]
    fn gentest_3859() {
        let board = Board::from_fen("6k1/8/1P6/p4BP1/r7/2R3b1/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 611);
    }

    #[test]
    fn gentest_3860() {
        let board = Board::from_fen("6k1/8/1P2B3/p5P1/4r3/6R1/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 144);
        assert_eq!(perft(&board, 3, &PRECOMP), 2361);
    }

    #[test]
    fn gentest_3861() {
        let board = Board::from_fen("5k2/8/1P2B3/p5P1/7r/1R6/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 470);
    }

    #[test]
    fn gentest_3862() {
        let board = Board::from_fen("5k2/8/1P6/pR1B2P1/5r2/8/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 399);
        assert_eq!(perft(&board, 3, &PRECOMP), 6721);
    }

    #[test]
    fn gentest_3863() {
        let board = Board::from_fen("5k2/8/1P6/pR4P1/8/8/1K4B1/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 430);
        assert_eq!(perft(&board, 3, &PRECOMP), 9562);
    }

    #[test]
    fn gentest_3864() {
        let board = Board::from_fen("5k2/8/1P1r2P1/pR6/8/K7/6B1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 406);
        assert_eq!(perft(&board, 3, &PRECOMP), 6570);
    }

    #[test]
    fn gentest_3865() {
        let board = Board::from_fen("8/4k3/1Pr3P1/pR6/4B3/K7/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 480);
    }

    #[test]
    fn gentest_3866() {
        let board = Board::from_fen("5k2/8/1Pr3P1/pR6/4B3/K7/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 433);
        assert_eq!(perft(&board, 3, &PRECOMP), 6913);
    }

    #[test]
    fn gentest_3867() {
        let board = Board::from_fen("8/6k1/1P3rP1/pR1B4/8/K7/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 407);
        assert_eq!(perft(&board, 3, &PRECOMP), 9510);
    }

    #[test]
    fn gentest_3868() {
        let board = Board::from_fen("B7/6k1/1P4P1/pR6/8/1K6/5r2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 393);
        assert_eq!(perft(&board, 3, &PRECOMP), 7123);
    }

    #[test]
    fn gentest_3869() {
        let board = Board::from_fen("B7/6k1/1P4P1/pR3r2/8/2K5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 455);
    }

    #[test]
    fn gentest_3870() {
        let board = Board::from_fen("B4k2/8/1P4P1/p4r2/8/2K5/8/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 6672);
    }

    #[test]
    fn gentest_3871() {
        let board = Board::from_fen("7k/8/1P4P1/p4r2/8/2K5/6B1/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 434);
    }

    #[test]
    fn gentest_3872() {
        let board = Board::from_fen("6k1/8/1P4P1/p4r2/8/2K5/6B1/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 474);
        assert_eq!(perft(&board, 3, &PRECOMP), 7303);
    }

    #[test]
    fn gentest_3873() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3874() {
        let board = Board::from_fen("r1bqkbnr/pppppppp/2n5/8/3P4/2P5/PP2PPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 639);
    }

    #[test]
    fn gentest_3875() {
        let board = Board::from_fen("r1bqkbnr/pppppp1p/8/6p1/3n1P2/2P5/PP2P1PP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 790);
    }

    #[test]
    fn gentest_3876() {
        let board = Board::from_fen("r1bqkbnr/pppppp2/8/6pp/3n1P2/2P4P/PP1NP1P1/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 696);
    }

    #[test]
    fn gentest_3877() {
        let board = Board::from_fen("r1bqkbnr/p1pppp2/1p6/1n4pp/5P2/2P4P/PP1NP1PR/R1BQKBN1 w Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 620);
    }

    #[test]
    fn gentest_3878() {
        let board = Board::from_fen("r1bqkbnr/p1p1pp2/1p6/1n1p2pp/4PP2/2P4P/PP1N1KPR/R1BQ1BN1 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1246);
    }

    #[test]
    fn gentest_3879() {
        let board = Board::from_fen("r1bqkbnr/p3pp2/1pp5/1n3Ppp/4p3/2P4P/PP1N1KPR/R1BQ1BN1 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1153);
    }

    #[test]
    fn gentest_3880() {
        let board = Board::from_fen("r1b1kbnr/p3pp2/1pp2P2/1n4pp/4N3/2Pq3P/PP3KPR/R1BQ1BN1 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1479);
    }

    #[test]
    fn gentest_3881() {
        let board = Board::from_fen("r3k1nr/p3ppb1/1pp2P2/1n4pp/4N1b1/2Pq1Q1P/PP3KPR/R1B2BN1 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1568);
    }

    #[test]
    fn gentest_3882() {
        let board = Board::from_fen("r3k1nr/p3ppb1/1pp2P2/1n5p/6b1/2P2N1P/PP3KPR/R1B2BN1 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1012);
    }

    #[test]
    fn gentest_3883() {
        let board = Board::from_fen("r3k1nr/p4p2/1pp1pP1b/1n5p/2B3b1/2P2N1P/PP3KPR/R1B3N1 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 941);
    }

    #[test]
    fn gentest_3884() {
        let board = Board::from_fen("2kr2nr/p4p2/1pp1pP1b/1n5p/6b1/1BP4P/PP1N1KPR/R1B3N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 829);
    }

    #[test]
    fn gentest_3885() {
        let board = Board::from_fen("2k3nr/p4p2/1pp1pP1b/1n5p/8/1BPr2PP/PP1N1K1R/R1Bb2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 900);
    }

    #[test]
    fn gentest_3886() {
        let board = Board::from_fen("2k3nr/p4p2/1pp1pP1b/1n5p/8/1BP2rPP/PP1N2K1/R1Bb2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 724);
    }

    #[test]
    fn gentest_3887() {
        let board = Board::from_fen("3k2nr/p4p2/1pp1pP1b/1n5p/8/1BP2rPP/PPbN2KR/R1B3N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 813);
    }

    #[test]
    fn gentest_3888() {
        let board = Board::from_fen("2k3nr/p4p2/1pp1pP1b/1n5p/2B1N3/2P2rPP/PPb3KR/R1B3N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1093);
    }

    #[test]
    fn gentest_3889() {
        let board = Board::from_fen("2k4r/p4p2/1pp1pn1b/1n5p/2B1b3/2P2rPP/PP4K1/R1B3NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1030);
    }

    #[test]
    fn gentest_3890() {
        let board = Board::from_fen("2k4r/p4p2/1pp1pn1b/1n3b1p/2B2B2/2P2rPP/PP4K1/R5NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1295);
    }

    #[test]
    fn gentest_3891() {
        let board = Board::from_fen("2k4r/p2n1p2/1pp1p2b/1n5p/2B2B2/2P2rPb/PP5K/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1187);
    }

    #[test]
    fn gentest_3892() {
        let board = Board::from_fen("2k4r/p2n1p2/1pp1p2b/1n5p/2B2rP1/2P4b/PP5K/2R3NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 976);
    }

    #[test]
    fn gentest_3893() {
        let board = Board::from_fen("2k4r/p2n1p2/1pp1p2b/1n5p/2B2rP1/2P4K/PP6/2R3NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1017);
    }

    #[test]
    fn gentest_3894() {
        let board = Board::from_fen("2k4r/p2n1p2/1pp1p2b/1n5p/1P4P1/1BP4K/P4r2/2R3NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 961);
    }

    #[test]
    fn gentest_3895() {
        let board = Board::from_fen("2k4r/p2n1p2/1pp1p2b/8/1P4K1/1Bn5/P4r2/2R3NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1316);
    }

    #[test]
    fn gentest_3896() {
        let board = Board::from_fen("7r/p1kn1p2/1pp1p2b/8/1P4K1/1Bn2N2/P4r2/4R2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1650);
    }

    #[test]
    fn gentest_3897() {
        let board = Board::from_fen("7r/pk1n1p2/1pp1p2b/8/1P4K1/1Bn5/Pr1N4/4R2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1650);
    }

    #[test]
    fn gentest_3898() {
        let board = Board::from_fen("7r/pk1n1p2/1p2p2b/1Pp5/B5K1/2n5/Pr1N4/4R2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1247);
    }

    #[test]
    fn gentest_3899() {
        let board = Board::from_fen("7r/1k1n1p2/1p2p3/pPp5/B5K1/2n1b2R/Pr1N4/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1454);
    }

    #[test]
    fn gentest_3900() {
        let board = Board::from_fen("7r/1k1n1p2/1p6/pPp1p3/B5K1/2n1b2R/PN6/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1075);
    }

    #[test]
    fn gentest_3901() {
        let board = Board::from_fen("5r2/1k1n1p2/1p5b/pPp1p3/B5K1/2n4R/PN6/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 969);
    }

    #[test]
    fn gentest_3902() {
        let board = Board::from_fen("1n3r2/1k3p2/1p5b/pPp1p3/B5K1/2n1R3/PN6/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 828);
    }

    #[test]
    fn gentest_3903() {
        let board = Board::from_fen("1n3r2/1k3p2/1p5b/pPp1p3/B5K1/2n3R1/PN6/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 823);
    }

    #[test]
    fn gentest_3904() {
        let board = Board::from_fen("5r2/1k1n1p2/1p5b/pPp1p3/B7/2R3RK/PN6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 709);
    }

    #[test]
    fn gentest_3905() {
        let board = Board::from_fen("5r2/1k1n1p2/1p5b/pPp1p3/B7/2RN2RK/P7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 722);
    }

    #[test]
    fn gentest_3906() {
        let board = Board::from_fen("6r1/1k1n1p2/1p5b/pPN1p3/B7/6RK/P7/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 248);
        assert_eq!(perft(&board, 3, &PRECOMP), 6851);
    }

    #[test]
    fn gentest_3907() {
        let board = Board::from_fen("2k3r1/3n4/1p3p1b/pPN1p3/B7/2R4K/P7/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 617);
    }

    #[test]
    fn gentest_3908() {
        let board = Board::from_fen("1k4r1/3n4/1p3p1b/pPN1p3/B7/2R4K/P7/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 785);
    }

    #[test]
    fn gentest_3909() {
        let board = Board::from_fen("1k6/8/1p3p1b/pPn1p1r1/B7/2RN3K/P7/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 665);
    }

    #[test]
    fn gentest_3910() {
        let board = Board::from_fen("1k3b2/8/1p3p2/pPn1p1r1/B7/2RN4/P1R4K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 599);
    }

    #[test]
    fn gentest_3911() {
        let board = Board::from_fen("1k3br1/8/1p3p2/pP2p3/B3n3/2R5/P1R2N1K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 638);
    }

    #[test]
    fn gentest_3912() {
        let board = Board::from_fen("1k3br1/8/1pR5/pP2pp2/B3n3/8/P1R4K/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 687);
    }

    #[test]
    fn gentest_3913() {
        let board = Board::from_fen("1k3br1/8/1p5R/pP2pp2/B7/8/P1R4K/1n1N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 672);
    }

    #[test]
    fn gentest_3914() {
        let board = Board::from_fen("1k3b2/8/1pR1R3/pP2pp2/B7/6r1/P6K/1n1N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 674);
    }

    #[test]
    fn gentest_3915() {
        let board = Board::from_fen("5br1/1k6/1pR1R3/pP2pp2/B7/8/P4N1K/1n6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 572);
    }

    #[test]
    fn gentest_3916() {
        let board = Board::from_fen("5b1r/1k6/1pR1R3/pP2pp2/B7/3N2K1/P7/1n6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 627);
    }

    #[test]
    fn gentest_3917() {
        let board = Board::from_fen("2R4r/1k6/1p2R3/pPb1pp2/B7/3N2K1/P7/1n6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 767);
    }

    #[test]
    fn gentest_3918() {
        let board = Board::from_fen("2R4r/1k6/1p2R3/pP2pp2/8/b5K1/PN6/1n1B4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 779);
    }

    #[test]
    fn gentest_3919() {
        let board = Board::from_fen("2R1r3/1k2b3/1p5R/pP2pp2/8/6K1/PN6/1n1B4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 823);
    }

    #[test]
    fn gentest_3920() {
        let board = Board::from_fen("2R1r3/1k2bR2/1p6/1P2pp2/p7/6K1/PN6/1n1B4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 351);
        assert_eq!(perft(&board, 3, &PRECOMP), 5541);
    }

    #[test]
    fn gentest_3921() {
        let board = Board::from_fen("2r5/1k2bR2/1p6/1P3p2/p3p3/6K1/PNR5/1n1B4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 653);
    }

    #[test]
    fn gentest_3922() {
        let board = Board::from_fen("1r6/1k2b3/1p3R2/1P3p2/p3p3/6K1/PN2R3/1n1B4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 630);
    }

    #[test]
    fn gentest_3923() {
        let board = Board::from_fen("kr1b4/8/1p3R2/1P3p2/B3p3/6K1/PN2R3/1n6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 375);
        assert_eq!(perft(&board, 3, &PRECOMP), 9715);
    }

    #[test]
    fn gentest_3924() {
        let board = Board::from_fen("kr1b4/8/1p3R2/1P3p2/4p3/nB4K1/PN6/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 411);
        assert_eq!(perft(&board, 3, &PRECOMP), 6750);
    }

    #[test]
    fn gentest_3925() {
        let board = Board::from_fen("1r1b4/1k6/1p3R2/1P3p2/B7/n3p1K1/PN6/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 436);
    }

    #[test]
    fn gentest_3926() {
        let board = Board::from_fen("1r1b4/1k6/1p3R2/1P3p2/B1n5/3Np1K1/P7/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 512);
        assert_eq!(perft(&board, 3, &PRECOMP), 9137);
    }

    #[test]
    fn gentest_3927() {
        let board = Board::from_fen("1rkb4/8/1p3R2/1P3p2/B7/3Np2K/P2n4/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 487);
    }

    #[test]
    fn gentest_3928() {
        let board = Board::from_fen("1rk5/4b3/1p3R2/1P3p2/B6K/3Np3/P2n4/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 472);
        assert_eq!(perft(&board, 3, &PRECOMP), 9783);
    }

    #[test]
    fn gentest_3929() {
        let board = Board::from_fen("1rk5/8/1p3R2/1P3p2/7K/b2Np3/P1Bn4/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 619);
    }

    #[test]
    fn gentest_3930() {
        let board = Board::from_fen("1rk5/8/1p3R2/1P3p2/P6K/4p3/1bBn4/R3N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 529);
    }

    #[test]
    fn gentest_3931() {
        let board = Board::from_fen("2k5/1r6/1p3R2/1P3p2/P6K/3Bpn2/1b6/R3N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 108);
        assert_eq!(perft(&board, 3, &PRECOMP), 2906);
    }

    #[test]
    fn gentest_3932() {
        let board = Board::from_fen("1rk5/8/1p3R2/1P3p1K/P7/3BpN2/1b6/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 548);
        assert_eq!(perft(&board, 3, &PRECOMP), 8803);
    }

    #[test]
    fn gentest_3933() {
        let board = Board::from_fen("1r6/3k4/1p3R2/1P3pNK/P7/3Bp3/8/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 480);
    }

    #[test]
    fn gentest_3934() {
        let board = Board::from_fen("1r6/3k1N2/1p3R2/1P3p1K/P7/4p3/1bB5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 478);
        assert_eq!(perft(&board, 3, &PRECOMP), 9290);
    }

    #[test]
    fn gentest_3935() {
        let board = Board::from_fen("1r6/3k1N2/1p4R1/1P3p1K/P7/8/1bB5/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 738);
    }

    #[test]
    fn gentest_3936() {
        let board = Board::from_fen("1r6/4kN2/1p2B1R1/1P5K/P7/8/1b6/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 699);
    }

    #[test]
    fn gentest_3937() {
        let board = Board::from_fen("3r4/4k3/1p2B1RN/1P5K/P7/8/8/b3b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 712);
    }

    #[test]
    fn gentest_3938() {
        let board = Board::from_fen("3r1k2/8/1p2B2N/1P5K/P7/6R1/8/b3b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 827);
    }

    #[test]
    fn gentest_3939() {
        let board = Board::from_fen("3r1k2/8/1p2B2N/1P2b3/P5K1/6R1/8/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_3940() {
        let board = Board::from_fen("5k2/6R1/1p2B2N/1P2b3/P7/5K2/8/b2r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 939);
    }

    #[test]
    fn gentest_3941() {
        let board = Board::from_fen("5k2/6R1/1p2B2N/1P6/P7/4K3/7b/b4r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 862);
    }

    #[test]
    fn gentest_3942() {
        let board = Board::from_fen("5k2/2R5/1p2B2N/1P6/P7/8/5K1b/b2r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 750);
    }

    #[test]
    fn gentest_3943() {
        let board = Board::from_fen("5k2/2R2N2/1p2B3/1P1r4/P7/8/5K1b/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 815);
    }

    #[test]
    fn gentest_3944() {
        let board = Board::from_fen("5k2/2Rr1N2/1p2B3/1P6/P7/5K2/7b/b7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 771);
    }

    #[test]
    fn gentest_3945() {
        let board = Board::from_fen("5k2/2R5/1p2B2N/1P6/P7/3r1K2/7b/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 140);
        assert_eq!(perft(&board, 3, &PRECOMP), 4142);
    }

    #[test]
    fn gentest_3946() {
        let board = Board::from_fen("5k2/2R5/1p2B2N/PP6/6K1/2r5/7b/b7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 603);
    }

    #[test]
    fn gentest_3947() {
        let board = Board::from_fen("1b3k2/8/1p2B2N/PP6/6K1/2R5/1b6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 534);
    }

    #[test]
    fn gentest_3948() {
        let board = Board::from_fen("1b3k2/8/1p5N/PP6/2B3K1/5R2/8/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 152);
        assert_eq!(perft(&board, 3, &PRECOMP), 2298);
    }

    #[test]
    fn gentest_3949() {
        let board = Board::from_fen("5k2/2b5/1p5N/PP6/2B2bK1/8/5R2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 329);
        assert_eq!(perft(&board, 3, &PRECOMP), 9348);
    }

    #[test]
    fn gentest_3950() {
        let board = Board::from_fen("5k2/2b5/1p5N/PP6/2B5/5K2/6R1/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 547);
        assert_eq!(perft(&board, 3, &PRECOMP), 9555);
    }

    #[test]
    fn gentest_3951() {
        let board = Board::from_fen("5k2/2b5/1p3b1N/PP6/8/5K2/6R1/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 573);
    }

    #[test]
    fn gentest_3952() {
        let board = Board::from_fen("5k1b/2b5/1p5N/PP6/4K3/8/4R3/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 396);
        assert_eq!(perft(&board, 3, &PRECOMP), 7087);
    }

    #[test]
    fn gentest_3953() {
        let board = Board::from_fen("4k2b/8/1p5N/PP6/4K3/6b1/3R4/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 565);
    }

    #[test]
    fn gentest_3954() {
        let board = Board::from_fen("1b2k2b/8/1p5N/PP6/4K3/8/1R6/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 458);
        assert_eq!(perft(&board, 3, &PRECOMP), 8881);
    }

    #[test]
    fn gentest_3955() {
        let board = Board::from_fen("7b/3k4/1p5N/PP6/4Kb2/8/1R4B1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 521);
    }

    #[test]
    fn gentest_3956() {
        let board = Board::from_fen("7b/8/1p2k3/PP3N2/4Kb2/8/1R6/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 573);
    }

    #[test]
    fn gentest_3957() {
        let board = Board::from_fen("7b/8/1p3k2/PP3N2/2B1K3/4b3/1R6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 434);
    }

    #[test]
    fn gentest_3958() {
        let board = Board::from_fen("7b/8/1p3k2/PPb2N2/1R2K3/3B4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 335);
        assert_eq!(perft(&board, 3, &PRECOMP), 5102);
    }

    #[test]
    fn gentest_3959() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_3960() {
        let board = Board::from_fen("rnbqkb1r/pppppppp/7n/8/3PP3/8/PPP2PPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 759);
    }

    #[test]
    fn gentest_3961() {
        let board = Board::from_fen("rnbqkbr1/pp1ppppp/2p4n/7Q/3PP3/8/PPP2PPP/RNB1KBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 884);
    }

    #[test]
    fn gentest_3962() {
        let board = Board::from_fen("rnb1kbr1/pp1ppppp/1qp4n/6Q1/3PP3/8/PPP2PPP/RNB1KBNR b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1116);
    }

    #[test]
    fn gentest_3963() {
        let board = Board::from_fen("rnb1kbr1/pp1ppppp/2p4n/6Q1/3PPP2/2q5/P1P3PP/RNB1KBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 185);
        assert_eq!(perft(&board, 3, &PRECOMP), 6365);
    }

    #[test]
    fn gentest_3964() {
        let board = Board::from_fen("r1b1kbr1/pp1ppppp/n1p4n/6Q1/3PPP2/2q5/P1PBK1PP/RN3BNR b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1093);
    }

    #[test]
    fn gentest_3965() {
        let board = Board::from_fen("r1b1kb1r/pp1ppppp/n1p4n/6Q1/3PPP2/4B3/P1P1K1PP/RN2qBNR w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 86);
        assert_eq!(perft(&board, 3, &PRECOMP), 2847);
    }

    #[test]
    fn gentest_3966() {
        let board = Board::from_fen("r1b1kb1r/pp1ppppp/n1p4n/6Q1/1q1PPP2/P2KB3/2P3PP/RN3BNR b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 975);
    }

    #[test]
    fn gentest_3967() {
        let board = Board::from_fen("r1b1kb1r/pp1pp1pp/n1p2p1Q/8/3PPP2/q2KB3/2P3PP/RN3BNR w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 194);
        assert_eq!(perft(&board, 3, &PRECOMP), 5602);
    }

    #[test]
    fn gentest_3968() {
        let board = Board::from_fen("r1b1kb1r/pp1pp1pp/n1p2p1Q/8/q2PPP2/4B3/2PKB1PP/RN4NR b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 975);
    }

    #[test]
    fn gentest_3969() {
        let board = Board::from_fen("r1b1kb1r/ppnpp1pp/2p2p1Q/8/1q1PPP2/4B3/2P1B1PP/RN1K2NR w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1327);
    }

    #[test]
    fn gentest_3970() {
        let board = Board::from_fen("r1b1kb1r/p1npp1pp/2p2p1Q/1p6/1q1PPP2/4B3/2P3PP/RNK2BNR b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1019);
    }

    #[test]
    fn gentest_3971() {
        let board = Board::from_fen("r3kb1r/pbnpp2p/2p2p1p/Rp6/1q1PPP2/4B3/2P3PP/1NK2BNR w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 990);
    }

    #[test]
    fn gentest_3972() {
        let board = Board::from_fen("r3kb1r/pbnpp2p/2p2p1p/Rp6/3PPP2/4B3/2P1B1PP/1K4NR b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 732);
    }

    #[test]
    fn gentest_3973() {
        let board = Board::from_fen("r3kb1r/pbnpp2p/2p2p2/R6p/1p1PPP2/4BN2/2P1B1PP/1K5R w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1183);
    }

    #[test]
    fn gentest_3974() {
        let board = Board::from_fen("r1b1kb1r/p1npp2p/2p2p2/R3N2p/1p1PPP2/4B3/K1P1B1PP/7R b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 934);
    }

    #[test]
    fn gentest_3975() {
        let board = Board::from_fen("r1b1kbr1/p2pp2p/2p1npN1/R6p/1p1PPP2/4B3/K1P1B1PP/7R w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1300);
    }

    #[test]
    fn gentest_3976() {
        let board = Board::from_fen("1rb1kbr1/p2pp2p/2p1npN1/1R5p/1p1PPP2/4B3/2P1B1PP/1K5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1348);
    }

    #[test]
    fn gentest_3977() {
        let board = Board::from_fen("1rbk1br1/p1npp2p/2p2pN1/1R5p/1p1PPP1P/4B3/2P1B1P1/1K5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1312);
    }

    #[test]
    fn gentest_3978() {
        let board = Board::from_fen("1rbk1br1/pR1pp2p/n1p2pN1/7p/1p1PPP1P/8/2P1BBP1/1K5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 823);
    }

    #[test]
    fn gentest_3979() {
        let board = Board::from_fen("1rbk1brN/pR1pp2p/2p5/2n2p1p/1p1PPP1P/8/2P1BBP1/1K5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1137);
    }

    #[test]
    fn gentest_3980() {
        let board = Board::from_fen("1rbk1brN/pR1p3p/2p5/2n1pp1p/1p1PPP1P/6P1/2P1B3/1K2B2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1148);
    }

    #[test]
    fn gentest_3981() {
        let board = Board::from_fen("1rbk1b1N/pR4rp/2pp4/2n1pp1p/1p1PPP1P/6PR/2P1B3/1K2B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1234);
    }

    #[test]
    fn gentest_3982() {
        let board = Board::from_fen("1r1k1b1N/pR1b2rp/2pp4/2n1pP1p/1p1P1P1P/6PR/2P1BB2/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1134);
    }

    #[test]
    fn gentest_3983() {
        let board = Board::from_fen("1r1k1b1N/pn1b2rp/2p5/3ppP1p/1p1P1P1P/6PR/2P1B3/1K4B1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 775);
    }

    #[test]
    fn gentest_3984() {
        let board = Board::from_fen("1r1k3N/pn1b2rp/2pb4/3ppP1p/1p1P1P1P/2P3PR/4B2B/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 714);
    }

    #[test]
    fn gentest_3985() {
        let board = Board::from_fen("1r1k3N/1n1b2rp/3b4/p1pppP1p/1p1P1PPP/2P4R/4B2B/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 861);
    }

    #[test]
    fn gentest_3986() {
        let board = Board::from_fen("1r1k3N/1n1b3p/3b1Pr1/p1ppp2p/1p1P1PPP/2P4R/2K1B2B/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 900);
    }

    #[test]
    fn gentest_3987() {
        let board = Board::from_fen("1r1k3N/1n1b3p/3b1P2/p1ppp1rp/3P1PPP/2p1R3/2K1B2B/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 893);
    }

    #[test]
    fn gentest_3988() {
        let board = Board::from_fen("1r1k3N/1n1b3p/B2b1P2/p1ppp1r1/3P1PpP/2p3R1/2K4B/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 779);
    }

    #[test]
    fn gentest_3989() {
        let board = Board::from_fen("1r5N/1n1bkP1p/B2b4/p2pp1r1/2pP1PpP/2p3R1/2K4B/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 842);
    }

    #[test]
    fn gentest_3990() {
        let board = Board::from_fen("1r5N/3bkP1p/2Bb4/p2ppr2/2pP1PpP/2p3R1/2K4B/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 935);
    }

    #[test]
    fn gentest_3991() {
        let board = Board::from_fen("7r/2bbkP1p/8/pB1ppr2/2pP1PpP/2p3R1/2K4B/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 765);
    }

    #[test]
    fn gentest_3992() {
        let board = Board::from_fen("5B1r/2bb1k1p/8/pB1ppr2/2pP1PpP/2p5/2K3RB/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 732);
    }

    #[test]
    fn gentest_3993() {
        let board = Board::from_fen("1b3Bkr/3b3p/8/pB1ppr2/2pP1PpP/2p5/2KR3B/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 617);
    }

    #[test]
    fn gentest_3994() {
        let board = Board::from_fen("1b3Bkr/3b3p/8/pB1pp1rP/2pP1Pp1/2p5/3R3B/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 634);
    }

    #[test]
    fn gentest_3995() {
        let board = Board::from_fen("1b5r/3b2kp/8/pB1pp1rP/2pP1Pp1/2p5/3R3B/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 644);
    }

    #[test]
    fn gentest_3996() {
        let board = Board::from_fen("1b5r/6kp/2b4P/p2pp1r1/B1pP1Pp1/2p5/3R3B/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 126);
        assert_eq!(perft(&board, 3, &PRECOMP), 3174);
    }

    #[test]
    fn gentest_3997() {
        let board = Board::from_fen("7r/7p/2bb2kP/p2pp1r1/B1pP1Pp1/2p5/6RB/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 670);
    }

    #[test]
    fn gentest_3998() {
        let board = Board::from_fen("7r/7p/3b2kP/pb1pP1r1/B1p2Pp1/2p5/6R1/3K2B1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 753);
    }

    #[test]
    fn gentest_3999() {
        let board = Board::from_fen("7r/7p/2bb2kP/p2pP1r1/B1p2P2/2p1B1p1/6R1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 837);
    }

    #[test]
    fn gentest_4000() {
        let board = Board::from_fen("4r3/7p/1Bbb2kP/p2pP1r1/B1p2P2/2p3p1/2R5/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 885);
    }

    #[test]
    fn gentest_4001() {
        let board = Board::from_fen("8/7p/2bb2kP/p2pr2r/B1p2P2/2p3p1/2R2B2/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 673);
    }

    #[test]
    fn gentest_4002() {
        let board = Board::from_fen("8/7p/2bb2kP/p2pr3/2p2P1r/1Bp3p1/2R5/3K2B1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 808);
    }

    #[test]
    fn gentest_4003() {
        let board = Board::from_fen("8/5k1p/2bb3P/3pr3/p1p2P1r/1BR3p1/8/3K2B1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 922);
    }

    #[test]
    fn gentest_4004() {
        let board = Board::from_fen("8/4rk1p/1Bbb3P/3p4/p1p2P1r/1B4p1/2R5/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 991);
    }

    #[test]
    fn gentest_4005() {
        let board = Board::from_fen("8/4rk1p/2b4P/3p4/p1p2b2/1B2B1p1/2R4r/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1027);
    }

    #[test]
    fn gentest_4006() {
        let board = Board::from_fen("4k3/4r2p/2b4P/3p4/p1p2b2/1B4p1/3BR2r/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 732);
    }

    #[test]
    fn gentest_4007() {
        let board = Board::from_fen("4k3/4r2p/2b4P/3p4/p1p5/6p1/1bBBR2r/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 829);
    }

    #[test]
    fn gentest_4008() {
        let board = Board::from_fen("4k3/4r2p/2b4P/3p4/p1pb1B2/6p1/2B3Rr/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 969);
    }

    #[test]
    fn gentest_4009() {
        let board = Board::from_fen("4k3/7p/2b4P/3p4/p1pb1B2/4r1p1/2B2R1r/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 856);
    }

    #[test]
    fn gentest_4010() {
        let board = Board::from_fen("8/3k3p/2b3BP/3p4/p1pb1B2/4r1p1/3K1R1r/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 812);
    }

    #[test]
    fn gentest_4011() {
        let board = Board::from_fen("3k4/7p/2b4P/3p4/p1pb1B2/4r1p1/2BK1R2/7r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 861);
    }

    #[test]
    fn gentest_4012() {
        let board = Board::from_fen("3k4/7p/2b4P/3pb3/p1p5/4rRp1/2BK4/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 757);
    }

    #[test]
    fn gentest_4013() {
        let board = Board::from_fen("4k3/7p/2b4P/3pb3/p1p5/1B3Rp1/3Kr3/7r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 36);
        assert_eq!(perft(&board, 3, &PRECOMP), 618);
    }

    #[test]
    fn gentest_4014() {
        let board = Board::from_fen("4k3/7p/2b4P/3p4/p1p2R2/1Bb3p1/4K3/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 638);
    }

    #[test]
    fn gentest_4015() {
        let board = Board::from_fen("4k3/5R1p/2b4P/3pr3/p1p5/1Bb3p1/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 81);
        assert_eq!(perft(&board, 3, &PRECOMP), 1409);
    }

    #[test]
    fn gentest_4016() {
        let board = Board::from_fen("4k3/R6p/2b4P/3pr3/p7/1pb2Kp1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 342);
        assert_eq!(perft(&board, 3, &PRECOMP), 8655);
    }

    #[test]
    fn gentest_4017() {
        let board = Board::from_fen("R7/3k3p/2b4P/3p3r/p7/1pb2Kp1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 466);
        assert_eq!(perft(&board, 3, &PRECOMP), 6740);
    }

    #[test]
    fn gentest_4018() {
        let board = Board::from_fen("8/3k1R1p/2b4P/3p4/p6r/1pb2Kp1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 75);
        assert_eq!(perft(&board, 3, &PRECOMP), 2189);
    }

    #[test]
    fn gentest_4019() {
        let board = Board::from_fen("2k5/6Rp/2b4P/3p4/pr6/1pb2Kp1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 429);
        assert_eq!(perft(&board, 3, &PRECOMP), 5883);
    }

    #[test]
    fn gentest_4020() {
        let board = Board::from_fen("1rk5/7p/2bR3P/3p4/p7/1pb2Kp1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 344);
        assert_eq!(perft(&board, 3, &PRECOMP), 7937);
    }

    #[test]
    fn gentest_4021() {
        let board = Board::from_fen("1r6/3k3p/2R4P/3p4/p7/1p3Kp1/1b6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 465);
        assert_eq!(perft(&board, 3, &PRECOMP), 7876);
    }

    #[test]
    fn gentest_4022() {
        let board = Board::from_fen("1r6/3k3p/7P/3p4/p7/1p4K1/8/b1R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 528);
    }

    #[test]
    fn gentest_4023() {
        let board = Board::from_fen("1r1k4/2R4p/7P/3p4/8/pp4K1/8/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 366);
        assert_eq!(perft(&board, 3, &PRECOMP), 6839);
    }

    #[test]
    fn gentest_4024() {
        let board = Board::from_fen("1r1k3b/R6p/7P/3p4/8/pp4K1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 336);
        assert_eq!(perft(&board, 3, &PRECOMP), 6326);
    }

    #[test]
    fn gentest_4025() {
        let board = Board::from_fen("2rk3b/R6p/7P/3p4/8/p7/1p4K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 399);
        assert_eq!(perft(&board, 3, &PRECOMP), 6759);
    }

    #[test]
    fn gentest_4026() {
        let board = Board::from_fen("2rk4/7p/7P/3p4/R7/2b5/1p4K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 495);
    }

    #[test]
    fn gentest_4027() {
        let board = Board::from_fen("2rk4/7p/7P/8/2Rp4/8/1p1b2K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 383);
        assert_eq!(perft(&board, 3, &PRECOMP), 6127);
    }

    #[test]
    fn gentest_4028() {
        let board = Board::from_fen("2r5/2k4p/7P/8/3R4/8/1p1b3K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 417);
    }

    #[test]
    fn gentest_4029() {
        let board = Board::from_fen("1r6/2k4p/7P/8/3R1b2/8/1p6/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 351);
        assert_eq!(perft(&board, 3, &PRECOMP), 5000);
    }

    #[test]
    fn gentest_4030() {
        let board = Board::from_fen("1r6/2k4p/7P/8/8/R5b1/1p6/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 426);
    }

    #[test]
    fn gentest_4031() {
        let board = Board::from_fen("8/2k4p/7P/8/1r6/5Rb1/8/1q5K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 879);
    }

    #[test]
    fn gentest_4032() {
        let board = Board::from_fen("8/2k4p/7P/5q2/1r6/2R3b1/6K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 123);
        assert_eq!(perft(&board, 3, &PRECOMP), 5249);
    }

    #[test]
    fn gentest_4033() {
        let board = Board::from_fen("8/1k5p/7P/5q2/1r6/8/6K1/2R1b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 590);
        assert_eq!(perft(&board, 3, &PRECOMP), 7190);
    }

    #[test]
    fn gentest_4034() {
        let board = Board::from_fen("8/7p/2k4P/5q2/1r6/8/8/4b2K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 124);
        assert_eq!(perft(&board, 3, &PRECOMP), 5991);
    }

    #[test]
    fn gentest_4035() {
        let board = Board::from_fen("8/7p/2k4P/8/8/5q2/1r6/4b1K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 0);
        assert_eq!(perft(&board, 2, &PRECOMP), 0);
        assert_eq!(perft(&board, 3, &PRECOMP), 0);
        assert_eq!(perft(&board, 4, &PRECOMP), 0);
        assert_eq!(perft(&board, 5, &PRECOMP), 0);
        assert_eq!(perft(&board, 6, &PRECOMP), 0);
    }

    #[test]
    fn gentest_4036() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4037() {
        let board = Board::from_fen("rnbqkbnr/ppppppp1/7p/8/8/3P2P1/PPP1PP1P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 531);
    }

    #[test]
    fn gentest_4038() {
        let board = Board::from_fen("rnbqkbnr/pp1pp1p1/2p2p1p/8/P7/3P2P1/1PP1PP1P/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 553);
    }

    #[test]
    fn gentest_4039() {
        let board = Board::from_fen("rnbqkbnr/pp1p2p1/2p2p1p/4p3/P4B2/1P1P2P1/2P1PP1P/RN1QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 733);
    }

    #[test]
    fn gentest_4040() {
        let board = Board::from_fen("rnb1kbnr/pp2q1p1/2pp1p1p/4p3/P4B2/1P1P2P1/R1P1PP1P/1N1QKBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 836);
    }

    #[test]
    fn gentest_4041() {
        let board = Board::from_fen("rn2kbnr/pp2q1p1/2ppbp1p/P3p3/5B2/1P1P2PP/R1P1PP2/1N1QKBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 868);
    }

    #[test]
    fn gentest_4042() {
        let board = Board::from_fen("rn2kbnr/p3q1p1/2pp1p1p/Pp1bp3/4PB2/1P1P2PP/R1P2P2/1N1QKBNR w Kkq b6").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 878);
    }

    #[test]
    fn gentest_4043() {
        let board = Board::from_fen("rn2kbnr/p3q1p1/2ppbp1p/Pp2p3/4PB2/1P1P2PP/R1PN1P2/Q3KBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 929);
    }

    #[test]
    fn gentest_4044() {
        let board = Board::from_fen("rn2kbnr/p3q1p1/2ppbp2/P3p2p/Rp2PB2/1P1P2PP/2PN1P2/Q3KBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 993);
    }

    #[test]
    fn gentest_4045() {
        let board = Board::from_fen("rn2kbnr/p3q1p1/2pp1p2/P2bp2p/Rp2PB1P/1PQP2P1/2PN1P2/4KBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 875);
    }

    #[test]
    fn gentest_4046() {
        let board = Board::from_fen("rn2kbnr/p3qbp1/2pp1p1B/P3p2p/Rp2P2P/1PQP2P1/2PN1P2/4KBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 817);
    }

    #[test]
    fn gentest_4047() {
        let board = Board::from_fen("r3kbnr/p3qbp1/n1pp1p1B/P3p2p/Rp2P2P/1P1P2P1/2P2P2/QN2KBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 969);
    }

    #[test]
    fn gentest_4048() {
        let board = Board::from_fen("1r2kbn1/p3qbp1/n1pp1p1r/P3Q2p/Rp2P2P/1P1P2P1/2P2P2/1N2KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1063);
    }

    #[test]
    fn gentest_4049() {
        let board = Board::from_fen("1r2kbnr/p3qbp1/n1pp1p2/P6p/Rp2P2P/1P1P1PP1/2P5/QN2KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 882);
    }

    #[test]
    fn gentest_4050() {
        let board = Board::from_fen("5bnr/p2kqbp1/nrpp1Q2/P6p/Rp2P2P/1P1P1PP1/2P5/1N2KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1114);
    }

    #[test]
    fn gentest_4051() {
        let board = Board::from_fen("5bnr/p2kq1p1/nrppb3/P5Qp/1p2P2P/1P1P1PP1/R1P5/1N2KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1166);
    }

    #[test]
    fn gentest_4052() {
        let board = Board::from_fen("2q2bnr/p2k2p1/nrppb3/P6p/1p2P1QP/1P1P1PP1/R1P5/1N2KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 890);
    }

    #[test]
    fn gentest_4053() {
        let board = Board::from_fen("1q3bnr/p2k2p1/nrppb3/P6p/1p2P1QP/1P1P1PPB/R1P2K2/1N4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 802);
    }

    #[test]
    fn gentest_4054() {
        let board = Board::from_fen("1q1k1bnr/pr4p1/n1ppQ3/P6p/1p2P2P/1P1P1PPB/R1P2K2/1N4NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 764);
    }

    #[test]
    fn gentest_4055() {
        let board = Board::from_fen("1q1k1bnr/p4rp1/n1pp3Q/P6p/1p2P2P/1P1P1PPB/2P2K2/RN4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1054);
    }

    #[test]
    fn gentest_4056() {
        let board = Board::from_fen("3k1bnr/p4r2/nqpp2pQ/P6p/1p2P2P/1P1P1PPB/2P5/RN3KNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1219);
    }

    #[test]
    fn gentest_4057() {
        let board = Board::from_fen("3k1bnr/p4r2/nqp3pQ/P2p3p/1pP1P2P/1P1P1PPB/8/RN3KNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1324);
    }

    #[test]
    fn gentest_4058() {
        let board = Board::from_fen("3k1bnr/p2B1r2/nqp3pQ/P2p3p/1pP1P2P/1P1P1PP1/8/RN3KNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1439);
    }

    #[test]
    fn gentest_4059() {
        let board = Board::from_fen("3k1bnr/p2B3r/nqp3pQ/P2P3p/1p1PP2P/1P3PP1/8/RN3KNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1001);
    }

    #[test]
    fn gentest_4060() {
        let board = Board::from_fen("3k2nr/p2B3r/n1p3Q1/PqbP3p/1p1PP2P/1P3PP1/8/RN3KNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 111);
        assert_eq!(perft(&board, 3, &PRECOMP), 4107);
    }

    #[test]
    fn gentest_4061() {
        let board = Board::from_fen("3k2nr/p2B3r/n5Q1/Pqbp3p/1p1PP2P/1P3PP1/R3N3/1N3K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1260);
    }

    #[test]
    fn gentest_4062() {
        let board = Board::from_fen("6nr/p2k4/n6r/Pqbp2Qp/1p1PP2P/1P3PP1/R3N3/1N3K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1038);
    }

    #[test]
    fn gentest_4063() {
        let board = Board::from_fen("6nr/p2k3r/n5Q1/Pqbp3p/Rp1PP2P/1P3PP1/4N3/1N3K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 954);
    }

    #[test]
    fn gentest_4064() {
        let board = Board::from_fen("6nr/pk5r/n6Q/Pqbp3p/Rp1PP2P/1P3PP1/4N3/1N3K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 924);
    }

    #[test]
    fn gentest_4065() {
        let board = Board::from_fen("6nr/pk1q3r/n6Q/P1bp3p/Rp1PPP1P/1P4PR/4N3/1N3K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1040);
    }

    #[test]
    fn gentest_4066() {
        let board = Board::from_fen("1n4nr/p1kq3r/7Q/P1bp3p/Rp1PPP1P/1P4PR/3NN3/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1004);
    }

    #[test]
    fn gentest_4067() {
        let board = Board::from_fen("1n4nr/p1kq3r/Qb6/P2p3p/Rp1PPP1P/1P4PR/3N4/2N2K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 855);
    }

    #[test]
    fn gentest_4068() {
        let board = Board::from_fen("1n4nr/2k1q2r/1p6/P2p3p/Rp1PPP1P/1P4PR/3N4/2N2K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 688);
    }

    #[test]
    fn gentest_4069() {
        let board = Board::from_fen("1n4nr/2k4r/1p1q4/P2p3p/Rp1PPPPP/1P6/3N3R/2N2K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 841);
    }

    #[test]
    fn gentest_4070() {
        let board = Board::from_fen("1n4nr/2k4r/8/Pp1p3p/Rp1PPqPP/1P3N2/7R/2N2K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 898);
    }

    #[test]
    fn gentest_4071() {
        let board = Board::from_fen("6nr/2k4r/2n5/Pp1p3p/Rp1PPqPP/1P3N2/8/2N1K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 881);
    }

    #[test]
    fn gentest_4072() {
        let board = Board::from_fen("6nr/1k5r/2n5/Pp1pN2p/Rp1PP1PP/1P6/7q/2N1K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 852);
    }

    #[test]
    fn gentest_4073() {
        let board = Board::from_fen("6nr/1k1r4/2n5/Pp1p3p/1p1PP1PP/1P3N2/7q/R1N1K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 857);
    }

    #[test]
    fn gentest_4074() {
        let board = Board::from_fen("6nr/1k1r4/2n5/Pp1p2Pp/1p1PP2P/1P3N2/8/RqN1K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 685);
    }

    #[test]
    fn gentest_4075() {
        let board = Board::from_fen("6nr/3r4/k1n5/Pp1p2Pp/1p1PP2P/1P3N2/4K3/RqN3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 705);
    }

    #[test]
    fn gentest_4076() {
        let board = Board::from_fen("6nr/2r5/k7/np1P2Pp/1p1P3P/1P3N2/4K3/RqN3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 831);
    }

    #[test]
    fn gentest_4077() {
        let board = Board::from_fen("6nr/k1r5/8/np1P2Pp/1p1P3P/RP2KN2/8/1qN3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 719);
    }

    #[test]
    fn gentest_4078() {
        let board = Board::from_fen("k5nr/4r3/8/np1P2Pp/1p1P3P/RP2KN2/8/1qN4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 128);
        assert_eq!(perft(&board, 3, &PRECOMP), 2478);
    }

    #[test]
    fn gentest_4079() {
        let board = Board::from_fen("k5nr/4r3/8/np1P2Pp/1p1P3P/RP1N1N2/5K2/q6R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 802);
    }

    #[test]
    fn gentest_4080() {
        let board = Board::from_fen("k5nr/4r3/4q3/np1P2Pp/1p1P3P/RP1N1N2/6K1/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1127);
    }

    #[test]
    fn gentest_4081() {
        let board = Board::from_fen("k3r1nr/8/4q3/np1P2Pp/1p1P3P/1P1N1N2/6K1/R6R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1157);
    }

    #[test]
    fn gentest_4082() {
        let board = Board::from_fen("k5nr/4r3/8/np1P2Pp/1p1Pq2P/1P1N1N2/6K1/6RR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 837);
    }

    #[test]
    fn gentest_4083() {
        let board = Board::from_fen("k5nr/r7/8/np1PN1Pp/1p1Pq2P/1P3N2/5K2/6RR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 761);
    }

    #[test]
    fn gentest_4084() {
        let board = Board::from_fen("k5nr/r2N4/8/np1P2Pp/1p1P3P/1P3N2/3q1K2/6RR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 74);
        assert_eq!(perft(&board, 3, &PRECOMP), 1415);
    }

    #[test]
    fn gentest_4085() {
        let board = Board::from_fen("k5nr/r2N4/8/np1P2Pp/1p1P1K1P/1P3N2/5q2/6RR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 522);
    }

    #[test]
    fn gentest_4086() {
        let board = Board::from_fen("k5nr/rn1N4/8/1p1PK1Pp/1p1P3P/1P3q2/8/6RR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 633);
    }

    #[test]
    fn gentest_4087() {
        let board = Board::from_fen("k4Nnr/1n6/4K3/1p1P2Pp/1p1P3P/rP3q2/8/6RR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 486);
    }

    #[test]
    fn gentest_4088() {
        let board = Board::from_fen("k4N1r/8/4K2n/1pPP2Pp/1p5P/rP3q2/8/6RR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 821);
    }

    #[test]
    fn gentest_4089() {
        let board = Board::from_fen("k4N1r/8/2P1K2n/1p1P2Pp/1p5P/rPq5/8/R6R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 743);
    }

    #[test]
    fn gentest_4090() {
        let board = Board::from_fen("k4Nr1/r7/2P1K2n/1p1P2Pp/1p5P/1Pq5/8/5R1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 955);
    }

    #[test]
    fn gentest_4091() {
        let board = Board::from_fen("k4Nr1/r7/2P4n/1p1PK1Pp/1p5P/1P5q/8/6RR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 692);
    }

    #[test]
    fn gentest_4092() {
        let board = Board::from_fen("k4N2/r7/2P4n/1p1PK1Rp/1p5P/1P4q1/8/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 166);
        assert_eq!(perft(&board, 3, &PRECOMP), 3408);
    }

    #[test]
    fn gentest_4093() {
        let board = Board::from_fen("k4N2/r7/2P1K2n/1p1P3p/1p5P/1P4R1/7q/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 750);
    }

    #[test]
    fn gentest_4094() {
        let board = Board::from_fen("k4N2/r7/1qP1K2n/1p1P3p/1p5P/1P4R1/8/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 885);
    }

    #[test]
    fn gentest_4095() {
        let board = Board::from_fen("k4N2/8/1qP1K2n/1p1P3p/1p5P/1P6/8/r1R1R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 591);
    }

    #[test]
    fn gentest_4096() {
        let board = Board::from_fen("k4N2/8/2P1K2n/rp1P3p/1p5P/1P6/4R3/2R3q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 926);
    }

    #[test]
    fn gentest_4097() {
        let board = Board::from_fen("k7/3N4/2P1K2n/rp1P3p/1p5P/1P6/2R1R3/3q4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 586);
    }

    #[test]
    fn gentest_4098() {
        let board = Board::from_fen("k5n1/3N4/2P1K3/rp1P3p/1p2R2P/1P6/2R5/6q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 912);
    }

    #[test]
    fn gentest_4099() {
        let board = Board::from_fen("k5n1/2P5/4KNq1/rp1P3p/1p2R2P/1P6/2R5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 561);
    }

    #[test]
    fn gentest_4100() {
        let board = Board::from_fen("k5n1/2P5/4KNq1/rp1P3p/1p2R2P/1PR5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 642);
    }

    #[test]
    fn gentest_4101() {
        let board = Board::from_fen("k5n1/2P5/4K3/rp1PR2p/1p4NP/1PR3q1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 696);
    }

    #[test]
    fn gentest_4102() {
        let board = Board::from_fen("k7/2q1n3/4K3/rp1P3R/1p4NP/1PR5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 775);
    }

    #[test]
    fn gentest_4103() {
        let board = Board::from_fen("k7/4n3/1q1PK2N/rp5R/1p5P/1PR5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 717);
    }

    #[test]
    fn gentest_4104() {
        let board = Board::from_fen("k7/2R1n3/1q1PK2N/1p5R/1p5P/1P6/8/5r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 748);
    }

    #[test]
    fn gentest_4105() {
        let board = Board::from_fen("1R6/k3n3/1q1PK2N/1p5R/1p5P/1P6/8/5r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 682);
    }

    #[test]
    fn gentest_4106() {
        let board = Board::from_fen("7R/k3n3/2qPK2N/1p5R/1p5P/1P6/8/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 807);
    }

    #[test]
    fn gentest_4107() {
        let board = Board::from_fen("3R4/k3n3/3PK2N/1p1R4/1pq4P/1P6/8/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 760);
    }

    #[test]
    fn gentest_4108() {
        let board = Board::from_fen("3R2N1/k3n3/3PK3/1p1R4/1pq4P/1P6/8/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 614);
    }

    #[test]
    fn gentest_4109() {
        let board = Board::from_fen("3R4/k3n3/3P1N2/1p1RK3/1pq4P/1P6/8/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 711);
    }

    #[test]
    fn gentest_4110() {
        let board = Board::from_fen("3R4/1k2n3/2qP1N2/1p2K3/1p5P/1P6/8/3R3r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 965);
    }

    #[test]
    fn gentest_4111() {
        let board = Board::from_fen("5R2/1k2n3/3P1N2/1p2K3/1p1R3P/1P6/6q1/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 932);
    }

    #[test]
    fn gentest_4112() {
        let board = Board::from_fen("5R2/1k2n3/3P1N2/1p6/1p1RK2P/1P6/4q3/7r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 39);
        assert_eq!(perft(&board, 3, &PRECOMP), 791);
    }

    #[test]
    fn gentest_4113() {
        let board = Board::from_fen("5R2/1k6/3P1Nn1/1p6/1p1R3P/1P4K1/4q3/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 862);
    }

    #[test]
    fn gentest_4114() {
        let board = Board::from_fen("5R2/8/k2P2n1/1p6/1p1RN2P/1P3qK1/8/7r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 40);
        assert_eq!(perft(&board, 3, &PRECOMP), 1017);
    }

    #[test]
    fn gentest_4115() {
        let board = Board::from_fen("8/8/k2P2n1/1p6/1p2N2P/1P1R1RK1/8/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 619);
    }

    #[test]
    fn gentest_4116() {
        let board = Board::from_fen("8/8/k2P4/1p2n3/1p2NK1P/1P1R1R2/8/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 543);
    }

    #[test]
    fn gentest_4117() {
        let board = Board::from_fen("8/8/1k1P4/1p2n1K1/1p5P/1PNR1R2/8/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 799);
    }

    #[test]
    fn gentest_4118() {
        let board = Board::from_fen("8/5n2/k2P4/1p6/1p4KP/1PNR1R2/8/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 601);
    }

    #[test]
    fn gentest_4119() {
        let board = Board::from_fen("8/5n2/k2P4/1p6/1p3K1P/rP1R1R2/8/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 324);
        assert_eq!(perft(&board, 3, &PRECOMP), 5051);
    }

    #[test]
    fn gentest_4120() {
        let board = Board::from_fen("8/8/1k1n4/1p5P/1p3K2/rP1R1R2/8/3N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 443);
    }

    #[test]
    fn gentest_4121() {
        let board = Board::from_fen("8/8/1k1n4/1p5P/1p4K1/1P1R3R/8/r2N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 591);
    }

    #[test]
    fn gentest_4122() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4123() {
        let board = Board::from_fen("rnbqkbnr/ppppppp1/7p/6P1/8/8/PPPPPP1P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 417);
        assert_eq!(perft(&board, 3, &PRECOMP), 9025);
    }

    #[test]
    fn gentest_4124() {
        let board = Board::from_fen("rnbqkbnr/pp1pppp1/2p5/6Pp/8/3P4/PPP1PP1P/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 545);
    }

    #[test]
    fn gentest_4125() {
        let board = Board::from_fen("rnbqkb1r/pp1pppp1/2p4n/6Pp/8/3PB2P/PPP1PP2/RN1QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 588);
    }

    #[test]
    fn gentest_4126() {
        let board = Board::from_fen("rnbqkb1r/1p1p1pp1/p1p1p2n/6Pp/8/3PB2P/PPPQPP2/RN2KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 802);
    }

    #[test]
    fn gentest_4127() {
        let board = Board::from_fen("rnbqk2r/1p1pbpp1/p1p1p2n/6Pp/8/P2PB2P/1PP1PP2/RN1QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 762);
    }

    #[test]
    fn gentest_4128() {
        let board = Board::from_fen("rnbqk2r/1p1p1pp1/p1p1pb1n/7p/8/P1NPB2P/1PP1PP2/R2QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 954);
    }

    #[test]
    fn gentest_4129() {
        let board = Board::from_fen("rnbqk2r/1p1p1pp1/2p1pb1n/p6p/8/P2P3P/1PP1PP2/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 740);
    }

    #[test]
    fn gentest_4130() {
        let board = Board::from_fen("rnbqk3/1p3ppr/2p1pb1n/p2p3p/1P6/P2P3P/2P1PP2/RNBQKBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 862);
    }

    #[test]
    fn gentest_4131() {
        let board = Board::from_fen("rnb1k3/1p1q1ppr/2p1pb1n/p2p3p/PP5P/3P4/2P1PP2/RNBQKBNR b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 867);
    }

    #[test]
    fn gentest_4132() {
        let board = Board::from_fen("rnbk4/1p1qbppr/2p1p2n/p2p3p/PP5P/3P3N/2P1PP2/RNBQKB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 833);
    }

    #[test]
    fn gentest_4133() {
        let board = Board::from_fen("rnbk4/1p1qbppr/2p1p2n/3p3p/Pp3N1P/3P1P2/2P1P3/RNBQKB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 844);
    }

    #[test]
    fn gentest_4134() {
        let board = Board::from_fen("r1b1k3/1p1qbppr/n1p1p2n/3p3N/Pp5P/3P1P2/2P1P3/RNBQKB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 910);
    }

    #[test]
    fn gentest_4135() {
        let board = Board::from_fen("r1b1k3/3qbppr/n1p1p2n/1p1p3N/Pp5P/2PP1P1B/4P3/RNBQK2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1246);
    }

    #[test]
    fn gentest_4136() {
        let board = Board::from_fen("2b1k3/r2qbpr1/n1p1p2n/1p1p4/Pp5P/2PP1P1B/4P3/RNBQK2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1317);
    }

    #[test]
    fn gentest_4137() {
        let board = Board::from_fen("2b1k1n1/r2qbpr1/n1p1p2B/1p1p4/Pp5P/N1PP1P1B/4P3/R2QK2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1356);
    }

    #[test]
    fn gentest_4138() {
        let board = Board::from_fen("r1b1k1n1/3q1pr1/n1p1p2B/1pbp4/Pp2P2P/N1PP1P1B/8/R2QK2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1610);
    }

    #[test]
    fn gentest_4139() {
        let board = Board::from_fen("r1b1k1n1/4qpr1/n1p1p3/1pbP4/Pp5P/N1PPBP1B/8/R2QK2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1735);
    }

    #[test]
    fn gentest_4140() {
        let board = Board::from_fen("r1b1k1n1/5pr1/n1p5/1pbPp1q1/Pp5P/N1PPBP1B/8/2RQK2R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1890);
    }

    #[test]
    fn gentest_4141() {
        let board = Board::from_fen("2B1k1n1/r4pr1/n1p5/1pbPp1q1/Pp5P/N1PPBP2/2Q5/2R1K2R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1901);
    }

    #[test]
    fn gentest_4142() {
        let board = Board::from_fen("2B1k1n1/r1n2p2/2p3r1/1pbPp1q1/Pp3P1P/N1PPB3/2Q5/2R1K2R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 2220);
    }

    #[test]
    fn gentest_4143() {
        let board = Board::from_fen("2B1k1n1/r1n2p2/2p3r1/1pBPp1q1/P4P1P/N1pP4/6Q1/2R1K2R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 2041);
    }

    #[test]
    fn gentest_4144() {
        let board = Board::from_fen("2B1k1n1/r1n5/2p2pr1/1pBPp3/P4P1P/N1pP4/6q1/2R1KQ1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1739);
    }

    #[test]
    fn gentest_4145() {
        let board = Board::from_fen("2B1k1n1/r1n5/2p2pr1/1PBPp3/5P1P/2pP3q/8/1NR1KQ1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1711);
    }

    #[test]
    fn gentest_4146() {
        let board = Board::from_fen("n3k1n1/rB6/2p2pr1/1PBPp3/5P1P/2pP4/6q1/1NR1KQ1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1533);
    }

    #[test]
    fn gentest_4147() {
        let board = Board::from_fen("n5n1/r4k2/2B2pr1/1P1Pp3/3B1P1P/2pP4/6q1/1NR1KQ1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1230);
    }

    #[test]
    fn gentest_4148() {
        let board = Board::from_fen("n4kn1/r2B4/5pr1/1P1Pp3/3B1P1P/2pP3q/8/1NR1KQ1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1471);
    }

    #[test]
    fn gentest_4149() {
        let board = Board::from_fen("n4kn1/1r1B4/5pr1/1P1Pp3/3B1P1P/2pP3q/2Q5/1NR1K2R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1282);
    }

    #[test]
    fn gentest_4150() {
        let board = Board::from_fen("n4kn1/1r1B4/5pr1/1P1Pp3/3B1P1P/2pP4/2Q2K2/1NR3qR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 4247);
    }

    #[test]
    fn gentest_4151() {
        let board = Board::from_fen("n4kn1/3r4/5pr1/1P1Pp1R1/3B1P1P/2pP4/2Q2K2/1N5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1167);
    }

    #[test]
    fn gentest_4152() {
        let board = Board::from_fen("5kn1/2n3r1/5pr1/1P1PR3/3B1P1P/2pP4/2Q2K2/1N5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 869);
    }

    #[test]
    fn gentest_4153() {
        let board = Board::from_fen("5kn1/2n3r1/6r1/1P1Pp3/3B1P1P/2pP4/2Q2KR1/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1010);
    }

    #[test]
    fn gentest_4154() {
        let board = Board::from_fen("4k1n1/2n3r1/8/1P1Pp3/3B1P1P/2pP2r1/5KR1/1NQ5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 995);
    }

    #[test]
    fn gentest_4155() {
        let board = Board::from_fen("4k1n1/2n2r2/8/1P1PB3/5P1P/2pP2r1/5KR1/1N4Q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 766);
    }

    #[test]
    fn gentest_4156() {
        let board = Board::from_fen("4k1n1/2n5/8/1P1P4/5B1P/2pP3r/5KR1/1N4Q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 638);
    }

    #[test]
    fn gentest_4157() {
        let board = Board::from_fen("n3k1n1/8/8/1P1P4/3P3P/2p4r/5KRB/1N4Q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 402);
        assert_eq!(perft(&board, 3, &PRECOMP), 7016);
    }

    #[test]
    fn gentest_4158() {
        let board = Board::from_fen("n2k4/8/5nR1/1P1P4/3P3P/2p4r/5K1B/1N4Q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 636);
    }

    #[test]
    fn gentest_4159() {
        let board = Board::from_fen("3k4/8/1n3n2/1P1P4/3P3P/2p3Rr/5K1B/1N4Q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 569);
    }

    #[test]
    fn gentest_4160() {
        let board = Board::from_fen("3k4/8/1n6/1P1P4/3Pn2P/2p3R1/5KQr/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 138);
        assert_eq!(perft(&board, 3, &PRECOMP), 3533);
    }

    #[test]
    fn gentest_4161() {
        let board = Board::from_fen("3k4/8/1n6/1P1P2n1/3P3P/2p1K1R1/6Qr/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 552);
    }

    #[test]
    fn gentest_4162() {
        let board = Board::from_fen("n7/3k4/8/1P1P2n1/3P3P/2p1K1R1/Q6r/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 692);
    }

    #[test]
    fn gentest_4163() {
        let board = Board::from_fen("n7/3k4/8/1P1P2n1/3P3P/2p1K2R/2Q5/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 442);
        assert_eq!(perft(&board, 3, &PRECOMP), 6045);
    }

    #[test]
    fn gentest_4164() {
        let board = Board::from_fen("n2k4/8/8/1P1P1Q2/3Pn2P/2p1K2R/8/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 354);
    }

    #[test]
    fn gentest_4165() {
        let board = Board::from_fen("3k4/8/1n6/1P1P1Q2/3Pn2P/2R5/4K3/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 615);
        assert_eq!(perft(&board, 3, &PRECOMP), 8259);
    }

    #[test]
    fn gentest_4166() {
        let board = Board::from_fen("5Q2/3k4/1n6/1PnP4/3P3P/2R5/4K3/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 477);
    }

    #[test]
    fn gentest_4167() {
        let board = Board::from_fen("2n3Q1/3k4/8/1PRP4/3P3P/8/4K3/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 221);
        assert_eq!(perft(&board, 3, &PRECOMP), 1217);
    }

    #[test]
    fn gentest_4168() {
        let board = Board::from_fen("6Q1/3k1n2/8/1P1P4/2RP3P/8/4K3/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 274);
    }

    #[test]
    fn gentest_4169() {
        let board = Board::from_fen("6Q1/3k4/3n4/1P1P4/2RP3P/8/4K3/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 337);
        assert_eq!(perft(&board, 3, &PRECOMP), 2399);
    }

    #[test]
    fn gentest_4170() {
        let board = Board::from_fen("7Q/4k3/8/1P1P4/2nP3P/8/4K3/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 219);
        assert_eq!(perft(&board, 3, &PRECOMP), 5585);
    }

    #[test]
    fn gentest_4171() {
        let board = Board::from_fen("3k4/8/6Q1/1P1P4/2nP3P/8/4K3/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 411);
        assert_eq!(perft(&board, 3, &PRECOMP), 3651);
    }

    #[test]
    fn gentest_4172() {
        let board = Board::from_fen("4k3/8/3Q4/1P1P4/3P3P/n7/4K3/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 162);
        assert_eq!(perft(&board, 3, &PRECOMP), 4719);
    }

    #[test]
    fn gentest_4173() {
        let board = Board::from_fen("1Q2k3/8/8/1P1P4/3P3P/8/2n1K3/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 629);
    }

    #[test]
    fn gentest_4174() {
        let board = Board::from_fen("8/Q7/5k2/1P1P4/3P3P/8/2n1K3/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 226);
        assert_eq!(perft(&board, 3, &PRECOMP), 5711);
    }

    #[test]
    fn gentest_4175() {
        let board = Board::from_fen("8/7Q/1P3k2/3P4/1n1P3P/8/4K3/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 174);
        assert_eq!(perft(&board, 3, &PRECOMP), 1009);
    }

    #[test]
    fn gentest_4176() {
        let board = Board::from_fen("8/4k3/1P5Q/3n4/3P3P/8/4K3/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 254);
        assert_eq!(perft(&board, 3, &PRECOMP), 6407);
    }

    #[test]
    fn gentest_4177() {
        let board = Board::from_fen("8/8/1P1k4/3n2Q1/3P3P/8/8/1N3K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 314);
        assert_eq!(perft(&board, 3, &PRECOMP), 2717);
    }

    #[test]
    fn gentest_4178() {
        let board = Board::from_fen("8/8/1P1k4/3n1Q2/3P3P/8/8/1N3K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 249);
        assert_eq!(perft(&board, 3, &PRECOMP), 7118);
    }

    #[test]
    fn gentest_4179() {
        let board = Board::from_fen("2Q5/4n3/1P1k4/8/3P3P/8/3N4/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 207);
        assert_eq!(perft(&board, 3, &PRECOMP), 1379);
    }

    #[test]
    fn gentest_4180() {
        let board = Board::from_fen("2Q3n1/4k3/1P6/8/3P3P/8/3N2K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 203);
        assert_eq!(perft(&board, 3, &PRECOMP), 6978);
    }

    #[test]
    fn gentest_4181() {
        let board = Board::from_fen("6n1/5k2/1P6/8/3P3P/8/3N2K1/2Q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 330);
        assert_eq!(perft(&board, 3, &PRECOMP), 3047);
    }

    #[test]
    fn gentest_4182() {
        let board = Board::from_fen("2n5/5k2/1P6/8/3P3P/8/3N2K1/7Q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 286);
        assert_eq!(perft(&board, 3, &PRECOMP), 7815);
    }

    #[test]
    fn gentest_4183() {
        let board = Board::from_fen("2n5/6k1/1P6/8/3P3P/8/6K1/1N4Q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 252);
        assert_eq!(perft(&board, 3, &PRECOMP), 2286);
    }

    #[test]
    fn gentest_4184() {
        let board = Board::from_fen("8/8/1n3k2/8/3P3P/5K2/8/1N4Q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 268);
        assert_eq!(perft(&board, 3, &PRECOMP), 7061);
    }

    #[test]
    fn gentest_4185() {
        let board = Board::from_fen("8/3n4/5k2/8/3P1K1P/N7/8/6Q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 228);
        assert_eq!(perft(&board, 3, &PRECOMP), 2139);
    }

    #[test]
    fn gentest_4186() {
        let board = Board::from_fen("5n2/5k2/8/8/3P3P/N4K2/8/6Q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 262);
        assert_eq!(perft(&board, 3, &PRECOMP), 7449);
    }

    #[test]
    fn gentest_4187() {
        let board = Board::from_fen("8/3n1k2/8/7P/3P4/N3K3/8/6Q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 316);
        assert_eq!(perft(&board, 3, &PRECOMP), 3024);
    }

    #[test]
    fn gentest_4188() {
        let board = Board::from_fen("4k3/8/8/2n3QP/3P4/N3K3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 264);
        assert_eq!(perft(&board, 3, &PRECOMP), 7991);
    }

    #[test]
    fn gentest_4189() {
        let board = Board::from_fen("4Q3/3k4/8/2n4P/3P4/N3K3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 70);
        assert_eq!(perft(&board, 3, &PRECOMP), 622);
    }

    #[test]
    fn gentest_4190() {
        let board = Board::from_fen("3Q4/3n4/3k4/7P/3P4/N3K3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 138);
        assert_eq!(perft(&board, 3, &PRECOMP), 3867);
    }

    #[test]
    fn gentest_4191() {
        let board = Board::from_fen("1n6/8/3k4/7P/3PK3/N7/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 94);
        assert_eq!(perft(&board, 3, &PRECOMP), 853);
    }

    #[test]
    fn gentest_4192() {
        let board = Board::from_fen("8/4k3/n7/7P/3PK3/8/2N5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 2020);
    }

    #[test]
    fn gentest_4193() {
        let board = Board::from_fen("1n6/4k3/8/7P/3P4/4K3/8/N7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 121);
        assert_eq!(perft(&board, 3, &PRECOMP), 1216);
    }

    #[test]
    fn gentest_4194() {
        let board = Board::from_fen("8/4k3/8/4n2P/3P4/8/4K3/N7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 165);
        assert_eq!(perft(&board, 3, &PRECOMP), 1808);
    }

    #[test]
    fn gentest_4195() {
        let board = Board::from_fen("8/5k2/8/4P2P/8/8/8/N4K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 53);
        assert_eq!(perft(&board, 3, &PRECOMP), 286);
        assert_eq!(perft(&board, 4, &PRECOMP), 3105);
    }

    #[test]
    fn gentest_4196() {
        let board = Board::from_fen("8/8/8/3kP2P/8/1N6/8/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 70);
        assert_eq!(perft(&board, 3, &PRECOMP), 872);
        assert_eq!(perft(&board, 4, &PRECOMP), 5544);
    }

    #[test]
    fn gentest_4197() {
        let board = Board::from_fen("8/8/8/4P2P/2k1N3/8/8/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 89);
        assert_eq!(perft(&board, 3, &PRECOMP), 566);
        assert_eq!(perft(&board, 4, &PRECOMP), 7851);
    }

    #[test]
    fn gentest_4198() {
        let board = Board::from_fen("8/8/8/4P2P/3k4/8/3N4/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 72);
        assert_eq!(perft(&board, 3, &PRECOMP), 911);
        assert_eq!(perft(&board, 4, &PRECOMP), 5405);
    }

    #[test]
    fn gentest_4199() {
        let board = Board::from_fen("8/8/8/3kP2P/8/4K3/3N4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 54);
        assert_eq!(perft(&board, 3, &PRECOMP), 311);
        assert_eq!(perft(&board, 4, &PRECOMP), 4449);
    }

    #[test]
    fn gentest_4200() {
        let board = Board::from_fen("8/3k4/8/4P2P/5K2/8/3N4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 105);
        assert_eq!(perft(&board, 3, &PRECOMP), 1528);
        assert_eq!(perft(&board, 4, &PRECOMP), 8370);
    }

    #[test]
    fn gentest_4201() {
        let board = Board::from_fen("2k5/8/8/4P2P/8/1N2K3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 80);
        assert_eq!(perft(&board, 3, &PRECOMP), 497);
        assert_eq!(perft(&board, 4, &PRECOMP), 7563);
    }

    #[test]
    fn gentest_4202() {
        let board = Board::from_fen("8/8/2k5/4P2P/4K3/1N6/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 77);
        assert_eq!(perft(&board, 3, &PRECOMP), 1096);
        assert_eq!(perft(&board, 4, &PRECOMP), 7023);
    }

    #[test]
    fn gentest_4203() {
        let board = Board::from_fen("8/2k5/7P/4P3/3K4/1N6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 95);
        assert_eq!(perft(&board, 3, &PRECOMP), 539);
        assert_eq!(perft(&board, 4, &PRECOMP), 7764);
    }

    #[test]
    fn gentest_4204() {
        let board = Board::from_fen("8/3k4/7P/4P3/8/1N2K3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 109);
        assert_eq!(perft(&board, 3, &PRECOMP), 1664);
        assert_eq!(perft(&board, 4, &PRECOMP), 8913);
    }

    #[test]
    fn gentest_4205() {
        let board = Board::from_fen("3k4/8/7P/4P3/8/1N3K2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 80);
        assert_eq!(perft(&board, 3, &PRECOMP), 462);
        assert_eq!(perft(&board, 4, &PRECOMP), 7190);
    }

    #[test]
    fn gentest_4206() {
        let board = Board::from_fen("3k4/8/7P/2N1P3/8/5K2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 78);
        assert_eq!(perft(&board, 3, &PRECOMP), 1299);
        assert_eq!(perft(&board, 4, &PRECOMP), 6240);
    }

    #[test]
    fn gentest_4207() {
        let board = Board::from_fen("8/3Nk2P/8/4P3/8/5K2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 397);
        assert_eq!(perft(&board, 4, &PRECOMP), 6725);
    }

    #[test]
    fn gentest_4208() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4209() {
        let board = Board::from_fen("rnbqkbnr/p1pppppp/1p6/8/P7/7N/1PPPPPPP/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
    }

    #[test]
    fn gentest_4210() {
        let board = Board::from_fen("r1bqkbnr/p2ppppp/np6/2p5/P7/7N/RPPPPPPP/1NBQKB1R w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 421);
        assert_eq!(perft(&board, 3, &PRECOMP), 9904);
    }

    #[test]
    fn gentest_4211() {
        let board = Board::from_fen("r1bqkb1r/p2ppppp/np3n2/2p5/P7/5P2/RPPPP1PP/1NBQKBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 437);
    }

    #[test]
    fn gentest_4212() {
        let board = Board::from_fen("r1bqkb1r/p2p1pp1/np2pn2/2p4p/P4P2/8/RPPPP1PP/1NBQKBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 549);
    }

    #[test]
    fn gentest_4213() {
        let board = Board::from_fen("r1bqkb1r/p2p1pp1/np2Pn2/7p/P1p5/8/RPPPP1PP/1NBQKBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 664);
    }

    #[test]
    fn gentest_4214() {
        let board = Board::from_fen("r1bqkbr1/p2p2p1/np2pn2/7p/P1pP4/8/RPP1P1PP/1NBQKBNR w Kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 757);
    }

    #[test]
    fn gentest_4215() {
        let board = Board::from_fen("r1bqkbr1/p2p2p1/1p2pn2/2n4p/P1pP4/N6P/RPP1P1P1/2BQKBNR b Kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 739);
    }

    #[test]
    fn gentest_4216() {
        let board = Board::from_fen("1rbqkbr1/p2p2pn/1p2p3/2n4p/PPpP4/N6P/R1P1P1P1/2BQKBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 883);
    }

    #[test]
    fn gentest_4217() {
        let board = Board::from_fen("1rbqkbr1/p2p2pn/1p2p3/2n4p/PP1P4/2p3PP/R1P1P3/1NBQKBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 827);
    }

    #[test]
    fn gentest_4218() {
        let board = Board::from_fen("1rbqkbr1/p2p2pn/1p2p3/2n4p/PP1P4/2p3PP/2P1P3/RNBQKBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 830);
    }

    #[test]
    fn gentest_4219() {
        let board = Board::from_fen("1rbqkbr1/p2p2pn/1p2p3/2P5/P2P2Pp/2p4P/2P1P3/RNBQKBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 618);
    }

    #[test]
    fn gentest_4220() {
        let board = Board::from_fen("1rbqkbr1/p2p3n/1P2p3/6p1/P2P2Pp/2p4P/2P1P3/RNBQKBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 650);
    }

    #[test]
    fn gentest_4221() {
        let board = Board::from_fen("1rb1kbr1/pP1p3n/1q2p3/6p1/P2P2Pp/2p4P/2P1P1B1/RNBQK1NR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1076);
    }

    #[test]
    fn gentest_4222() {
        let board = Board::from_fen("1rb1kbr1/pB1p4/4pn2/6p1/P2P2Pp/2p4P/2P1P3/RNBQK1NR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 810);
    }

    #[test]
    fn gentest_4223() {
        let board = Board::from_fen("1rb1kbr1/p2p4/B3p3/6pn/P2P2Pp/2p4P/2P1P3/RNBQ1KNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 827);
    }

    #[test]
    fn gentest_4224() {
        let board = Board::from_fen("2b1k1r1/p2p2b1/B3p3/6pn/Pr1P2Pp/2p4P/R1P1P3/1NBQ1KNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 903);
    }

    #[test]
    fn gentest_4225() {
        let board = Board::from_fen("1rb1k1r1/p2p2b1/B3p3/6pn/P2P2Pp/2p4P/R1P1P3/1N1QBKNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 719);
    }

    #[test]
    fn gentest_4226() {
        let board = Board::from_fen("1rb1k1r1/p5b1/B2ppn2/6p1/P2P2Pp/2p2N1P/R1P1P3/1N1QBK1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 966);
    }

    #[test]
    fn gentest_4227() {
        let board = Board::from_fen("2b1k1r1/p5b1/B2ppn2/6p1/Pr1PP1Pp/R1p2N1P/2P5/1N1QBK1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1078);
    }

    #[test]
    fn gentest_4228() {
        let board = Board::from_fen("1rb3r1/p4kb1/B2ppn2/3P2p1/P3P1Pp/R1p2N1P/2P5/1N1QBK1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1102);
    }

    #[test]
    fn gentest_4229() {
        let board = Board::from_fen("1rb3r1/p4k2/B2ppn1b/P2PP1p1/6Pp/R1p2N1P/2P5/1N1QBK1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1210);
    }

    #[test]
    fn gentest_4230() {
        let board = Board::from_fen("2b2kr1/p7/B2ppn1b/Pr1PP1N1/6Pp/R1p4P/2P5/1N1QBK1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1024);
    }

    #[test]
    fn gentest_4231() {
        let board = Board::from_fen("2b2kr1/p7/B2ppn1b/P2rP1N1/6Pp/2R4P/2P5/1N1QBKR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_4232() {
        let board = Board::from_fen("2b2k1r/p6n/B2pp2b/P2rP1N1/6Pp/2R4P/2P2B2/1N1Q1KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 900);
    }

    #[test]
    fn gentest_4233() {
        let board = Board::from_fen("2b1k2r/p6N/B2pp2b/P2rP3/6Pp/6RP/2P2B2/1N1Q1KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1014);
    }

    #[test]
    fn gentest_4234() {
        let board = Board::from_fen("2b1k2r/p6N/B2pp3/P3r3/5bPp/N5RP/2P2B2/3Q1KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1120);
    }

    #[test]
    fn gentest_4235() {
        let board = Board::from_fen("2b1kr2/p6N/B2pp3/P3r3/5bPp/NR5P/2P2BK1/3Q2R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1575);
    }

    #[test]
    fn gentest_4236() {
        let board = Board::from_fen("4kr2/pb5N/B2pp2b/P3r3/6Pp/NR5P/2P2B2/3Q1KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1391);
    }

    #[test]
    fn gentest_4237() {
        let board = Board::from_fen("4kr2/1B5N/p2pp2b/P3r3/6Pp/NR5P/2P2B2/3Q1K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1211);
    }

    #[test]
    fn gentest_4238() {
        let board = Board::from_fen("4k3/1B5N/p2pp2b/PRr5/6Pp/N6P/2P2r2/3Q1K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 3626);
    }

    #[test]
    fn gentest_4239() {
        let board = Board::from_fen("4k3/1B4bN/p2pp3/PRr5/6Pp/N1P4P/5K2/3Q3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1149);
    }

    #[test]
    fn gentest_4240() {
        let board = Board::from_fen("8/1B2k1bN/p2p4/PRr1p3/6Pp/N1P4P/8/3Q1K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 776);
    }

    #[test]
    fn gentest_4241() {
        let board = Board::from_fen("8/1Br1k1bN/p2p4/P3p1P1/7p/N1P4P/8/1R1Q1K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 757);
    }

    #[test]
    fn gentest_4242() {
        let board = Board::from_fen("8/1Brk3N/p2p1b2/P2Qp1P1/7p/N1P4P/8/1R3K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 597);
    }

    #[test]
    fn gentest_4243() {
        let board = Board::from_fen("8/1B1k3N/p2p1b2/P3p1P1/1Qr4p/N1P4P/8/1R3K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 780);
    }

    #[test]
    fn gentest_4244() {
        let board = Board::from_fen("4k2b/1B5N/p2p4/P3p1P1/1Qr4p/N1P4P/6K1/1R5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 636);
    }

    #[test]
    fn gentest_4245() {
        let board = Board::from_fen("4k3/1B4bN/p2p4/P3p1P1/1Qr4p/N1P4P/4K3/1R5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 865);
    }

    #[test]
    fn gentest_4246() {
        let board = Board::from_fen("4k2b/1B5N/p2p4/P1r1p1P1/1Q5p/N1P4P/4K2R/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 703);
    }

    #[test]
    fn gentest_4247() {
        let board = Board::from_fen("4k2b/1B5N/p1rp4/P3p1P1/1RQ4p/N1P4P/4K2R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 525);
        assert_eq!(perft(&board, 3, &PRECOMP), 6922);
    }

    #[test]
    fn gentest_4248() {
        let board = Board::from_fen("4k3/1B5N/Q1r2b2/P2pp1P1/1R5p/N1P4P/4K2R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 758);
    }

    #[test]
    fn gentest_4249() {
        let board = Board::from_fen("2B1k3/7N/Q1r2b2/P2p2P1/R3p2p/N1P4P/4K2R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 756);
    }

    #[test]
    fn gentest_4250() {
        let board = Board::from_fen("2B1k3/7N/Q4b2/PN1p2P1/R6p/2r1p2P/4K2R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 684);
    }

    #[test]
    fn gentest_4251() {
        let board = Board::from_fen("2B1k2b/2N4N/Q7/P2p2P1/R6p/2r1p2P/4K1R1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 177);
        assert_eq!(perft(&board, 3, &PRECOMP), 2906);
    }

    #[test]
    fn gentest_4252() {
        let board = Board::from_fen("2Bk4/2N4N/Q4b2/P2p2P1/5R1p/2r1p2P/4K1R1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 764);
    }

    #[test]
    fn gentest_4253() {
        let board = Board::from_fen("2Bk4/2N4N/1Q6/P2pb1P1/1R5p/2r1p2P/4K1R1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 964);
    }

    #[test]
    fn gentest_4254() {
        let board = Board::from_fen("2Bk4/2N4N/1Q6/P2p2P1/1R3b1p/3Kp2P/6R1/2r5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 997);
    }

    #[test]
    fn gentest_4255() {
        let board = Board::from_fen("2B1k3/7N/1Q6/PN1p2P1/1R3b1p/4p2P/4K1R1/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1032);
    }

    #[test]
    fn gentest_4256() {
        let board = Board::from_fen("2B1k3/7N/1Q6/PN1p2P1/5b1p/1R2p2P/4K1R1/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 711);
    }

    #[test]
    fn gentest_4257() {
        let board = Board::from_fen("2B1k3/7N/1Q4P1/PN1p4/5b1p/1R2p1RP/4K3/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 760);
    }

    #[test]
    fn gentest_4258() {
        let board = Board::from_fen("2B1k3/2b4N/1Q4P1/P2p4/3N3p/1R2p1RP/4K3/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 756);
    }

    #[test]
    fn gentest_4259() {
        let board = Board::from_fen("2B1k3/2Q4N/P5P1/3p4/3N4/1R2p1pP/4K3/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 412);
        assert_eq!(perft(&board, 3, &PRECOMP), 4275);
    }

    #[test]
    fn gentest_4260() {
        let board = Board::from_fen("2B5/4k2N/P5P1/3p4/2QN4/1R2p1pP/4K3/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 590);
    }

    #[test]
    fn gentest_4261() {
        let board = Board::from_fen("8/4k2N/P5P1/3p4/2Q3B1/1R2pNpP/4K3/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 638);
        assert_eq!(perft(&board, 3, &PRECOMP), 8655);
    }

    #[test]
    fn gentest_4262() {
        let board = Board::from_fen("4k3/7N/P5P1/3p4/2Q3B1/4pNpP/4K3/1R2r3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 29);
        assert_eq!(perft(&board, 3, &PRECOMP), 1268);
    }

    #[test]
    fn gentest_4263() {
        let board = Board::from_fen("8/4k3/P5P1/3p2N1/2Q3B1/4p1pP/4K3/1R2N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 381);
        assert_eq!(perft(&board, 3, &PRECOMP), 2315);
    }

    #[test]
    fn gentest_4264() {
        let board = Board::from_fen("5k2/8/P5P1/3p2N1/2Q3B1/4p1pP/4K3/2R1N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 261);
    }

    #[test]
    fn gentest_4265() {
        let board = Board::from_fen("6k1/7N/P5P1/3p4/3Q2B1/4p1pP/4K3/2R1N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 50);
        assert_eq!(perft(&board, 3, &PRECOMP), 229);
        assert_eq!(perft(&board, 4, &PRECOMP), 8819);
    }

    #[test]
    fn gentest_4266() {
        let board = Board::from_fen("6k1/7N/P5P1/3pQ3/6B1/4p2P/4K3/2R1N1b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 170);
        assert_eq!(perft(&board, 3, &PRECOMP), 8191);
    }

    #[test]
    fn gentest_4267() {
        let board = Board::from_fen("7k/7N/P5P1/3p4/6B1/4p2P/8/2RKN1b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 143);
        assert_eq!(perft(&board, 3, &PRECOMP), 1054);
    }

    #[test]
    fn gentest_4268() {
        let board = Board::from_fen("8/6kN/P3B1P1/3p4/8/4p2P/8/2RKN1b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 191);
        assert_eq!(perft(&board, 3, &PRECOMP), 4892);
    }

    #[test]
    fn gentest_4269() {
        let board = Board::from_fen("8/6kN/P3B1P1/3p4/8/2R4P/4p3/2K1N1b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 325);
        assert_eq!(perft(&board, 3, &PRECOMP), 3782);
    }

    #[test]
    fn gentest_4270() {
        let board = Board::from_fen("8/b4B1N/P5Pk/3p4/8/2R4P/4p3/2K1N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 305);
        assert_eq!(perft(&board, 3, &PRECOMP), 8242);
    }

    #[test]
    fn gentest_4271() {
        let board = Board::from_fen("5N2/b4B2/P5Pk/8/3p4/7P/2R1p3/2K1N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 195);
        assert_eq!(perft(&board, 3, &PRECOMP), 1860);
    }

    #[test]
    fn gentest_4272() {
        let board = Board::from_fen("5N2/b1R2B2/P5Pk/8/3p4/7P/4p3/2K1N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 208);
        assert_eq!(perft(&board, 3, &PRECOMP), 6201);
    }

    #[test]
    fn gentest_4273() {
        let board = Board::from_fen("5N2/5B2/Pb4Pk/8/3p3P/8/2R1p3/2K1N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 224);
        assert_eq!(perft(&board, 3, &PRECOMP), 2260);
    }

    #[test]
    fn gentest_4274() {
        let board = Board::from_fen("5N2/5B2/P5P1/2b4k/3p3P/8/2R1p1N1/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 309);
        assert_eq!(perft(&board, 3, &PRECOMP), 7079);
    }

    #[test]
    fn gentest_4275() {
        let board = Board::from_fen("8/3N1B2/P5P1/2b4k/3p3P/8/1KR3N1/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 633);
    }

    #[test]
    fn gentest_4276() {
        let board = Board::from_fen("8/3NbB2/P5P1/2R5/3p2kP/8/1K4N1/4r3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 761);
    }

    #[test]
    fn gentest_4277() {
        let board = Board::from_fen("8/3NbB2/P1R3P1/7k/3p3P/8/K5N1/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 671);
    }

    #[test]
    fn gentest_4278() {
        let board = Board::from_fen("8/3Nb3/P1R3P1/4r2k/7P/1B1p4/K5N1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 671);
    }

    #[test]
    fn gentest_4279() {
        let board = Board::from_fen("1N3b2/8/P1R3P1/3Br2k/7P/3p4/K5N1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 522);
    }

    #[test]
    fn gentest_4280() {
        let board = Board::from_fen("1N6/8/P1R3P1/3Br2k/7P/3p4/1K4N1/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 127);
        assert_eq!(perft(&board, 3, &PRECOMP), 3420);
    }

    #[test]
    fn gentest_4281() {
        let board = Board::from_fen("1N6/8/P4RP1/3B2rk/7P/3p4/6N1/K1b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 428);
        assert_eq!(perft(&board, 3, &PRECOMP), 7360);
    }

    #[test]
    fn gentest_4282() {
        let board = Board::from_fen("1N6/8/P4RP1/3B2rk/7P/3p4/K5N1/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 478);
    }

    #[test]
    fn gentest_4283() {
        let board = Board::from_fen("1N4B1/8/P5P1/4r2k/7P/3p4/K5N1/2b2R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 634);
    }

    #[test]
    fn gentest_4284() {
        let board = Board::from_fen("1N4B1/3r4/P5P1/7k/7P/3p4/K7/2b1NR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 551);
    }

    #[test]
    fn gentest_4285() {
        let board = Board::from_fen("1N4B1/8/P5P1/3r1R1k/7P/3p4/K7/2b1N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 151);
        assert_eq!(perft(&board, 3, &PRECOMP), 2707);
    }

    #[test]
    fn gentest_4286() {
        let board = Board::from_fen("1N3RB1/8/P5k1/2r5/7P/3p4/K7/2b1N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 566);
    }

    #[test]
    fn gentest_4287() {
        let board = Board::from_fen("1N1R4/8/P5k1/2r3b1/2B4P/3p4/K7/4N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 710);
    }

    #[test]
    fn gentest_4288() {
        let board = Board::from_fen("1N1R4/P7/6k1/4r1b1/2B4P/8/K2p4/4N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1106);
    }

    #[test]
    fn gentest_4289() {
        let board = Board::from_fen("BN1R4/8/6k1/4r1P1/2B5/8/K7/3bN3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 871);
    }

    #[test]
    fn gentest_4290() {
        let board = Board::from_fen("BN2rR2/8/6k1/6P1/2B5/8/K7/3bN3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 728);
    }

    #[test]
    fn gentest_4291() {
        let board = Board::from_fen("BNr5/8/6k1/6P1/2B5/8/K4R2/3bN3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 800);
    }

    #[test]
    fn gentest_4292() {
        let board = Board::from_fen("1N6/6k1/8/6P1/2r1B3/8/K4R2/3bN3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 793);
    }

    #[test]
    fn gentest_4293() {
        let board = Board::from_fen("1N6/6k1/8/2r3P1/4B3/8/K1R5/3bN3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 626);
    }

    #[test]
    fn gentest_4294() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4295() {
        let board = Board::from_fen("rnbqkbnr/pp1ppppp/8/2p5/7P/N7/PPPPPPP1/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 459);
    }

    #[test]
    fn gentest_4296() {
        let board = Board::from_fen("rnbqkbnr/pp1p1pp1/4p2p/2p5/7P/NP6/P1PPPPP1/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 586);
    }

    #[test]
    fn gentest_4297() {
        let board = Board::from_fen("rnbqkbnr/pp1p1pp1/4p2p/8/2p4P/NP5N/P1PPPPP1/1RBQKB1R b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 697);
    }

    #[test]
    fn gentest_4298() {
        let board = Board::from_fen("rnbqkbnr/pp4p1/3pp2p/5p1P/2p5/NP5N/P1PPPPP1/1RBQKB1R w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 623);
    }

    #[test]
    fn gentest_4299() {
        let board = Board::from_fen("rnbqkbnr/pp6/3pp2p/5ppP/P1N5/1P5N/2PPPPP1/1RBQKB1R b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 697);
    }

    #[test]
    fn gentest_4300() {
        let board = Board::from_fen("r1bq1bnr/pp3k2/2npp2p/5ppP/P1N5/1P6/2PPPPP1/1RBQKBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 807);
    }

    #[test]
    fn gentest_4301() {
        let board = Board::from_fen("r1bq1bnr/1p3k2/p1npp2p/5ppP/P7/1P2NN2/2PPPPP1/1RBQKB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 851);
    }

    #[test]
    fn gentest_4302() {
        let board = Board::from_fen("r1bq2nr/1p2bk2/p1np3p/4pppP/P1N5/1P3N2/2PPPPP1/1RBQKB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 830);
    }

    #[test]
    fn gentest_4303() {
        let board = Board::from_fen("2bq2nr/rp2bk2/p1np3p/4pppP/P1N5/1P3N2/1BPPPPP1/1R1QKBR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 864);
    }

    #[test]
    fn gentest_4304() {
        let board = Board::from_fen("1nbq1bnr/rp3k2/p2p3p/4pppP/P1NB4/1P3N2/2PPPPP1/1R1QKBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 847);
    }

    #[test]
    fn gentest_4305() {
        let board = Board::from_fen("1nbq1bn1/rp3k1r/p2p3p/N3pppP/P2B2P1/1P3N2/2PPPP2/1R1QKBR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 919);
    }

    #[test]
    fn gentest_4306() {
        let board = Board::from_fen("1nb1qbn1/rp3k1r/p2p3p/N4ppP/P2N2P1/1P6/2PPPP2/1R1QKBR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 773);
    }

    #[test]
    fn gentest_4307() {
        let board = Board::from_fen("1nb1qbn1/r4k1r/pp1p3p/N4ppP/P5P1/1P3N2/2PPPPR1/1R1QKB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 841);
    }

    #[test]
    fn gentest_4308() {
        let board = Board::from_fen("1nb1qbn1/r4k1r/pp1p3p/N4ppP/P5P1/1P6/2PPPPRN/1R1QKB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 711);
    }

    #[test]
    fn gentest_4309() {
        let board = Board::from_fen("1nb1qbn1/4rk1r/ppNp3p/5ppP/P5P1/1P3P2/2PPP1RN/1R1QKB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 714);
    }

    #[test]
    fn gentest_4310() {
        let board = Board::from_fen("2b1qbn1/4r1kr/ppnp3p/5ppP/P5P1/1P3P2/2PPPR1N/1R1QKB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 593);
    }

    #[test]
    fn gentest_4311() {
        let board = Board::from_fen("2b1qbn1/6kr/ppnp3p/5ppP/P2P2P1/1P2rP2/2P1PR1N/2RQKB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 620);
    }

    #[test]
    fn gentest_4312() {
        let board = Board::from_fen("2b1qb2/4n1kr/ppnp3p/6pP/P2P2p1/1P2rP2/2P1P1RN/2RQKB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 680);
    }

    #[test]
    fn gentest_4313() {
        let board = Board::from_fen("4qb2/4n1kr/ppnpb2p/6pP/PP1P2p1/4rP2/2P1P1RN/1R1QKB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 981);
    }

    #[test]
    fn gentest_4314() {
        let board = Board::from_fen("4qb1r/6k1/ppnpb1np/6pP/PP1P2p1/4rP2/2PKP1RN/1R1Q1B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 1034);
    }

    #[test]
    fn gentest_4315() {
        let board = Board::from_fen("4qb1r/6k1/ppnpb1np/6pP/PP1Pr1p1/5P2/2PKPR1N/1RQ2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1070);
    }

    #[test]
    fn gentest_4316() {
        let board = Board::from_fen("5b1r/5qk1/ppnpb1np/1P4pP/P2P2p1/5P2/2PKrR1N/1RQ2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 267);
        assert_eq!(perft(&board, 3, &PRECOMP), 7173);
    }

    #[test]
    fn gentest_4317() {
        let board = Board::from_fen("5b1r/5qk1/pp1pb1np/1P2n1pP/P2P2p1/5P2/2P1KR1N/1RQ2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 962);
    }

    #[test]
    fn gentest_4318() {
        let board = Board::from_fen("5b1r/6k1/pp1p2np/1P2nqpP/P1bP2p1/4KP2/2P2R1N/1RQ2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1056);
    }

    #[test]
    fn gentest_4319() {
        let board = Board::from_fen("5b1r/8/pp1p1knp/1P2nqpP/P1bP1Pp1/1R2K3/2P2R1N/2Q2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1095);
    }

    #[test]
    fn gentest_4320() {
        let board = Board::from_fen("5b1r/8/pp1p1k1p/1P2n1pP/P1bP1np1/1R1BK3/2P2R1N/2Q5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 937);
    }

    #[test]
    fn gentest_4321() {
        let board = Board::from_fen("5b1r/6k1/pp1p3p/PP2n1pP/2bP1Rp1/1R1BK3/2P4N/2Q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 886);
    }

    #[test]
    fn gentest_4322() {
        let board = Board::from_fen("5b2/3n2kr/pp1p3p/PP4pP/2bP1Rp1/1R1BK3/2P4N/5Q2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 801);
    }

    #[test]
    fn gentest_4323() {
        let board = Board::from_fen("5bk1/3n3r/pp1p2Bp/PP4pP/2bP2p1/1R2KR2/2P4N/5Q2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 971);
    }

    #[test]
    fn gentest_4324() {
        let board = Board::from_fen("5bk1/3n1b1r/1p1p2Bp/Pp4pP/3P2p1/1R1QKR2/2P4N/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_4325() {
        let board = Board::from_fen("5bk1/5b1r/1p1p2Bp/Ppn2RpP/3P2p1/1R2K3/2P1Q2N/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 984);
    }

    #[test]
    fn gentest_4326() {
        let board = Board::from_fen("6k1/5bbr/np1p2Bp/Pp3RpP/3P2p1/1R2K3/2P3QN/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 967);
    }

    #[test]
    fn gentest_4327() {
        let board = Board::from_fen("6k1/2n2Rbr/1p1p2Bp/Pp4pP/3P2p1/1R2K3/2P3Q1/5N2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 696);
    }

    #[test]
    fn gentest_4328() {
        let board = Board::from_fen("5bk1/2n2R1r/1p4Bp/Pp1p2pP/3P2p1/R3K3/2P3Q1/5N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 722);
    }

    #[test]
    fn gentest_4329() {
        let board = Board::from_fen("4nbk1/5R1r/1p4Bp/Pp1p2pP/3P2p1/4K1N1/R1P3Q1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 706);
    }

    #[test]
    fn gentest_4330() {
        let board = Board::from_fen("4n1k1/5R1r/6Bp/ppbp2pP/3P2p1/4K3/R1P3Q1/7N w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 841);
    }

    #[test]
    fn gentest_4331() {
        let board = Board::from_fen("4n2k/7r/5RBp/ppbp2pP/3P2p1/8/R1P2KQ1/7N b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 854);
    }

    #[test]
    fn gentest_4332() {
        let board = Board::from_fen("4n2k/5r2/5RBp/pp1p2pP/3P2p1/b5N1/R1P2KQ1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 760);
    }

    #[test]
    fn gentest_4333() {
        let board = Board::from_fen("4n3/5Bk1/5R1p/pp1p2pP/3P2p1/R5N1/2P2KQ1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 372);
        assert_eq!(perft(&board, 3, &PRECOMP), 3398);
    }

    #[test]
    fn gentest_4334() {
        let board = Board::from_fen("4n3/5B1k/5R1p/pp1p2pP/3P2p1/6N1/2P2KQ1/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 353);
    }

    #[test]
    fn gentest_4335() {
        let board = Board::from_fen("8/7k/3R1nBp/pp1p2pP/3P2p1/6N1/2P2KQ1/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 135);
        assert_eq!(perft(&board, 3, &PRECOMP), 1371);
    }

    #[test]
    fn gentest_4336() {
        let board = Board::from_fen("6k1/8/3R1nBp/p2p2pP/1p1P2p1/6NQ/2P2K2/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 466);
    }

    #[test]
    fn gentest_4337() {
        let board = Board::from_fen("8/5k2/3R1n1p/p2p2pP/1p1P2p1/6N1/2P2K1Q/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 462);
        assert_eq!(perft(&board, 3, &PRECOMP), 5173);
    }

    #[test]
    fn gentest_4338() {
        let board = Board::from_fen("4k3/3n4/3R3p/p2p1NpP/1p1P2p1/8/2P2K1Q/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 481);
    }

    #[test]
    fn gentest_4339() {
        let board = Board::from_fen("4k3/3n4/3R3p/3p1NpP/pp1P2p1/8/2P1K3/R6Q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 555);
        assert_eq!(perft(&board, 3, &PRECOMP), 5690);
    }

    #[test]
    fn gentest_4340() {
        let board = Board::from_fen("5k2/6N1/3R1n1p/3p2pP/pp1P2p1/8/2P1K3/R6Q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 500);
    }

    #[test]
    fn gentest_4341() {
        let board = Board::from_fen("8/4k1N1/2R2n1p/3p2pP/pp1P2p1/8/2P1K3/R3Q3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 518);
        assert_eq!(perft(&board, 3, &PRECOMP), 5451);
    }

    #[test]
    fn gentest_4342() {
        let board = Board::from_fen("6k1/6N1/3R1n1p/3p2pP/pp1P2p1/8/2P1K3/R3Q3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 462);
    }

    #[test]
    fn gentest_4343() {
        let board = Board::from_fen("6k1/6N1/3R1n1p/3p2pP/pp1P4/2Q2Kp1/2P5/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 575);
        assert_eq!(perft(&board, 3, &PRECOMP), 7927);
    }

    #[test]
    fn gentest_4344() {
        let board = Board::from_fen("8/7k/3R1n1p/3p2pP/pp1P4/2Q2Kp1/2P5/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 433);
    }

    #[test]
    fn gentest_4345() {
        let board = Board::from_fen("8/7k/3R3p/3p2pn/pp1P4/2Q2Kp1/2P5/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 359);
        assert_eq!(perft(&board, 3, &PRECOMP), 3963);
    }

    #[test]
    fn gentest_4346() {
        let board = Board::from_fen("8/7k/5n1p/3R2p1/1p1P4/p1Q2Kp1/2P5/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 549);
    }

    #[test]
    fn gentest_4347() {
        let board = Board::from_fen("8/7k/5n1p/6p1/1p1PR3/2Q2Kp1/p1P5/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 707);
    }

    #[test]
    fn gentest_4348() {
        let board = Board::from_fen("4R3/7k/5n1p/6p1/1p1P4/1nQ2Kp1/2P5/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 716);
    }

    #[test]
    fn gentest_4349() {
        let board = Board::from_fen("4R3/7k/5n1p/8/1Q1P2p1/1n2K1p1/2P5/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 644);
        assert_eq!(perft(&board, 3, &PRECOMP), 9290);
    }

    #[test]
    fn gentest_4350() {
        let board = Board::from_fen("4n3/7k/7p/8/3P2p1/4K1p1/2PQ4/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 262);
        assert_eq!(perft(&board, 3, &PRECOMP), 7282);
    }

    #[test]
    fn gentest_4351() {
        let board = Board::from_fen("4n3/7k/7p/8/3P2p1/4K3/2PQ2p1/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 258);
        assert_eq!(perft(&board, 3, &PRECOMP), 3157);
    }

    #[test]
    fn gentest_4352() {
        let board = Board::from_fen("8/7k/7p/1n6/3PK1p1/8/2PQ2p1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 395);
    }

    #[test]
    fn gentest_4353() {
        let board = Board::from_fen("8/6k1/7p/1n6/3P2p1/2QK4/2P3p1/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 387);
        assert_eq!(perft(&board, 3, &PRECOMP), 5435);
    }

    #[test]
    fn gentest_4354() {
        let board = Board::from_fen("8/8/6kp/1n6/3P2p1/2QK4/2P5/1R4n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 465);
    }

    #[test]
    fn gentest_4355() {
        let board = Board::from_fen("8/8/6kp/1n1P4/6p1/Q2K3n/2P5/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 601);
    }

    #[test]
    fn gentest_4356() {
        let board = Board::from_fen("8/8/6k1/1n1P2np/6p1/Q2K4/1RP5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 472);
    }

    #[test]
    fn gentest_4357() {
        let board = Board::from_fen("8/8/4n1k1/1n1P3p/6p1/7Q/1RPK4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 681);
    }

    #[test]
    fn gentest_4358() {
        let board = Board::from_fen("8/8/6k1/1n1P3p/3n4/3K3p/1RP5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 247);
        assert_eq!(perft(&board, 3, &PRECOMP), 3690);
    }

    #[test]
    fn gentest_4359() {
        let board = Board::from_fen("8/8/6k1/1n1P3p/4K3/1P5p/1R6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 197);
        assert_eq!(perft(&board, 3, &PRECOMP), 2621);
    }

    #[test]
    fn gentest_4360() {
        let board = Board::from_fen("8/6k1/8/1n1P3p/4K3/1P5p/3R4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 272);
        assert_eq!(perft(&board, 3, &PRECOMP), 4538);
    }

    #[test]
    fn gentest_4361() {
        let board = Board::from_fen("8/7k/3P4/1n2K2p/8/1P5p/3R4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 243);
        assert_eq!(perft(&board, 3, &PRECOMP), 3048);
    }

    #[test]
    fn gentest_4362() {
        let board = Board::from_fen("7k/8/3n4/4K2p/8/1P5p/7R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 190);
        assert_eq!(perft(&board, 3, &PRECOMP), 3100);
    }

    #[test]
    fn gentest_4363() {
        let board = Board::from_fen("8/7k/3n4/7p/8/1P1K3p/7R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 233);
        assert_eq!(perft(&board, 3, &PRECOMP), 3021);
    }

    #[test]
    fn gentest_4364() {
        let board = Board::from_fen("8/5n1k/8/8/7p/1P1K3p/8/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 211);
        assert_eq!(perft(&board, 3, &PRECOMP), 3735);
    }

    #[test]
    fn gentest_4365() {
        let board = Board::from_fen("8/7k/8/6n1/7p/1P5p/2K5/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 207);
        assert_eq!(perft(&board, 3, &PRECOMP), 2435);
    }

    #[test]
    fn gentest_4366() {
        let board = Board::from_fen("8/8/7k/6n1/7p/1P6/2K4p/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 210);
        assert_eq!(perft(&board, 3, &PRECOMP), 3804);
    }

    #[test]
    fn gentest_4367() {
        let board = Board::from_fen("8/8/7k/8/3Rn2p/1P6/2K4p/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 331);
        assert_eq!(perft(&board, 3, &PRECOMP), 5415);
    }

    #[test]
    fn gentest_4368() {
        let board = Board::from_fen("8/8/5k2/8/R3n2p/1P6/2K4p/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 311);
        assert_eq!(perft(&board, 3, &PRECOMP), 5256);
    }

    #[test]
    fn gentest_4369() {
        let board = Board::from_fen("8/8/8/5k2/4n2p/1P6/2K4p/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 234);
        assert_eq!(perft(&board, 3, &PRECOMP), 3901);
    }

    #[test]
    fn gentest_4370() {
        let board = Board::from_fen("8/8/8/2n2k2/1P6/7p/2K4p/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 260);
        assert_eq!(perft(&board, 3, &PRECOMP), 4190);
    }

    #[test]
    fn gentest_4371() {
        let board = Board::from_fen("8/8/6k1/2P5/8/3K3p/7p/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 135);
        assert_eq!(perft(&board, 3, &PRECOMP), 1102);
    }

    #[test]
    fn gentest_4372() {
        let board = Board::from_fen("7k/8/8/2P5/3K4/7p/7p/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 78);
        assert_eq!(perft(&board, 3, &PRECOMP), 1423);
    }

    #[test]
    fn gentest_4373() {
        let board = Board::from_fen("8/6k1/8/2P5/2K5/7p/7p/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 202);
        assert_eq!(perft(&board, 3, &PRECOMP), 2255);
    }

    #[test]
    fn gentest_4374() {
        let board = Board::from_fen("8/8/7k/2PK4/8/7p/7p/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 159);
        assert_eq!(perft(&board, 3, &PRECOMP), 2635);
    }

    #[test]
    fn gentest_4375() {
        let board = Board::from_fen("8/8/3K3k/2P5/8/7p/2R5/7b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 206);
        assert_eq!(perft(&board, 3, &PRECOMP), 2976);
    }

    #[test]
    fn gentest_4376() {
        let board = Board::from_fen("7k/8/3K4/2P5/8/7p/5R2/7b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 194);
        assert_eq!(perft(&board, 3, &PRECOMP), 3625);
    }

    #[test]
    fn gentest_4377() {
        let board = Board::from_fen("b6k/2K5/5R2/2P5/8/7p/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 226);
        assert_eq!(perft(&board, 3, &PRECOMP), 2647);
    }

    #[test]
    fn gentest_4378() {
        let board = Board::from_fen("7k/1b6/1K3R2/2P5/8/7p/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 187);
        assert_eq!(perft(&board, 3, &PRECOMP), 3434);
    }

    #[test]
    fn gentest_4379() {
        let board = Board::from_fen("6k1/1b6/1K1R4/2P5/8/7p/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 265);
        assert_eq!(perft(&board, 3, &PRECOMP), 3337);
    }

    #[test]
    fn gentest_4380() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4381() {
        let board = Board::from_fen("rnbqkbnr/pppp1ppp/8/4p3/8/P2P4/1PP1PPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 756);
    }

    #[test]
    fn gentest_4382() {
        let board = Board::from_fen("rnbqkbnr/pp1p2pp/8/2p1ppB1/8/P2P4/1PP1PPPP/RN1QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 821);
    }

    #[test]
    fn gentest_4383() {
        let board = Board::from_fen("rnbqkbnr/pp1p3p/6p1/2p1ppB1/2N5/P2P4/1PP1PPPP/R2QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 910);
    }

    #[test]
    fn gentest_4384() {
        let board = Board::from_fen("r1b1kbnr/pp1p3p/2n3p1/q1p1ppB1/2N5/P2P4/1PPQPPPP/R3KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1148);
    }

    #[test]
    fn gentest_4385() {
        let board = Board::from_fen("r1b1kbnr/pp1p3p/2n3p1/2p1NpB1/q7/P2PP3/1PPQ1PPP/R3KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1578);
    }

    #[test]
    fn gentest_4386() {
        let board = Board::from_fen("r1b1kbnr/1p1p3p/6p1/p1p1np2/q4B2/P2PP3/1PPQ1PPP/R3KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1179);
    }

    #[test]
    fn gentest_4387() {
        let board = Board::from_fen("r1b1kbnr/1p1p3p/6p1/pqp1np2/1P2PB2/P2P4/2PQ1PPP/R3KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1178);
    }

    #[test]
    fn gentest_4388() {
        let board = Board::from_fen("r1b1kbnr/1p1p3p/6p1/pqp2p2/1n2PB2/P7/2PQKPPP/R4BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 210);
        assert_eq!(perft(&board, 3, &PRECOMP), 7996);
    }

    #[test]
    fn gentest_4389() {
        let board = Board::from_fen("r1b1kbnr/1p1p3p/6p1/pqp2p2/2P1PB2/P4N2/n2QKPPP/R4B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1378);
    }

    #[test]
    fn gentest_4390() {
        let board = Board::from_fen("r1b1kbnr/1p1p3p/6p1/p1p2p2/2q1PB2/P4N2/4KPPP/R1Q2B1R w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 177);
        assert_eq!(perft(&board, 3, &PRECOMP), 5912);
    }

    #[test]
    fn gentest_4391() {
        let board = Board::from_fen("r1b1kbnr/1p1p3p/6p1/p1p2p2/4PB2/P1q2N2/4KPPP/R1Q2B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1179);
    }

    #[test]
    fn gentest_4392() {
        let board = Board::from_fen("r1b1kbnr/1p1p2qp/6p1/p3Pp2/2p2B2/P4N2/4KPPP/R1Q2B1R w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 923);
    }

    #[test]
    fn gentest_4393() {
        let board = Board::from_fen("r1b1kb1r/1p1p2qp/4Pnp1/p4p2/P1p2B2/5N2/4KPPP/R1Q2B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1141);
    }

    #[test]
    fn gentest_4394() {
        let board = Board::from_fen("r1b1kb1r/2Bpq2p/1p2Pnp1/p4p2/P1p5/5N2/4KPPP/R1Q2B1R w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1163);
    }

    #[test]
    fn gentest_4395() {
        let board = Board::from_fen("r1b1kb1r/2Bpq2p/1p2P1p1/p4p2/P1p1n3/5N2/2Q1KPPP/R4B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1368);
    }

    #[test]
    fn gentest_4396() {
        let board = Board::from_fen("r1b1kb1r/2Bp3p/1p2P1p1/p4pq1/P1p5/5Nn1/Q3KPPP/R4B1R w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 179);
        assert_eq!(perft(&board, 3, &PRECOMP), 5706);
    }

    #[test]
    fn gentest_4397() {
        let board = Board::from_fen("r1b2b1r/2Bpk2p/1p2P1p1/p4pq1/P1p5/6P1/Q3KPP1/R3NB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 811);
    }

    #[test]
    fn gentest_4398() {
        let board = Board::from_fen("r1b2b1r/2Bpk2p/1p2P1p1/p4p2/P4q2/2p3P1/Q3KPPR/R3NB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 987);
    }

    #[test]
    fn gentest_4399() {
        let board = Board::from_fen("2b2b1r/3pk2p/rp2P1p1/p3Bp2/P4q2/2p3PR/Q3KPP1/R3NB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 860);
    }

    #[test]
    fn gentest_4400() {
        let board = Board::from_fen("2b2b1r/3pk2p/r3P1p1/pp2Bp2/P1q5/2p3PR/Q4PP1/R2KNB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1335);
    }

    #[test]
    fn gentest_4401() {
        let board = Board::from_fen("2b2b1r/4k2p/r3P1p1/pp1p1p2/P1q2B2/Q1p3PR/5PP1/R2KNB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 303);
        assert_eq!(perft(&board, 3, &PRECOMP), 9395);
    }

    #[test]
    fn gentest_4402() {
        let board = Board::from_fen("2b2b1r/6kp/r3P1p1/pp1p1p2/PQq2B2/2p3PR/5PP1/R2KNB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1307);
    }

    #[test]
    fn gentest_4403() {
        let board = Board::from_fen("r1b2b1r/6kp/4P1p1/pp1p1p2/PQq5/2p3PR/R2B1PP1/3KNB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1347);
    }

    #[test]
    fn gentest_4404() {
        let board = Board::from_fen("r1b4r/6kp/4P1p1/pp1p1p1R/Pb6/2p3P1/R2B1PP1/3KNq2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 772);
    }

    #[test]
    fn gentest_4405() {
        let board = Board::from_fen("r1b4R/8/4Pkp1/pp1p1p2/Pb6/2p3P1/R2B1PP1/3KNq2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 791);
    }

    #[test]
    fn gentest_4406() {
        let board = Board::from_fen("r6R/1b6/4Pkp1/pp1p1p2/Pbq5/2p3P1/3B1PP1/R2KN3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1238);
    }

    #[test]
    fn gentest_4407() {
        let board = Board::from_fen("rR6/8/2b1Pkp1/pp1p1p2/Pbq2P2/2p3P1/3B2P1/R2KN3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 603);
    }

    #[test]
    fn gentest_4408() {
        let board = Board::from_fen("1R6/r3P3/2b2kp1/pp1p1p2/Pbq2P2/6P1/2pB2P1/R2KN3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 67);
        assert_eq!(perft(&board, 3, &PRECOMP), 1748);
    }

    #[test]
    fn gentest_4409() {
        let board = Board::from_fen("1R2Q3/r7/2b2kp1/pp1p1p2/Pb3P2/1q4P1/2pB2P1/R1K1N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 945);
    }

    #[test]
    fn gentest_4410() {
        let board = Board::from_fen("1R6/r3k3/2Q3p1/pp1p1p2/Pb3P2/5qP1/2pB2P1/R1K1N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 921);
    }

    #[test]
    fn gentest_4411() {
        let board = Board::from_fen("1R6/r2k4/Q5p1/pp1p1p2/Pb3P2/4BqP1/2p3P1/R1K1N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 909);
    }

    #[test]
    fn gentest_4412() {
        let board = Board::from_fen("1R6/r3k3/Q5p1/pp1p1p2/P4P2/4BqP1/2K3P1/R3b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 979);
    }

    #[test]
    fn gentest_4413() {
        let board = Board::from_fen("1R6/Q4k2/6p1/pp1p1p2/P4P2/3KBqP1/6P1/R3b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 68);
        assert_eq!(perft(&board, 3, &PRECOMP), 1143);
    }

    #[test]
    fn gentest_4414() {
        let board = Board::from_fen("1R6/Q7/5kp1/pp1p1p2/P4P2/R2KB1P1/4q1P1/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 33);
        assert_eq!(perft(&board, 3, &PRECOMP), 999);
    }

    #[test]
    fn gentest_4415() {
        let board = Board::from_fen("8/QR6/5kp1/p2p1p2/p4P2/R3B1P1/4K1P1/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 306);
        assert_eq!(perft(&board, 3, &PRECOMP), 2359);
    }

    #[test]
    fn gentest_4416() {
        let board = Board::from_fen("8/Q7/5kp1/p2p1p2/5P2/Rp2B1P1/4KbP1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 254);
        assert_eq!(perft(&board, 3, &PRECOMP), 8122);
    }

    #[test]
    fn gentest_4417() {
        let board = Board::from_fen("8/Q7/5kp1/p2p1p2/R4P2/4B1P1/1p3bP1/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 282);
        assert_eq!(perft(&board, 3, &PRECOMP), 3036);
    }

    #[test]
    fn gentest_4418() {
        let board = Board::from_fen("8/Q7/1B3k2/p2p1pp1/R4P2/6P1/1p4P1/4bK2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 401);
    }

    #[test]
    fn gentest_4419() {
        let board = Board::from_fen("8/1Q6/5k2/p2p1pp1/R4P2/4B1P1/6P1/1b2bK2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 508);
        assert_eq!(perft(&board, 3, &PRECOMP), 6380);
    }

    #[test]
    fn gentest_4420() {
        let board = Board::from_fen("8/4k3/1Q6/p2p1pp1/R3bP2/4B1P1/6P1/4bK2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 543);
    }

    #[test]
    fn gentest_4421() {
        let board = Board::from_fen("8/1Q2k3/8/p2p1p2/R3bp2/4B1P1/6P1/4bK2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 246);
        assert_eq!(perft(&board, 3, &PRECOMP), 3310);
    }

    #[test]
    fn gentest_4422() {
        let board = Board::from_fen("5k2/1Q6/8/p2p1p2/R4p2/5bP1/3B2P1/4bK2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 463);
    }

    #[test]
    fn gentest_4423() {
        let board = Board::from_fen("1Q3k2/8/8/p2p1p2/R4p2/5bP1/3B1bP1/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 117);
        assert_eq!(perft(&board, 3, &PRECOMP), 1994);
    }

    #[test]
    fn gentest_4424() {
        let board = Board::from_fen("1Q6/4k3/8/3p1p2/p4p2/5bP1/3B1bP1/R4K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 591);
    }

    #[test]
    fn gentest_4425() {
        let board = Board::from_fen("8/4k3/8/3p1p2/p4Qb1/6P1/3B1bP1/3R1K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 572);
        assert_eq!(perft(&board, 3, &PRECOMP), 9059);
    }

    #[test]
    fn gentest_4426() {
        let board = Board::from_fen("5k2/8/8/5p2/p2p1Qb1/6P1/5bP1/2BR1K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 288);
        assert_eq!(perft(&board, 3, &PRECOMP), 7509);
    }

    #[test]
    fn gentest_4427() {
        let board = Board::from_fen("Q7/6k1/8/5p2/p2p2b1/6P1/5bP1/2BR1K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 423);
        assert_eq!(perft(&board, 3, &PRECOMP), 6245);
    }

    #[test]
    fn gentest_4428() {
        let board = Board::from_fen("Q7/6k1/8/5p2/3p2b1/p3b1P1/6P1/2BRK3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 420);
    }

    #[test]
    fn gentest_4429() {
        let board = Board::from_fen("6Q1/6k1/8/8/3p1pb1/p3b1P1/6P1/2BRK3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 63);
        assert_eq!(perft(&board, 3, &PRECOMP), 996);
    }

    #[test]
    fn gentest_4430() {
        let board = Board::from_fen("6Q1/3b4/5k2/8/3p1p2/p2Rb1P1/6P1/2B1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 540);
    }

    #[test]
    fn gentest_4431() {
        let board = Board::from_fen("8/3b4/4k3/8/3p1p2/p3b1P1/6P1/2BRK3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 201);
        assert_eq!(perft(&board, 3, &PRECOMP), 4214);
    }

    #[test]
    fn gentest_4432() {
        let board = Board::from_fen("8/3b4/4k3/8/3p1b2/B5p1/6P1/3RK3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 298);
        assert_eq!(perft(&board, 3, &PRECOMP), 4707);
    }

    #[test]
    fn gentest_4433() {
        let board = Board::from_fen("8/3b4/2R2k2/8/3p1b2/B5p1/6P1/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 170);
        assert_eq!(perft(&board, 3, &PRECOMP), 3290);
    }

    #[test]
    fn gentest_4434() {
        let board = Board::from_fen("8/8/2Rb1k2/8/3p4/6pb/1B4P1/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 318);
        assert_eq!(perft(&board, 3, &PRECOMP), 6228);
    }

    #[test]
    fn gentest_4435() {
        let board = Board::from_fen("8/5k2/2Rb4/8/3p4/6pb/1B4P1/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 435);
        assert_eq!(perft(&board, 3, &PRECOMP), 8365);
    }

    #[test]
    fn gentest_4436() {
        let board = Board::from_fen("6k1/8/1R1b4/8/3p2b1/6p1/1B4P1/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 327);
        assert_eq!(perft(&board, 3, &PRECOMP), 5913);
    }

    #[test]
    fn gentest_4437() {
        let board = Board::from_fen("6k1/8/1R6/4b3/3p2b1/B5p1/6P1/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 489);
        assert_eq!(perft(&board, 3, &PRECOMP), 9147);
    }

    #[test]
    fn gentest_4438() {
        let board = Board::from_fen("6k1/7b/1R6/4b3/3p4/B5p1/1K4P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 323);
        assert_eq!(perft(&board, 3, &PRECOMP), 6359);
    }

    #[test]
    fn gentest_4439() {
        let board = Board::from_fen("6k1/8/3R4/4b3/3p4/B5p1/2b3P1/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 313);
        assert_eq!(perft(&board, 3, &PRECOMP), 5230);
    }

    #[test]
    fn gentest_4440() {
        let board = Board::from_fen("5k1b/8/3R4/8/3p4/B5p1/1Kb3P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 135);
        assert_eq!(perft(&board, 3, &PRECOMP), 2535);
    }

    #[test]
    fn gentest_4441() {
        let board = Board::from_fen("6kb/8/5R2/8/3p4/B5p1/K1b3P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 272);
        assert_eq!(perft(&board, 3, &PRECOMP), 3630);
    }

    #[test]
    fn gentest_4442() {
        let board = Board::from_fen("6k1/5R2/5b2/5b2/3p4/B5p1/K5P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 348);
        assert_eq!(perft(&board, 3, &PRECOMP), 6487);
    }

    #[test]
    fn gentest_4443() {
        let board = Board::from_fen("6k1/7R/8/2B2b2/3p3b/6p1/K5P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 344);
        assert_eq!(perft(&board, 3, &PRECOMP), 5354);
    }

    #[test]
    fn gentest_4444() {
        let board = Board::from_fen("6k1/1R6/8/2B5/3p3b/5bp1/K5P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 423);
        assert_eq!(perft(&board, 3, &PRECOMP), 9805);
    }

    #[test]
    fn gentest_4445() {
        let board = Board::from_fen("6k1/1b2B3/8/8/3p3b/6p1/K5P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 201);
        assert_eq!(perft(&board, 3, &PRECOMP), 3454);
    }

    #[test]
    fn gentest_4446() {
        let board = Board::from_fen("5Bk1/8/b7/8/7b/3p2p1/K5P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 153);
        assert_eq!(perft(&board, 3, &PRECOMP), 1758);
    }

    #[test]
    fn gentest_4447() {
        let board = Board::from_fen("3b2k1/8/b7/8/8/B2p2p1/6P1/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 151);
        assert_eq!(perft(&board, 3, &PRECOMP), 2599);
    }

    #[test]
    fn gentest_4448() {
        let board = Board::from_fen("6k1/8/b7/6b1/8/6p1/3p2P1/K1B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 144);
        assert_eq!(perft(&board, 3, &PRECOMP), 1137);
    }

    #[test]
    fn gentest_4449() {
        let board = Board::from_fen("6k1/8/8/6b1/8/6p1/2Kpb1P1/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 185);
        assert_eq!(perft(&board, 3, &PRECOMP), 4888);
    }

    #[test]
    fn gentest_4450() {
        let board = Board::from_fen("3b2k1/8/8/8/8/2K3p1/3p2P1/2B2b2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 209);
        assert_eq!(perft(&board, 3, &PRECOMP), 1712);
    }

    #[test]
    fn gentest_4451() {
        let board = Board::from_fen("3b2k1/8/8/8/8/2K3p1/3pb1P1/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 236);
        assert_eq!(perft(&board, 3, &PRECOMP), 6318);
    }

    #[test]
    fn gentest_4452() {
        let board = Board::from_fen("6k1/4b3/8/8/8/B1K3p1/4b1P1/3n4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 104);
        assert_eq!(perft(&board, 3, &PRECOMP), 958);
    }

    #[test]
    fn gentest_4453() {
        let board = Board::from_fen("6k1/4b3/8/7b/4K3/B5p1/6P1/3n4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 248);
        assert_eq!(perft(&board, 3, &PRECOMP), 5631);
    }

    #[test]
    fn gentest_4454() {
        let board = Board::from_fen("5bk1/5b2/8/8/5K2/B5p1/6P1/3n4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 289);
        assert_eq!(perft(&board, 3, &PRECOMP), 3477);
    }

    #[test]
    fn gentest_4455() {
        let board = Board::from_fen("6k1/5b2/8/2b5/3B1K2/6p1/6P1/3n4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 367);
        assert_eq!(perft(&board, 3, &PRECOMP), 8755);
    }

    #[test]
    fn gentest_4456() {
        let board = Board::from_fen("8/B4bk1/8/8/1b3K2/6p1/6P1/3n4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 373);
        assert_eq!(perft(&board, 3, &PRECOMP), 4557);
    }

    #[test]
    fn gentest_4457() {
        let board = Board::from_fen("8/B4bk1/8/8/1b3K2/4n1p1/6P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 347);
        assert_eq!(perft(&board, 3, &PRECOMP), 9512);
    }

    #[test]
    fn gentest_4458() {
        let board = Board::from_fen("7k/B7/6b1/8/1b2K3/4n1p1/6P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 137);
        assert_eq!(perft(&board, 3, &PRECOMP), 1117);
    }

    #[test]
    fn gentest_4459() {
        let board = Board::from_fen("8/7k/6b1/8/1b1B4/4nKp1/6P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 391);
        assert_eq!(perft(&board, 3, &PRECOMP), 9832);
    }

    #[test]
    fn gentest_4460() {
        let board = Board::from_fen("6k1/8/6b1/8/1b1B4/6p1/6K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 412);
        assert_eq!(perft(&board, 3, &PRECOMP), 5975);
    }

    #[test]
    fn gentest_4461() {
        let board = Board::from_fen("6k1/B7/8/8/1b6/6K1/8/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 287);
        assert_eq!(perft(&board, 3, &PRECOMP), 6044);
    }

    #[test]
    fn gentest_4462() {
        let board = Board::from_fen("6k1/B7/3b4/8/5K2/8/8/1b6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 92);
        assert_eq!(perft(&board, 3, &PRECOMP), 1002);
    }

    #[test]
    fn gentest_4463() {
        let board = Board::from_fen("6k1/8/8/4b3/8/5K2/5B2/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 325);
        assert_eq!(perft(&board, 3, &PRECOMP), 7331);
    }

    #[test]
    fn gentest_4464() {
        let board = Board::from_fen("6k1/8/8/8/1b5B/5K2/8/1b6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 290);
        assert_eq!(perft(&board, 3, &PRECOMP), 3770);
    }

    #[test]
    fn gentest_4465() {
        let board = Board::from_fen("6k1/8/3b4/6K1/7B/8/8/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 153);
        assert_eq!(perft(&board, 3, &PRECOMP), 3291);
    }

    #[test]
    fn gentest_4466() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4467() {
        let board = Board::from_fen("rnbqkbnr/pppppp1p/6p1/8/3P2P1/8/PPP1PP1P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 609);
    }

    #[test]
    fn gentest_4468() {
        let board = Board::from_fen("r1bqkbnr/pp1ppp1p/n1p3p1/8/3P2P1/8/PPPQPP1P/RNB1KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 716);
    }

    #[test]
    fn gentest_4469() {
        let board = Board::from_fen("1rbqkbnr/pp1ppp1p/n1p3p1/8/3P1PP1/P7/1PPQP2P/RNB1KBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 598);
    }

    #[test]
    fn gentest_4470() {
        let board = Board::from_fen("1rbqkbnr/pp1ppp1p/n1p3p1/8/3PPPP1/P7/1PPQ3P/RNB1KBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 801);
    }

    #[test]
    fn gentest_4471() {
        let board = Board::from_fen("1rb1kbnr/pp1ppp1p/nqp3p1/4P3/3P1PP1/P4N2/1PPQ3P/RNB1KB1R b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 961);
    }

    #[test]
    fn gentest_4472() {
        let board = Board::from_fen("r1b1kbnr/pp1ppp1p/1qp3p1/2n1P3/3P1PP1/P4N1B/1PPQ3P/RNB1K2R w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 978);
    }

    #[test]
    fn gentest_4473() {
        let board = Board::from_fen("r1b1kb1r/pp1ppp1p/1qp3pn/2nPP3/5PP1/P4N1B/1PPQ3P/RNB2K1R b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 941);
    }

    #[test]
    fn gentest_4474() {
        let board = Board::from_fen("1rb1kb1r/pp1ppp1p/2p3pn/q1nPP3/5PP1/P6B/1PPQ3P/RNB1NK1R w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 981);
    }

    #[test]
    fn gentest_4475() {
        let board = Board::from_fen("1rb1kb1r/pp1pp2p/2p2Ppn/q1nP4/5PP1/P1P4B/1P1Q3P/RNB1NK1R b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 907);
    }

    #[test]
    fn gentest_4476() {
        let board = Board::from_fen("r1b1kb1r/pp1pp2p/5Ppn/q1np4/5PP1/P1P4B/1PNQ3P/RNB2K1R w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 917);
    }

    #[test]
    fn gentest_4477() {
        let board = Board::from_fen("r1b1kb1r/pp1ppP1p/6pn/q2p4/n4PP1/P1P4B/1PNQK2P/RNB4R b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 87);
        assert_eq!(perft(&board, 3, &PRECOMP), 2571);
    }

    #[test]
    fn gentest_4478() {
        let board = Board::from_fen("r1bk1b1r/1p1ppP1p/p5pn/q2p4/n4PP1/P1PK3B/1PNQ3P/RNB4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 648);
    }

    #[test]
    fn gentest_4479() {
        let board = Board::from_fen("r1bk1b1r/1p1ppP1p/p5p1/q2p2P1/n4Pn1/P1PK3B/1PNQ3P/RNB3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 704);
    }

    #[test]
    fn gentest_4480() {
        let board = Board::from_fen("r1bk1b1r/1pq1pP1p/p2p2p1/3p2P1/n4Pn1/P1PKQ2B/1PN4P/RNB3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1237);
    }

    #[test]
    fn gentest_4481() {
        let board = Board::from_fen("r1bk1b1r/1p2pP1p/pq1p2p1/3p2P1/nP3PR1/P1PKQ2B/2N4P/RNB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 757);
    }

    #[test]
    fn gentest_4482() {
        let board = Board::from_fen("r2k1b1r/1p2pP1p/p2pQ1p1/2qp2P1/nP3PR1/P1PK3B/2N4P/RNB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 895);
    }

    #[test]
    fn gentest_4483() {
        let board = Board::from_fen("r2k1b1r/1p2pP1p/p5p1/2qpp1P1/nP3PR1/P1P4B/2NK3P/RNB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 655);
    }

    #[test]
    fn gentest_4484() {
        let board = Board::from_fen("r2k1b1r/1p2pP1p/p2q2p1/4p1P1/nP1p1PR1/P1P4B/3K3P/RNB1N3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 682);
    }

    #[test]
    fn gentest_4485() {
        let board = Board::from_fen("r2k1b1r/4pP1p/p2q2p1/1p2p1P1/nP1p1P2/P1P3RB/3K2NP/RNB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 655);
    }

    #[test]
    fn gentest_4486() {
        let board = Board::from_fen("r2k1b1r/4pP1p/pn1q2p1/1p2p1P1/1PP2P2/P2p2RB/3K2NP/RNB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 697);
    }

    #[test]
    fn gentest_4487() {
        let board = Board::from_fen("r2k3r/4pP1p/pn1q2pb/1p2p1P1/1PP2PBP/P2p2R1/3K2N1/RNB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 923);
    }

    #[test]
    fn gentest_4488() {
        let board = Board::from_fen("r2k1B1r/4p2p/1n4pb/pp2p1P1/1PPq1PBP/P2p2R1/3K2N1/RNB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1050);
    }

    #[test]
    fn gentest_4489() {
        let board = Board::from_fen("r4B1r/2k1p2p/1n4pb/pP2p1P1/1P1q1PBP/P2p2R1/6N1/RNB1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1146);
    }

    #[test]
    fn gentest_4490() {
        let board = Board::from_fen("r6r/2k1p1Bp/1n4pb/pP2p1P1/1P3PBP/P2p2R1/6q1/RNB1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1447);
    }

    #[test]
    fn gentest_4491() {
        let board = Board::from_fen("r6r/2k1p1Bp/1n4pb/pP2pBP1/1P3P1P/P2p2R1/5K2/RNB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1175);
    }

    #[test]
    fn gentest_4492() {
        let board = Board::from_fen("r1n2B1r/2k4p/4p1pb/pP2pBP1/1P3P1P/P2p2R1/5K2/RNB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 806);
    }

    #[test]
    fn gentest_4493() {
        let board = Board::from_fen("2n2B1r/2k4p/r3p1pb/pP2pBP1/1P3P1P/P1Np4/5K2/R1B3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1080);
    }

    #[test]
    fn gentest_4494() {
        let board = Board::from_fen("5B1r/2k1n2p/2r1p1pb/pP2pBP1/1P3P1P/P2p4/N4K2/R1B3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1003);
    }

    #[test]
    fn gentest_4495() {
        let board = Board::from_fen("5B1r/2k1n2p/1r2p1pb/p3pBP1/1P3P1P/P2p2K1/N7/R1B3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 895);
    }

    #[test]
    fn gentest_4496() {
        let board = Board::from_fen("2k2B1r/4n2p/1r2p2P/p3pBp1/1P3P1P/P2p2K1/N7/R1B3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 848);
    }

    #[test]
    fn gentest_4497() {
        let board = Board::from_fen("2k2B1r/7p/1r2p2P/p2npBp1/1P3P1P/P2p3K/N7/R1B1R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 933);
    }

    #[test]
    fn gentest_4498() {
        let board = Board::from_fen("1k3B1r/7p/1r2p2P/p3pBp1/1n3P1P/P1Np3K/8/R1B1R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1009);
    }

    #[test]
    fn gentest_4499() {
        let board = Board::from_fen("1k3B1r/7p/1r2p2P/R4Bp1/1P2pP1P/2Np3K/8/2B1R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 785);
    }

    #[test]
    fn gentest_4500() {
        let board = Board::from_fen("5B1r/2k4p/4p2P/R5p1/1r2BP1P/2Np3K/8/2B1R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 54);
        assert_eq!(perft(&board, 2, &PRECOMP), 1162);
    }

    #[test]
    fn gentest_4501() {
        let board = Board::from_fen("5B1r/3k3p/4p2P/2RB2p1/1r3P1P/2Np3K/8/2B1R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 982);
    }

    #[test]
    fn gentest_4502() {
        let board = Board::from_fen("5B1r/3k3p/7P/2Rp2p1/3rRP1P/2Np3K/8/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 429);
    }

    #[test]
    fn gentest_4503() {
        let board = Board::from_fen("5Br1/3k3p/7P/2RpR1p1/3r1P1P/2Np4/6K1/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 531);
        assert_eq!(perft(&board, 3, &PRECOMP), 9019);
    }

    #[test]
    fn gentest_4504() {
        let board = Board::from_fen("5Br1/3k3p/7P/2R1R1pP/2rp1P2/2Np4/6K1/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 546);
    }

    #[test]
    fn gentest_4505() {
        let board = Board::from_fen("5Br1/3k3p/7P/2R4P/2rp1Pp1/3p4/N3R1K1/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 526);
        assert_eq!(perft(&board, 3, &PRECOMP), 9167);
    }

    #[test]
    fn gentest_4506() {
        let board = Board::from_fen("3k1Br1/7p/7P/2R4P/2rp1Pp1/8/N1Rp2K1/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 575);
    }

    #[test]
    fn gentest_4507() {
        let board = Board::from_fen("3k1B2/7p/7P/6rP/2Rp1Pp1/8/N1Rp2K1/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 648);
    }

    #[test]
    fn gentest_4508() {
        let board = Board::from_fen("3k1B2/7p/7P/7r/5Pp1/2Rp4/N1Rp2K1/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 500);
    }

    #[test]
    fn gentest_4509() {
        let board = Board::from_fen("5B2/3k3p/7P/7r/5Pp1/2Rp4/N5K1/2BR4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 511);
        assert_eq!(perft(&board, 3, &PRECOMP), 7646);
    }

    #[test]
    fn gentest_4510() {
        let board = Board::from_fen("5B2/3k3p/7P/8/5Pp1/2Rp2Kr/N7/2BR4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 38);
        assert_eq!(perft(&board, 3, &PRECOMP), 996);
    }

    #[test]
    fn gentest_4511() {
        let board = Board::from_fen("5B2/7p/4k2P/8/5Pp1/B1Rp3r/N5K1/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 473);
        assert_eq!(perft(&board, 3, &PRECOMP), 6250);
    }

    #[test]
    fn gentest_4512() {
        let board = Board::from_fen("8/6Bp/7P/5k2/5P2/B1Rp2pr/N5K1/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 375);
    }

    #[test]
    fn gentest_4513() {
        let board = Board::from_fen("8/6Bp/7P/8/1N3Pk1/BR1p2pr/6K1/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 296);
        assert_eq!(perft(&board, 3, &PRECOMP), 3178);
    }

    #[test]
    fn gentest_4514() {
        let board = Board::from_fen("8/6Bp/8/8/1N3Pk1/BR1R2p1/6Kr/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 40);
        assert_eq!(perft(&board, 3, &PRECOMP), 1157);
    }

    #[test]
    fn gentest_4515() {
        let board = Board::from_fen("8/7p/8/7k/1N3P2/BR1R2p1/7r/B5K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 425);
        assert_eq!(perft(&board, 3, &PRECOMP), 5930);
    }

    #[test]
    fn gentest_4516() {
        let board = Board::from_fen("8/7p/8/3N4/5P1k/BR1R2pr/8/B5K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 259);
        assert_eq!(perft(&board, 3, &PRECOMP), 8861);
    }

    #[test]
    fn gentest_4517() {
        let board = Board::from_fen("8/7p/8/3N4/1R3P1k/B2R2p1/6K1/B6r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 4997);
    }

    #[test]
    fn gentest_4518() {
        let board = Board::from_fen("8/8/8/3N3p/1R3P1k/B5p1/6K1/r2R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 217);
        assert_eq!(perft(&board, 3, &PRECOMP), 6000);
    }

    #[test]
    fn gentest_4519() {
        let board = Board::from_fen("1R6/8/8/3N3p/5P1k/B5p1/3R2K1/3r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 272);
        assert_eq!(perft(&board, 3, &PRECOMP), 3156);
    }

    #[test]
    fn gentest_4520() {
        let board = Board::from_fen("8/8/8/3N4/5Pkp/BR4p1/3R2K1/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 372);
        assert_eq!(perft(&board, 3, &PRECOMP), 9773);
    }

    #[test]
    fn gentest_4521() {
        let board = Board::from_fen("8/8/8/2BN4/5Pkp/1R4p1/5RK1/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 608);
        assert_eq!(perft(&board, 3, &PRECOMP), 9029);
    }

    #[test]
    fn gentest_4522() {
        let board = Board::from_fen("8/8/8/2BN4/5Pkp/R1r3p1/5RK1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 433);
    }

    #[test]
    fn gentest_4523() {
        let board = Board::from_fen("8/8/1B6/3N4/5Pk1/R1r3pp/5R2/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 545);
        assert_eq!(perft(&board, 3, &PRECOMP), 8798);
    }

    #[test]
    fn gentest_4524() {
        let board = Board::from_fen("8/8/1B3N2/5k2/5P2/R2r2pp/5R2/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 613);
    }

    #[test]
    fn gentest_4525() {
        let board = Board::from_fen("R7/8/1B3N2/5k2/5P2/3r3p/4KRp1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 625);
    }

    #[test]
    fn gentest_4526() {
        let board = Board::from_fen("7R/8/1B3N2/5k2/5P2/r6p/4KR2/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 660);
    }

    #[test]
    fn gentest_4527() {
        let board = Board::from_fen("7R/8/8/2BN4/4kP2/r6p/4KR2/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 585);
        assert_eq!(perft(&board, 3, &PRECOMP), 9479);
    }

    #[test]
    fn gentest_4528() {
        let board = Board::from_fen("7R/r7/8/2B5/1N2kP2/7p/4KR2/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 594);
    }

    #[test]
    fn gentest_4529() {
        let board = Board::from_fen("3R4/4r3/1B6/8/1N2kP2/7p/4KR2/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 448);
        assert_eq!(perft(&board, 3, &PRECOMP), 6748);
    }

    #[test]
    fn gentest_4530() {
        let board = Board::from_fen("3R4/6r1/1B6/8/1N2kP2/7p/4K2b/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 729);
    }

    #[test]
    fn gentest_4531() {
        let board = Board::from_fen("8/6r1/8/5k2/1N1B1P2/7p/4K2b/3R1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 680);
    }

    #[test]
    fn gentest_4532() {
        let board = Board::from_fen("8/2r5/8/5k2/3B1P2/3N3p/4K3/3R1Rb1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 736);
    }

    #[test]
    fn gentest_4533() {
        let board = Board::from_fen("8/3r4/8/5k2/3B1P2/3N3p/8/3R1KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 477);
        assert_eq!(perft(&board, 3, &PRECOMP), 7276);
    }

    #[test]
    fn gentest_4534() {
        let board = Board::from_fen("4r1R1/8/8/5k2/3B1P2/3N3p/8/3R1K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 567);
    }

    #[test]
    fn gentest_4535() {
        let board = Board::from_fen("4rR2/8/4k3/8/3B1P2/7p/8/2NR1K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 343);
        assert_eq!(perft(&board, 3, &PRECOMP), 4220);
    }

    #[test]
    fn gentest_4536() {
        let board = Board::from_fen("5R2/3k4/8/5P2/3B4/4r2p/8/2NR1K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 347);
    }

    #[test]
    fn gentest_4537() {
        let board = Board::from_fen("5R2/4k3/1B6/5P2/8/4r2p/N7/3R1K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 384);
        assert_eq!(perft(&board, 3, &PRECOMP), 4739);
    }

    #[test]
    fn gentest_4538() {
        let board = Board::from_fen("5R2/4k3/2r5/B4P2/8/7p/N7/3R1K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 468);
    }

    #[test]
    fn gentest_4539() {
        let board = Board::from_fen("4k3/5R2/2rR4/B4P2/8/7p/N7/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 386);
        assert_eq!(perft(&board, 3, &PRECOMP), 4813);
    }

    #[test]
    fn gentest_4540() {
        let board = Board::from_fen("8/5k2/4r3/B4P2/8/7p/N2R4/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 477);
    }

    #[test]
    fn gentest_4541() {
        let board = Board::from_fen("8/4rk2/8/5P2/1B6/7p/N5R1/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 384);
        assert_eq!(perft(&board, 3, &PRECOMP), 5757);
    }

    #[test]
    fn gentest_4542() {
        let board = Board::from_fen("8/5k2/3r4/5PR1/1B6/7p/N7/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 383);
        assert_eq!(perft(&board, 3, &PRECOMP), 8976);
    }

    #[test]
    fn gentest_4543() {
        let board = Board::from_fen("6R1/5k2/8/3r1P2/8/7p/N7/4BK2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 392);
        assert_eq!(perft(&board, 3, &PRECOMP), 6148);
    }

    #[test]
    fn gentest_4544() {
        let board = Board::from_fen("4k3/8/8/3r1P2/8/8/N6p/4BK2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 289);
        assert_eq!(perft(&board, 3, &PRECOMP), 3838);
    }

    #[test]
    fn gentest_4545() {
        let board = Board::from_fen("4k3/8/8/3r1P2/8/2N5/5K2/4B2r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 365);
        assert_eq!(perft(&board, 3, &PRECOMP), 9847);
    }

    #[test]
    fn gentest_4546() {
        let board = Board::from_fen("4k3/8/5P1r/5r2/8/2N5/5K2/4B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 125);
        assert_eq!(perft(&board, 3, &PRECOMP), 1759);
    }

    #[test]
    fn gentest_4547() {
        let board = Board::from_fen("4k3/8/5P1r/8/5K2/2N5/8/4B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 234);
        assert_eq!(perft(&board, 3, &PRECOMP), 3455);
    }

    #[test]
    fn gentest_4548() {
        let board = Board::from_fen("3k4/8/5P2/8/5K1r/8/4N3/4B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 1872);
    }

    #[test]
    fn gentest_4549() {
        let board = Board::from_fen("3k4/8/5P2/7r/8/5KN1/8/4B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 313);
        assert_eq!(perft(&board, 3, &PRECOMP), 5054);
    }

    #[test]
    fn gentest_4550() {
        let board = Board::from_fen("3k4/8/5P2/8/2r5/6N1/5K2/4B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 286);
        assert_eq!(perft(&board, 3, &PRECOMP), 4683);
    }

    #[test]
    fn gentest_4551() {
        let board = Board::from_fen("3k4/2B5/5P2/8/8/6N1/5K2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 77);
        assert_eq!(perft(&board, 3, &PRECOMP), 350);
        assert_eq!(perft(&board, 4, &PRECOMP), 6296);
    }

    #[test]
    fn gentest_4552() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4553() {
        let board = Board::from_fen("rnbqkbnr/pppppp1p/6p1/8/8/3P2P1/PPP1PP1P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 586);
    }

    #[test]
    fn gentest_4554() {
        let board = Board::from_fen("rnbqkb1r/pppppp1p/5n2/6p1/5B2/3P2P1/PPP1PP1P/RN1QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 710);
    }

    #[test]
    fn gentest_4555() {
        let board = Board::from_fen("rnbqkb1r/pppp1p1p/4pn2/6p1/5B2/NP1P2P1/P1P1PP1P/R2QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 860);
    }

    #[test]
    fn gentest_4556() {
        let board = Board::from_fen("rnbqkb1r/p1pp1p1p/1p2p3/6p1/5Bn1/NP1PP1P1/P1P2P1P/R2QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1036);
    }

    #[test]
    fn gentest_4557() {
        let board = Board::from_fen("rnb1kb1r/p1pp1p1p/1p2pq2/6p1/5Bn1/NPPPP1P1/P4P1P/RQ2KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1045);
    }

    #[test]
    fn gentest_4558() {
        let board = Board::from_fen("rnb1kbr1/p1pp1p1p/1p2pq2/6p1/2P2B2/NP1PP1P1/P4n1P/RQ2KBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1196);
    }

    #[test]
    fn gentest_4559() {
        let board = Board::from_fen("rnb2br1/p1ppkp1p/1p2Bq2/6p1/2P2B2/NP1PP1P1/P4n1P/RQ2K1NR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1199);
    }

    #[test]
    fn gentest_4560() {
        let board = Board::from_fen("rnb2br1/p1ppkp1p/1p2q3/1N4p1/2P2B2/1P1PP1Pn/P6P/RQ2K1NR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1011);
    }

    #[test]
    fn gentest_4561() {
        let board = Board::from_fen("rnb2br1/p1ppkp1p/1p6/1N1q2p1/2P2BP1/1P1PP2n/P6P/R2QK1NR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1279);
    }

    #[test]
    fn gentest_4562() {
        let board = Board::from_fen("rnb1kbr1/p1Bp1p1p/1p6/1N1q2p1/2P3P1/1P1PP2n/P6P/R2QK1NR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1261);
    }

    #[test]
    fn gentest_4563() {
        let board = Board::from_fen("rnb1k1r1/p2p1p1p/1p6/3q2p1/1bP3P1/1PNPP1Bn/P6P/R2QK1NR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1194);
    }

    #[test]
    fn gentest_4564() {
        let board = Board::from_fen("rnb1k2r/p2p1p1p/1p6/6p1/1bPq2P1/1PNPP1Bn/P2K3P/R2Q2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1162);
    }

    #[test]
    fn gentest_4565() {
        let board = Board::from_fen("rnb1k2r/p2p1p1p/1p6/6p1/1bP2qP1/1PNPP2n/P2KN2P/R2QB2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 909);
    }

    #[test]
    fn gentest_4566() {
        let board = Board::from_fen("rnb1kr2/p2p1p1p/1p6/2b3p1/2P2qP1/1PNPP2n/P2KN2P/2RQB2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 924);
    }

    #[test]
    fn gentest_4567() {
        let board = Board::from_fen("rnb1kr2/p2p1p1p/1p6/6p1/1bP2qP1/1PNPP2n/P1RKN2P/3QB1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 858);
    }

    #[test]
    fn gentest_4568() {
        let board = Board::from_fen("rnb1kr2/p2p1p2/1p6/2b3pp/2P2qP1/1PNPP2n/P1RKN2P/1Q2B1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1162);
    }

    #[test]
    fn gentest_4569() {
        let board = Board::from_fen("rnb1k1r1/p2p1p2/1p6/2b3pp/2P2qP1/1PNPP2n/P1RK3P/1QN1BR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1065);
    }

    #[test]
    fn gentest_4570() {
        let board = Board::from_fen("rnb3r1/p2p1pk1/1p6/2b3pp/2P2qP1/1PNPP2n/PR1K3P/1QN1BR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1227);
    }

    #[test]
    fn gentest_4571() {
        let board = Board::from_fen("rnb3r1/p2p1pk1/1p6/2N1q1pp/2P3P1/1P1PP2n/PR1K3P/1QN1BR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1171);
    }

    #[test]
    fn gentest_4572() {
        let board = Board::from_fen("r1b3r1/p2p1pk1/np6/2N1q1p1/2P3Pp/1P1PP2n/P1RK3P/1QN1BR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1134);
    }

    #[test]
    fn gentest_4573() {
        let board = Board::from_fen("r1b3r1/p2p1pk1/np6/4q1p1/N1P2RPp/1P1PP3/P1RK3P/1QN1B1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1087);
    }

    #[test]
    fn gentest_4574() {
        let board = Board::from_fen("1rb3r1/p2p1pk1/1N6/4q1p1/1nP2RPp/1P1PP3/P1RK3P/1QN1B1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1313);
    }

    #[test]
    fn gentest_4575() {
        let board = Board::from_fen("1rb3r1/p2p1pk1/1N6/4q3/PnP2pPp/1P1PP3/1R1K3P/1QN1B1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 1066);
    }

    #[test]
    fn gentest_4576() {
        let board = Board::from_fen("1rb1q1r1/3p1pk1/1N6/p7/PnP2pPp/1P1PP3/1R1K1B1P/1QN3n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 854);
    }

    #[test]
    fn gentest_4577() {
        let board = Board::from_fen("2b1q1r1/1r1p1pk1/1N6/p7/PnP2PPp/1P1P4/1R1K1B1P/Q1N3n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 828);
    }

    #[test]
    fn gentest_4578() {
        let board = Board::from_fen("2b3r1/1r1p1p2/1N5k/p7/PnP2PPp/1P1P3P/1R1K1B2/Q1N1q1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 56);
        assert_eq!(perft(&board, 3, &PRECOMP), 1273);
    }

    #[test]
    fn gentest_4579() {
        let board = Board::from_fen("N1b3r1/1r1p1p2/6k1/p7/PnP2PPp/1P1P3P/1R1K4/Q1N1B1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 536);
    }

    #[test]
    fn gentest_4580() {
        let board = Board::from_fen("N1b3r1/3p1p2/6k1/pr6/P1P2PPp/1P1P3P/R1nK4/Q1N1B1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 764);
    }

    #[test]
    fn gentest_4581() {
        let board = Board::from_fen("2b3r1/2Np1p2/6k1/pr6/P1P2PPp/1P1P3P/R2KN3/Q3n1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1049);
    }

    #[test]
    fn gentest_4582() {
        let board = Board::from_fen("2b3r1/2Np3k/8/pr3p2/P1P2PPp/1P1P3P/RQ1KN3/4n1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1004);
    }

    #[test]
    fn gentest_4583() {
        let board = Board::from_fen("2b1r3/2Np3k/8/pr3p2/P1P2PPp/1P1P3P/2QKN3/R3n1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_4584() {
        let board = Board::from_fen("1rb1r3/2Np3k/8/p4p2/P1P2PPp/1P1n3P/2QK4/R1N3n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 896);
    }

    #[test]
    fn gentest_4585() {
        let board = Board::from_fen("2b1r3/2Np3k/8/p1P2p2/Pr3PPp/1P1n3P/2QK4/1RN3n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 927);
    }

    #[test]
    fn gentest_4586() {
        let board = Board::from_fen("2b2r2/1rNp3k/8/p1P2p2/P4PPp/1P1n3P/N1QK4/1R4n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 928);
    }

    #[test]
    fn gentest_4587() {
        let board = Board::from_fen("2b2r1k/1r1p4/N7/p1P2p2/P4PPp/1P1n3P/N2K4/1RQ3n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 697);
    }

    #[test]
    fn gentest_4588() {
        let board = Board::from_fen("2b2r1k/1r1p4/N1P5/p4p2/P4PPp/1P1n3P/N2K4/1RQ3n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 797);
    }

    #[test]
    fn gentest_4589() {
        let board = Board::from_fen("2b2r1k/1r1p4/2P5/p1N2p2/P4PPp/1P5P/NQ1K1n2/1R4n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 106);
        assert_eq!(perft(&board, 3, &PRECOMP), 2631);
    }

    #[test]
    fn gentest_4590() {
        let board = Board::from_fen("2b4k/1r6/2Pp1r2/p1N2p2/P4PPp/1P5P/NQ1K1n2/R5n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 920);
    }

    #[test]
    fn gentest_4591() {
        let board = Board::from_fen("2b4k/8/2Pp1r2/p1N1Qp2/Pr3PPp/1P5P/3K1n2/R5n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 988);
    }

    #[test]
    fn gentest_4592() {
        let board = Board::from_fen("2b4k/8/2Pp1r2/p1N2p2/P2Q1PPp/1P3n1P/3K1n2/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 115);
        assert_eq!(perft(&board, 3, &PRECOMP), 3621);
    }

    #[test]
    fn gentest_4593() {
        let board = Board::from_fen("2b4k/8/2Pp1r2/p4pn1/P2Q1PPp/1P1N3P/5n2/R1K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 633);
    }

    #[test]
    fn gentest_4594() {
        let board = Board::from_fen("2b4k/5n2/1QP2r2/p2p1p2/P4PPp/1P1N3P/5n2/R1K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 709);
    }

    #[test]
    fn gentest_4595() {
        let board = Board::from_fen("2bQ4/5n1k/2P2r2/p2p1p2/PN3PPp/1P5P/5n2/R1K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 711);
    }

    #[test]
    fn gentest_4596() {
        let board = Board::from_fen("2bQ4/5n2/2P2rk1/3p1p2/Pp3PPp/1P5P/2K2n2/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 642);
    }

    #[test]
    fn gentest_4597() {
        let board = Board::from_fen("2bQ4/5n2/2P2rk1/3p1p2/Pp3PPp/1P5P/2K5/5R1n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 607);
    }

    #[test]
    fn gentest_4598() {
        let board = Board::from_fen("2b5/8/2n2rk1/3p1p2/Pp3PPp/1P5P/2K5/6Rn w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 394);
        assert_eq!(perft(&board, 3, &PRECOMP), 6396);
    }

    #[test]
    fn gentest_4599() {
        let board = Board::from_fen("2b5/8/2n2r1k/P2p1p2/1p3PPp/1P5P/2K5/4R2n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 499);
    }

    #[test]
    fn gentest_4600() {
        let board = Board::from_fen("2b5/8/4nr1k/P2p1p2/1p3PPp/1P2R2P/2K5/7n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 358);
        assert_eq!(perft(&board, 3, &PRECOMP), 5968);
    }

    #[test]
    fn gentest_4601() {
        let board = Board::from_fen("2b5/8/4nr1k/P2p1p2/1p3PPp/1P2R2P/3K1n2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 409);
    }

    #[test]
    fn gentest_4602() {
        let board = Board::from_fen("2b5/8/4nr1k/P2p1p2/1p3PPp/1P2R2P/3n4/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 395);
        assert_eq!(perft(&board, 3, &PRECOMP), 6211);
    }

    #[test]
    fn gentest_4603() {
        let board = Board::from_fen("2b5/8/5r1k/P2p1pn1/1p3PPp/1P2R2P/3n4/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 478);
    }

    #[test]
    fn gentest_4604() {
        let board = Board::from_fen("2b5/4R3/r6k/P2p1pn1/1p3PPp/1P5P/8/2K2n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 447);
        assert_eq!(perft(&board, 3, &PRECOMP), 7485);
    }

    #[test]
    fn gentest_4605() {
        let board = Board::from_fen("2b1R3/7n/r6k/P2p1p2/1p3PPp/1P5P/8/3K1n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 402);
        assert_eq!(perft(&board, 3, &PRECOMP), 8652);
    }

    #[test]
    fn gentest_4606() {
        let board = Board::from_fen("2b1Rn2/8/7k/r2p1p2/1p3PPp/1P5P/8/2K2n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 365);
        assert_eq!(perft(&board, 3, &PRECOMP), 5433);
    }

    #[test]
    fn gentest_4607() {
        let board = Board::from_fen("2b5/8/6nk/r2p1pP1/1p3P1p/1P2R2P/8/2K2n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 45);
        assert_eq!(perft(&board, 3, &PRECOMP), 1115);
    }

    #[test]
    fn gentest_4608() {
        let board = Board::from_fen("2b5/6k1/4R1n1/r4pP1/1p1p1P1p/1P5P/8/2K2n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 454);
        assert_eq!(perft(&board, 3, &PRECOMP), 6384);
    }

    #[test]
    fn gentest_4609() {
        let board = Board::from_fen("2b5/6k1/6n1/1r3pP1/1p1p1P1p/1P5P/1K6/4Rn2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 436);
    }

    #[test]
    fn gentest_4610() {
        let board = Board::from_fen("2b5/6k1/1r6/5pP1/1p1p1n1p/1P5P/1K6/1R3n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 325);
        assert_eq!(perft(&board, 3, &PRECOMP), 3907);
    }

    #[test]
    fn gentest_4611() {
        let board = Board::from_fen("8/6k1/br6/5pP1/1p1p1n1p/1P5P/8/K2R1n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 374);
    }

    #[test]
    fn gentest_4612() {
        let board = Board::from_fen("5k2/8/b7/1r3pP1/1p1p1n1p/1P5P/8/KR3n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 209);
        assert_eq!(perft(&board, 3, &PRECOMP), 2316);
    }

    #[test]
    fn gentest_4613() {
        let board = Board::from_fen("5k2/8/b7/1r1n1pP1/1p1p3p/1P5P/K7/2R2n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 377);
        assert_eq!(perft(&board, 3, &PRECOMP), 9287);
    }

    #[test]
    fn gentest_4614() {
        let board = Board::from_fen("5k2/8/b7/r1Rn1pP1/1p1p3p/1P4nP/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 90);
        assert_eq!(perft(&board, 3, &PRECOMP), 1121);
    }

    #[test]
    fn gentest_4615() {
        let board = Board::from_fen("5k2/8/8/r2n1pP1/1p1p3p/1P1b2nP/2R5/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 169);
        assert_eq!(perft(&board, 3, &PRECOMP), 5498);
    }

    #[test]
    fn gentest_4616() {
        let board = Board::from_fen("5k2/2n5/8/rb3pP1/1pRp3p/1P4nP/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 374);
        assert_eq!(perft(&board, 3, &PRECOMP), 4955);
    }

    #[test]
    fn gentest_4617() {
        let board = Board::from_fen("8/2n3k1/8/rb3pP1/1pRp3p/1P4nP/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 364);
    }

    #[test]
    fn gentest_4618() {
        let board = Board::from_fen("8/6k1/n7/rb3pP1/1pRp3p/1P5P/8/2K4n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 309);
        assert_eq!(perft(&board, 3, &PRECOMP), 4406);
    }

    #[test]
    fn gentest_4619() {
        let board = Board::from_fen("8/6k1/n7/rb3pP1/1pRp3p/1P4nP/8/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 316);
        assert_eq!(perft(&board, 3, &PRECOMP), 8233);
    }

    #[test]
    fn gentest_4620() {
        let board = Board::from_fen("8/6k1/n7/rb3pP1/1p1p3p/1P4nP/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 518);
    }

    #[test]
    fn gentest_4621() {
        let board = Board::from_fen("8/6k1/n5P1/r4p2/1p1p3p/1P4nP/8/1K3b2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 96);
        assert_eq!(perft(&board, 3, &PRECOMP), 2739);
    }

    #[test]
    fn gentest_4622() {
        let board = Board::from_fen("7k/8/n5P1/r7/1p1p1p1p/1P4nP/8/2K2b2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 148);
        assert_eq!(perft(&board, 3, &PRECOMP), 700);
    }

    #[test]
    fn gentest_4623() {
        let board = Board::from_fen("7k/8/n5P1/r7/1pbp1p1p/1P4nP/2K5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 213);
        assert_eq!(perft(&board, 3, &PRECOMP), 5745);
    }

    #[test]
    fn gentest_4624() {
        let board = Board::from_fen("6k1/8/n5P1/r7/1p1p1p1p/1P4nP/8/2K2b2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 180);
        assert_eq!(perft(&board, 3, &PRECOMP), 854);
    }

    #[test]
    fn gentest_4625() {
        let board = Board::from_fen("6k1/6P1/n7/r6n/1p1p1p1p/1P5P/3K4/5b2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 3087);
    }

    #[test]
    fn gentest_4626() {
        let board = Board::from_fen("8/5kP1/n7/r6n/1p1p1p1p/1P5P/4b3/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 198);
        assert_eq!(perft(&board, 3, &PRECOMP), 1669);
    }

    #[test]
    fn gentest_4627() {
        let board = Board::from_fen("6R1/5k2/8/r1n4n/1p1p1p1p/1P5P/3Kb3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 516);
    }

    #[test]
    fn gentest_4628() {
        let board = Board::from_fen("2R5/8/5k2/r1n4n/1p1p1p1p/1P5P/3K4/3b4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 352);
        assert_eq!(perft(&board, 3, &PRECOMP), 4910);
    }

    #[test]
    fn gentest_4629() {
        let board = Board::from_fen("1R6/8/4k3/r1n4n/1p1p1p1p/1P5P/8/2Kb4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 451);
    }

    #[test]
    fn gentest_4630() {
        let board = Board::from_fen("8/8/4k3/rR5n/1p3p1p/1n1p3P/8/2Kb4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 77);
        assert_eq!(perft(&board, 3, &PRECOMP), 846);
    }

    #[test]
    fn gentest_4631() {
        let board = Board::from_fen("8/8/4k3/r6n/1R3pbp/1n1p3P/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 417);
    }

    #[test]
    fn gentest_4632() {
        let board = Board::from_fen("8/8/4k3/r6n/1R3p1p/3p3P/3nb3/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 408);
        assert_eq!(perft(&board, 3, &PRECOMP), 5017);
    }

    #[test]
    fn gentest_4633() {
        let board = Board::from_fen("4R3/8/8/r4k1n/5p1p/3p3P/3nb3/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 379);
        assert_eq!(perft(&board, 3, &PRECOMP), 9873);
    }

    #[test]
    fn gentest_4634() {
        let board = Board::from_fen("8/6n1/4R3/5k2/5p1p/r2p3P/3nb3/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 346);
        assert_eq!(perft(&board, 3, &PRECOMP), 4280);
    }

    #[test]
    fn gentest_4635() {
        let board = Board::from_fen("2R5/6n1/8/5k2/5p1p/r2p3P/3n4/2Kb4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 458);
    }

    #[test]
    fn gentest_4636() {
        let board = Board::from_fen("5R2/6n1/4k3/7b/5p1p/r2p3P/3n4/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 348);
        assert_eq!(perft(&board, 3, &PRECOMP), 4244);
    }

    #[test]
    fn gentest_4637() {
        let board = Board::from_fen("2R5/8/4k3/5n1b/5p1p/r2p3P/3n4/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 515);
    }

    #[test]
    fn gentest_4638() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4639() {
        let board = Board::from_fen("rnbqkb1r/pppppppp/7n/8/1P6/7P/P1PPPPP1/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 401);
        assert_eq!(perft(&board, 3, &PRECOMP), 8962);
    }

    #[test]
    fn gentest_4640() {
        let board = Board::from_fen("rnbqkb1r/ppppp2p/5ppn/8/1P4P1/7P/P1PPPP2/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 419);
        assert_eq!(perft(&board, 3, &PRECOMP), 9488);
    }

    #[test]
    fn gentest_4641() {
        let board = Board::from_fen("rnbqkb1r/ppppp2p/5p1n/6p1/1P4P1/2N2N1P/P1PPPP2/R1BQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 504);
    }

    #[test]
    fn gentest_4642() {
        let board = Board::from_fen("rnbqkb1r/ppppp2p/5p1n/6p1/1P4P1/2N1PN1P/P1PP1P2/R1BQKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 633);
    }

    #[test]
    fn gentest_4643() {
        let board = Board::from_fen("rnbq1b1r/pppppk1p/5p1n/4N1p1/1P4P1/P1N1P2P/2PP1P2/R1BQKB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 173);
        assert_eq!(perft(&board, 3, &PRECOMP), 3482);
    }

    #[test]
    fn gentest_4644() {
        let board = Board::from_fen("rnbq1b1r/ppppp2p/4kp2/4N1p1/1P1P2n1/P1N1P2P/2P2P2/R1BQKB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 971);
    }

    #[test]
    fn gentest_4645() {
        let board = Board::from_fen("rnbq1b1r/pp1pp2p/2p1kp2/6p1/1P1PP1n1/P1NN3P/2P2P2/R1BQKB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 878);
    }

    #[test]
    fn gentest_4646() {
        let board = Board::from_fen("rnbq1b1r/pp1ppk1p/2p2p2/2N3p1/1P1PP3/P1N4P/2P2n2/R1BQKB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1212);
    }

    #[test]
    fn gentest_4647() {
        let board = Board::from_fen("rnbq1b1r/pp1ppk2/2p2p1p/6p1/1P1PP1Q1/P1NN3P/2P2n2/R1B1KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1228);
    }

    #[test]
    fn gentest_4648() {
        let board = Board::from_fen("rnbq1b1r/pp1pp3/2p2pkp/1P4p1/3Pn1Q1/P1NN3P/2P5/R1B1KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1133);
    }

    #[test]
    fn gentest_4649() {
        let board = Board::from_fen("rnbq1br1/pp1pp3/2p2pkp/1P4p1/3Pn3/P1NN3P/2PB4/R3KBQR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1230);
    }

    #[test]
    fn gentest_4650() {
        let board = Board::from_fen("rnbq1br1/p2p4/1pp2pkp/1P1Np1p1/3Pn3/P2N3P/2PB4/R3KBQR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1420);
    }

    #[test]
    fn gentest_4651() {
        let board = Board::from_fen("rnbq1b1r/p2p4/1pp2pkp/1P1Np1p1/3PnNQ1/P6P/2PB4/R3KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 192);
        assert_eq!(perft(&board, 3, &PRECOMP), 5836);
    }

    #[test]
    fn gentest_4652() {
        let board = Board::from_fen("rnbq3r/p2p3k/1pp2p1p/1PbNp1p1/3PnN1Q/P6P/2PB4/R3KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1457);
    }

    #[test]
    fn gentest_4653() {
        let board = Board::from_fen("rnbq3r/p2p3k/1pp2p2/1PbNp1pp/3PnN1Q/P6P/2PB4/2R1KB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1374);
    }

    #[test]
    fn gentest_4654() {
        let board = Board::from_fen("rnbq3r/p2p3k/1p3p2/1Pbpp1pp/3P1N2/P5nP/2PB4/2R1KB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 969);
    }

    #[test]
    fn gentest_4655() {
        let board = Board::from_fen("rnbq1b1r/p2p3k/1p3p2/1P1pp1pp/3P1N2/P1P3nP/3B1K2/2R2B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 920);
    }

    #[test]
    fn gentest_4656() {
        let board = Board::from_fen("rnbq3r/p2p3k/1p3p2/1Pbpp1pp/3P1N2/P1P4P/3BBK2/2R4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1140);
    }

    #[test]
    fn gentest_4657() {
        let board = Board::from_fen("rnbq3r/p2p3k/1p3p2/1Pbpp2p/3P1NP1/P1P2K2/3BB3/2R4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1054);
    }

    #[test]
    fn gentest_4658() {
        let board = Board::from_fen("rnbq2r1/p2p3k/1p3p2/1P1pp2p/3P1NP1/b1P2K2/4B3/2R1B2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1029);
    }

    #[test]
    fn gentest_4659() {
        let board = Board::from_fen("rnbq2r1/p2p4/1p3p1k/1P1pp2p/3P2P1/b1P3K1/4B1N1/2R1B2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 885);
    }

    #[test]
    fn gentest_4660() {
        let board = Board::from_fen("rnbq2r1/p2pb3/1p3p1k/1P1p3p/3p2P1/2P3K1/4BBN1/2R4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 999);
    }

    #[test]
    fn gentest_4661() {
        let board = Board::from_fen("rnbq2r1/3pb3/pp3p1k/1P1p3p/3p2P1/2P3K1/4B1N1/1R2B2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 823);
    }

    #[test]
    fn gentest_4662() {
        let board = Board::from_fen("rnbq3r/3p4/pp3p1k/1Pbp3p/3p2PN/2P3K1/4B3/1R2B2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 791);
    }

    #[test]
    fn gentest_4663() {
        let board = Board::from_fen("rnb1q2r/3p4/pp3p1k/1Pbp3p/3p2PN/2P3K1/4BB2/1R4R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1040);
    }

    #[test]
    fn gentest_4664() {
        let board = Board::from_fen("rnb2b1r/3p4/pp3p1k/1P1p3p/3p2PN/2P1q1K1/4BB2/1R3R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 149);
        assert_eq!(perft(&board, 3, &PRECOMP), 3937);
    }

    #[test]
    fn gentest_4665() {
        let board = Board::from_fen("rnb2b1r/3p4/pp3p1k/1P1p3p/3p2PN/2P2B2/5BK1/1R3R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 690);
    }

    #[test]
    fn gentest_4666() {
        let board = Board::from_fen("rnb2b1r/3p3k/1p3p2/pP1p3P/3p3N/2P2B2/5BK1/1R3R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 678);
    }

    #[test]
    fn gentest_4667() {
        let board = Board::from_fen("rnb4r/3p3k/1p3p2/pP1p3P/1P1p3N/5B2/5BK1/1RR5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 603);
    }

    #[test]
    fn gentest_4668() {
        let board = Board::from_fen("1nb4r/3p3k/1p3p2/rP1p3P/1p1p3N/5B2/5B1K/1RR5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 825);
    }

    #[test]
    fn gentest_4669() {
        let board = Board::from_fen("1nb4r/7k/1p1p1p1P/rP1p4/1p1p3N/5BB1/7K/1RR5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 923);
    }

    #[test]
    fn gentest_4670() {
        let board = Board::from_fen("1nb4r/7k/1p1p1p1P/1P1p4/1p1p3N/5BB1/7K/1r4R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 625);
    }

    #[test]
    fn gentest_4671() {
        let board = Board::from_fen("1n5r/7k/1p1Bbp1P/1P1p2R1/1p1p3N/5B2/7K/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 890);
    }

    #[test]
    fn gentest_4672() {
        let board = Board::from_fen("1n3B1r/5b1k/1p3p1P/1P1p2R1/1p1p3N/5B2/7K/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 652);
    }

    #[test]
    fn gentest_4673() {
        let board = Board::from_fen("1n3B1r/5b1k/1p3p1P/1P1p1NR1/1p1p4/5B2/6K1/4r3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 712);
    }

    #[test]
    fn gentest_4674() {
        let board = Board::from_fen("1n3B1r/5b1k/1p3pRP/1P1p1N2/1p1p4/5B2/6K1/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 2298);
    }

    #[test]
    fn gentest_4675() {
        let board = Board::from_fen("1n3B1r/5b1k/1p3pRP/1P1p1N2/1p6/3p1B2/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 415);
        assert_eq!(perft(&board, 3, &PRECOMP), 6058);
    }

    #[test]
    fn gentest_4676() {
        let board = Board::from_fen("5B1r/3n3k/1p2bpRP/1P1p1N2/1p6/3p4/6BK/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 395);
    }

    #[test]
    fn gentest_4677() {
        let board = Board::from_fen("5B1r/3n3k/1p2bpRP/1P1p4/8/1p1pN3/6B1/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 6947);
    }

    #[test]
    fn gentest_4678() {
        let board = Board::from_fen("5Bbr/3n3k/1p3pRP/1P1p4/8/1p1pN3/6BK/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 308);
        assert_eq!(perft(&board, 3, &PRECOMP), 8940);
    }

    #[test]
    fn gentest_4679() {
        let board = Board::from_fen("6br/3n3k/1p4RP/1PBp1p2/6N1/1p1p4/6BK/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 411);
        assert_eq!(perft(&board, 3, &PRECOMP), 5857);
    }

    #[test]
    fn gentest_4680() {
        let board = Board::from_fen("5B1r/5b1k/1p4RP/1Pnp1p2/6N1/1p1p4/6BK/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 452);
    }

    #[test]
    fn gentest_4681() {
        let board = Board::from_fen("6r1/5b1k/1p1B2RP/1Pnp1p2/6N1/1p1p3K/6B1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 651);
    }

    #[test]
    fn gentest_4682() {
        let board = Board::from_fen("1r6/5b1k/1p4RP/1Pnp1p2/6N1/1p1p2BK/6B1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 670);
    }

    #[test]
    fn gentest_4683() {
        let board = Board::from_fen("1r5k/5b2/1p4RP/1Pnp1p2/6NB/1p1p3K/6B1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 606);
    }

    #[test]
    fn gentest_4684() {
        let board = Board::from_fen("1r5k/5b2/1p4RP/1Pnp4/6pB/3p3K/1p6/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 128);
        assert_eq!(perft(&board, 3, &PRECOMP), 3077);
    }

    #[test]
    fn gentest_4685() {
        let board = Board::from_fen("1r2b2k/8/1p3R1P/1Pnp4/6pB/3p2K1/1p6/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 526);
    }

    #[test]
    fn gentest_4686() {
        let board = Board::from_fen("1r5k/5b2/1p3R1P/1Pnp2B1/6p1/3p2K1/8/1b3B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 650);
    }

    #[test]
    fn gentest_4687() {
        let board = Board::from_fen("1r5k/5b2/1p5P/1Pnp2B1/5Rp1/3p2K1/2b3B1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 709);
    }

    #[test]
    fn gentest_4688() {
        let board = Board::from_fen("4r2k/3n1b2/1p5P/1P1p2B1/5RK1/3p4/2b3B1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 764);
    }

    #[test]
    fn gentest_4689() {
        let board = Board::from_fen("7k/3n1b2/1p5P/1P1p2B1/4r2R/3p2K1/2b3B1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 768);
    }

    #[test]
    fn gentest_4690() {
        let board = Board::from_fen("7k/3n4/1p5P/1P1p2Bb/4r1R1/6K1/2bp2B1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 654);
    }

    #[test]
    fn gentest_4691() {
        let board = Board::from_fen("7k/3n4/1p3B1P/1P1p3b/4r1R1/3b1BK1/3p4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 46);
        assert_eq!(perft(&board, 3, &PRECOMP), 1448);
    }

    #[test]
    fn gentest_4692() {
        let board = Board::from_fen("7k/8/1p3n1P/1P1p3b/6RK/3b1B2/3pr3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 707);
    }

    #[test]
    fn gentest_4693() {
        let board = Board::from_fen("7k/8/1p3n1P/1P1p1bKb/3R4/5B2/3pr3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 758);
    }

    #[test]
    fn gentest_4694() {
        let board = Board::from_fen("7k/8/1p3n1P/1P1p1bKb/8/5B2/3Rr3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 682);
    }

    #[test]
    fn gentest_4695() {
        let board = Board::from_fen("7k/3b4/1p3n1P/1P1pR1Kb/8/5B2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 405);
        assert_eq!(perft(&board, 3, &PRECOMP), 7816);
    }

    #[test]
    fn gentest_4696() {
        let board = Board::from_fen("7k/3b4/1p3n1P/1P1p2Kb/8/5B2/4R3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 477);
    }

    #[test]
    fn gentest_4697() {
        let board = Board::from_fen("7k/8/1pb2n1P/1P1B2Kb/8/8/6R1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 464);
        assert_eq!(perft(&board, 3, &PRECOMP), 9286);
    }

    #[test]
    fn gentest_4698() {
        let board = Board::from_fen("7k/8/1pb2n1P/1P1B1K2/8/8/2b3R1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 149);
        assert_eq!(perft(&board, 3, &PRECOMP), 3584);
    }

    #[test]
    fn gentest_4699() {
        let board = Board::from_fen("7k/8/1p3nRP/1b1B4/5K2/8/2b5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 660);
    }

    #[test]
    fn gentest_4700() {
        let board = Board::from_fen("7k/7n/1p1R3P/1b1B4/4bK2/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 447);
    }

    #[test]
    fn gentest_4701() {
        let board = Board::from_fen("7k/3b3n/1R5P/3B4/4bK2/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 568);
    }

    #[test]
    fn gentest_4702() {
        let board = Board::from_fen("7k/7n/R3b2P/3B4/5K2/8/2b5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 510);
    }

    #[test]
    fn gentest_4703() {
        let board = Board::from_fen("7k/1B5n/3R3P/5b2/5K2/8/2b5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 462);
        assert_eq!(perft(&board, 3, &PRECOMP), 8685);
    }

    #[test]
    fn gentest_4704() {
        let board = Board::from_fen("7k/8/3R3P/3B1bn1/5K2/3b4/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 570);
    }

    #[test]
    fn gentest_4705() {
        let board = Board::from_fen("7k/3R4/7P/3B1bn1/4b3/6K1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 423);
        assert_eq!(perft(&board, 3, &PRECOMP), 8302);
    }

    #[test]
    fn gentest_4706() {
        let board = Board::from_fen("3R4/7k/7P/3B1bn1/8/5bK1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 514);
    }

    #[test]
    fn gentest_4707() {
        let board = Board::from_fen("3R4/1B5k/7P/5b2/4n2K/5b2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 456);
        assert_eq!(perft(&board, 3, &PRECOMP), 9965);
    }

    #[test]
    fn gentest_4708() {
        let board = Board::from_fen("8/1B5k/b6P/3R1b2/4n2K/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 368);
        assert_eq!(perft(&board, 3, &PRECOMP), 7224);
    }

    #[test]
    fn gentest_4709() {
        let board = Board::from_fen("8/1B5k/7P/1b3R2/4n3/7K/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 443);
        assert_eq!(perft(&board, 3, &PRECOMP), 8022);
    }

    #[test]
    fn gentest_4710() {
        let board = Board::from_fen("8/1B5k/7P/1b1R4/8/7K/8/5n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 291);
        assert_eq!(perft(&board, 3, &PRECOMP), 6423);
    }

    #[test]
    fn gentest_4711() {
        let board = Board::from_fen("8/1B5k/2b4P/6R1/7K/8/8/5n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 355);
        assert_eq!(perft(&board, 3, &PRECOMP), 5087);
    }

    #[test]
    fn gentest_4712() {
        let board = Board::from_fen("7k/1B6/7P/6RK/b7/8/8/5n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 301);
        assert_eq!(perft(&board, 3, &PRECOMP), 5980);
    }

    #[test]
    fn gentest_4713() {
        let board = Board::from_fen("B6k/8/2b3KP/6R1/8/8/8/5n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 270);
        assert_eq!(perft(&board, 3, &PRECOMP), 3675);
    }

    #[test]
    fn gentest_4714() {
        let board = Board::from_fen("B6k/8/6KP/8/8/3b4/8/5nR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 73);
        assert_eq!(perft(&board, 3, &PRECOMP), 1431);
    }

    #[test]
    fn gentest_4715() {
        let board = Board::from_fen("7k/8/6KP/8/8/3B4/7n/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 95);
        assert_eq!(perft(&board, 3, &PRECOMP), 588);
    }

    #[test]
    fn gentest_4716() {
        let board = Board::from_fen("6k1/8/6KP/8/8/3B1n2/8/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 247);
        assert_eq!(perft(&board, 3, &PRECOMP), 5262);
    }

    #[test]
    fn gentest_4717() {
        let board = Board::from_fen("6k1/8/6KP/1B6/3n4/8/8/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 236);
        assert_eq!(perft(&board, 3, &PRECOMP), 2072);
    }

    #[test]
    fn gentest_4718() {
        let board = Board::from_fen("6k1/4n3/7P/1B3K2/8/8/8/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 61);
        assert_eq!(perft(&board, 3, &PRECOMP), 1521);
    }

    #[test]
    fn gentest_4719() {
        let board = Board::from_fen("6k1/8/2n1K2P/1B6/8/8/8/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 249);
        assert_eq!(perft(&board, 3, &PRECOMP), 2057);
    }

    #[test]
    fn gentest_4720() {
        let board = Board::from_fen("6k1/8/5K1P/1B6/8/1n6/8/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 243);
        assert_eq!(perft(&board, 3, &PRECOMP), 6651);
    }

    #[test]
    fn gentest_4721() {
        let board = Board::from_fen("6k1/3BR3/5K1P/8/3n4/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 229);
        assert_eq!(perft(&board, 3, &PRECOMP), 1771);
    }

    #[test]
    fn gentest_4722() {
        let board = Board::from_fen("6k1/n2BR3/7P/5K2/8/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 125);
        assert_eq!(perft(&board, 3, &PRECOMP), 3111);
    }

    #[test]
    fn gentest_4723() {
        let board = Board::from_fen("5k2/n2BR3/3K3P/8/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 61);
        assert_eq!(perft(&board, 3, &PRECOMP), 384);
        assert_eq!(perft(&board, 4, &PRECOMP), 8360);
    }

    #[test]
    fn gentest_4724() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4725() {
        let board = Board::from_fen("rnbqkbnr/ppp1pppp/8/3p4/5P2/8/PPPPP1PP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 557);
    }

    #[test]
    fn gentest_4726() {
        let board = Board::from_fen("rnbq1bnr/p1pkpppp/1p6/3p4/5P2/6P1/PPPPP2P/RNBQKBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 504);
    }

    #[test]
    fn gentest_4727() {
        let board = Board::from_fen("rnbq1b1r/p1pkpppp/1p3n2/3p4/4PP1P/6P1/PPPP4/RNBQKBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 912);
    }

    #[test]
    fn gentest_4728() {
        let board = Board::from_fen("rn1q1b1r/p1p1pppp/1pk2n2/3p4/4PPbP/6P1/PPPP2B1/RNBQK1NR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 936);
    }

    #[test]
    fn gentest_4729() {
        let board = Board::from_fen("rn1q1b1r/p1p1pppp/1pk2n2/3p4/2P1PP1P/6PN/PP1Pb1B1/RNBQK2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1040);
    }

    #[test]
    fn gentest_4730() {
        let board = Board::from_fen("rn1q1b1r/pkp2ppp/1p2pn2/3p4/2P1PP1P/6P1/PP1PbNB1/RNBQK2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1261);
    }

    #[test]
    fn gentest_4731() {
        let board = Board::from_fen("r2q1b1r/pkp2ppp/1pn1pn2/3P4/4PPNP/6P1/PP1Pb1B1/RNBQK2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1549);
    }

    #[test]
    fn gentest_4732() {
        let board = Board::from_fen("rq5r/pkp2ppp/1pn1pn2/3P4/Pb2PPNP/6P1/1P1Pb1B1/RNBQK2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1399);
    }

    #[test]
    fn gentest_4733() {
        let board = Board::from_fen("rq5r/pkp2ppp/1pn2n2/3Pp3/Pb2PPNP/6P1/1P1PK1B1/RNBQ1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1327);
    }

    #[test]
    fn gentest_4734() {
        let board = Board::from_fen("r3q2r/pkp2ppp/1pn2N2/2bPp3/P3PP1P/6P1/1P1PK1B1/RNBQ1R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1354);
    }

    #[test]
    fn gentest_4735() {
        let board = Board::from_fen("rn2q2r/pkp2ppp/1p3N2/2bPp3/P3PP1P/6P1/1P1PK1B1/RNBQ1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1203);
    }

    #[test]
    fn gentest_4736() {
        let board = Board::from_fen("r3q2r/pkpn1pp1/1p3N2/2bPpP1p/P3P2P/6P1/1P1PK1B1/RNBQ1R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1142);
    }

    #[test]
    fn gentest_4737() {
        let board = Board::from_fen("r3q1r1/pkp2pp1/1p6/2NPpP1p/P3P2P/6P1/1P1PK1B1/RNBQ1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 2152);
    }

    #[test]
    fn gentest_4738() {
        let board = Board::from_fen("r5r1/pkp1qpp1/8/2pPpP1p/P3P2P/6P1/1P1PKRB1/RNBQ4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 904);
    }

    #[test]
    fn gentest_4739() {
        let board = Board::from_fen("r5r1/1kp1qpp1/8/p1pPpP1p/P3P2P/6PB/1PQPKR2/RNB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 994);
    }

    #[test]
    fn gentest_4740() {
        let board = Board::from_fen("r1r5/1kp1qp2/6p1/p1pPpP1p/P3P1PP/7B/1PQPKR2/RNB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 865);
    }

    #[test]
    fn gentest_4741() {
        let board = Board::from_fen("r1r5/1kp1qp2/6p1/p2PpP1p/P1P1P1PP/7B/1PQ1KR2/RNB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1135);
    }

    #[test]
    fn gentest_4742() {
        let board = Board::from_fen("rkr5/2p2p2/6p1/p2PpP1p/P1P1P1Pq/7B/1PQ2R2/RNB1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 665);
    }

    #[test]
    fn gentest_4743() {
        let board = Board::from_fen("rk1r4/2p2p2/6p1/p2PpP1p/P1P1P1Pq/3Q3B/1P2KR2/RNB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 979);
    }

    #[test]
    fn gentest_4744() {
        let board = Board::from_fen("rk2r3/2p5/5pp1/p2PpP1p/P1P1P1Pq/3Q3B/1P2K3/RNB2R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 879);
    }

    #[test]
    fn gentest_4745() {
        let board = Board::from_fen("rk6/2p1r3/5pp1/p2PpP1p/P1P1P1Pq/3Q3B/1P1K4/RNB3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 657);
    }

    #[test]
    fn gentest_4746() {
        let board = Board::from_fen("rk6/2p1r3/5pp1/p2PpP1p/P1P1P1P1/7B/1P1KQ3/RNB2qR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 810);
    }

    #[test]
    fn gentest_4747() {
        let board = Board::from_fen("rk6/2p1r3/5pp1/p2PpP1p/P1P1PqP1/4Q2B/1P1K2R1/RNB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 687);
    }

    #[test]
    fn gentest_4748() {
        let board = Board::from_fen("8/rkp1r3/5pp1/p2PpP1p/P1P1PqP1/2N1Q2B/1P1K2R1/R1B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 743);
    }

    #[test]
    fn gentest_4749() {
        let board = Board::from_fen("4r3/rkp5/5pp1/p2PpP1P/P1P1Pq2/4Q2B/NP1K2R1/R1B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 898);
    }

    #[test]
    fn gentest_4750() {
        let board = Board::from_fen("4r3/rkp5/5pp1/p2P1P1P/P1P1Pp2/7B/NP1K2Rq/R1B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 603);
    }

    #[test]
    fn gentest_4751() {
        let board = Board::from_fen("4r3/rkp5/5pp1/p2P1P1P/P1P1Pp2/1P5q/N1K3R1/R1B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 932);
    }

    #[test]
    fn gentest_4752() {
        let board = Board::from_fen("6r1/rkp5/5pp1/p2P1P1P/P1P1P3/1P3p1q/N1K3R1/1RB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 960);
    }

    #[test]
    fn gentest_4753() {
        let board = Board::from_fen("6r1/rkp5/5pP1/p2P1P2/P1P1P1q1/1P3p2/N1K5/1RB3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 786);
    }

    #[test]
    fn gentest_4754() {
        let board = Board::from_fen("8/rk6/2p2pr1/p2P1P2/P1P1P1q1/1P3p2/N7/1RBK2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 619);
    }

    #[test]
    fn gentest_4755() {
        let board = Board::from_fen("8/rk6/5pP1/p1pP4/P1P1P1q1/1P3p2/N7/1RBK3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 599);
    }

    #[test]
    fn gentest_4756() {
        let board = Board::from_fen("8/rk6/5pP1/p1pP4/PNP4q/1P3p2/8/1RBK3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 614);
    }

    #[test]
    fn gentest_4757() {
        let board = Board::from_fen("8/rk6/5pP1/p1pP4/PNPq4/1P3p2/1B6/1R2K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 439);
    }

    #[test]
    fn gentest_4758() {
        let board = Board::from_fen("8/r7/1k3pP1/p1pP4/PNP5/1Pq2p2/1B6/1R2K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 95);
        assert_eq!(perft(&board, 3, &PRECOMP), 1862);
    }

    #[test]
    fn gentest_4759() {
        let board = Board::from_fen("8/8/rk1P1pP1/p1p5/PNP5/1Pq2p2/1B6/1R3KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 364);
        assert_eq!(perft(&board, 3, &PRECOMP), 7994);
    }

    #[test]
    fn gentest_4760() {
        let board = Board::from_fen("k7/8/r2P1pP1/p1p5/PNP5/1Pq2p2/8/1RB2KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 530);
    }

    #[test]
    fn gentest_4761() {
        let board = Board::from_fen("1k6/8/r2P1pP1/p1p5/P1P2B2/1Pq2p2/N7/1R3KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 508);
    }

    #[test]
    fn gentest_4762() {
        let board = Board::from_fen("1k6/8/3r1pP1/p1p5/P1P2B2/1P3p2/N4K2/1Rq3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 533);
    }

    #[test]
    fn gentest_4763() {
        let board = Board::from_fen("1k6/8/3r1pP1/p1p5/P1P2q2/1P3p2/N4K2/R1R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 403);
    }

    #[test]
    fn gentest_4764() {
        let board = Board::from_fen("1k6/8/3r1pP1/p1p5/P1Pq4/1P3K2/N7/R1R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 464);
        assert_eq!(perft(&board, 3, &PRECOMP), 7007);
    }

    #[test]
    fn gentest_4765() {
        let board = Board::from_fen("1k6/8/3r1pP1/p1p5/P1P5/1P6/N4K2/R1R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 330);
        assert_eq!(perft(&board, 3, &PRECOMP), 5655);
    }

    #[test]
    fn gentest_4766() {
        let board = Board::from_fen("1k6/8/5pP1/p1p5/P1P5/1P3K2/Nr6/R1R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 270);
        assert_eq!(perft(&board, 3, &PRECOMP), 5157);
    }

    #[test]
    fn gentest_4767() {
        let board = Board::from_fen("1k6/8/5pP1/p1p5/P1P3K1/1P6/N4r2/R3R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 369);
        assert_eq!(perft(&board, 3, &PRECOMP), 6026);
    }

    #[test]
    fn gentest_4768() {
        let board = Board::from_fen("8/1k6/5pP1/p1p5/P1P3K1/1P6/N3Rr2/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 442);
    }

    #[test]
    fn gentest_4769() {
        let board = Board::from_fen("1k6/8/5pP1/p1p5/PPP5/7K/N3Rr2/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 353);
        assert_eq!(perft(&board, 3, &PRECOMP), 5550);
    }

    #[test]
    fn gentest_4770() {
        let board = Board::from_fen("1k6/8/5pP1/p1p1r3/PPP4K/8/N7/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 299);
        assert_eq!(perft(&board, 3, &PRECOMP), 5000);
    }

    #[test]
    fn gentest_4771() {
        let board = Board::from_fen("8/2k5/5pP1/P1p1r3/PNP4K/8/8/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 342);
        assert_eq!(perft(&board, 3, &PRECOMP), 6035);
    }

    #[test]
    fn gentest_4772() {
        let board = Board::from_fen("8/2k5/P4pP1/2pr4/PNP4K/8/8/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 371);
        assert_eq!(perft(&board, 3, &PRECOMP), 7322);
    }

    #[test]
    fn gentest_4773() {
        let board = Board::from_fen("8/2k3P1/P4p2/2p5/PNP4K/3r4/8/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 488);
        assert_eq!(perft(&board, 3, &PRECOMP), 7998);
    }

    #[test]
    fn gentest_4774() {
        let board = Board::from_fen("8/2k3P1/P4p2/2p5/PNP4K/7r/8/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 30);
        assert_eq!(perft(&board, 3, &PRECOMP), 656);
        assert_eq!(perft(&board, 4, &PRECOMP), 9571);
    }

    #[test]
    fn gentest_4775() {
        let board = Board::from_fen("6Q1/8/Pk3p2/2p5/PNP5/7K/8/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 188);
        assert_eq!(perft(&board, 3, &PRECOMP), 863);
    }

    #[test]
    fn gentest_4776() {
        let board = Board::from_fen("1k6/8/P4p2/2p5/PNP5/7K/8/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 117);
        assert_eq!(perft(&board, 3, &PRECOMP), 2509);
    }

    #[test]
    fn gentest_4777() {
        let board = Board::from_fen("1k6/8/P7/2p2p2/PNP5/7K/8/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 115);
        assert_eq!(perft(&board, 3, &PRECOMP), 633);
    }

    #[test]
    fn gentest_4778() {
        let board = Board::from_fen("k7/8/P7/2p5/PNP2p2/7K/8/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 73);
        assert_eq!(perft(&board, 3, &PRECOMP), 1450);
        assert_eq!(perft(&board, 4, &PRECOMP), 6399);
    }

    #[test]
    fn gentest_4779() {
        let board = Board::from_fen("1k6/8/P7/2p5/PNP2p2/8/6K1/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 118);
        assert_eq!(perft(&board, 3, &PRECOMP), 638);
    }

    #[test]
    fn gentest_4780() {
        let board = Board::from_fen("3k4/8/P7/2p5/P1P2p2/3N4/6K1/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 149);
        assert_eq!(perft(&board, 3, &PRECOMP), 3281);
    }

    #[test]
    fn gentest_4781() {
        let board = Board::from_fen("8/2k5/P7/2p5/P1P2p2/3N4/6K1/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 168);
        assert_eq!(perft(&board, 3, &PRECOMP), 989);
    }

    #[test]
    fn gentest_4782() {
        let board = Board::from_fen("8/k7/P7/2p1N3/P1P2p2/8/6K1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 96);
        assert_eq!(perft(&board, 3, &PRECOMP), 2120);
        assert_eq!(perft(&board, 4, &PRECOMP), 8799);
    }

    #[test]
    fn gentest_4783() {
        let board = Board::from_fen("8/8/Pk6/2p5/P1P2p2/5N2/6K1/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 142);
        assert_eq!(perft(&board, 3, &PRECOMP), 656);
    }

    #[test]
    fn gentest_4784() {
        let board = Board::from_fen("8/8/P7/2p5/PkP2p2/5N2/6K1/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 177);
        assert_eq!(perft(&board, 3, &PRECOMP), 4535);
    }

    #[test]
    fn gentest_4785() {
        let board = Board::from_fen("8/8/P7/2p5/P1P2p2/2k2N2/6K1/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 150);
        assert_eq!(perft(&board, 3, &PRECOMP), 819);
    }

    #[test]
    fn gentest_4786() {
        let board = Board::from_fen("8/8/P7/2p5/P1PR1p2/2k2N2/6K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 130);
        assert_eq!(perft(&board, 3, &PRECOMP), 2860);
    }

    #[test]
    fn gentest_4787() {
        let board = Board::from_fen("8/8/P7/2p5/PkP1Rp2/5N2/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 108);
        assert_eq!(perft(&board, 3, &PRECOMP), 584);
    }

    #[test]
    fn gentest_4788() {
        let board = Board::from_fen("8/8/P7/k1p3N1/P1P1R3/5p2/7K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 104);
        assert_eq!(perft(&board, 3, &PRECOMP), 2279);
    }

    #[test]
    fn gentest_4789() {
        let board = Board::from_fen("8/8/P3R3/2p5/k1P5/5p1N/7K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 105);
        assert_eq!(perft(&board, 3, &PRECOMP), 684);
    }

    #[test]
    fn gentest_4790() {
        let board = Board::from_fen("8/P7/4R3/2p5/2P5/5p1N/2k4K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 207);
        assert_eq!(perft(&board, 3, &PRECOMP), 5273);
    }

    #[test]
    fn gentest_4791() {
        let board = Board::from_fen("8/P7/4R3/2p3N1/2P5/5pK1/8/2k5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 181);
        assert_eq!(perft(&board, 3, &PRECOMP), 1246);
    }

    #[test]
    fn gentest_4792() {
        let board = Board::from_fen("8/P7/8/2p1R1N1/2P5/6K1/8/2k2q2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 448);
        assert_eq!(perft(&board, 3, &PRECOMP), 7792);
    }

    #[test]
    fn gentest_4793() {
        let board = Board::from_fen("R7/8/8/2p3N1/2P5/6K1/4R3/3k1q2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 304);
        assert_eq!(perft(&board, 3, &PRECOMP), 5616);
    }

    #[test]
    fn gentest_4794() {
        let board = Board::from_fen("R7/8/8/2p3N1/2P5/6K1/6R1/1k3q2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 486);
    }

    #[test]
    fn gentest_4795() {
        let board = Board::from_fen("R7/8/8/2p5/2P4K/5N2/6R1/2k2q2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 311);
        assert_eq!(perft(&board, 3, &PRECOMP), 5265);
    }

    #[test]
    fn gentest_4796() {
        let board = Board::from_fen("R7/8/8/2p4K/2P5/5N2/2q3R1/2k5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 699);
    }

    #[test]
    fn gentest_4797() {
        let board = Board::from_fen("R7/8/8/2p3RK/2P5/3q4/3N4/2k5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 676);
    }

    #[test]
    fn gentest_4798() {
        let board = Board::from_fen("4q3/R7/8/2p3RK/2P5/8/3N4/2k5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 122);
        assert_eq!(perft(&board, 3, &PRECOMP), 3201);
    }

    #[test]
    fn gentest_4799() {
        let board = Board::from_fen("8/R7/6R1/2p3K1/q1P5/8/3N4/2k5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 607);
    }

    #[test]
    fn gentest_4800() {
        let board = Board::from_fen("8/R7/6R1/2p3K1/1qP5/5N2/8/3k4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 592);
    }

    #[test]
    fn gentest_4801() {
        let board = Board::from_fen("8/R7/6R1/2p3K1/2P5/5N2/8/3kq3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 494);
        assert_eq!(perft(&board, 3, &PRECOMP), 9429);
    }

    #[test]
    fn gentest_4802() {
        let board = Board::from_fen("8/4R3/6R1/2p3K1/2P5/4qN2/8/3k4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 2955);
    }

    #[test]
    fn gentest_4803() {
        let board = Board::from_fen("8/4R3/6R1/2p3q1/2P5/5N1K/8/3k4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 437);
        assert_eq!(perft(&board, 3, &PRECOMP), 8315);
    }

    #[test]
    fn gentest_4804() {
        let board = Board::from_fen("8/4R3/6R1/2p5/2P5/7K/3N4/q2k4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 685);
    }

    #[test]
    fn gentest_4805() {
        let board = Board::from_fen("8/4R3/6R1/2p2K2/2Pq4/8/3N4/3k4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 582);
    }

    #[test]
    fn gentest_4806() {
        let board = Board::from_fen("8/4R3/R7/2p2K2/2P5/2q5/3k4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 720);
    }

    #[test]
    fn gentest_4807() {
        let board = Board::from_fen("8/5R2/R7/2p5/2P1K3/1q6/3k4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 590);
    }

    #[test]
    fn gentest_4808() {
        let board = Board::from_fen("8/4R3/R7/2p5/2P1K3/q1k5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 420);
    }

    #[test]
    fn gentest_4809() {
        let board = Board::from_fen("8/4R3/1R6/2p5/2P1K3/q7/3k4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 543);
    }

    #[test]
    fn gentest_4810() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4811() {
        let board = Board::from_fen("rnbqkbnr/p1pppppp/8/1p6/6P1/7B/PPPPPP1P/RNBQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 399);
        assert_eq!(perft(&board, 3, &PRECOMP), 9231);
    }

    #[test]
    fn gentest_4812() {
        let board = Board::from_fen("rnbqkbnr/3ppppp/p1p5/1p6/2P3P1/7B/PP1PPP1P/RNBQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 460);
    }

    #[test]
    fn gentest_4813() {
        let board = Board::from_fen("rnbqkbnr/3ppppp/p1p5/6P1/2p5/3P3B/PP2PP1P/RNBQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
    }

    #[test]
    fn gentest_4814() {
        let board = Board::from_fen("rn1qkbnr/1b1pp1pp/p1p2p2/6P1/2P5/7B/PP2PP1P/RNBQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 627);
    }

    #[test]
    fn gentest_4815() {
        let board = Board::from_fen("rn1qkbnr/1b1pp1pp/p1p5/6B1/2P5/7B/PP2PP1P/RN1QK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 668);
    }

    #[test]
    fn gentest_4816() {
        let board = Board::from_fen("rn2kb1r/1bqpp1pp/p1p4n/3Q2B1/2P5/7B/PP2PP1P/RN2K1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1092);
    }

    #[test]
    fn gentest_4817() {
        let board = Board::from_fen("rn2kb1r/1b1pp1pp/p1p4n/6B1/2P5/5Q1B/PP1KPP1q/RN4NR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1055);
    }

    #[test]
    fn gentest_4818() {
        let board = Board::from_fen("rn2kb1r/1b2p1pp/p1p4n/3p2B1/2P5/3Q3B/PP1KPP1q/RN4NR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1185);
    }

    #[test]
    fn gentest_4819() {
        let board = Board::from_fen("rn2kb1r/1b2p1pp/p1p4n/8/2PpQB2/7B/PP1KPP1q/RN4NR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1032);
    }

    #[test]
    fn gentest_4820() {
        let board = Board::from_fen("r3kb1r/1b1np1pp/p1p4n/8/2PpQB2/2N4B/PP1KPq2/R5NR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1779);
    }

    #[test]
    fn gentest_4821() {
        let board = Board::from_fen("r3kb1r/1b1n2pp/p1p4n/4p3/1PPp1B2/2N4B/P2KPq2/RQ4NR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1411);
    }

    #[test]
    fn gentest_4822() {
        let board = Board::from_fen("r3k2r/1b1nb2p/p1p3pn/3Np3/1PPp1B2/7B/P2KPq2/RQ4NR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1652);
    }

    #[test]
    fn gentest_4823() {
        let board = Board::from_fen("r3k2r/1b1Bb2p/p1p3pB/3Np3/1PPp4/5q2/P2KP3/RQ4NR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 134);
        assert_eq!(perft(&board, 3, &PRECOMP), 5846);
    }

    #[test]
    fn gentest_4824() {
        let board = Board::from_fen("r6r/1b1Bb2p/p1p3kB/3Np3/1PPp4/5q2/P2KP3/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1778);
    }

    #[test]
    fn gentest_4825() {
        let board = Board::from_fen("rr6/1b1Bb2p/p1p3kB/3Np3/1PPp4/5q2/P3P3/3K1RNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1566);
    }

    #[test]
    fn gentest_4826() {
        let board = Board::from_fen("rr6/1b1Bb2p/p1p3k1/3Npq2/1PP5/3pB3/P3P3/3K1RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1458);
    }

    #[test]
    fn gentest_4827() {
        let board = Board::from_fen("rr6/1b5p/p1p1B1k1/2bNpq2/1PP5/3p4/P3P3/2BK1RNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1508);
    }

    #[test]
    fn gentest_4828() {
        let board = Board::from_fen("r5r1/1bN4p/p1p1B1k1/2b1pq2/1PP5/3p4/P3P3/2BK1RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1625);
    }

    #[test]
    fn gentest_4829() {
        let board = Board::from_fen("4r1r1/1bN4p/p1p1B1k1/2b1pq2/1PP5/3p4/PB2P2R/3K1RN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1763);
    }

    #[test]
    fn gentest_4830() {
        let board = Board::from_fen("1r3br1/1bN4p/p1p1B1k1/4pq2/1PP4R/3p4/PB2P3/3K1RN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1436);
    }

    #[test]
    fn gentest_4831() {
        let board = Board::from_fen("1rB2br1/1bN4p/p1p3k1/2P1p3/1P5R/3p1q2/PB2P3/3K1RN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1439);
    }

    #[test]
    fn gentest_4832() {
        let board = Board::from_fen("1rB3r1/1bN1b2p/p1p3k1/2P1p3/1PR2q2/3p4/PB2P3/3K1RN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1690);
    }

    #[test]
    fn gentest_4833() {
        let board = Board::from_fen("1r4r1/1bNBb3/p1p3kp/2P1p3/1PR1Pq2/3p4/PB6/3K1RN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1425);
    }

    #[test]
    fn gentest_4834() {
        let board = Board::from_fen("1r3br1/1bNB4/p1p3kp/2P1p3/1PR1P3/3p1q2/PB1K4/5RN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1307);
    }

    #[test]
    fn gentest_4835() {
        let board = Board::from_fen("1r3br1/1bNB4/p1p2Bkp/2P5/1PR1P3/3p4/P2K4/5qN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 936);
    }

    #[test]
    fn gentest_4836() {
        let board = Board::from_fen("1r4r1/1bNB4/p1p2Bkp/2b5/1PR1P3/3p4/P7/3K2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1116);
    }

    #[test]
    fn gentest_4837() {
        let board = Board::from_fen("1r4r1/1bNB2B1/p1p3kp/8/1P2P3/3p4/P7/2RK2b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 996);
    }

    #[test]
    fn gentest_4838() {
        let board = Board::from_fen("br4r1/3B2B1/p1p4p/1N5k/1P2P3/3p4/P7/2RK2b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 933);
    }

    #[test]
    fn gentest_4839() {
        let board = Board::from_fen("br4r1/1B4B1/p6p/1Np4k/1P2P3/3p4/P7/2RK2b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 772);
    }

    #[test]
    fn gentest_4840() {
        let board = Board::from_fen("br4r1/6B1/p6p/1N1B3k/1Pp1P3/3p4/P4b2/2RK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1021);
    }

    #[test]
    fn gentest_4841() {
        let board = Board::from_fen("Br4r1/6B1/p6p/1N5k/PPp1P3/3p4/8/2RK2b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 752);
    }

    #[test]
    fn gentest_4842() {
        let board = Board::from_fen("Br2rB2/b7/p6p/1N5k/PPp1P3/3p4/8/2RK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 606);
    }

    #[test]
    fn gentest_4843() {
        let board = Board::from_fen("Br2rB2/b7/p5kp/P7/1PpNP3/3p4/8/2RK4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 604);
    }

    #[test]
    fn gentest_4844() {
        let board = Board::from_fen("Br3B2/4r3/pb2N1kp/P7/1Pp1P3/3p4/8/2RK4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 673);
    }

    #[test]
    fn gentest_4845() {
        let board = Board::from_fen("1r3B2/4r3/p3N1kp/P2B4/1PpbP3/3p4/3K4/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 979);
    }

    #[test]
    fn gentest_4846() {
        let board = Board::from_fen("1r3B2/4r3/p3Nbkp/P2B4/1P2P3/2Rp4/3K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 944);
    }

    #[test]
    fn gentest_4847() {
        let board = Board::from_fen("5B2/1r2r3/p3Nbkp/PP1B4/4P3/2Rp4/8/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 765);
    }

    #[test]
    fn gentest_4848() {
        let board = Board::from_fen("B4B2/3r1r2/p3Nbkp/PP6/4P3/2Rp4/8/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 866);
    }

    #[test]
    fn gentest_4849() {
        let board = Board::from_fen("B4B2/3r1r2/p3N1kp/PP2b3/8/2Rp4/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1211);
    }

    #[test]
    fn gentest_4850() {
        let board = Board::from_fen("B4B2/5r2/p3N1kp/PP2b3/2r5/2Rp4/3K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1368);
    }

    #[test]
    fn gentest_4851() {
        let board = Board::from_fen("B7/5r2/p2BN1kp/PP2b3/5r2/3R4/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1333);
    }

    #[test]
    fn gentest_4852() {
        let board = Board::from_fen("B7/5r2/p3N1k1/PP5p/5B2/3R4/1b1K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 991);
    }

    #[test]
    fn gentest_4853() {
        let board = Board::from_fen("B7/5r2/p3N1k1/PP1Rb2p/8/8/3K3B/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 958);
    }

    #[test]
    fn gentest_4854() {
        let board = Board::from_fen("B2N4/5rk1/8/Pp1Rb2p/8/8/3K3B/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 696);
    }

    #[test]
    fn gentest_4855() {
        let board = Board::from_fen("3N4/5rk1/2B5/Pp1R3p/5b2/2K5/7B/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 784);
    }

    #[test]
    fn gentest_4856() {
        let board = Board::from_fen("3N4/5r1k/2BB4/Pp1R3p/8/2K5/8/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 869);
    }

    #[test]
    fn gentest_4857() {
        let board = Board::from_fen("3N4/1r5k/2BB4/Pp1R3p/8/8/2K5/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 766);
    }

    #[test]
    fn gentest_4858() {
        let board = Board::from_fen("1B1N4/1r5k/1bB5/Pp1R3p/8/8/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 738);
    }

    #[test]
    fn gentest_4859() {
        let board = Board::from_fen("1B6/1r5k/1bB1N3/Pp1R4/7p/3K4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 768);
    }

    #[test]
    fn gentest_4860() {
        let board = Board::from_fen("1B6/5r2/1bB1N2k/Pp1R4/4K2p/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 918);
    }

    #[test]
    fn gentest_4861() {
        let board = Board::from_fen("1B6/6r1/1bB4k/Pp3R2/4KN1p/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 807);
    }

    #[test]
    fn gentest_4862() {
        let board = Board::from_fen("1B6/1r4k1/1bB5/PpR5/4KN1p/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 674);
    }

    #[test]
    fn gentest_4863() {
        let board = Board::from_fen("1B6/1r4k1/2B5/Pp6/4KN1p/8/R4b2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 737);
    }

    #[test]
    fn gentest_4864() {
        let board = Board::from_fen("1B2B3/1r4k1/1b6/Pp6/4KN1p/8/R7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 712);
    }

    #[test]
    fn gentest_4865() {
        let board = Board::from_fen("1B6/1r3Bk1/8/Pp6/4KN1p/8/5b1R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 728);
    }

    #[test]
    fn gentest_4866() {
        let board = Board::from_fen("1B6/1r3Bk1/1b6/Pp6/4KN1p/8/R7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 755);
    }

    #[test]
    fn gentest_4867() {
        let board = Board::from_fen("8/1rB2Bk1/1b6/P7/1p2K2p/7N/R7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 651);
    }

    #[test]
    fn gentest_4868() {
        let board = Board::from_fen("6Bk/1rB5/8/P7/1p2K2p/4b2N/R7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 665);
    }

    #[test]
    fn gentest_4869() {
        let board = Board::from_fen("7k/2r4B/8/P7/1p2K2p/4b3/R7/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 603);
    }

    #[test]
    fn gentest_4870() {
        let board = Board::from_fen("7k/3r3B/8/P4K2/1p5p/8/R2b4/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 405);
        assert_eq!(perft(&board, 3, &PRECOMP), 7621);
    }

    #[test]
    fn gentest_4871() {
        let board = Board::from_fen("7k/3r3B/6K1/P7/1p6/R6p/3b4/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 341);
        assert_eq!(perft(&board, 3, &PRECOMP), 7767);
    }

    #[test]
    fn gentest_4872() {
        let board = Board::from_fen("7k/4r2B/6K1/P5b1/1p6/R6p/4N3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 473);
        assert_eq!(perft(&board, 3, &PRECOMP), 9211);
    }

    #[test]
    fn gentest_4873() {
        let board = Board::from_fen("7k/4r2B/8/P4K2/1p3b2/2R4p/4N3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 679);
    }

    #[test]
    fn gentest_4874() {
        let board = Board::from_fen("7k/7B/P7/5K2/1p3b2/2r4p/4N3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 382);
        assert_eq!(perft(&board, 3, &PRECOMP), 5819);
    }

    #[test]
    fn gentest_4875() {
        let board = Board::from_fen("8/P5kB/8/8/1p3K2/2r4p/4N3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 411);
        assert_eq!(perft(&board, 3, &PRECOMP), 7797);
    }

    #[test]
    fn gentest_4876() {
        let board = Board::from_fen("8/P6B/7k/8/1p3K2/r5Np/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 324);
        assert_eq!(perft(&board, 3, &PRECOMP), 6699);
    }

    #[test]
    fn gentest_4877() {
        let board = Board::from_fen("8/P6B/7k/8/1p2N1K1/2r4p/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 305);
        assert_eq!(perft(&board, 3, &PRECOMP), 5007);
    }

    #[test]
    fn gentest_4878() {
        let board = Board::from_fen("8/P6B/2r4k/6N1/1p4K1/7p/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 346);
        assert_eq!(perft(&board, 3, &PRECOMP), 7433);
    }

    #[test]
    fn gentest_4879() {
        let board = Board::from_fen("6B1/P7/4N2k/8/1p4K1/7p/8/2r5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 302);
        assert_eq!(perft(&board, 3, &PRECOMP), 4860);
    }

    #[test]
    fn gentest_4880() {
        let board = Board::from_fen("5NB1/P7/7k/8/1p4K1/7p/8/5r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 310);
        assert_eq!(perft(&board, 3, &PRECOMP), 5830);
    }

    #[test]
    fn gentest_4881() {
        let board = Board::from_fen("5N2/P6B/7k/8/1p6/6Kp/8/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 253);
        assert_eq!(perft(&board, 3, &PRECOMP), 3922);
    }

    #[test]
    fn gentest_4882() {
        let board = Board::from_fen("5N2/P6B/7k/8/rp4K1/7p/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 193);
        assert_eq!(perft(&board, 3, &PRECOMP), 3713);
    }

    #[test]
    fn gentest_4883() {
        let board = Board::from_fen("Q4N2/8/7k/8/1p4K1/3B3p/r7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 584);
        assert_eq!(perft(&board, 3, &PRECOMP), 8419);
    }

    #[test]
    fn gentest_4884() {
        let board = Board::from_fen("Q4N2/8/7k/8/1p5K/3B2rp/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 437);
    }

    #[test]
    fn gentest_4885() {
        let board = Board::from_fen("Q7/2N5/6rk/8/1p5K/3B3p/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 608);
        assert_eq!(perft(&board, 3, &PRECOMP), 8479);
    }

    #[test]
    fn gentest_4886() {
        let board = Board::from_fen("8/2N1r3/7k/8/Qp5K/3B3p/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 512);
    }

    #[test]
    fn gentest_4887() {
        let board = Board::from_fen("8/Q1Nr4/6Bk/8/1p5K/7p/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 482);
        assert_eq!(perft(&board, 3, &PRECOMP), 7402);
    }

    #[test]
    fn gentest_4888() {
        let board = Board::from_fen("4r3/2N5/6Bk/8/1p1Q3K/7p/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 614);
    }

    #[test]
    fn gentest_4889() {
        let board = Board::from_fen("N2Qr3/8/6Bk/8/7K/1p5p/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 420);
        assert_eq!(perft(&board, 3, &PRECOMP), 5999);
    }

    #[test]
    fn gentest_4890() {
        let board = Board::from_fen("NQ6/8/6Bk/8/5r1K/1p5p/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 39);
        assert_eq!(perft(&board, 3, &PRECOMP), 1083);
    }

    #[test]
    fn gentest_4891() {
        let board = Board::from_fen("N7/6k1/8/8/4BQ1K/1p5p/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 152);
        assert_eq!(perft(&board, 3, &PRECOMP), 813);
    }

    #[test]
    fn gentest_4892() {
        let board = Board::from_fen("N5k1/8/8/8/4BQK1/1p6/7p/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 255);
        assert_eq!(perft(&board, 3, &PRECOMP), 9719);
    }

    #[test]
    fn gentest_4893() {
        let board = Board::from_fen("N4Q1k/8/8/8/4B3/1p3K2/7p/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 0);
        assert_eq!(perft(&board, 2, &PRECOMP), 0);
        assert_eq!(perft(&board, 3, &PRECOMP), 0);
        assert_eq!(perft(&board, 4, &PRECOMP), 0);
        assert_eq!(perft(&board, 5, &PRECOMP), 0);
        assert_eq!(perft(&board, 6, &PRECOMP), 0);
    }

    #[test]
    fn gentest_4894() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4895() {
        let board = Board::from_fen("rnbqkbnr/pp1ppppp/8/2p5/1P6/P7/2PPPPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 458);
    }

    #[test]
    fn gentest_4896() {
        let board = Board::from_fen("rnbqkbnr/1p1ppp1p/p5p1/2p5/1P3P2/P7/2PPP1PP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 457);
    }

    #[test]
    fn gentest_4897() {
        let board = Board::from_fen("rnbqkbnr/1p1ppp1p/p7/2p3p1/PP3PP1/8/2PPP2P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 549);
    }

    #[test]
    fn gentest_4898() {
        let board = Board::from_fen("rnbqkbnr/1p1ppp1p/8/p5p1/PPp2PP1/3P4/2P1P2P/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 640);
    }

    #[test]
    fn gentest_4899() {
        let board = Board::from_fen("rnbqkbnr/1p2pp1p/3p4/p5p1/PPp2PP1/3P4/R1P1P2P/1NBQKBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 839);
    }

    #[test]
    fn gentest_4900() {
        let board = Board::from_fen("rnbqkbnr/1p2pp1p/3p4/6p1/P1p2PP1/1p1P4/2P1P2P/RNBQKBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 907);
    }

    #[test]
    fn gentest_4901() {
        let board = Board::from_fen("rn1qkbnr/1p2pp1p/3p4/5Pp1/P1p3b1/1p1P3B/2P1P2P/RNBQK1NR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 891);
    }

    #[test]
    fn gentest_4902() {
        let board = Board::from_fen("r2qkbnr/1pn1pp1p/3p4/5Pp1/P1p3b1/1p1P3B/1BP1P2P/RN1QK1NR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1019);
    }

    #[test]
    fn gentest_4903() {
        let board = Board::from_fen("r2qkbnr/1pn2p1p/3pp3/5Pp1/P1p3B1/1P1P4/1B2P2P/RN1QK1NR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1131);
    }

    #[test]
    fn gentest_4904() {
        let board = Board::from_fen("2q1kbnr/rpn2p1p/3pp3/5PpB/P1p5/1P1P4/1B2P2P/RN1QK1NR w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_4905() {
        let board = Board::from_fen("2q1kbnr/rp3p1p/3pp3/3n1PpB/PPp5/3P4/1BQ1P2P/RN2K1NR b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1375);
    }

    #[test]
    fn gentest_4906() {
        let board = Board::from_fen("2q1k1nr/1p3p1p/3pp2b/r2n1PpB/PPp5/N2P4/1BQ1P2P/R3K1NR w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1426);
    }

    #[test]
    fn gentest_4907() {
        let board = Board::from_fen("2q1k2r/1p3p1p/3ppn1b/rN1n2pB/PPp5/3P4/1BQ1P2P/R3K1NR b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1541);
    }

    #[test]
    fn gentest_4908() {
        let board = Board::from_fen("2qk3r/1pN2pbp/3ppn2/r2n2pB/PPp5/3P4/1BQ1P2P/R3K1NR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1523);
    }

    #[test]
    fn gentest_4909() {
        let board = Board::from_fen("2qk1r2/1pN2pbp/3ppn2/P2n2p1/P1p3B1/3P4/1BQ1P2P/R3K1NR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1316);
    }

    #[test]
    fn gentest_4910() {
        let board = Board::from_fen("q2k1r2/1pN2p1p/3ppn1b/P2n2p1/P1p3BP/3P4/1BQ1P3/R3K1NR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1338);
    }

    #[test]
    fn gentest_4911() {
        let board = Board::from_fen("q2k1r2/1pN2p1p/3ppn1b/P5pP/P1p2nB1/3P4/2Q1P3/R1B1K1NR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1215);
    }

    #[test]
    fn gentest_4912() {
        let board = Board::from_fen("3k1r2/1pN2p1p/3ppn1b/q5pP/P1p3B1/3P4/2QKP1n1/R1B3NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 77);
        assert_eq!(perft(&board, 3, &PRECOMP), 2377);
    }

    #[test]
    fn gentest_4913() {
        let board = Board::from_fen("3k1r2/1pN2p1p/3ppn1b/q5pP/P1p3Bn/3P4/1Q2P3/R1BK2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1542);
    }

    #[test]
    fn gentest_4914() {
        let board = Board::from_fen("5r2/1pk2p1p/3ppn1b/q5BP/P1p3B1/3P1n2/1Q2P3/R2K2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1969);
    }

    #[test]
    fn gentest_4915() {
        let board = Board::from_fen("5r2/1pk2p1p/3ppn1b/6BP/P1pQ2B1/3P1n2/2K1P3/R3q1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1726);
    }

    #[test]
    fn gentest_4916() {
        let board = Board::from_fen("r7/1pk2p1p/3ppn1b/6BP/P1pQ2B1/R2P1n2/2K1P3/6qR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 2001);
    }

    #[test]
    fn gentest_4917() {
        let board = Board::from_fen("r1k5/1p3p1p/3ppn1b/4Q2P/P1p3BB/R2P1n2/2K1P3/6qR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 2019);
    }

    #[test]
    fn gentest_4918() {
        let board = Board::from_fen("r1k5/1p3pnp/3pp2b/4Q2P/P1p3BB/R2P1n2/2K1P3/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 1543);
    }

    #[test]
    fn gentest_4919() {
        let board = Board::from_fen("2k5/1p3pnp/r2pp2b/4Q2P/P1pP3B/R4B2/2K1P3/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1320);
    }

    #[test]
    fn gentest_4920() {
        let board = Board::from_fen("2k2b2/1p3p1p/r2pp3/4Qn1P/P1pP3B/R7/2K1P1B1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 57);
        assert_eq!(perft(&board, 2, &PRECOMP), 1398);
    }

    #[test]
    fn gentest_4921() {
        let board = Board::from_fen("2k2b2/1p3p1p/r2pp2n/4Q2P/P1pP3B/3R4/2K1P3/6RB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 1255);
    }

    #[test]
    fn gentest_4922() {
        let board = Board::from_fen("2k2b2/1p5p/3pp2n/4Qp1P/r1pP3B/7R/2K1P3/6RB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 58);
        assert_eq!(perft(&board, 2, &PRECOMP), 1208);
    }

    #[test]
    fn gentest_4923() {
        let board = Board::from_fen("2k5/1p2B1bp/3pp2n/3Q1p1P/r1pP4/7R/2K1P3/6RB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1216);
    }

    #[test]
    fn gentest_4924() {
        let board = Board::from_fen("2k5/1p2B1bp/3pp2n/3Q1p1P/2pP4/r6R/2K1P1B1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1229);
    }

    #[test]
    fn gentest_4925() {
        let board = Board::from_fen("2k5/1p2B1bp/3pp2n/r2Q1p1P/2pP4/2R5/4P1B1/1K4R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1027);
    }

    #[test]
    fn gentest_4926() {
        let board = Board::from_fen("1k6/1p2B1bp/3pp2n/3Q1p1P/2pP4/2R5/4P1B1/K5R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 698);
    }

    #[test]
    fn gentest_4927() {
        let board = Board::from_fen("1k4n1/1p2B1bp/3pp3/3Q1p1P/2pP4/1R6/4P1B1/K5R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 923);
    }

    #[test]
    fn gentest_4928() {
        let board = Board::from_fen("1k4n1/1p2B2p/3pp2b/3Q1p1P/2pP4/1R2P3/6B1/K5R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 666);
    }

    #[test]
    fn gentest_4929() {
        let board = Board::from_fen("1k4n1/1p2B2p/3pp3/4Qp1P/2pP4/1R2b3/8/K5RB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 1113);
    }

    #[test]
    fn gentest_4930() {
        let board = Board::from_fen("1k6/1p2B2p/3pp3/4QpRP/2pPn3/1R2b3/8/K6B w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 967);
    }

    #[test]
    fn gentest_4931() {
        let board = Board::from_fen("1k6/4B2p/3pp3/1Q3pRP/2pPn3/4b3/8/KR5B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 176);
        assert_eq!(perft(&board, 3, &PRECOMP), 2651);
    }

    #[test]
    fn gentest_4932() {
        let board = Board::from_fen("2k5/4B2p/3pp3/5QbP/2pPn3/8/8/KR5B w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 768);
    }

    #[test]
    fn gentest_4933() {
        let board = Board::from_fen("2k5/4B2Q/3pp3/7P/2pPn2b/8/8/K1R4B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 633);
    }

    #[test]
    fn gentest_4934() {
        let board = Board::from_fen("8/3kB2Q/3pp3/2n4P/2pP3b/8/2R5/K6B w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 574);
    }

    #[test]
    fn gentest_4935() {
        let board = Board::from_fen("8/3kB2Q/4p3/2np3P/2pPB2b/2R5/8/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 623);
        assert_eq!(perft(&board, 3, &PRECOMP), 9723);
    }

    #[test]
    fn gentest_4936() {
        let board = Board::from_fen("8/4B2Q/2k1p3/3p3P/2pP3b/2RB4/8/K7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 381);
    }

    #[test]
    fn gentest_4937() {
        let board = Board::from_fen("8/4B2Q/4p3/1k1p3P/2BP3b/8/2R5/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 189);
        assert_eq!(perft(&board, 3, &PRECOMP), 1898);
    }

    #[test]
    fn gentest_4938() {
        let board = Board::from_fen("8/7Q/4pb2/2Bp3P/k1BP4/8/2R5/K7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 417);
    }

    #[test]
    fn gentest_4939() {
        let board = Board::from_fen("8/7Q/4pb2/2B4P/k1RP4/8/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 1010);
    }

    #[test]
    fn gentest_4940() {
        let board = Board::from_fen("8/4Q3/4p3/1kB3bP/2RP4/8/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 334);
    }

    #[test]
    fn gentest_4941() {
        let board = Board::from_fen("8/8/4Q3/1kB4P/3P3b/2R5/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 435);
        assert_eq!(perft(&board, 3, &PRECOMP), 3528);
    }

    #[test]
    fn gentest_4942() {
        let board = Board::from_fen("8/8/4Q2P/1kB5/3P4/2R3b1/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 440);
    }

    #[test]
    fn gentest_4943() {
        let board = Board::from_fen("8/8/6QP/1kB5/3P4/2R5/5b2/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 353);
        assert_eq!(perft(&board, 3, &PRECOMP), 2937);
    }

    #[test]
    fn gentest_4944() {
        let board = Board::from_fen("8/B7/6QP/1k6/3P4/2R5/8/1Kb5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 360);
    }

    #[test]
    fn gentest_4945() {
        let board = Board::from_fen("8/B7/5Q1P/8/k2P4/2R5/8/1Kb5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 421);
        assert_eq!(perft(&board, 3, &PRECOMP), 3798);
    }

    #[test]
    fn gentest_4946() {
        let board = Board::from_fen("8/B1R5/5Q1P/8/1k1P4/8/1b6/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 350);
    }

    #[test]
    fn gentest_4947() {
        let board = Board::from_fen("8/B1R5/7P/1Q6/3P4/k7/1b6/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 168);
        assert_eq!(perft(&board, 3, &PRECOMP), 1078);
    }

    #[test]
    fn gentest_4948() {
        let board = Board::from_fen("8/B1R5/7P/b4Q2/3P4/k7/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 354);
    }

    #[test]
    fn gentest_4949() {
        let board = Board::from_fen("8/B7/2R4P/8/3P4/k1bQ4/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 106);
        assert_eq!(perft(&board, 3, &PRECOMP), 739);
    }

    #[test]
    fn gentest_4950() {
        let board = Board::from_fen("8/B6Q/2R4P/8/1k1P4/8/8/bK6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 245);
        assert_eq!(perft(&board, 3, &PRECOMP), 8432);
    }

    #[test]
    fn gentest_4951() {
        let board = Board::from_fen("7Q/B7/6RP/k7/3P4/8/8/bK6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 196);
        assert_eq!(perft(&board, 3, &PRECOMP), 1660);
    }

    #[test]
    fn gentest_4952() {
        let board = Board::from_fen("8/B7/5QRP/k7/3P4/2b5/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 246);
        assert_eq!(perft(&board, 3, &PRECOMP), 9559);
    }

    #[test]
    fn gentest_4953() {
        let board = Board::from_fen("8/8/Q5RP/k1B5/3P4/8/8/bK6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 0);
        assert_eq!(perft(&board, 2, &PRECOMP), 0);
        assert_eq!(perft(&board, 3, &PRECOMP), 0);
        assert_eq!(perft(&board, 4, &PRECOMP), 0);
        assert_eq!(perft(&board, 5, &PRECOMP), 0);
        assert_eq!(perft(&board, 6, &PRECOMP), 0);
    }

    #[test]
    fn gentest_4954() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_4955() {
        let board = Board::from_fen("rnbqkbnr/pppppp1p/8/6p1/2P5/8/PP1PPPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 462);
    }

    #[test]
    fn gentest_4956() {
        let board = Board::from_fen("rn1qkbnr/ppp1pp1p/4b3/3p2p1/2P5/1Q6/PP1PPPPP/RNB1KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 906);
    }

    #[test]
    fn gentest_4957() {
        let board = Board::from_fen("rn1qkbnr/p1p1pp1p/4b3/1p1p2p1/2P5/NQ2P3/PP1P1PPP/R1B1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 864);
    }

    #[test]
    fn gentest_4958() {
        let board = Board::from_fen("rn1qkbnr/p1p1p2p/4bp2/1p4p1/2p1P3/NQ6/PP1P1PPP/R1B1KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1081);
    }

    #[test]
    fn gentest_4959() {
        let board = Board::from_fen("rn2kbnr/p1p1p2p/3qbp2/1p4p1/2B1P3/NQ6/PP1P1PPP/R1BK2NR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1430);
    }

    #[test]
    fn gentest_4960() {
        let board = Board::from_fen("rn2kbnr/p1p1p2p/4Bp2/1p4p1/1q2P3/NQ5b/PP1P1PPP/R1BK2NR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1120);
    }

    #[test]
    fn gentest_4961() {
        let board = Board::from_fen("rn2kbnr/p1p1p2p/4Bp2/1p4p1/1q2P1b1/N3Q3/PP1P1PPP/R1B1K1NR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1229);
    }

    #[test]
    fn gentest_4962() {
        let board = Board::from_fen("rn3bnr/p1pBpk1p/5p2/1p4p1/4q1b1/N3Q3/PP1P1PPP/R1B1K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1068);
    }

    #[test]
    fn gentest_4963() {
        let board = Board::from_fen("rn3bnr/pBp1pk1p/5p2/1p4p1/6b1/N3Q3/PP1P1PPP/R1B1K1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1179);
    }

    #[test]
    fn gentest_4964() {
        let board = Board::from_fen("rn3b1r/pBp1pk1p/4bp1n/1p4p1/8/N3Q3/PP1P1PPP/R1B2KNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1181);
    }

    #[test]
    fn gentest_4965() {
        let board = Board::from_fen("rn3b1r/p1p1p2p/B3kp1n/1p4p1/8/N7/PP1P1PPP/R1B2KNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 457);
        assert_eq!(perft(&board, 3, &PRECOMP), 9313);
    }

    #[test]
    fn gentest_4966() {
        let board = Board::from_fen("rn3b1r/p1p1p2p/B1k2p1n/1p4p1/8/N7/PP1P1PPP/R1B1K1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 402);
        assert_eq!(perft(&board, 3, &PRECOMP), 9998);
    }

    #[test]
    fn gentest_4967() {
        let board = Board::from_fen("rn3b1r/p1p1p2p/B1k4n/1p3pp1/8/8/PPNPKPPP/R1B3NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 485);
        assert_eq!(perft(&board, 3, &PRECOMP), 8989);
    }

    #[test]
    fn gentest_4968() {
        let board = Board::from_fen("rn3b1r/p1p1p2p/B1k4n/5pp1/8/1p3N2/PPNPKPPP/R1B4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 551);
    }

    #[test]
    fn gentest_4969() {
        let board = Board::from_fen("rn3b1r/p1p1p2p/B1k4n/5pN1/8/8/PPpP1PPP/R1B2K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 427);
        assert_eq!(perft(&board, 3, &PRECOMP), 7788);
    }

    #[test]
    fn gentest_4970() {
        let board = Board::from_fen("rn3b1r/p3p2p/B1pk3n/5pN1/8/8/PPpP1PPP/R1B1K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 473);
    }

    #[test]
    fn gentest_4971() {
        let board = Board::from_fen("rn5r/p3p1bp/B1pk3n/5pN1/3P1B2/8/PPp2PPP/R3K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 151);
        assert_eq!(perft(&board, 3, &PRECOMP), 3218);
    }

    #[test]
    fn gentest_4972() {
        let board = Board::from_fen("rn4r1/p2kp1bp/B1p4n/4BpN1/3P4/8/PPp2PPP/R3K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 843);
    }

    #[test]
    fn gentest_4973() {
        let board = Board::from_fen("rn4r1/p2kp1bp/B1p4n/4BpN1/3P4/8/PP2KPPP/R1r4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1060);
    }

    #[test]
    fn gentest_4974() {
        let board = Board::from_fen("rn4r1/p2kpn1p/B1p2b2/4Bp2/3P4/5N2/PP2KPPP/R1r4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1407);
    }

    #[test]
    fn gentest_4975() {
        let board = Board::from_fen("rn4r1/p2kpn1p/B1p2b2/2r1Bp2/P2P3P/5N2/1P2KPP1/R6R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1667);
    }

    #[test]
    fn gentest_4976() {
        let board = Board::from_fen("rn4r1/p2kpn1p/B1pB4/r4p2/P2b3P/5N2/1P2KPP1/R6R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 2042);
    }

    #[test]
    fn gentest_4977() {
        let board = Board::from_fen("rn4r1/p2kp2p/B1pB4/r3np2/P2b3P/5N1R/1P2KPP1/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1428);
    }

    #[test]
    fn gentest_4978() {
        let board = Board::from_fen("rn4r1/p2kp2p/B1pB4/r3np2/P2b3P/5N1R/1P2KPP1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1350);
    }

    #[test]
    fn gentest_4979() {
        let board = Board::from_fen("rn4r1/p2kp2p/2pB4/1B2Np2/r2b3P/7R/1P2KPP1/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 276);
    }

    #[test]
    fn gentest_4980() {
        let board = Board::from_fen("rn6/p2Np1rp/2pBk3/1B3p2/r2b3P/7R/1P2KPP1/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1624);
    }

    #[test]
    fn gentest_4981() {
        let board = Board::from_fen("rn6/p2Np1rp/2pBk3/rB3p2/3b3P/8/1P3PPR/4K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1103);
    }

    #[test]
    fn gentest_4982() {
        let board = Board::from_fen("rn4r1/p2Np2p/2p1k3/rBb2p2/5B1P/8/1P3PPR/4K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1126);
    }

    #[test]
    fn gentest_4983() {
        let board = Board::from_fen("rn4r1/p2kp2p/2p5/rBb2p2/5B1P/8/1P3PPR/2K3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1038);
    }

    #[test]
    fn gentest_4984() {
        let board = Board::from_fen("rn4r1/p2k3p/2pb4/rB2Bp2/7P/8/1P3PPR/2K3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1123);
    }

    #[test]
    fn gentest_4985() {
        let board = Board::from_fen("rn4r1/p3k2p/2pb4/rB3p2/6PP/6B1/1P3P1R/2K3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1033);
    }

    #[test]
    fn gentest_4986() {
        let board = Board::from_fen("rn6/p3k2p/2pb1r2/rB2Bp2/6PP/8/1P3P1R/2K3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 982);
    }

    #[test]
    fn gentest_4987() {
        let board = Board::from_fen("rn6/p3k2p/2pb1B2/1r3p2/6PP/8/1P3P1R/2K3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 4866);
    }

    #[test]
    fn gentest_4988() {
        let board = Board::from_fen("rn6/p4k1p/2p2B2/1r3p2/1P3bPP/8/5P1R/2K3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 124);
        assert_eq!(perft(&board, 3, &PRECOMP), 3459);
    }

    #[test]
    fn gentest_4989() {
        let board = Board::from_fen("rn3k2/p6p/2p2B2/1r3p2/1P3bPP/8/1K3PRR/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 606);
    }

    #[test]
    fn gentest_4990() {
        let board = Board::from_fen("rn3k2/p6p/2pb1B2/1r3p2/1P4PP/8/5PR1/K7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 493);
        assert_eq!(perft(&board, 3, &PRECOMP), 9812);
    }

    #[test]
    fn gentest_4991() {
        let board = Board::from_fen("rn3k2/p6p/2p5/1r2Bp2/1b4PP/8/5PR1/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 546);
    }

    #[test]
    fn gentest_4992() {
        let board = Board::from_fen("rn3k2/p6p/2p5/4Bp2/1b4PP/8/5P2/K1r3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 83);
        assert_eq!(perft(&board, 3, &PRECOMP), 2098);
    }

    #[test]
    fn gentest_4993() {
        let board = Board::from_fen("rn3k2/p6p/2p5/4Bp2/6PP/8/5P2/KR2b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 496);
        assert_eq!(perft(&board, 3, &PRECOMP), 8766);
    }

    #[test]
    fn gentest_4994() {
        let board = Board::from_fen("rn4k1/p6p/2p5/4Bp2/6PP/8/K4b2/1R6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 633);
    }

    #[test]
    fn gentest_4995() {
        let board = Board::from_fen("rn4k1/p6p/2p5/5p2/3b2PP/6B1/K7/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 665);
    }

    #[test]
    fn gentest_4996() {
        let board = Board::from_fen("r5k1/p2n2bp/2p5/5p2/6PP/1R4B1/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 710);
    }

    #[test]
    fn gentest_4997() {
        let board = Board::from_fen("r4nk1/p5bp/2p5/5p1P/6P1/4R1B1/K7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 604);
    }

    #[test]
    fn gentest_4998() {
        let board = Board::from_fen("r4nk1/6bp/p1p1R3/7P/5pP1/6B1/K7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 477);
    }

    #[test]
    fn gentest_4999() {
        let board = Board::from_fen("r4nk1/6bp/2p5/p6P/5pP1/8/K4B2/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 610);
    }

    #[test]
    fn gentest_5000() {
        let board = Board::from_fen("r4n2/6bp/2p2k2/p6P/5pP1/8/K3RB2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 397);
    }

    #[test]
    fn gentest_5001() {
        let board = Board::from_fen("r4n2/7p/2p2k1b/p6P/5pP1/4R3/K4B2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 412);
        assert_eq!(perft(&board, 3, &PRECOMP), 7515);
    }

    #[test]
    fn gentest_5002() {
        let board = Board::from_fen("r4n2/7p/2p2k1b/p6P/5pP1/8/K4B2/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 447);
    }

    #[test]
    fn gentest_5003() {
        let board = Board::from_fen("r4n2/6kp/2p4b/p5PP/5p2/K7/5B2/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 440);
        assert_eq!(perft(&board, 3, &PRECOMP), 7451);
    }

    #[test]
    fn gentest_5004() {
        let board = Board::from_fen("3r1n1k/7p/2p4b/p5PP/5p2/K3R3/5B2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 485);
    }

    #[test]
    fn gentest_5005() {
        let board = Board::from_fen("3r1nk1/7p/2p4b/p5PP/5p2/K2RB3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 454);
        assert_eq!(perft(&board, 3, &PRECOMP), 9243);
    }

    #[test]
    fn gentest_5006() {
        let board = Board::from_fen("4rn2/6kp/2p4b/p5PP/K4p2/3RB3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 418);
        assert_eq!(perft(&board, 3, &PRECOMP), 9610);
    }

    #[test]
    fn gentest_5007() {
        let board = Board::from_fen("r4n2/6kp/2p4b/p2R2PP/K4p2/8/5B2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 388);
        assert_eq!(perft(&board, 3, &PRECOMP), 6334);
    }

    #[test]
    fn gentest_5008() {
        let board = Board::from_fen("5nk1/7p/r1p4b/p5PP/K4p2/3R4/5B2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 345);
        assert_eq!(perft(&board, 3, &PRECOMP), 8214);
    }

    #[test]
    fn gentest_5009() {
        let board = Board::from_fen("5n2/5k1p/r1p4P/p6P/K4p2/3R4/8/4B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 298);
        assert_eq!(perft(&board, 3, &PRECOMP), 4178);
    }

    #[test]
    fn gentest_5010() {
        let board = Board::from_fen("3R1n2/7p/r4k1P/p1p4P/K4p2/8/8/4B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 326);
        assert_eq!(perft(&board, 3, &PRECOMP), 6732);
    }

    #[test]
    fn gentest_5011() {
        let board = Board::from_fen("3R1n2/7p/r4k1P/p1p4P/K7/4Bp2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 366);
        assert_eq!(perft(&board, 3, &PRECOMP), 5706);
    }

    #[test]
    fn gentest_5012() {
        let board = Board::from_fen("3R4/7p/3r1knP/p1p4P/K4B2/5p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 418);
        assert_eq!(perft(&board, 3, &PRECOMP), 9100);
    }

    #[test]
    fn gentest_5013() {
        let board = Board::from_fen("7R/7p/5knP/K1p4P/3r1B2/5p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 466);
        assert_eq!(perft(&board, 3, &PRECOMP), 9936);
    }

    #[test]
    fn gentest_5014() {
        let board = Board::from_fen("7R/7p/5k1P/1Kp4P/r4B1n/5p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 410);
        assert_eq!(perft(&board, 3, &PRECOMP), 8480);
    }

    #[test]
    fn gentest_5015() {
        let board = Board::from_fen("R7/7p/5k1P/1K5P/r1p4n/5pB1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 390);
        assert_eq!(perft(&board, 3, &PRECOMP), 6734);
    }

    #[test]
    fn gentest_5016() {
        let board = Board::from_fen("R7/7p/2K4P/6kP/1rp4n/5pB1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 451);
    }

    #[test]
    fn gentest_5017() {
        let board = Board::from_fen("RB6/7p/2K4P/6kP/2p4n/1r3p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 384);
        assert_eq!(perft(&board, 3, &PRECOMP), 7691);
    }

    #[test]
    fn gentest_5018() {
        let board = Board::from_fen("1r6/R6p/2K4P/6kP/2p4n/5p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 427);
        assert_eq!(perft(&board, 3, &PRECOMP), 6881);
    }

    #[test]
    fn gentest_5019() {
        let board = Board::from_fen("6r1/7p/2K4P/6kP/2p4n/5p2/R7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 398);
        assert_eq!(perft(&board, 3, &PRECOMP), 8583);
    }

    #[test]
    fn gentest_5020() {
        let board = Board::from_fen("7r/R6p/2K4P/5k1P/2p4n/5p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 360);
        assert_eq!(perft(&board, 3, &PRECOMP), 6343);
    }

    #[test]
    fn gentest_5021() {
        let board = Board::from_fen("4r3/1R5p/7P/3K1k1P/2p4n/5p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 379);
        assert_eq!(perft(&board, 3, &PRECOMP), 7796);
    }

    #[test]
    fn gentest_5022() {
        let board = Board::from_fen("8/7p/7P/3K2kP/2p1r2n/5p2/1R6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 351);
        assert_eq!(perft(&board, 3, &PRECOMP), 5364);
    }

    #[test]
    fn gentest_5023() {
        let board = Board::from_fen("8/7p/R6P/3K2kP/4r2n/2p2p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 352);
        assert_eq!(perft(&board, 3, &PRECOMP), 7510);
    }

    #[test]
    fn gentest_5024() {
        let board = Board::from_fen("8/7p/2R4P/3K2kP/5r1n/2p2p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 262);
        assert_eq!(perft(&board, 3, &PRECOMP), 3575);
    }

    #[test]
    fn gentest_5025() {
        let board = Board::from_fen("8/2R4p/7P/3K1nkP/5r2/2p2p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 318);
        assert_eq!(perft(&board, 3, &PRECOMP), 7053);
    }

    #[test]
    fn gentest_5026() {
        let board = Board::from_fen("8/7p/2R4P/3K1nkP/2r5/2p2p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 280);
        assert_eq!(perft(&board, 3, &PRECOMP), 3399);
    }

    #[test]
    fn gentest_5027() {
        let board = Board::from_fen("8/8/4K1pP/5nkP/2r5/2p2p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 4135);
    }

    #[test]
    fn gentest_5028() {
        let board = Board::from_fen("8/3K4/6pP/5nk1/2r5/2p2p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 107);
        assert_eq!(perft(&board, 3, &PRECOMP), 569);
    }

    #[test]
    fn gentest_5029() {
        let board = Board::from_fen("2r5/3K4/6pP/5nk1/8/2p2p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 2446);
    }

    #[test]
    fn gentest_5030() {
        let board = Board::from_fen("2r5/8/4K1pP/5n2/7k/2p5/5p2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 173);
        assert_eq!(perft(&board, 3, &PRECOMP), 929);
    }

    #[test]
    fn gentest_5031() {
        let board = Board::from_fen("3r4/8/6KP/5n2/7k/2p5/5p2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 134);
        assert_eq!(perft(&board, 3, &PRECOMP), 3871);
    }

    #[test]
    fn gentest_5032() {
        let board = Board::from_fen("3r4/7K/7P/8/3n3k/2p5/8/5r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 74);
        assert_eq!(perft(&board, 3, &PRECOMP), 247);
        assert_eq!(perft(&board, 4, &PRECOMP), 9057);
    }

    #[test]
    fn gentest_5033() {
        let board = Board::from_fen("6K1/8/3r3P/8/3n3k/2p5/8/5r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 155);
        assert_eq!(perft(&board, 3, &PRECOMP), 5777);
    }

    #[test]
    fn gentest_5034() {
        let board = Board::from_fen("7K/8/3r3P/8/3n3k/2p5/8/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 152);
        assert_eq!(perft(&board, 3, &PRECOMP), 588);
    }

    #[test]
    fn gentest_5035() {
        let board = Board::from_fen("7K/8/3r3P/8/3n3k/2p5/8/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 4210);
    }

    #[test]
    fn gentest_5036() {
        let board = Board::from_fen("8/7K/2nr3P/8/7k/2p5/8/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 117);
        assert_eq!(perft(&board, 3, &PRECOMP), 574);
    }

    #[test]
    fn gentest_5037() {
        let board = Board::from_fen("7K/1r6/2nr3P/8/7k/2p5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 88);
        assert_eq!(perft(&board, 3, &PRECOMP), 3294);
        assert_eq!(perft(&board, 4, &PRECOMP), 8832);
    }

    #[test]
    fn gentest_5038() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5039() {
        let board = Board::from_fen("rnbqkbnr/pppp1ppp/4p3/8/2P5/8/PPQPPPPP/RNB1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 860);
    }

    #[test]
    fn gentest_5040() {
        let board = Board::from_fen("rnbqk1nr/pppp2pp/4p3/5p2/2P5/b7/PPQPPPPP/R1B1KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 818);
    }

    #[test]
    fn gentest_5041() {
        let board = Board::from_fen("rnbqk2r/pppp2pp/4p2n/5p2/2P5/b3P3/PPQP1PPP/1RB1KBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 926);
    }

    #[test]
    fn gentest_5042() {
        let board = Board::from_fen("rnbqk2r/ppppb1pp/4p2n/5p2/2P5/3QP3/PP1P1PPP/1RB1KBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 868);
    }

    #[test]
    fn gentest_5043() {
        let board = Board::from_fen("rnbqk2r/pppp2pp/4pb1n/5p2/2P5/1P2P3/P1QP1PPP/1RB1KBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 957);
    }

    #[test]
    fn gentest_5044() {
        let board = Board::from_fen("rnbqk1nr/ppppb1pp/4p3/5p2/2P5/1P2P3/P2P1PPP/1RBQKBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 756);
    }

    #[test]
    fn gentest_5045() {
        let board = Board::from_fen("rnbqk1nr/ppppb2p/4p1p1/2P2p2/8/1P2PP2/P2P2PP/1RBQKBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 624);
    }

    #[test]
    fn gentest_5046() {
        let board = Board::from_fen("rnbq2nr/ppppbk1p/2P1p1p1/5p2/8/1P2PP2/P2P2PP/1RBQKBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 862);
    }

    #[test]
    fn gentest_5047() {
        let board = Board::from_fen("rnb2qnr/pppPbk1p/4p1p1/5p2/8/1P2PP2/PR1P2PP/2BQKBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 936);
    }

    #[test]
    fn gentest_5048() {
        let board = Board::from_fen("rnb2q1r/pp1Pbk1p/4p1pn/2p2p2/8/1P2PP2/PR1PQ1PP/2B1KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 791);
    }

    #[test]
    fn gentest_5049() {
        let board = Board::from_fen("r1b2q1r/pp1Pbk1p/n3p1pn/2p2p2/6P1/PP2PP2/1R1PQ2P/2B1KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 840);
    }

    #[test]
    fn gentest_5050() {
        let board = Board::from_fen("r1bB1qr1/p3bk1p/np2p1pn/2p2p2/6P1/PP2PP2/1R1PQ2P/2B1KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 717);
    }

    #[test]
    fn gentest_5051() {
        let board = Board::from_fen("r2B1qr1/p2bbk1p/np2p1pn/2p2p2/6PP/PP2PP2/1R1PQ3/2B1KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 893);
    }

    #[test]
    fn gentest_5052() {
        let board = Board::from_fen("r2B1qr1/p2bbk1p/np2p1pn/2p2p2/4P2P/PP3P2/1R1PQ3/2B1KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 928);
    }

    #[test]
    fn gentest_5053() {
        let board = Board::from_fen("r2B1qr1/p1nbbk1p/1p2p1pn/2p2p2/4P2P/PP3P1N/1R1P1Q2/2B1KB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1151);
    }

    #[test]
    fn gentest_5054() {
        let board = Board::from_fen("r2B1qr1/p1n1bk1p/1p2p1pn/1bp5/4Pp1P/PP3P1N/1R1P4/2B1KBQR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1037);
    }

    #[test]
    fn gentest_5055() {
        let board = Board::from_fen("r2B1qr1/p1n2k1p/1p2p1pn/1bp3b1/4Pp1P/PP3P2/1R1P2B1/2B1K1QR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 858);
    }

    #[test]
    fn gentest_5056() {
        let board = Board::from_fen("r4qr1/p1B2k1p/1p2p1p1/2p3b1/4PpnP/PP1b1P2/1R1P2B1/2B1K1QR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1121);
    }

    #[test]
    fn gentest_5057() {
        let board = Board::from_fen("r4qr1/p1B2k1p/1p2p1p1/2p1n1b1/3QPp1P/PP1b1P2/1R1P2B1/2B1K2R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1415);
    }

    #[test]
    fn gentest_5058() {
        let board = Board::from_fen("r2b1qr1/p1B2k1p/1p2p1p1/2p1n3/P1bQPp1P/1P3P2/1R1P2B1/2B1K2R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1139);
    }

    #[test]
    fn gentest_5059() {
        let board = Board::from_fen("r2b1qr1/p1Bn1k1p/1p2p1p1/2p5/P1bQPp1P/1P3P2/1R1P2B1/2BK1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1151);
    }

    #[test]
    fn gentest_5060() {
        let board = Board::from_fen("r4qr1/p1B2k1p/1p2pnp1/2p5/P1b1Pp1P/1P3P2/1R1P2B1/2BK1R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 872);
    }

    #[test]
    fn gentest_5061() {
        let board = Board::from_fen("3r1qr1/p4k1p/1B2pnp1/2p5/P1b1Pp1P/1P3P1B/1R1P4/2BK1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 921);
    }

    #[test]
    fn gentest_5062() {
        let board = Board::from_fen("1r3qr1/p4k2/1B2pnp1/2p2B1p/P1b1Pp1P/1P3P2/1R1P4/2BK1R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 838);
    }

    #[test]
    fn gentest_5063() {
        let board = Board::from_fen("1r2kqr1/p1B5/4pnp1/2p2B1p/P1b1Pp1P/1P3P2/1R1P4/2BKR3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 877);
    }

    #[test]
    fn gentest_5064() {
        let board = Board::from_fen("1r2kqr1/2B5/p3pnp1/2p2B1p/P3Pp1P/1P3P2/1RKP4/2B1Rb2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 815);
    }

    #[test]
    fn gentest_5065() {
        let board = Board::from_fen("1r2kq2/6r1/p3pnp1/2p2B1p/P3PB1P/1P3P2/R1KP4/2B1Rb2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1306);
    }

    #[test]
    fn gentest_5066() {
        let board = Board::from_fen("1r1k1q2/6r1/p3pnp1/2p2B1p/P3PB1P/1P3P2/R2Pb3/2BKR3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 3713);
    }

    #[test]
    fn gentest_5067() {
        let board = Board::from_fen("1r1k4/6r1/p2qpnp1/2p4p/P3PB1P/1P3P1B/R2PK3/2B1R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1284);
    }

    #[test]
    fn gentest_5068() {
        let board = Board::from_fen("1r1k4/3q2r1/p3pnpB/7p/P1p1P2P/1P3P1B/R2PK3/2B1R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1216);
    }

    #[test]
    fn gentest_5069() {
        let board = Board::from_fen("1r1kq3/6r1/p3pnpB/7p/P1p1P2P/1P3P1B/R2P4/2BK3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1133);
    }

    #[test]
    fn gentest_5070() {
        let board = Board::from_fen("4q3/4k1r1/p3pnpB/7p/P1p1P2P/1r3P1B/R2PK3/2B4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1166);
    }

    #[test]
    fn gentest_5071() {
        let board = Board::from_fen("8/4kqr1/p3pnpB/7p/P1pPP2P/1r3P1B/R4K2/2B4R b - d3").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1140);
    }

    #[test]
    fn gentest_5072() {
        let board = Board::from_fen("q7/4k1r1/p3pnpB/7p/P1pPP2P/1r3P1B/R4K2/2B1R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1564);
    }

    #[test]
    fn gentest_5073() {
        let board = Board::from_fen("q2k4/6r1/p3pnpB/7p/P1pPP2P/1r3P1B/R4K2/2B1R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1479);
    }

    #[test]
    fn gentest_5074() {
        let board = Board::from_fen("q2k4/4r3/p3pnp1/7p/P1pPPB1P/4rP1B/R4K2/2B1R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1342);
    }

    #[test]
    fn gentest_5075() {
        let board = Board::from_fen("q7/2k1r3/p3pnp1/7p/P1pPP2P/4rP2/R4KB1/2B1R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1106);
    }

    #[test]
    fn gentest_5076() {
        let board = Board::from_fen("8/1qk1r3/p3pnp1/7p/P1pP3P/4rP2/3R1KB1/2B1R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1076);
    }

    #[test]
    fn gentest_5077() {
        let board = Board::from_fen("2q5/2k1r3/p3pnp1/7p/P1pP3P/4rP2/3RRK2/2B2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 713);
    }

    #[test]
    fn gentest_5078() {
        let board = Board::from_fen("6q1/2k4r/p3pnp1/7p/P1pP3P/4rPK1/3RR3/2B2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 828);
    }

    #[test]
    fn gentest_5079() {
        let board = Board::from_fen("6q1/2k4r/4pnp1/p6p/P1pP3P/B3rPK1/3R3R/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1104);
    }

    #[test]
    fn gentest_5080() {
        let board = Board::from_fen("6q1/7r/1k2p1p1/p2n3p/P1p4P/B3rPK1/3R3R/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1138);
    }

    #[test]
    fn gentest_5081() {
        let board = Board::from_fen("5Bq1/7r/1k2p1p1/p2n3p/P1p4P/2r2PK1/3R3R/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 964);
    }

    #[test]
    fn gentest_5082() {
        let board = Board::from_fen("5Bq1/k4r2/4p1p1/p2n3p/P1p4P/2rR1PK1/7R/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 999);
    }

    #[test]
    fn gentest_5083() {
        let board = Board::from_fen("7q/k4r2/4p1p1/p2n3p/PBp4P/2rR1PK1/1R6/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1274);
    }

    #[test]
    fn gentest_5084() {
        let board = Board::from_fen("7q/1k3r2/4p1p1/p2n3p/PBp4P/2r2PK1/1R1R4/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1105);
    }

    #[test]
    fn gentest_5085() {
        let board = Board::from_fen("8/1k3r2/4p1p1/p2nq2p/PBp4P/2r2P2/1R1R2K1/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1163);
    }

    #[test]
    fn gentest_5086() {
        let board = Board::from_fen("8/k4r2/4p1p1/p2n3p/PBp4P/2rB1P2/1R1R2Kq/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 78);
        assert_eq!(perft(&board, 3, &PRECOMP), 1891);
    }

    #[test]
    fn gentest_5087() {
        let board = Board::from_fen("8/k4r2/4p1p1/p2n3p/PBp4P/2rB1P2/1R4R1/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1027);
    }

    #[test]
    fn gentest_5088() {
        let board = Board::from_fen("8/k1r2r2/4p1p1/p2n3p/PB5P/3p1P2/6R1/1R3K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1016);
    }

    #[test]
    fn gentest_5089() {
        let board = Board::from_fen("5r2/k1r5/4p1p1/p2n3p/PB5P/3p1P2/6R1/1R3K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1154);
    }

    #[test]
    fn gentest_5090() {
        let board = Board::from_fen("5r2/k7/4p1p1/p6p/P6P/3pnP2/6R1/1Rr1BK2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 70);
        assert_eq!(perft(&board, 3, &PRECOMP), 1561);
    }

    #[test]
    fn gentest_5091() {
        let board = Board::from_fen("5r2/k7/4p1p1/p6p/P6P/2rpnP2/5KR1/1R2B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 675);
    }

    #[test]
    fn gentest_5092() {
        let board = Board::from_fen("7r/k7/6p1/p3p2p/P6P/2rpnP2/5K1R/1R2B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 552);
    }

    #[test]
    fn gentest_5093() {
        let board = Board::from_fen("7r/k7/6p1/p3p2p/PRr4P/3pnP2/5K1R/4B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 587);
    }

    #[test]
    fn gentest_5094() {
        let board = Board::from_fen("7r/k7/6p1/p2np2p/P3R2P/3p1P2/5K1R/4B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 489);
    }

    #[test]
    fn gentest_5095() {
        let board = Board::from_fen("7r/k7/6p1/p3p2p/Pn2R2P/2Bp1P2/6KR/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 530);
    }

    #[test]
    fn gentest_5096() {
        let board = Board::from_fen("8/8/1k4pr/p3p2p/PB2R2P/3p1P2/6KR/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 255);
        assert_eq!(perft(&board, 3, &PRECOMP), 6757);
    }

    #[test]
    fn gentest_5097() {
        let board = Board::from_fen("8/8/k5pr/B3p2p/P3R2P/3p1P2/6KR/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 168);
        assert_eq!(perft(&board, 3, &PRECOMP), 1924);
    }

    #[test]
    fn gentest_5098() {
        let board = Board::from_fen("8/8/k5pr/B3p2p/P3RP1P/3p4/6KR/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 200);
        assert_eq!(perft(&board, 3, &PRECOMP), 5262);
    }

    #[test]
    fn gentest_5099() {
        let board = Board::from_fen("8/8/1k4pr/4p2p/P1R2P1P/2Bp4/6KR/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 246);
        assert_eq!(perft(&board, 3, &PRECOMP), 2637);
    }

    #[test]
    fn gentest_5100() {
        let board = Board::from_fen("8/1k6/6pr/7p/PBR1pP1P/3p4/6KR/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 277);
        assert_eq!(perft(&board, 3, &PRECOMP), 8076);
    }

    #[test]
    fn gentest_5101() {
        let board = Board::from_fen("8/8/1k4pr/7p/PB2RP1P/3p4/6KR/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 262);
        assert_eq!(perft(&board, 3, &PRECOMP), 2903);
    }

    #[test]
    fn gentest_5102() {
        let board = Board::from_fen("1r6/8/1k4p1/7p/P3RP1P/2Bp4/6KR/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 455);
    }

    #[test]
    fn gentest_5103() {
        let board = Board::from_fen("1r6/8/1k4p1/7p/P4P1P/2B5/3pR2R/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 475);
        assert_eq!(perft(&board, 3, &PRECOMP), 9298);
    }

    #[test]
    fn gentest_5104() {
        let board = Board::from_fen("1r6/8/1k6/4B1pp/P4P1P/8/4R2R/3q3K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 69);
        assert_eq!(perft(&board, 3, &PRECOMP), 1735);
    }

    #[test]
    fn gentest_5105() {
        let board = Board::from_fen("1r6/8/1k6/4BPpp/P6P/8/4R1KR/4q3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 711);
    }

    #[test]
    fn gentest_5106() {
        let board = Board::from_fen("1r6/1k6/8/4BPpp/Pq5P/8/1R4KR/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 633);
    }

    #[test]
    fn gentest_5107() {
        let board = Board::from_fen("2r5/1k6/1B6/5Ppp/Pq5P/8/1R4KR/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1019);
    }

    #[test]
    fn gentest_5108() {
        let board = Board::from_fen("8/1k6/1B6/5Ppp/P1r4P/2q5/1R4K1/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1014);
    }

    #[test]
    fn gentest_5109() {
        let board = Board::from_fen("2r5/1k6/1B6/5Ppp/PR5P/2q5/6K1/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1150);
    }

    #[test]
    fn gentest_5110() {
        let board = Board::from_fen("8/1k6/1B6/5Ppp/PRr4P/6K1/8/R1q5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 593);
    }

    #[test]
    fn gentest_5111() {
        let board = Board::from_fen("3B4/1k6/8/5Ppp/Pr5P/8/7K/R1q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 540);
    }

    #[test]
    fn gentest_5112() {
        let board = Board::from_fen("3B4/1k6/8/4qPpp/Pr5P/7K/8/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 843);
    }

    #[test]
    fn gentest_5113() {
        let board = Board::from_fen("8/1k6/8/4qPpp/r6P/7K/8/R3B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 673);
    }

    #[test]
    fn gentest_5114() {
        let board = Board::from_fen("8/1k6/8/3q1PP1/r6p/7K/8/R3B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 636);
    }

    #[test]
    fn gentest_5115() {
        let board = Board::from_fen("8/1k6/6P1/5P2/r6p/1qB4K/8/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 635);
    }

    #[test]
    fn gentest_5116() {
        let board = Board::from_fen("r7/1k6/6P1/5P2/7p/q1B4K/8/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 603);
    }

    #[test]
    fn gentest_5117() {
        let board = Board::from_fen("8/rk4P1/5P2/8/7p/q1B4K/8/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 630);
    }

    #[test]
    fn gentest_5118() {
        let board = Board::from_fen("8/r3R1P1/1k3P2/2q5/7p/2B4K/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 910);
    }

    #[test]
    fn gentest_5119() {
        let board = Board::from_fen("8/r5P1/1k3P2/8/6Kp/2B5/4Rq2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 723);
    }

    #[test]
    fn gentest_5120() {
        let board = Board::from_fen("8/r5P1/1k3q2/8/6K1/7p/4R3/4B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 980);
    }

    #[test]
    fn gentest_5121() {
        let board = Board::from_fen("8/5rP1/1k3q2/4R3/6K1/6Bp/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 521);
    }

    #[test]
    fn gentest_5122() {
        let board = Board::from_fen("8/5rP1/k1q5/4R3/6K1/7p/5B2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1175);
    }

    #[test]
    fn gentest_5123() {
        let board = Board::from_fen("2Q5/3r4/k1q5/4R3/6K1/7p/5B2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 2683);
    }

    #[test]
    fn gentest_5124() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5125() {
        let board = Board::from_fen("rnbqkbnr/ppp1pppp/8/3p4/3PP3/8/PPP2PPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1060);
    }

    #[test]
    fn gentest_5126() {
        let board = Board::from_fen("rnbqkb1r/1pp1pppp/5n2/p2p4/3PP3/8/PPPN1PPP/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 966);
    }

    #[test]
    fn gentest_5127() {
        let board = Board::from_fen("rnbqkb1r/1pp1pppp/8/p2p4/3Pn3/P4Q2/1PPN1PPP/R1B1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1358);
    }

    #[test]
    fn gentest_5128() {
        let board = Board::from_fen("rn1qkbr1/1pp1pppp/4b3/p2p4/3Pn1P1/P4Q2/1PPN1P1P/R1B1KBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1217);
    }

    #[test]
    fn gentest_5129() {
        let board = Board::from_fen("rn1qkbr1/1pp1pp1p/4b1p1/p2p4/3Pn1P1/P4Q2/1PPNNP1P/R1BK1B1R b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1129);
    }

    #[test]
    fn gentest_5130() {
        let board = Board::from_fen("rn1qkb1r/2p1pp1p/4b1p1/pp1p4/1P1Pn1P1/P4Q2/2PNNP1P/R1BK1B1R w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1080);
    }

    #[test]
    fn gentest_5131() {
        let board = Board::from_fen("rn2kb1r/2pqpp1p/4b1p1/pp1p4/1P1Pn1P1/P1P2Q2/3NNP1P/R1B1KB1R b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 936);
    }

    #[test]
    fn gentest_5132() {
        let board = Board::from_fen("rn2kb1r/2p1pp1p/6p1/pp1p1q2/1P1Pn1b1/PNP2Q2/4NP1P/R1B1KB1R w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1271);
    }

    #[test]
    fn gentest_5133() {
        let board = Board::from_fen("r3kb1r/2p1pp1p/n5pB/pp1p1q2/1P1Pn1b1/PNP2Q2/4NP1P/1R2KB1R b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1554);
    }

    #[test]
    fn gentest_5134() {
        let board = Board::from_fen("3rk2r/2p1ppbp/n5pB/pp1p1q2/1P1Pn1b1/P1P2Q2/3NNP1P/1R2KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1523);
    }

    #[test]
    fn gentest_5135() {
        let board = Board::from_fen("3rk2r/2p1ppbp/n5pB/pp1p4/1P1Pnqb1/P1P2Q2/3NNP1P/1R2KB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 1666);
    }

    #[test]
    fn gentest_5136() {
        let board = Board::from_fen("3rk2r/2p1ppbp/n4npB/pp1p2q1/1P1P2b1/P1P2Q2/3N1P1P/1RN1KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1501);
    }

    #[test]
    fn gentest_5137() {
        let board = Board::from_fen("3rk1r1/2p1ppbp/nN3npB/pp1p2q1/1P1P2b1/P1P2Q2/5P1P/1RN1KB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1532);
    }

    #[test]
    fn gentest_5138() {
        let board = Board::from_fen("3rkbr1/2pbpp1p/nN3npB/pp1p2q1/1P1P4/P1P4Q/5P1P/1RN1KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1488);
    }

    #[test]
    fn gentest_5139() {
        let board = Board::from_fen("3rkbr1/3bpp1p/n4npB/pppN2q1/PP1P4/2P4Q/5P1P/1RN1KB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1548);
    }

    #[test]
    fn gentest_5140() {
        let board = Board::from_fen("3rkbr1/2nbpp1p/5npB/ppp5/PP1P4/2P4Q/5P1P/1RN1KBqR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1287);
    }

    #[test]
    fn gentest_5141() {
        let board = Board::from_fen("1r2kbr1/2nbpp1p/5npB/ppp5/PP1P4/1RP4Q/5P1P/2NK1BqR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1330);
    }

    #[test]
    fn gentest_5142() {
        let board = Board::from_fen("3rkbr1/2n1pp1p/5npB/ppP5/PP6/1RP4b/5P1P/2NK1BqR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 219);
        assert_eq!(perft(&board, 3, &PRECOMP), 4548);
    }

    #[test]
    fn gentest_5143() {
        let board = Board::from_fen("3rkbr1/2n1pp1p/5np1/p1P5/pP6/2P4b/3B1P1P/1RNK1BqR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 810);
    }

    #[test]
    fn gentest_5144() {
        let board = Board::from_fen("3rkb2/4pprp/2P1nnp1/p7/pP6/2P4b/3B1P1P/1RNK1BqR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 648);
    }

    #[test]
    fn gentest_5145() {
        let board = Board::from_fen("3rkb2/4pprp/2P2np1/p7/pP3n2/1RP4b/3B1P1P/2NK1BR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 939);
    }

    #[test]
    fn gentest_5146() {
        let board = Board::from_fen("3rkbr1/5p1p/2P2nR1/p3p3/pP3n2/1RP4b/3B1P1P/2NK1B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1307);
    }

    #[test]
    fn gentest_5147() {
        let board = Board::from_fen("3rkbr1/5p1p/2P2n2/p3p1R1/1P3n2/pRPN3b/3B1P1P/3K1B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1459);
    }

    #[test]
    fn gentest_5148() {
        let board = Board::from_fen("4kb2/5p1p/2Pr1nr1/p3p1R1/1P3N2/pRP4b/3B1P1P/3K1B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1232);
    }

    #[test]
    fn gentest_5149() {
        let board = Board::from_fen("4kb2/5p1p/2P2nr1/p3p1R1/1P1r4/pRPN3b/3B1PBP/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1430);
    }

    #[test]
    fn gentest_5150() {
        let board = Board::from_fen("4k3/3n1p1p/2Pb2r1/p3p1R1/1P1r4/pRPNB2b/5PBP/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1188);
    }

    #[test]
    fn gentest_5151() {
        let board = Board::from_fen("8/3k1p1p/3b2r1/p3p1R1/1P1r4/pRPNB2b/3K1PBP/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1190);
    }

    #[test]
    fn gentest_5152() {
        let board = Board::from_fen("8/3k1p1p/6r1/p2rp1R1/1b6/pRPNBB1b/3K1P1P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1186);
    }

    #[test]
    fn gentest_5153() {
        let board = Board::from_fen("8/3k1p2/6r1/p2rp1Rp/1b6/p1PNB2b/3K1P1P/1R5B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1309);
    }

    #[test]
    fn gentest_5154() {
        let board = Board::from_fen("8/3k1p2/6r1/p1Brp1Rp/1b6/p1PN3b/3K1P1P/1R5B w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1277);
    }

    #[test]
    fn gentest_5155() {
        let board = Board::from_fen("8/3k1p2/r7/p1Brp1Rp/1b6/p1PN3b/R2K1P1P/7B b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1015);
    }

    #[test]
    fn gentest_5156() {
        let board = Board::from_fen("8/5p2/r2k4/p1r1p2p/1b6/p1PN2Rb/R2K1P1P/7B w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1007);
    }

    #[test]
    fn gentest_5157() {
        let board = Board::from_fen("6R1/5p2/r2k4/p2rp2p/1b6/p1PN3b/R2K1PBP/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 778);
    }

    #[test]
    fn gentest_5158() {
        let board = Board::from_fen("1R6/5p2/2rk4/p2r3p/1b2p3/p1PN3b/R2K1PBP/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 889);
    }

    #[test]
    fn gentest_5159() {
        let board = Board::from_fen("1R6/3k1p2/2r5/p2r3p/1b2p3/p1PN3b/1R2KPBP/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1442);
    }

    #[test]
    fn gentest_5160() {
        let board = Board::from_fen("1R6/3k1p2/4r3/p5rp/1b2p3/p1PN3B/1R2KP1P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 946);
    }

    #[test]
    fn gentest_5161() {
        let board = Board::from_fen("1R6/4kp2/4r3/p5rp/1b2p3/p1P4B/1R3P1P/2N2K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1048);
    }

    #[test]
    fn gentest_5162() {
        let board = Board::from_fen("1R6/3k1p2/4r3/pr5p/1b2p3/p1P4B/5P1P/1RN2K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 638);
    }

    #[test]
    fn gentest_5163() {
        let board = Board::from_fen("1R6/3k1p2/4r3/pr6/1b2p2p/pRP4B/5P1P/2N1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 633);
    }

    #[test]
    fn gentest_5164() {
        let board = Board::from_fen("1R6/2k5/4r3/pr3p2/1b2p2p/pRP4B/4NP1P/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 791);
    }

    #[test]
    fn gentest_5165() {
        let board = Board::from_fen("R7/2k1b3/4r3/pr3p2/4p2p/R1P4B/4NP1P/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 969);
    }

    #[test]
    fn gentest_5166() {
        let board = Board::from_fen("Rr6/2k1b3/5r2/p4p2/4p2p/R1P4B/5P1P/2N1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 879);
    }

    #[test]
    fn gentest_5167() {
        let board = Board::from_fen("Rr6/1k2b3/5r2/p4p2/4p2p/R1P5/4NP1P/4KB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 683);
    }

    #[test]
    fn gentest_5168() {
        let board = Board::from_fen("Rr6/2k1b3/7r/p4p2/4p2p/1RP5/4NP1P/4KB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 874);
    }

    #[test]
    fn gentest_5169() {
        let board = Board::from_fen("Rr6/2k1b3/2r5/p4p2/3Np2p/R1P5/5P1P/4KB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1312);
    }

    #[test]
    fn gentest_5170() {
        let board = Board::from_fen("R7/2k1b3/8/p4p2/3Np2p/R1r4B/5P1P/1r2K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 82);
        assert_eq!(perft(&board, 3, &PRECOMP), 2296);
    }

    #[test]
    fn gentest_5171() {
        let board = Board::from_fen("R7/2k5/3b4/p4p2/4p2p/R1r2N1B/3K1P1P/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 989);
    }

    #[test]
    fn gentest_5172() {
        let board = Board::from_fen("R7/2k5/3b4/p4p2/4p2p/R1r4B/3K1P1P/1r4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 937);
    }

    #[test]
    fn gentest_5173() {
        let board = Board::from_fen("3R4/2k5/3b4/p4B2/2r1p2p/R7/3K1P1P/1r4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1097);
    }

    #[test]
    fn gentest_5174() {
        let board = Board::from_fen("3R4/2k5/8/p1r5/4B2p/R7/3K1P1b/1r4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1376);
    }

    #[test]
    fn gentest_5175() {
        let board = Board::from_fen("3R4/2k5/8/p7/4B2p/1R1K4/2r2P1b/1r4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 827);
    }

    #[test]
    fn gentest_5176() {
        let board = Board::from_fen("3R4/2k5/1R6/p3b3/4B2p/3K4/2r2P2/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1334);
    }

    #[test]
    fn gentest_5177() {
        let board = Board::from_fen("3R4/1Rk5/8/p3b3/7p/3K1B2/2r2P2/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 26);
        assert_eq!(perft(&board, 3, &PRECOMP), 907);
    }

    #[test]
    fn gentest_5178() {
        let board = Board::from_fen("3k4/4R3/8/4b3/p6p/3K1B2/2r2P2/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 786);
    }

    #[test]
    fn gentest_5179() {
        let board = Board::from_fen("3k4/4R3/8/4b3/p3B2p/3K4/2r2P2/5r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 812);
    }

    #[test]
    fn gentest_5180() {
        let board = Board::from_fen("3k4/4R3/8/3B4/p6p/3K2b1/2r2P2/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 974);
    }

    #[test]
    fn gentest_5181() {
        let board = Board::from_fen("3k4/8/2r5/3BR3/p6p/3K2b1/5P2/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 849);
    }

    #[test]
    fn gentest_5182() {
        let board = Board::from_fen("3k4/8/2r5/3BR3/p4P1p/3K2b1/8/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 788);
    }

    #[test]
    fn gentest_5183() {
        let board = Board::from_fen("3kR3/8/6r1/3B4/p4P1p/4K1b1/8/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 82);
        assert_eq!(perft(&board, 3, &PRECOMP), 2149);
    }

    #[test]
    fn gentest_5184() {
        let board = Board::from_fen("4R3/2k5/1r6/8/p4P1p/4K1b1/B7/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 742);
    }

    #[test]
    fn gentest_5185() {
        let board = Board::from_fen("1r4R1/2k5/8/8/p4P1p/4K1b1/B7/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 657);
    }

    #[test]
    fn gentest_5186() {
        let board = Board::from_fen("r5R1/3k4/8/8/p3KP1p/6b1/B7/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 628);
    }

    #[test]
    fn gentest_5187() {
        let board = Board::from_fen("rR6/3k4/8/8/5P1p/p3K1b1/B7/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 527);
    }

    #[test]
    fn gentest_5188() {
        let board = Board::from_fen("r7/3k4/8/1R6/5P1p/p3K1b1/B7/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 854);
    }

    #[test]
    fn gentest_5189() {
        let board = Board::from_fen("r7/2k5/4B3/1R6/3K1P1p/p5b1/8/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 882);
    }

    #[test]
    fn gentest_5190() {
        let board = Board::from_fen("4r3/2k5/8/1R6/3K1P1p/p5b1/B7/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 884);
    }

    #[test]
    fn gentest_5191() {
        let board = Board::from_fen("4r3/3k4/8/1RK5/5P1p/p5b1/8/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 446);
        assert_eq!(perft(&board, 3, &PRECOMP), 9535);
    }

    #[test]
    fn gentest_5192() {
        let board = Board::from_fen("5r2/4k3/8/2K5/5P1p/p5b1/1R6/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 609);
    }

    #[test]
    fn gentest_5193() {
        let board = Board::from_fen("7r/4k3/1R4B1/2K5/5P1p/p5b1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 462);
        assert_eq!(perft(&board, 3, &PRECOMP), 8415);
    }

    #[test]
    fn gentest_5194() {
        let board = Board::from_fen("8/5k2/1R5r/2K5/5P1p/p5b1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 377);
        assert_eq!(perft(&board, 3, &PRECOMP), 6388);
    }

    #[test]
    fn gentest_5195() {
        let board = Board::from_fen("8/1R3k2/3r4/2K5/5P1p/p5b1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 129);
        assert_eq!(perft(&board, 3, &PRECOMP), 2526);
    }

    #[test]
    fn gentest_5196() {
        let board = Board::from_fen("8/8/3rk3/2K5/5P1p/pR4b1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 311);
        assert_eq!(perft(&board, 3, &PRECOMP), 4452);
    }

    #[test]
    fn gentest_5197() {
        let board = Board::from_fen("8/1R6/3r1k2/2K2P2/7p/p5b1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 330);
        assert_eq!(perft(&board, 3, &PRECOMP), 7686);
    }

    #[test]
    fn gentest_5198() {
        let board = Board::from_fen("8/1R6/1K3k2/5P2/3r3p/p5b1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 342);
        assert_eq!(perft(&board, 3, &PRECOMP), 5450);
    }

    #[test]
    fn gentest_5199() {
        let board = Board::from_fen("8/8/1K3k2/5P2/3r3p/p7/5b2/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 339);
        assert_eq!(perft(&board, 3, &PRECOMP), 8578);
    }

    #[test]
    fn gentest_5200() {
        let board = Board::from_fen("8/8/2K2k2/3r1P2/7p/p7/8/2R3b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 322);
        assert_eq!(perft(&board, 3, &PRECOMP), 4519);
    }

    #[test]
    fn gentest_5201() {
        let board = Board::from_fen("8/8/2K2k2/5r2/7p/p7/8/3R2b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 449);
    }

    #[test]
    fn gentest_5202() {
        let board = Board::from_fen("8/8/1K3k2/7r/7p/p7/7b/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 432);
        assert_eq!(perft(&board, 3, &PRECOMP), 7047);
    }

    #[test]
    fn gentest_5203() {
        let board = Board::from_fen("8/8/2K5/5k1r/7p/p7/7b/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 325);
        assert_eq!(perft(&board, 3, &PRECOMP), 6740);
    }

    #[test]
    fn gentest_5204() {
        let board = Board::from_fen("8/8/8/1K3k1r/7p/p1b5/8/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 339);
        assert_eq!(perft(&board, 3, &PRECOMP), 4991);
    }

    #[test]
    fn gentest_5205() {
        let board = Board::from_fen("8/8/8/1K3k1r/3b3p/p7/8/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 425);
        assert_eq!(perft(&board, 3, &PRECOMP), 9215);
    }

    #[test]
    fn gentest_5206() {
        let board = Board::from_fen("7r/8/2K3k1/8/3b3p/p7/8/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 573);
    }

    #[test]
    fn gentest_5207() {
        let board = Board::from_fen("7r/8/2K2Rk1/8/7p/p7/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 1116);
    }

    #[test]
    fn gentest_5208() {
        let board = Board::from_fen("8/5R2/2K4r/7k/7p/p7/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 92);
        assert_eq!(perft(&board, 3, &PRECOMP), 1477);
    }

    #[test]
    fn gentest_5209() {
        let board = Board::from_fen("5R1r/8/2K5/7k/7p/p7/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 187);
        assert_eq!(perft(&board, 3, &PRECOMP), 2529);
    }

    #[test]
    fn gentest_5210() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5211() {
        let board = Board::from_fen("rnbqkbnr/pppppp1p/6p1/8/8/2N2P2/PPPPP1PP/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
    }

    #[test]
    fn gentest_5212() {
        let board = Board::from_fen("rnbqk1nr/ppppp1bp/5pp1/3N4/8/5P2/PPPPP1PP/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 495);
    }

    #[test]
    fn gentest_5213() {
        let board = Board::from_fen("rnbq1knr/ppppp1bp/5pp1/3N4/6P1/4PP2/PPPP3P/R1BQKBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 660);
    }

    #[test]
    fn gentest_5214() {
        let board = Board::from_fen("rnbq1knr/pp1p2bp/5pp1/2pNp3/6P1/4PP1P/PPPP4/R1BQKBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 724);
    }

    #[test]
    fn gentest_5215() {
        let board = Board::from_fen("r1bq1knr/pp1p2bp/2n2pp1/2pNp3/6P1/4PP1P/PPPP4/R1BQKBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 830);
    }

    #[test]
    fn gentest_5216() {
        let board = Board::from_fen("r1b2knr/ppqp2bp/1N3pp1/2p1p3/1n4P1/4PP1P/PPPP4/R1BQKBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 822);
    }

    #[test]
    fn gentest_5217() {
        let board = Board::from_fen("r1b2knr/ppqp2bp/1N3pp1/2p1p3/6P1/3nPP1P/PPPPK3/R1BQ1BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 592);
    }

    #[test]
    fn gentest_5218() {
        let board = Board::from_fen("N1b2knr/ppqp2bp/5p2/2p1p1p1/6P1/4PP1P/PPPPK3/R1BQnBNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 500);
    }

    #[test]
    fn gentest_5219() {
        let board = Board::from_fen("N1b2knr/ppq3bp/5p2/2ppp1p1/6P1/2P1PP1P/PP1PK3/R1B1QBNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 639);
    }

    #[test]
    fn gentest_5220() {
        let board = Board::from_fen("N1b2knr/pp1q2bp/5p2/2ppp1p1/6P1/2P1PP1P/PP1PK3/R1BQ1BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 619);
    }

    #[test]
    fn gentest_5221() {
        let board = Board::from_fen("N1b2knr/pp3qbp/5p2/2ppp1p1/1P4P1/2P1PP1P/P2PK1B1/R1BQ2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 701);
    }

    #[test]
    fn gentest_5222() {
        let board = Board::from_fen("N1b3nr/pp2kq1p/5p1b/2ppp1p1/1P4P1/B1P1PP1P/P2PK1B1/R2Q2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 721);
    }

    #[test]
    fn gentest_5223() {
        let board = Board::from_fen("N5nr/pp2kq1p/5p1b/2pppbp1/1P4P1/B1P1PP1P/P2P1KB1/R3Q1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 824);
    }

    #[test]
    fn gentest_5224() {
        let board = Board::from_fen("4q1nr/pp2k2p/1N3p1b/2ppp1p1/1P4P1/B1P1PP1P/P1bP1KB1/R3Q1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 988);
    }

    #[test]
    fn gentest_5225() {
        let board = Board::from_fen("4q1nr/pp3k1p/1N3p1b/2ppp1p1/1P4P1/B1P1PP1P/P1bPK1BR/R3Q1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1006);
    }

    #[test]
    fn gentest_5226() {
        let board = Board::from_fen("4q1nr/1p3k1p/1N3p1b/p1ppp1p1/1P2P1P1/B1P2P1P/P2PK1BR/R2bQ1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 202);
        assert_eq!(perft(&board, 3, &PRECOMP), 6060);
    }

    #[test]
    fn gentest_5227() {
        let board = Board::from_fen("6nr/1p3k1p/5p1b/pqppp1p1/1PN1P1P1/B1P2P1P/P2PK1BR/3RQ1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 593);
    }

    #[test]
    fn gentest_5228() {
        let board = Board::from_fen("6nr/1p3k1p/5p1b/pqp1p1p1/1PN3P1/B1P1pPQP/P2PK1BR/3R2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 632);
    }

    #[test]
    fn gentest_5229() {
        let board = Board::from_fen("6nr/1p3k1p/5p1b/1qp1p1p1/pPN3P1/B1P1pP1P/P2PKQBR/4R1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 572);
    }

    #[test]
    fn gentest_5230() {
        let board = Board::from_fen("5bnr/1p3k1p/5p2/1q2p1p1/ppN3P1/B1P1pP1P/P2PKQ1R/4R1NB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 769);
    }

    #[test]
    fn gentest_5231() {
        let board = Board::from_fen("5bnr/1p3k2/5p2/1q2p1Qp/ppN3P1/B1P1pP1P/P2PK2R/4R1NB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1027);
    }

    #[test]
    fn gentest_5232() {
        let board = Board::from_fen("5bnr/1p3k2/8/q3p1pp/ppN2PP1/B1P1p2P/P2PK2R/4R1NB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1213);
    }

    #[test]
    fn gentest_5233() {
        let board = Board::from_fen("5bnr/1pq2k2/8/4p1pp/ppN1BPP1/B1P1p2P/P2PK2R/5RN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1607);
    }

    #[test]
    fn gentest_5234() {
        let board = Board::from_fen("6nr/1pq1bk2/8/4p1pp/ppN1BPP1/B1P4P/P2pK3/5RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1364);
    }

    #[test]
    fn gentest_5235() {
        let board = Board::from_fen("3b2nr/1pq2k2/8/4pPpp/ppN3P1/B1P4P/P2pK1B1/5RNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1076);
    }

    #[test]
    fn gentest_5236() {
        let board = Board::from_fen("6nr/1pq1bk2/8/5Ppp/ppN1p1P1/B1P4P/P2pK1B1/3R2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 986);
    }

    #[test]
    fn gentest_5237() {
        let board = Board::from_fen("6nr/1pq1b1k1/1N6/5Ppp/pp2B1P1/B1P4P/P2pK3/3R2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_5238() {
        let board = Board::from_fen("N2q2nr/1p2b3/7k/5Ppp/pp2B1P1/B1P4P/P2pK3/3R2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 859);
    }

    #[test]
    fn gentest_5239() {
        let board = Board::from_fen("N2q2nr/1p2b1k1/8/5Ppp/pp2B1P1/B1P2N1P/P2pK3/R6R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1398);
    }

    #[test]
    fn gentest_5240() {
        let board = Board::from_fen("N2q2nr/1p4k1/8/2b2Ppp/pp4P1/B1PB1N1P/P3K3/R2q3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 123);
        assert_eq!(perft(&board, 3, &PRECOMP), 4060);
    }

    #[test]
    fn gentest_5241() {
        let board = Board::from_fen("N2q2nr/bp4k1/8/5Ppp/pp4PN/B1PB3P/P7/R2K3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 950);
    }

    #[test]
    fn gentest_5242() {
        let board = Board::from_fen("N5nr/bp6/7k/5Ppp/pp1q2PN/2PB3P/P7/R1BK3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 786);
    }

    #[test]
    fn gentest_5243() {
        let board = Board::from_fen("N5nr/bp4q1/7k/5Ppp/ppP2BPN/3B3P/P7/R2K3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 976);
    }

    #[test]
    fn gentest_5244() {
        let board = Board::from_fen("Nb4nr/1pq5/7k/5Ppp/ppP2BPN/3B3P/P7/R2K1R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 865);
    }

    #[test]
    fn gentest_5245() {
        let board = Board::from_fen("Nb4nr/1p4q1/3B3k/5Ppp/ppP3PN/3B3P/P7/R2K1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 869);
    }

    #[test]
    fn gentest_5246() {
        let board = Board::from_fen("Nb4n1/4B1qr/1p5k/5Ppp/ppP3PN/3B3P/P7/R2K1R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 825);
    }

    #[test]
    fn gentest_5247() {
        let board = Board::from_fen("Nb4n1/4B1qr/1p5k/5Ppp/1pP3PN/p4R1P/P3B3/R2K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 690);
    }

    #[test]
    fn gentest_5248() {
        let board = Board::from_fen("Nb6/4B1qr/1p3n1k/5P1P/1pP3pN/p4R1P/P3B3/R2K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 796);
    }

    #[test]
    fn gentest_5249() {
        let board = Board::from_fen("Nb2n3/4B1qr/1p5k/5P1P/1pP3pN/p4R1P/P7/R1K2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_5250() {
        let board = Board::from_fen("Nb6/4B1nr/1p5k/5P1P/1pP3pN/p4R1P/Pq6/R2K1B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 862);
    }

    #[test]
    fn gentest_5251() {
        let board = Board::from_fen("Nb6/4B1nr/1p5k/5P1P/1pPq2pN/p6P/P2R4/R2K1B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 951);
    }

    #[test]
    fn gentest_5252() {
        let board = Board::from_fen("Nb6/4B1nr/1p5k/3q1P1P/2P3pN/pp5P/P1KR4/R4B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 237);
        assert_eq!(perft(&board, 3, &PRECOMP), 7565);
    }

    #[test]
    fn gentest_5253() {
        let board = Board::from_fen("Nb6/4Bqnr/1p5k/5P1P/2P3p1/pp3N1P/P2R4/RK3B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1101);
    }

    #[test]
    fn gentest_5254() {
        let board = Board::from_fen("N7/4B1nr/1p5k/5P1q/2P3p1/pp1B1N1P/P2R3b/RK6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 787);
    }

    #[test]
    fn gentest_5255() {
        let board = Board::from_fen("N7/6nr/1p5k/4bP1q/2P3P1/Bp1B1N2/P2R4/RK6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 861);
    }

    #[test]
    fn gentest_5256() {
        let board = Board::from_fen("N7/6nr/1p5k/5Pq1/2P3P1/Bp1B1N2/P1R4b/RK6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 823);
    }

    #[test]
    fn gentest_5257() {
        let board = Board::from_fen("N7/6nr/1p1B1P1k/8/2P3P1/1p1B1N2/P1Rq3b/RK6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 871);
    }

    #[test]
    fn gentest_5258() {
        let board = Board::from_fen("N7/6nr/1p1B1P1k/8/2Pb2P1/1p1B4/P1Rq4/RK6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 926);
    }

    #[test]
    fn gentest_5259() {
        let board = Board::from_fen("N7/6nr/5P1k/1p2B3/2Pb2P1/1pRB4/P2q4/RK6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 675);
    }

    #[test]
    fn gentest_5260() {
        let board = Board::from_fen("N7/6nr/5P1k/8/1pPb2P1/2RB4/Pp1q3B/RK6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 817);
    }

    #[test]
    fn gentest_5261() {
        let board = Board::from_fen("N7/2B3nr/5P1k/8/1pP3P1/3Bb3/Pp1q4/RKR5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 756);
    }

    #[test]
    fn gentest_5262() {
        let board = Board::from_fen("N7/2B4r/5P1k/5B2/1pP3P1/8/Pp1q4/RKR3b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1083);
    }

    #[test]
    fn gentest_5263() {
        let board = Board::from_fen("N7/2B4r/5P1k/8/1pP3P1/P7/2Bq4/nKR3b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 981);
    }

    #[test]
    fn gentest_5264() {
        let board = Board::from_fen("N4b2/2B4r/5P1k/8/PpP3P1/8/2Bq4/nKR5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 853);
    }

    #[test]
    fn gentest_5265() {
        let board = Board::from_fen("N4b2/2B4r/3q1P1k/8/PpP3P1/1B6/8/nK3R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 797);
    }

    #[test]
    fn gentest_5266() {
        let board = Board::from_fen("N4b2/7r/qB3P1k/8/PpP3P1/1B6/2n5/1K3R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 749);
    }

    #[test]
    fn gentest_5267() {
        let board = Board::from_fen("N4b2/7r/1B3P1k/8/qpP3P1/8/B1n5/2K2R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 796);
    }

    #[test]
    fn gentest_5268() {
        let board = Board::from_fen("N4b2/1r6/5Pk1/8/qpP3P1/4B3/B1n5/2K2R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 993);
    }

    #[test]
    fn gentest_5269() {
        let board = Board::from_fen("N4b2/1r6/5Pk1/8/qpP3P1/4B3/B3K3/n4R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1007);
    }

    #[test]
    fn gentest_5270() {
        let board = Board::from_fen("q4b2/1r6/5Pk1/8/1pP3P1/4B3/B1n1K3/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 980);
    }

    #[test]
    fn gentest_5271() {
        let board = Board::from_fen("q7/1r6/3b1Pk1/8/1pP3P1/3KB3/B1n5/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1153);
    }

    #[test]
    fn gentest_5272() {
        let board = Board::from_fen("q7/1r6/5Pk1/4b3/1pP2RP1/3Kn3/B7/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 677);
    }

    #[test]
    fn gentest_5273() {
        let board = Board::from_fen("q7/1r6/5P1k/4b3/1pPR2P1/3Kn3/8/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 620);
    }

    #[test]
    fn gentest_5274() {
        let board = Board::from_fen("q7/6r1/5P1k/8/1pP1R1P1/3Kn1b1/8/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 779);
    }

    #[test]
    fn gentest_5275() {
        let board = Board::from_fen("q7/6r1/3b1P1k/8/1pP1R1P1/3Kn3/8/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 797);
    }

    #[test]
    fn gentest_5276() {
        let board = Board::from_fen("8/6r1/5P1k/8/qpP1R1P1/4n3/3K3b/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 738);
    }

    #[test]
    fn gentest_5277() {
        let board = Board::from_fen("8/6rk/5P2/2P5/qp2R1P1/4K3/7b/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 644);
    }

    #[test]
    fn gentest_5278() {
        let board = Board::from_fen("8/5Pr1/7k/2P5/1p2R1P1/4K3/7b/qB6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 590);
    }

    #[test]
    fn gentest_5279() {
        let board = Board::from_fen("8/5Pr1/3b3k/2P5/1pR3P1/8/3K4/qB6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 692);
    }

    #[test]
    fn gentest_5280() {
        let board = Board::from_fen("8/5Pr1/3b3k/2P5/1p4P1/8/2RKq3/1B6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 58);
        assert_eq!(perft(&board, 3, &PRECOMP), 927);
    }

    #[test]
    fn gentest_5281() {
        let board = Board::from_fen("8/5Pr1/7k/2P5/1p3bP1/8/2R2K2/1B6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 374);
        assert_eq!(perft(&board, 3, &PRECOMP), 6470);
    }

    #[test]
    fn gentest_5282() {
        let board = Board::from_fen("1b6/5Pr1/8/2P3k1/1p4P1/8/5K2/1BR5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 470);
    }

    #[test]
    fn gentest_5283() {
        let board = Board::from_fen("1b4r1/5P2/8/2P3k1/1p2B1P1/8/5K2/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 646);
    }

    #[test]
    fn gentest_5284() {
        let board = Board::from_fen("4r3/5P2/2P5/6k1/1p2B1P1/6b1/5K2/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 157);
        assert_eq!(perft(&board, 3, &PRECOMP), 4024);
    }

    #[test]
    fn gentest_5285() {
        let board = Board::from_fen("r7/2P2P2/8/6k1/1p2B1P1/6b1/4K3/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 966);
    }

    #[test]
    fn gentest_5286() {
        let board = Board::from_fen("r6b/2P2P2/8/5Bk1/1p4P1/8/4K3/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 821);
    }

    #[test]
    fn gentest_5287() {
        let board = Board::from_fen("r1Q5/5P2/8/4bBk1/1p4P1/8/4K3/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1273);
    }

    #[test]
    fn gentest_5288() {
        let board = Board::from_fen("8/5P2/8/4bB2/rpQ3Pk/8/4K3/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1088);
    }

    #[test]
    fn gentest_5289() {
        let board = Board::from_fen("7b/5P2/4Q3/5B2/rp4Pk/8/2R1K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 779);
    }

    #[test]
    fn gentest_5290() {
        let board = Board::from_fen("7b/2r2P2/2R1Q3/5B2/1p4Pk/8/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 739);
    }

    #[test]
    fn gentest_5291() {
        let board = Board::from_fen("8/2r2P2/2R5/8/1pQ1B1Pk/8/1b2K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 910);
    }

    #[test]
    fn gentest_5292() {
        let board = Board::from_fen("8/2r2P2/7R/8/1pQ1B1k1/8/1b2K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 894);
    }

    #[test]
    fn gentest_5293() {
        let board = Board::from_fen("8/2r2P2/7R/Q7/1p2Bk2/8/1b2K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1253);
    }

    #[test]
    fn gentest_5294() {
        let board = Board::from_fen("8/2r2P2/5R2/Q7/1p2B2k/8/1b2K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 54);
        assert_eq!(perft(&board, 2, &PRECOMP), 1164);
    }

    #[test]
    fn gentest_5295() {
        let board = Board::from_fen("8/2r2P2/8/Q7/1p2BRk1/8/1b2K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 136);
        assert_eq!(perft(&board, 3, &PRECOMP), 2950);
    }

    #[test]
    fn gentest_5296() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5297() {
        let board = Board::from_fen("rnbqkbnr/ppppppp1/8/7p/8/3P4/PPPQPPPP/RNB1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 586);
    }

    #[test]
    fn gentest_5298() {
        let board = Board::from_fen("rnbqkbnr/p2pppp1/8/1pp4p/8/3PQ3/PPP1PPPP/RNB1KBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 797);
    }

    #[test]
    fn gentest_5299() {
        let board = Board::from_fen("rnbqkbn1/p2ppppr/8/1pp4p/7P/3PQ1P1/PPP1PP2/RNB1KBNR b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 731);
    }

    #[test]
    fn gentest_5300() {
        let board = Board::from_fen("r1bqkbnr/p2pppp1/n7/1pQ4p/7P/3P2P1/PPP1PP2/RNB1KBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1005);
    }

    #[test]
    fn gentest_5301() {
        let board = Board::from_fen("r1bqkbnr/p1Qpp1p1/n4p2/1p5p/7P/3P2PN/PPP1PP2/RNB1KB1R b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 781);
    }

    #[test]
    fn gentest_5302() {
        let board = Board::from_fen("1rbqkbnr/p1Q1p1p1/n2p1p2/1p4Np/7P/3P2P1/PPP1PP2/RNB1KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1013);
    }

    #[test]
    fn gentest_5303() {
        let board = Board::from_fen("1r1qkbnr/p1Q1p1p1/n2p1p2/1p5p/4N1bP/3PP1P1/PPP2P2/RNB1KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1149);
    }

    #[test]
    fn gentest_5304() {
        let board = Board::from_fen("1r2kbnr/p1q1p3/n2p1pp1/1p5p/2P1N1bP/3PP1P1/PP3P2/RNB1KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 940);
    }

    #[test]
    fn gentest_5305() {
        let board = Board::from_fen("1r2kbnr/p1q1p3/3p1pp1/1pn4p/1PPPN1bP/4P1P1/P4P2/RNB1KB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1212);
    }

    #[test]
    fn gentest_5306() {
        let board = Board::from_fen("1r2kbnr/p2bp3/2qp1pp1/1pP4p/2PPN2P/4P1P1/P4P2/RNB1KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 987);
    }

    #[test]
    fn gentest_5307() {
        let board = Board::from_fen("1r2kb1r/p2bp3/2qp1ppn/1pP4p/2PPN2P/N3P1P1/P4P2/R1B1KBR1 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 992);
    }

    #[test]
    fn gentest_5308() {
        let board = Board::from_fen("r4b1r/p2bpk2/2qp1ppn/1pPP3p/2P1N2P/N3P1P1/P4P2/R1B1KBR1 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 843);
    }

    #[test]
    fn gentest_5309() {
        let board = Board::from_fen("r4b1r/3bpk2/p1qp1ppn/1pPP3p/2P4P/N1N1P1P1/P3BP2/R1B1K1R1 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1018);
    }

    #[test]
    fn gentest_5310() {
        let board = Board::from_fen("2b2b1r/r3pk2/p1qp1ppn/1pPP3p/2P4P/N1N1P1P1/P4P2/R1BBK1R1 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1083);
    }

    #[test]
    fn gentest_5311() {
        let board = Board::from_fen("2b2bnr/r3pk2/p1qp1pp1/1NPP3p/2P4P/N3P1P1/P2K1P2/R1BB2R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 989);
    }

    #[test]
    fn gentest_5312() {
        let board = Board::from_fen("q1b2bnr/r3pk2/p2p2p1/1NPP1p1B/2P4P/N3P1P1/P2K1P2/R1B3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 783);
    }

    #[test]
    fn gentest_5313() {
        let board = Board::from_fen("q1b2bnr/r3p1k1/p2p2p1/1NPP1p2/2P4P/N3P1P1/PB1KBP2/R5R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 221);
        assert_eq!(perft(&board, 3, &PRECOMP), 5372);
    }

    #[test]
    fn gentest_5314() {
        let board = Board::from_fen("q1b2bnr/r3p2k/p2N4/2PP1pp1/2P4P/N3P1P1/PB1KBP2/R5R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1087);
    }

    #[test]
    fn gentest_5315() {
        let board = Board::from_fen("q1b2bnr/r6k/p1PN4/3Pppp1/2P4P/N3PPP1/PB1KB3/R5R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1133);
    }

    #[test]
    fn gentest_5316() {
        let board = Board::from_fen("q1b2bnr/2r4k/p1PN4/3Pppp1/2P4P/N2KPPP1/PB2B3/R5R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1083);
    }

    #[test]
    fn gentest_5317() {
        let board = Board::from_fen("q1b2bnr/r6k/p1PN4/3Pppp1/2PB3P/N2KPPP1/P3B3/4R1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 996);
    }

    #[test]
    fn gentest_5318() {
        let board = Board::from_fen("q1b2bnr/1r5k/p1PN4/3Pp1p1/2P2p1P/N2KPPP1/P3B3/B3R1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1260);
    }

    #[test]
    fn gentest_5319() {
        let board = Board::from_fen("q1b2b1r/1P2n2k/p7/3PpNp1/2P2p1P/N2KPPP1/P3B3/B3R1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 904);
    }

    #[test]
    fn gentest_5320() {
        let board = Board::from_fen("qB3b1r/1b2n2k/p7/3PpNp1/2P4P/N2KPPp1/P3B3/B3R1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 788);
    }

    #[test]
    fn gentest_5321() {
        let board = Board::from_fen("qBn2b1r/1b5k/p7/3PpNp1/2P4P/N2KPPp1/P1B5/B3R1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 848);
    }

    #[test]
    fn gentest_5322() {
        let board = Board::from_fen("qBn4r/1b5k/p2b4/3PpN2/2P4p/N3PPp1/P1B1K3/B3R1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 735);
    }

    #[test]
    fn gentest_5323() {
        let board = Board::from_fen("qBn4r/1b5k/3b4/pN1PpN2/2P4p/4PPp1/P1B1K3/B3RR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1045);
    }

    #[test]
    fn gentest_5324() {
        let board = Board::from_fen("qBn4r/1b5k/3b4/pN1P1N2/2P1p2p/3BPP2/P3K1p1/B3RR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1451);
    }

    #[test]
    fn gentest_5325() {
        let board = Board::from_fen("qbn4r/1bN4k/8/p2P1N2/2PBp2p/3BPP2/P3K1p1/4RR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 967);
    }

    #[test]
    fn gentest_5326() {
        let board = Board::from_fen("bbn4r/q1N4k/8/p2P1N2/2PBp2p/3BPP2/P3K1p1/2R2R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1401);
    }

    #[test]
    fn gentest_5327() {
        let board = Board::from_fen("bbn4r/q1N4k/7N/p2P4/2PBp2p/3BPP2/P2K4/2R2Rr1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1290);
    }

    #[test]
    fn gentest_5328() {
        let board = Board::from_fen("bbn4r/2N5/1q5k/p2P4/2PBB2p/4PP2/P2K4/2R2Rr1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1677);
    }

    #[test]
    fn gentest_5329() {
        let board = Board::from_fen("bbn4r/2N5/1q5k/p2P4/2P1BP1p/4P3/PB1K4/2R2r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1303);
    }

    #[test]
    fn gentest_5330() {
        let board = Board::from_fen("bbn1N2r/8/1q6/p2P3k/2P1BP1p/4P3/PB1K4/2R4r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1552);
    }

    #[test]
    fn gentest_5331() {
        let board = Board::from_fen("bb2N2r/8/1q1n4/p6k/2P1BP1p/4P3/PB1K4/1R5r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1420);
    }

    #[test]
    fn gentest_5332() {
        let board = Board::from_fen("bb2N2r/8/3n4/p6k/2P1BP1p/3KP3/Pq6/1Rr5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 871);
    }

    #[test]
    fn gentest_5333() {
        let board = Board::from_fen("bb2N2r/8/1q1n4/p4B1k/2P1PP1p/3K4/P7/1Rr5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1008);
    }

    #[test]
    fn gentest_5334() {
        let board = Board::from_fen("bR2N2r/8/3n4/p4B1k/2P1PP1p/3K4/P7/5rq1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_5335() {
        let board = Board::from_fen("b6r/8/3N4/p4B1k/2P1PP1p/3K4/P7/1Rr3q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 893);
    }

    #[test]
    fn gentest_5336() {
        let board = Board::from_fen("b6r/8/3N4/p1q2B1k/2P1PP1p/3K4/P7/R6r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 969);
    }

    #[test]
    fn gentest_5337() {
        let board = Board::from_fen("b4r2/8/3N4/p1q1PB1k/2P2P1p/3K4/P7/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 880);
    }

    #[test]
    fn gentest_5338() {
        let board = Board::from_fen("b4r2/8/8/p3qB1k/2P2P1p/8/P1K5/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1060);
    }

    #[test]
    fn gentest_5339() {
        let board = Board::from_fen("b4r2/8/4q3/p4B1k/P1P2P1p/8/2K5/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1000);
    }

    #[test]
    fn gentest_5340() {
        let board = Board::from_fen("b4r2/8/3R4/p4B1k/q1P2P1p/8/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 174);
        assert_eq!(perft(&board, 3, &PRECOMP), 3836);
    }

    #[test]
    fn gentest_5341() {
        let board = Board::from_fen("b5r1/8/R7/p4B1k/q1P2P1p/8/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 629);
    }

    #[test]
    fn gentest_5342() {
        let board = Board::from_fen("b7/3q4/R7/p4Brk/2P2P1p/8/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 870);
    }

    #[test]
    fn gentest_5343() {
        let board = Board::from_fen("b7/3q4/R7/pP5k/5P1p/3B4/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 665);
    }

    #[test]
    fn gentest_5344() {
        let board = Board::from_fen("b7/3q4/R5Bk/1P6/p4P1p/8/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 544);
    }

    #[test]
    fn gentest_5345() {
        let board = Board::from_fen("8/3q3B/R6k/1P3P2/p6p/5b2/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 141);
        assert_eq!(perft(&board, 3, &PRECOMP), 4197);
    }

    #[test]
    fn gentest_5346() {
        let board = Board::from_fen("8/q7/R1b3Bk/1P3P2/p6p/8/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 431);
        assert_eq!(perft(&board, 3, &PRECOMP), 7284);
    }

    #[test]
    fn gentest_5347() {
        let board = Board::from_fen("8/q7/R1P5/5P1k/p6p/8/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 201);
        assert_eq!(perft(&board, 3, &PRECOMP), 4488);
    }

    #[test]
    fn gentest_5348() {
        let board = Board::from_fen("8/1q6/2P2P2/7k/p6p/8/8/1K6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 565);
    }

    #[test]
    fn gentest_5349() {
        let board = Board::from_fen("8/q7/2P2P2/7k/p6p/8/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 174);
        assert_eq!(perft(&board, 3, &PRECOMP), 4124);
    }

    #[test]
    fn gentest_5350() {
        let board = Board::from_fen("8/q7/2P2P2/8/p4k1p/K7/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 126);
        assert_eq!(perft(&board, 3, &PRECOMP), 848);
    }

    #[test]
    fn gentest_5351() {
        let board = Board::from_fen("8/3q4/2P2P2/8/p4k1p/8/1K6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 251);
        assert_eq!(perft(&board, 3, &PRECOMP), 7016);
    }

    #[test]
    fn gentest_5352() {
        let board = Board::from_fen("2q5/8/2P2P2/8/p5kp/2K5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 206);
        assert_eq!(perft(&board, 3, &PRECOMP), 1791);
    }

    #[test]
    fn gentest_5353() {
        let board = Board::from_fen("8/8/2P1qP2/8/p5kp/8/8/1K6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 149);
        assert_eq!(perft(&board, 3, &PRECOMP), 4302);
    }

    #[test]
    fn gentest_5354() {
        let board = Board::from_fen("6q1/8/2P2P2/8/p5kp/8/1K6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 202);
        assert_eq!(perft(&board, 3, &PRECOMP), 1423);
    }

    #[test]
    fn gentest_5355() {
        let board = Board::from_fen("6q1/8/2P2P2/8/6kp/p1K5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 178);
        assert_eq!(perft(&board, 3, &PRECOMP), 4567);
    }

    #[test]
    fn gentest_5356() {
        let board = Board::from_fen("8/8/2P2P2/8/1K4kp/p7/7q/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 248);
        assert_eq!(perft(&board, 3, &PRECOMP), 1797);
    }

    #[test]
    fn gentest_5357() {
        let board = Board::from_fen("8/2q2P2/2P5/8/6kp/pK6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 241);
        assert_eq!(perft(&board, 3, &PRECOMP), 6189);
    }

    #[test]
    fn gentest_5358() {
        let board = Board::from_fen("3q1Q2/8/2P5/8/6k1/pK5p/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 515);
    }

    #[test]
    fn gentest_5359() {
        let board = Board::from_fen("3q4/8/2P5/8/7k/K4Q1p/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 433);
        assert_eq!(perft(&board, 3, &PRECOMP), 7332);
    }

    #[test]
    fn gentest_5360() {
        let board = Board::from_fen("3q4/8/2P4k/8/8/K5Qp/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 520);
    }

    #[test]
    fn gentest_5361() {
        let board = Board::from_fen("8/8/1qP4k/8/K7/7p/8/4Q3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 403);
        assert_eq!(perft(&board, 3, &PRECOMP), 8218);
    }

    #[test]
    fn gentest_5362() {
        let board = Board::from_fen("8/8/2P5/7k/K7/7p/1q6/7Q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 321);
        assert_eq!(perft(&board, 3, &PRECOMP), 5269);
    }

    #[test]
    fn gentest_5363() {
        let board = Board::from_fen("8/8/2P4k/8/K7/7p/1Q6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 867);
    }

    #[test]
    fn gentest_5364() {
        let board = Board::from_fen("8/8/2P4k/8/K7/7p/2Q5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 106);
        assert_eq!(perft(&board, 3, &PRECOMP), 2811);
    }

    #[test]
    fn gentest_5365() {
        let board = Board::from_fen("8/8/2P4k/1K6/8/8/4Q2p/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 232);
        assert_eq!(perft(&board, 3, &PRECOMP), 2171);
    }

    #[test]
    fn gentest_5366() {
        let board = Board::from_fen("8/8/2P5/1K6/6k1/8/7p/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 96);
        assert_eq!(perft(&board, 3, &PRECOMP), 762);
        assert_eq!(perft(&board, 4, &PRECOMP), 9819);
    }

    #[test]
    fn gentest_5367() {
        let board = Board::from_fen("8/8/2P5/1K6/5k2/8/7p/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 96);
        assert_eq!(perft(&board, 3, &PRECOMP), 1327);
        assert_eq!(perft(&board, 4, &PRECOMP), 9918);
    }

    #[test]
    fn gentest_5368() {
        let board = Board::from_fen("8/8/2P5/K7/5k2/6n1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 78);
        assert_eq!(perft(&board, 3, &PRECOMP), 593);
        assert_eq!(perft(&board, 4, &PRECOMP), 7647);
    }

    #[test]
    fn gentest_5369() {
        let board = Board::from_fen("8/8/2P5/2K5/5k2/8/4n3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 90);
        assert_eq!(perft(&board, 3, &PRECOMP), 1158);
        assert_eq!(perft(&board, 4, &PRECOMP), 8928);
    }

    #[test]
    fn gentest_5370() {
        let board = Board::from_fen("8/8/2P5/5n2/1K3k2/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 135);
        assert_eq!(perft(&board, 3, &PRECOMP), 1020);
    }

    #[test]
    fn gentest_5371() {
        let board = Board::from_fen("8/2P5/8/5n2/8/K5k1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 134);
        assert_eq!(perft(&board, 3, &PRECOMP), 1841);
    }

    #[test]
    fn gentest_5372() {
        let board = Board::from_fen("2Q5/8/8/5n2/7k/K7/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 246);
        assert_eq!(perft(&board, 3, &PRECOMP), 6428);
    }

    #[test]
    fn gentest_5373() {
        let board = Board::from_fen("8/7Q/7n/8/7k/K7/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 105);
        assert_eq!(perft(&board, 3, &PRECOMP), 756);
    }

    #[test]
    fn gentest_5374() {
        let board = Board::from_fen("8/5n2/8/8/6k1/K7/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 70);
        assert_eq!(perft(&board, 3, &PRECOMP), 470);
        assert_eq!(perft(&board, 4, &PRECOMP), 5992);
    }

    #[test]
    fn gentest_5375() {
        let board = Board::from_fen("8/5n2/8/1K3k2/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 108);
        assert_eq!(perft(&board, 3, &PRECOMP), 1388);
        assert_eq!(perft(&board, 4, &PRECOMP), 8589);
    }

    #[test]
    fn gentest_5376() {
        let board = Board::from_fen("8/8/4n3/5k2/2K5/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 87);
        assert_eq!(perft(&board, 3, &PRECOMP), 597);
        assert_eq!(perft(&board, 4, &PRECOMP), 8295);
    }

    #[test]
    fn gentest_5377() {
        let board = Board::from_fen("3n4/8/K7/5k2/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 49);
        assert_eq!(perft(&board, 3, &PRECOMP), 617);
        assert_eq!(perft(&board, 4, &PRECOMP), 3568);
    }

    #[test]
    fn gentest_5378() {
        let board = Board::from_fen("8/1K3n2/6k1/8/8/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 104);
        assert_eq!(perft(&board, 3, &PRECOMP), 555);
        assert_eq!(perft(&board, 4, &PRECOMP), 6786);
    }

    #[test]
    fn gentest_5379() {
        let board = Board::from_fen("8/8/3K2k1/4n3/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 87);
        assert_eq!(perft(&board, 3, &PRECOMP), 1168);
        assert_eq!(perft(&board, 4, &PRECOMP), 7341);
    }

    #[test]
    fn gentest_5380() {
        let board = Board::from_fen("8/6k1/8/4K3/8/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 52);
        assert_eq!(perft(&board, 3, &PRECOMP), 385);
        assert_eq!(perft(&board, 4, &PRECOMP), 1994);
    }

    #[test]
    fn gentest_5381() {
        let board = Board::from_fen("8/8/4K1k1/8/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 36);
        assert_eq!(perft(&board, 3, &PRECOMP), 185);
        assert_eq!(perft(&board, 4, &PRECOMP), 1344);
        assert_eq!(perft(&board, 5, &PRECOMP), 7488);
    }

    #[test]
    fn gentest_5382() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5383() {
        let board = Board::from_fen("rnbqkbnr/ppppppp1/7p/8/8/4P2N/PPPP1PPP/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 550);
    }

    #[test]
    fn gentest_5384() {
        let board = Board::from_fen("rnbqkbnr/1ppppp2/p6p/6p1/8/4P2N/PPPPQPPP/RNB1KB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 501);
    }

    #[test]
    fn gentest_5385() {
        let board = Board::from_fen("rnbqkbnr/1ppp1p2/p3p2p/6p1/6Q1/2N1P2N/PPPP1PPP/R1B1KB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1096);
    }

    #[test]
    fn gentest_5386() {
        let board = Board::from_fen("rnbqk1nr/1ppp1p2/p2bp2p/6pQ/8/2N1P2N/PPPP1PPP/R1B1KB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 972);
    }

    #[test]
    fn gentest_5387() {
        let board = Board::from_fen("rnbqk1nr/1ppp1p2/p3p2p/6Q1/1b6/2N1P2N/PPPP1PPP/R1BK1B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1201);
    }

    #[test]
    fn gentest_5388() {
        let board = Board::from_fen("rnbqk1n1/1ppp3r/p3pp1p/6Q1/1b6/2N1P2N/PPPP1PPP/1RBK1B1R w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1140);
    }

    #[test]
    fn gentest_5389() {
        let board = Board::from_fen("rnbqk1n1/1ppp3r/p3p2p/5p2/1b6/2N1PQ1N/PPPP1PPP/1RBK1B1R b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1120);
    }

    #[test]
    fn gentest_5390() {
        let board = Board::from_fen("rnbqk1n1/1ppp3r/p3pb1p/5p2/8/2NPPQ1N/PPP2PPP/1RBK1B1R w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 933);
    }

    #[test]
    fn gentest_5391() {
        let board = Board::from_fen("rnbq2n1/1pppk2r/p3pb1p/1N3p2/8/3PPQ1N/PPPB1PPP/1R1K1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1134);
    }

    #[test]
    fn gentest_5392() {
        let board = Board::from_fen("rnbq2n1/1pppk2r/p4b2/1N2ppNp/8/3PPQ2/PPPB1PPP/1R1K1B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1096);
    }

    #[test]
    fn gentest_5393() {
        let board = Board::from_fen("rnbq2n1/1pQpk2r/p4b2/1N3pNp/4p3/3PP3/PPPB1PPP/1R1K1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1263);
    }

    #[test]
    fn gentest_5394() {
        let board = Board::from_fen("rnbq1kn1/1pQp3r/p7/1N3pNp/4p3/2bPPP2/PPPB2PP/1R1K1B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1532);
    }

    #[test]
    fn gentest_5395() {
        let board = Board::from_fen("rQb2kn1/1p1pq2r/p7/1N3pNp/P3p3/2bPPP2/1PPB2PP/1R1K1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1663);
    }

    #[test]
    fn gentest_5396() {
        let board = Board::from_fen("rQb2kn1/1p1pq2r/p7/1N3pN1/PbP1p2p/3PPP2/1P1B2PP/1R1K1B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1381);
    }

    #[test]
    fn gentest_5397() {
        let board = Board::from_fen("r1b2kn1/1p2q2r/p2p4/1N3pN1/PbP1p2p/3PPP1Q/1P1B2PP/1R1K1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1219);
    }

    #[test]
    fn gentest_5398() {
        let board = Board::from_fen("r1b2kn1/1p3q1r/p2p4/1N6/PbP1Np1p/3PPP1Q/1P1B2PP/1R1K1B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1459);
    }

    #[test]
    fn gentest_5399() {
        let board = Board::from_fen("r1b2kn1/Np5r/p2pq3/8/PbP1Np1p/3PPP1Q/1P1B2PP/1R2KB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1332);
    }

    #[test]
    fn gentest_5400() {
        let board = Board::from_fen("r1b2kn1/Np5r/p2p1q2/8/PbP1Np1p/3PPP1Q/1P1B2PP/3RKB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1396);
    }

    #[test]
    fn gentest_5401() {
        let board = Board::from_fen("1rb2kn1/Np5r/p2p1q2/2N5/PBP2p1p/3PPP1Q/1P4PP/3RKB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1373);
    }

    #[test]
    fn gentest_5402() {
        let board = Board::from_fen("1r3kn1/Np1b3r/N2p1q2/p7/PBP2p1p/3PPP1Q/1P4PP/3RKB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1421);
    }

    #[test]
    fn gentest_5403() {
        let board = Board::from_fen("1r2bkn1/Np5r/N2p1q2/B7/P1P2pQp/3PPP2/1P4PP/3RKB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1740);
    }

    #[test]
    fn gentest_5404() {
        let board = Board::from_fen("1r2bk2/Np2q2r/N2p3n/B7/P1P2pQp/3PPP2/1P4PP/2R1KB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1402);
    }

    #[test]
    fn gentest_5405() {
        let board = Board::from_fen("1r3k2/Np2qb1r/N2p3n/B6Q/P1P2p1p/3PPP2/1P1K2PP/2R2B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1471);
    }

    #[test]
    fn gentest_5406() {
        let board = Board::from_fen("1r3kb1/Np2q1r1/N2p3n/B6Q/P1P2pPp/3PPP2/1P1K3P/2R2B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1462);
    }

    #[test]
    fn gentest_5407() {
        let board = Board::from_fen("1r3k2/Np2q1r1/N2pb2n/B6Q/P1P2pPp/3PPP2/1P1K3P/4RB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1561);
    }

    #[test]
    fn gentest_5408() {
        let board = Board::from_fen("2r2k2/Np2qr2/N2pb2n/B6Q/P1P2pPp/1P1PPP2/3K3P/4RB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1405);
    }

    #[test]
    fn gentest_5409() {
        let board = Board::from_fen("2N2k2/4qr2/Np1pb2n/B3Q3/P1P2pPp/1P1PPP2/3K3P/4RB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1357);
    }

    #[test]
    fn gentest_5410() {
        let board = Board::from_fen("2N2k2/4qr2/N2pQ2n/Bp6/P1P3Pp/1P1PpP2/3K3P/4RB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 215);
        assert_eq!(perft(&board, 3, &PRECOMP), 9289);
    }

    #[test]
    fn gentest_5411() {
        let board = Board::from_fen("2N2k2/4qr2/N2p4/Bp3n2/P1P3Pp/1P1PQP2/7P/2K1RB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1283);
    }

    #[test]
    fn gentest_5412() {
        let board = Board::from_fen("2N3k1/5r2/N2p1q2/Bp3n2/P1P3Pp/1P1P1P2/4Q2P/2K1RB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1481);
    }

    #[test]
    fn gentest_5413() {
        let board = Board::from_fen("2N4k/5r2/N2p1q2/1p3n2/P1P3Pp/1P1P1P2/3BQ1BP/2K1R2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1335);
    }

    #[test]
    fn gentest_5414() {
        let board = Board::from_fen("2N4k/4q2r/N2p4/1p3n2/P1P3Pp/1P1P1P2/3BQ2P/2K1RB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1207);
    }

    #[test]
    fn gentest_5415() {
        let board = Board::from_fen("2N4k/7r/N2p4/1p3nP1/P1P4p/1P1P1P2/3B3P/2KQqB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1002);
    }

    #[test]
    fn gentest_5416() {
        let board = Board::from_fen("2N4k/8/N2p4/1p3nPr/P1P4p/1P1P1P2/3Q3P/2K2B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 607);
    }

    #[test]
    fn gentest_5417() {
        let board = Board::from_fen("2N5/7k/N2p4/1p3nPr/P1PP3p/1P2QP2/7P/2K2B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 658);
    }

    #[test]
    fn gentest_5418() {
        let board = Board::from_fen("2N5/7k/N2p4/1p3n2/P1PP1Q1p/1P3P2/7P/2K2BrR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 661);
    }

    #[test]
    fn gentest_5419() {
        let board = Board::from_fen("2N5/3N3k/3p3n/1p6/P1PP1Q1p/1P3P2/7P/2K2BrR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 794);
    }

    #[test]
    fn gentest_5420() {
        let board = Board::from_fen("2N5/3N1n1k/3p1Q2/1p4r1/P1PP3p/1P3P2/7P/2K2B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 716);
    }

    #[test]
    fn gentest_5421() {
        let board = Board::from_fen("8/3N1n1k/1N1p2Q1/6r1/P1pP3p/1P3P2/7P/2K2B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 93);
        assert_eq!(perft(&board, 3, &PRECOMP), 1759);
    }

    #[test]
    fn gentest_5422() {
        let board = Board::from_fen("5N1k/5n2/1N1p2Q1/1r6/P1pP3p/1P3P2/7P/2K2B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 703);
    }

    #[test]
    fn gentest_5423() {
        let board = Board::from_fen("5N1k/5n2/1N1pQ3/4r3/P1pP3p/1P3P2/1K5P/5B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 835);
    }

    #[test]
    fn gentest_5424() {
        let board = Board::from_fen("5N1k/5n2/1N1pQ3/5r2/P2P3p/KPp2P2/7P/5B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 663);
    }

    #[test]
    fn gentest_5425() {
        let board = Board::from_fen("5N1k/4Qn2/1N1p4/2r5/P1BP3p/KPp2P2/7P/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 937);
    }

    #[test]
    fn gentest_5426() {
        let board = Board::from_fen("5N1k/2r5/1N1Q4/6n1/P1BP3p/KPp2P2/7P/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 822);
    }

    #[test]
    fn gentest_5427() {
        let board = Board::from_fen("2r2N1k/8/1N6/1B4n1/P2P3p/KPp2PQ1/7P/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 878);
    }

    #[test]
    fn gentest_5428() {
        let board = Board::from_fen("N1r2N1k/8/4n3/1B6/P2P4/KPp2PQp/7P/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 678);
    }

    #[test]
    fn gentest_5429() {
        let board = Board::from_fen("N1r1QN1k/2n5/8/1B6/P2P4/KPp2P1p/7P/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 449);
        assert_eq!(perft(&board, 3, &PRECOMP), 6120);
    }

    #[test]
    fn gentest_5430() {
        let board = Board::from_fen("r4Nk1/2n5/8/1B6/P2P4/KPp1QP1p/7P/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 682);
    }

    #[test]
    fn gentest_5431() {
        let board = Board::from_fen("4rNk1/2n5/8/8/P1BP4/KPp2P1p/3Q3P/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 233);
        assert_eq!(perft(&board, 3, &PRECOMP), 3794);
    }

    #[test]
    fn gentest_5432() {
        let board = Board::from_fen("3r1Nk1/8/4n3/8/P1BP4/KPp2P1p/2Q4P/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 498);
    }

    #[test]
    fn gentest_5433() {
        let board = Board::from_fen("5Nk1/8/3rn3/8/P2P4/KPp2P1p/7P/3Q1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 510);
    }

    #[test]
    fn gentest_5434() {
        let board = Board::from_fen("5N2/8/3rnk2/8/P2P4/KPpQ1P1p/7P/5B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 481);
    }

    #[test]
    fn gentest_5435() {
        let board = Board::from_fen("5N2/8/1r2nk2/8/P2P4/KPp2P1p/7P/4QB1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 670);
    }

    #[test]
    fn gentest_5436() {
        let board = Board::from_fen("5N2/5k2/Br2n3/8/P2P4/KPp2P1p/7P/4Q2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 728);
    }

    #[test]
    fn gentest_5437() {
        let board = Board::from_fen("5N2/1r3k2/B3n3/8/P2P4/1Pp2P1p/K6P/3Q3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 716);
    }

    #[test]
    fn gentest_5438() {
        let board = Board::from_fen("5N2/4k3/B3n3/1r6/P2P4/1Pp2P1p/7P/K2Q3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 616);
    }

    #[test]
    fn gentest_5439() {
        let board = Board::from_fen("3n1N2/4k3/B7/1r6/P2P4/1Pp2P1p/K6P/3Q1R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 610);
    }

    #[test]
    fn gentest_5440() {
        let board = Board::from_fen("3n1N2/1r2k3/B7/8/P2P4/1P3P1p/K1pQ3P/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 657);
    }

    #[test]
    fn gentest_5441() {
        let board = Board::from_fen("3nkN2/1r6/B7/8/PQ1P4/1P3P1p/K1p4P/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 750);
    }

    #[test]
    fn gentest_5442() {
        let board = Board::from_fen("3nkNR1/8/B7/8/Pr1P4/1P3P1p/K1p4P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 382);
        assert_eq!(perft(&board, 3, &PRECOMP), 8886);
    }

    #[test]
    fn gentest_5443() {
        let board = Board::from_fen("3nk3/3N4/B7/8/P2r4/1P3P1p/K1p3RP/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 662);
    }

    #[test]
    fn gentest_5444() {
        let board = Board::from_fen("4k3/3N4/4n3/1B6/P1r5/1P3P1p/K1p3RP/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 539);
    }

    #[test]
    fn gentest_5445() {
        let board = Board::from_fen("4k3/8/4n3/1B2N3/P7/1Pr2P1p/K1p4P/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 138);
        assert_eq!(perft(&board, 3, &PRECOMP), 2760);
    }

    #[test]
    fn gentest_5446() {
        let board = Board::from_fen("4k3/8/2r5/1B2N3/P4n2/1P3PRp/K1p4P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 420);
    }

    #[test]
    fn gentest_5447() {
        let board = Board::from_fen("4k3/8/2r5/4N3/P7/1P1B1PRp/1Kp4P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 541);
        assert_eq!(perft(&board, 3, &PRECOMP), 9173);
    }

    #[test]
    fn gentest_5448() {
        let board = Board::from_fen("4k3/8/4r3/4N3/P7/1P1B1PRp/2K4P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 383);
    }

    #[test]
    fn gentest_5449() {
        let board = Board::from_fen("4k3/8/r7/PB2N3/8/1P3PRp/2K4P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 108);
        assert_eq!(perft(&board, 3, &PRECOMP), 1213);
    }

    #[test]
    fn gentest_5450() {
        let board = Board::from_fen("8/8/r1Nk4/PB6/8/1P3PRp/2K4P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 290);
        assert_eq!(perft(&board, 3, &PRECOMP), 8451);
    }

    #[test]
    fn gentest_5451() {
        let board = Board::from_fen("8/8/r1N5/PB1k4/8/1P3PRp/7P/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 207);
        assert_eq!(perft(&board, 3, &PRECOMP), 2119);
    }

    #[test]
    fn gentest_5452() {
        let board = Board::from_fen("1N6/8/8/1B1k4/r7/1P3PRp/7P/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 438);
    }

    #[test]
    fn gentest_5453() {
        let board = Board::from_fen("1N6/8/8/3k4/B5r1/1P3P1p/7P/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 243);
        assert_eq!(perft(&board, 3, &PRECOMP), 3830);
    }

    #[test]
    fn gentest_5454() {
        let board = Board::from_fen("8/3N4/8/3k4/8/rP3P1p/7P/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 154);
        assert_eq!(perft(&board, 3, &PRECOMP), 1811);
    }

    #[test]
    fn gentest_5455() {
        let board = Board::from_fen("8/3N4/8/8/3k4/rP3P1p/4K2P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 119);
        assert_eq!(perft(&board, 3, &PRECOMP), 1784);
    }

    #[test]
    fn gentest_5456() {
        let board = Board::from_fen("8/8/8/2N5/3k4/rP3P1p/4K2P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 148);
        assert_eq!(perft(&board, 3, &PRECOMP), 1822);
    }

    #[test]
    fn gentest_5457() {
        let board = Board::from_fen("8/8/3N4/3k4/8/rP3P1p/4K2P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 211);
        assert_eq!(perft(&board, 3, &PRECOMP), 3281);
    }

    #[test]
    fn gentest_5458() {
        let board = Board::from_fen("8/8/r2N4/4k3/8/1P2KP1p/7P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 195);
        assert_eq!(perft(&board, 3, &PRECOMP), 2493);
    }

    #[test]
    fn gentest_5459() {
        let board = Board::from_fen("8/5N2/r3k3/8/8/1P1K1P1p/7P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 228);
        assert_eq!(perft(&board, 3, &PRECOMP), 3888);
    }

    #[test]
    fn gentest_5460() {
        let board = Board::from_fen("8/8/8/5kN1/8/1P1K1P1p/7P/r7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 258);
        assert_eq!(perft(&board, 3, &PRECOMP), 3227);
    }

    #[test]
    fn gentest_5461() {
        let board = Board::from_fen("8/8/8/5kN1/8/1P1K1P1p/7P/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 196);
        assert_eq!(perft(&board, 3, &PRECOMP), 2963);
    }

    #[test]
    fn gentest_5462() {
        let board = Board::from_fen("8/8/2r5/5k2/4N3/1P1K1P1p/7P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 229);
        assert_eq!(perft(&board, 3, &PRECOMP), 2941);
    }

    #[test]
    fn gentest_5463() {
        let board = Board::from_fen("8/8/3r4/5kN1/8/1P3P1p/4K2P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 208);
        assert_eq!(perft(&board, 3, &PRECOMP), 3373);
    }

    #[test]
    fn gentest_5464() {
        let board = Board::from_fen("8/7N/3r4/5k2/8/1P3P1p/4K2P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 163);
        assert_eq!(perft(&board, 3, &PRECOMP), 1575);
    }

    #[test]
    fn gentest_5465() {
        let board = Board::from_fen("8/7N/5r2/5k2/8/1P3P1p/3K3P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 154);
        assert_eq!(perft(&board, 3, &PRECOMP), 2328);
    }

    #[test]
    fn gentest_5466() {
        let board = Board::from_fen("8/3k3N/5r2/8/8/1P3P1p/7P/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 173);
        assert_eq!(perft(&board, 3, &PRECOMP), 1841);
    }

    #[test]
    fn gentest_5467() {
        let board = Board::from_fen("3k4/8/5N2/8/5P2/1P5p/7P/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 45);
        assert_eq!(perft(&board, 3, &PRECOMP), 266);
        assert_eq!(perft(&board, 4, &PRECOMP), 3559);
    }

    #[test]
    fn gentest_5468() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5469() {
        let board = Board::from_fen("rnbqkbnr/ppppppp1/8/7p/1P6/5N2/P1PPPPPP/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 483);
    }

    #[test]
    fn gentest_5470() {
        let board = Board::from_fen("rnbq1bnr/pppppkp1/5p2/7p/1P6/5N2/PBPPPPPP/RN1QKB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 603);
    }

    #[test]
    fn gentest_5471() {
        let board = Board::from_fen("rnbq1bn1/pppppkp1/5p1r/7p/PP6/2P2N2/1B1PPPPP/RN1QKB1R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 575);
    }

    #[test]
    fn gentest_5472() {
        let board = Board::from_fen("rnbq1bn1/pppppkp1/6r1/5p1p/PP6/B1P2N2/3PPPPP/RN1QKB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 626);
    }

    #[test]
    fn gentest_5473() {
        let board = Board::from_fen("r1bq1bn1/pppppkp1/2n3r1/5p1p/PP2P3/B1P2N2/3P1PPP/RN1QKBR1 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 891);
    }

    #[test]
    fn gentest_5474() {
        let board = Board::from_fen("r1bq1bn1/ppppp1p1/4k1r1/P4p1p/P3P3/B1P2N2/3P1PPP/RN1QKBR1 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 609);
    }

    #[test]
    fn gentest_5475() {
        let board = Board::from_fen("1rbq1bn1/ppppp1p1/4k1r1/P4P1p/P7/B1P2N1P/3P1PP1/RN1QKBR1 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 125);
        assert_eq!(perft(&board, 3, &PRECOMP), 2808);
    }

    #[test]
    fn gentest_5476() {
        let board = Board::from_fen("1rbq1bn1/ppppp1p1/6r1/PB3k2/P6p/B1P2N1P/3P1PP1/RN1QK1R1 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 750);
    }

    #[test]
    fn gentest_5477() {
        let board = Board::from_fen("1rbq1bn1/ppppp1p1/8/PB3k2/P5rp/B1P4P/3PQPPN/RN2K1R1 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1054);
    }

    #[test]
    fn gentest_5478() {
        let board = Board::from_fen("1rb1qbn1/ppppp1p1/8/PB3k2/P2r3p/B1P2P1P/3PQ1PN/RN2K1R1 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 917);
    }

    #[test]
    fn gentest_5479() {
        let board = Board::from_fen("1rb1qbn1/ppppp1p1/8/P2r1k2/P6p/B1PB1P1P/3PQ1PN/RN3KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 2927);
    }

    #[test]
    fn gentest_5480() {
        let board = Board::from_fen("1rb1qbn1/ppppp1p1/6k1/P7/P6p/B1Pr1P1P/3P2PN/RN1Q1KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 606);
    }

    #[test]
    fn gentest_5481() {
        let board = Board::from_fen("1rb1qbn1/ppppp1p1/3r2k1/P7/P1P3Pp/B4P1P/3P3N/RN1Q1KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 652);
    }

    #[test]
    fn gentest_5482() {
        let board = Board::from_fen("1rb1qb2/ppppp1p1/5rkn/P7/P1P3Pp/B4P1P/R2P3N/1N1Q1KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 755);
    }

    #[test]
    fn gentest_5483() {
        let board = Board::from_fen("1rb1qbn1/ppppp1p1/5rk1/P7/P1P2PPp/B6P/R2P3N/1NQ2KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 647);
    }

    #[test]
    fn gentest_5484() {
        let board = Board::from_fen("1rb1qbn1/ppppprp1/7k/P4P2/P1P3Pp/B6P/R2P3N/1NQ2KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 457);
    }

    #[test]
    fn gentest_5485() {
        let board = Board::from_fen("1rb1qbn1/ppppprp1/8/P4Pk1/P1P3Pp/B6P/RQ1P1K1N/1N4R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 663);
    }

    #[test]
    fn gentest_5486() {
        let board = Board::from_fen("1rbq1bn1/pppp1rp1/4p3/P4Pk1/P1P3Pp/B6P/R2P1K1N/1NQ3R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 862);
    }

    #[test]
    fn gentest_5487() {
        let board = Board::from_fen("1rbq2n1/pppp1rp1/P2bp3/5Pk1/P1P3Pp/B6P/R2P1KRN/1NQ5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 948);
    }

    #[test]
    fn gentest_5488() {
        let board = Board::from_fen("1rbq2n1/p1pp2p1/P2bp3/1p3rk1/P1P3Pp/B6P/R2P2RN/1NQ1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 959);
    }

    #[test]
    fn gentest_5489() {
        let board = Board::from_fen("1rbq2n1/p2p2p1/P1pbp3/1p3rk1/PBP3Pp/7P/R2PR2N/1NQ1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1311);
    }

    #[test]
    fn gentest_5490() {
        let board = Board::from_fen("1rbq4/p2pn1p1/P1p1p3/1pP2rk1/PB4Pp/7P/R2PR2b/1NQ1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1017);
    }

    #[test]
    fn gentest_5491() {
        let board = Board::from_fen("1rbq4/p2p2p1/P1p1p3/1pPn1Pk1/P6p/B6P/R2PR2b/1NQ1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1017);
    }

    #[test]
    fn gentest_5492() {
        let board = Board::from_fen("1rb1q3/p2p2p1/P1p1R3/1pPn1P1k/P6p/B6P/R2P3b/1NQ1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 850);
    }

    #[test]
    fn gentest_5493() {
        let board = Board::from_fen("1rb1q3/p2p2p1/P1p1R3/1pPn1P1k/P2P1b1p/B6P/2R5/1NQ1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1128);
    }

    #[test]
    fn gentest_5494() {
        let board = Board::from_fen("1rb1q3/p2pn1p1/P1p1R3/1pP2P1k/P2P3p/B3b2P/2R1K3/1NQ5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1054);
    }

    #[test]
    fn gentest_5495() {
        let board = Board::from_fen("2b1q3/p2pn1p1/Prp1R3/1pP2P1k/PB1P3p/4b2P/R3K3/1NQ5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1340);
    }

    #[test]
    fn gentest_5496() {
        let board = Board::from_fen("2b1q3/p1rpn1p1/P1p1R3/1pP2P1k/PB1P3p/4b2P/R3K3/1N2Q3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1046);
    }

    #[test]
    fn gentest_5497() {
        let board = Board::from_fen("2b2q2/p1rpn1p1/P1p5/1pP2P1k/PB1P3p/4R2P/1R2K3/1N2Q3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 861);
    }

    #[test]
    fn gentest_5498() {
        let board = Board::from_fen("2b1q3/p1r1n1p1/P1pp4/1pP2P1k/PB1P3p/4R2P/R3K3/1N2Q3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1053);
    }

    #[test]
    fn gentest_5499() {
        let board = Board::from_fen("2b1q3/p1r3p1/P1pp4/1PPn1P1k/1B1P3p/4R2P/R3K3/1N1Q4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1290);
    }

    #[test]
    fn gentest_5500() {
        let board = Board::from_fen("2b4q/p1r1n1p1/P1pp4/1PP2P1k/1B1P3p/4R2P/R1Q1K3/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_5501() {
        let board = Board::from_fen("2b3q1/p1r1n1p1/P1pp4/1PP2P1k/1B1P3p/1Q2R2P/1R2K3/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1095);
    }

    #[test]
    fn gentest_5502() {
        let board = Board::from_fen("7q/p1rbn1p1/P1ppR3/1PP2P1k/1B1P3p/1Q5P/1R2K3/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1060);
    }

    #[test]
    fn gentest_5503() {
        let board = Board::from_fen("q7/p1rbn1p1/P1ppR3/1PP2P1k/1B1PN2p/1Q5P/1R2K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1082);
    }

    #[test]
    fn gentest_5504() {
        let board = Board::from_fen("q1r5/p2bn1p1/P2pR3/1pP2P1k/1B1P3p/1Q5P/1R2KN2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1254);
    }

    #[test]
    fn gentest_5505() {
        let board = Board::from_fen("q1r5/p3n1p1/P1bpR3/1pP2P1k/1B1P3p/2Q4P/1R3N2/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1013);
    }

    #[test]
    fn gentest_5506() {
        let board = Board::from_fen("q1r3n1/p5p1/P2pR3/1pP2P1k/1B1Pb2p/7P/1RQ2N2/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 999);
    }

    #[test]
    fn gentest_5507() {
        let board = Board::from_fen("q1r3n1/p7/P2p1R2/1pP2Ppk/1B1Pb2p/7P/1RQ2N2/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 895);
    }

    #[test]
    fn gentest_5508() {
        let board = Board::from_fen("q1r3n1/p7/P2p1R2/BpP2Ppk/3P2bp/7P/1RQ2N2/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 959);
    }

    #[test]
    fn gentest_5509() {
        let board = Board::from_fen("q5n1/p1r2R2/P2p4/BpP2Ppk/3P2bp/7P/1R3N2/1Q4K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1193);
    }

    #[test]
    fn gentest_5510() {
        let board = Board::from_fen("q5n1/p6r/P7/BpPp1Ppk/3P2bp/7P/1R3N2/1Q4K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 842);
    }

    #[test]
    fn gentest_5511() {
        let board = Board::from_fen("q5n1/p6r/P1P2P2/Bp1p2pk/3P3p/5b1P/1R3N2/1Q4K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 946);
    }

    #[test]
    fn gentest_5512() {
        let board = Board::from_fen("q5n1/p2r4/P1P2P2/Bp1p2pk/3P3p/7P/1R6/1Q1b2KN w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 853);
    }

    #[test]
    fn gentest_5513() {
        let board = Board::from_fen("5qn1/p2r4/P1P2P2/Bp1p2pk/3P3p/7P/5R2/3Q2KN b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 117);
        assert_eq!(perft(&board, 3, &PRECOMP), 3111);
    }

    #[test]
    fn gentest_5514() {
        let board = Board::from_fen("5q2/p2Pn3/P4Pk1/Bp1p2p1/3P3p/7P/5R2/3Q2KN w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 783);
    }

    #[test]
    fn gentest_5515() {
        let board = Board::from_fen("5q2/p2P4/P1n2Pk1/Bp1p2p1/3P3p/7P/6R1/4Q1KN b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1345);
    }

    #[test]
    fn gentest_5516() {
        let board = Board::from_fen("3B1q2/p6k/P4P2/Bp1pn1p1/3P3p/7P/6R1/4Q1KN w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 999);
    }

    #[test]
    fn gentest_5517() {
        let board = Board::from_fen("5q2/p6k/PBn2P2/Bp1p2p1/3P3p/7P/5NR1/4Q1K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1038);
    }

    #[test]
    fn gentest_5518() {
        let board = Board::from_fen("1n1q4/p1B4k/P4P2/Bp1p2p1/3P3p/7P/5NR1/4Q1K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 707);
    }

    #[test]
    fn gentest_5519() {
        let board = Board::from_fen("1n6/p1B4k/P2q1P2/Bp1p2p1/3P3p/7P/5NR1/4Q1K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 931);
    }

    #[test]
    fn gentest_5520() {
        let board = Board::from_fen("1n6/p6k/P4P2/1pqp2p1/3P3p/2B4P/5NR1/4Q1K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 610);
    }

    #[test]
    fn gentest_5521() {
        let board = Board::from_fen("8/p2n3k/P4P2/1pqp2p1/3P3p/2BN3P/3Q2R1/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 761);
    }

    #[test]
    fn gentest_5522() {
        let board = Board::from_fen("8/p2n3k/P4P2/qp1p2p1/3P3p/2B4P/3Q2R1/2N3K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 604);
    }

    #[test]
    fn gentest_5523() {
        let board = Board::from_fen("8/p6k/P4n2/qp1p2Q1/3P3p/7P/6R1/B1N3K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 644);
    }

    #[test]
    fn gentest_5524() {
        let board = Board::from_fen("8/p6k/P7/1p1p2Q1/q2Pn1Rp/7P/8/B1N3K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 439);
    }

    #[test]
    fn gentest_5525() {
        let board = Board::from_fen("8/p6k/P4n2/1p1p2Q1/q2P1R1p/7P/4N3/B5K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 532);
        assert_eq!(perft(&board, 3, &PRECOMP), 8456);
    }

    #[test]
    fn gentest_5526() {
        let board = Board::from_fen("8/p6k/P7/1p1p2Q1/3P2np/7P/4N3/B2q1RK1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 418);
    }

    #[test]
    fn gentest_5527() {
        let board = Board::from_fen("8/p6k/P7/1p1p4/3P2Qp/7P/3qN3/B2R2K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 468);
        assert_eq!(perft(&board, 3, &PRECOMP), 6932);
    }

    #[test]
    fn gentest_5528() {
        let board = Board::from_fen("8/p6k/P7/1p1p4/3P2Qp/7P/3qN2K/B7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 272);
        assert_eq!(perft(&board, 3, &PRECOMP), 6067);
    }

    #[test]
    fn gentest_5529() {
        let board = Board::from_fen("5Qk1/p7/P7/1p1p4/3P3p/7P/3qN2K/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 31);
        assert_eq!(perft(&board, 3, &PRECOMP), 498);
        assert_eq!(perft(&board, 4, &PRECOMP), 9867);
    }

    #[test]
    fn gentest_5530() {
        let board = Board::from_fen("8/p5k1/P7/1p1p4/3P3p/7P/3qN2K/B7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 122);
        assert_eq!(perft(&board, 3, &PRECOMP), 1079);
    }

    #[test]
    fn gentest_5531() {
        let board = Board::from_fen("8/p5k1/P7/1p1p4/3P3p/7P/4N1K1/B2q4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 202);
        assert_eq!(perft(&board, 3, &PRECOMP), 4539);
    }

    #[test]
    fn gentest_5532() {
        let board = Board::from_fen("8/p4k2/P7/1p1p4/3P3p/7P/4NK2/B2q4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 241);
        assert_eq!(perft(&board, 3, &PRECOMP), 2055);
    }

    #[test]
    fn gentest_5533() {
        let board = Board::from_fen("8/p4k2/P7/1p1p4/3P3p/2N2K1P/8/B1q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 259);
        assert_eq!(perft(&board, 3, &PRECOMP), 6554);
    }

    #[test]
    fn gentest_5534() {
        let board = Board::from_fen("8/p3k3/P7/1p1p4/3P1q1p/2N4P/4K3/B7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 304);
        assert_eq!(perft(&board, 3, &PRECOMP), 2837);
    }

    #[test]
    fn gentest_5535() {
        let board = Board::from_fen("8/p3k3/P7/1N1p4/3P3p/6qP/8/B2K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 262);
        assert_eq!(perft(&board, 3, &PRECOMP), 6471);
    }

    #[test]
    fn gentest_5536() {
        let board = Board::from_fen("8/p3k3/P7/1N1p2q1/3P3p/7P/8/B1K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 92);
        assert_eq!(perft(&board, 3, &PRECOMP), 903);
    }

    #[test]
    fn gentest_5537() {
        let board = Board::from_fen("8/p3k3/P4q2/1N1p4/3P3p/1K5P/8/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 325);
        assert_eq!(perft(&board, 3, &PRECOMP), 7884);
    }

    #[test]
    fn gentest_5538() {
        let board = Board::from_fen("8/p3k3/P7/1N1p4/1K1P3p/7q/8/B7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 227);
        assert_eq!(perft(&board, 3, &PRECOMP), 2422);
    }

    #[test]
    fn gentest_5539() {
        let board = Board::from_fen("8/p3k3/P7/K2p4/3P3p/2N5/6q1/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 315);
        assert_eq!(perft(&board, 3, &PRECOMP), 7794);
    }

    #[test]
    fn gentest_5540() {
        let board = Board::from_fen("8/p7/P3k3/K2p4/3Pq2p/2N5/1B6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 301);
        assert_eq!(perft(&board, 3, &PRECOMP), 3754);
    }

    #[test]
    fn gentest_5541() {
        let board = Board::from_fen("8/p7/PN2k3/K7/3P3p/8/1B2q3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 268);
        assert_eq!(perft(&board, 3, &PRECOMP), 6593);
    }

    #[test]
    fn gentest_5542() {
        let board = Board::from_fen("8/p7/PN2q3/5k2/1K1P3p/8/1B6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 478);
        assert_eq!(perft(&board, 3, &PRECOMP), 6138);
    }

    #[test]
    fn gentest_5543() {
        let board = Board::from_fen("8/p7/P2q4/5k2/N1KP3p/8/1B6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 317);
        assert_eq!(perft(&board, 3, &PRECOMP), 7899);
    }

    #[test]
    fn gentest_5544() {
        let board = Board::from_fen("8/p7/Pq6/1K3k2/N2P3p/8/1B6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 35);
        assert_eq!(perft(&board, 3, &PRECOMP), 382);
        assert_eq!(perft(&board, 4, &PRECOMP), 6675);
    }

    #[test]
    fn gentest_5545() {
        let board = Board::from_fen("8/p7/P5q1/2K2k2/N2P3p/8/1B6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 259);
        assert_eq!(perft(&board, 3, &PRECOMP), 6315);
    }

    #[test]
    fn gentest_5546() {
        let board = Board::from_fen("8/p7/P7/5k2/N1KP3p/5q2/1B6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 306);
        assert_eq!(perft(&board, 3, &PRECOMP), 3622);
    }

    #[test]
    fn gentest_5547() {
        let board = Board::from_fen("8/p7/P7/3P1k2/N4q1p/1K6/1B6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 334);
        assert_eq!(perft(&board, 3, &PRECOMP), 8312);
    }

    #[test]
    fn gentest_5548() {
        let board = Board::from_fen("8/p1q5/P7/3Pk3/N6p/1K6/8/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 351);
        assert_eq!(perft(&board, 3, &PRECOMP), 4988);
    }

    #[test]
    fn gentest_5549() {
        let board = Board::from_fen("8/p2q4/P6B/3Pk3/N6p/1K6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 382);
        assert_eq!(perft(&board, 3, &PRECOMP), 8352);
    }

    #[test]
    fn gentest_5550() {
        let board = Board::from_fen("8/p7/P6B/4k3/N2q3p/2K5/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 56);
        assert_eq!(perft(&board, 3, &PRECOMP), 624);
    }

    #[test]
    fn gentest_5551() {
        let board = Board::from_fen("8/p7/P6B/4k3/K6p/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 96);
        assert_eq!(perft(&board, 3, &PRECOMP), 724);
        assert_eq!(perft(&board, 4, &PRECOMP), 9488);
    }

    #[test]
    fn gentest_5552() {
        let board = Board::from_fen("8/p7/P3k2B/1K6/8/7p/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 103);
        assert_eq!(perft(&board, 3, &PRECOMP), 1399);
    }

    #[test]
    fn gentest_5553() {
        let board = Board::from_fen("8/p2k4/P7/BK6/8/7p/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 69);
        assert_eq!(perft(&board, 3, &PRECOMP), 465);
        assert_eq!(perft(&board, 4, &PRECOMP), 6064);
    }

    #[test]
    fn gentest_5554() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5555() {
        let board = Board::from_fen("rnbqkbnr/p1pppppp/1p6/8/8/5PP1/PPPPP2P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 420);
        assert_eq!(perft(&board, 3, &PRECOMP), 9700);
    }

    #[test]
    fn gentest_5556() {
        let board = Board::from_fen("r1bqkbnr/p2ppppp/np6/2p5/1P6/5PP1/P1PPP2P/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 460);
    }

    #[test]
    fn gentest_5557() {
        let board = Board::from_fen("r1bqkbnr/p2pppp1/np6/2p4p/1P6/3P1PPN/P1P1P2P/RNBQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 654);
    }

    #[test]
    fn gentest_5558() {
        let board = Board::from_fen("r1bqkbn1/p2p1pp1/np5r/2p1p2p/1P3N2/3P1PP1/P1P1P2P/RNBQKB1R w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1039);
    }

    #[test]
    fn gentest_5559() {
        let board = Board::from_fen("r1bqkbn1/p2p1pp1/np5r/2p1p3/1P3NPp/3P1P1B/P1P1P2P/RNBQK2R b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1014);
    }

    #[test]
    fn gentest_5560() {
        let board = Board::from_fen("r1bqk1n1/p2pbpp1/npr5/2p1p3/1P1P1NPp/5P1B/P1P1P2P/RNBQK2R w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1099);
    }

    #[test]
    fn gentest_5561() {
        let board = Board::from_fen("r1bqk1n1/p2p1pp1/nprb4/2pNp3/1P1P2Pp/4BP1B/P1P1P2P/RN1QK2R b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1025);
    }

    #[test]
    fn gentest_5562() {
        let board = Board::from_fen("r1bqk1n1/p2p1pp1/nprb4/3Np3/3P2Pp/2p1BP1B/P3P2P/RN1QK2R w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1075);
    }

    #[test]
    fn gentest_5563() {
        let board = Board::from_fen("r1bqk1n1/p2p1pp1/1prb4/3Np3/1n1P1PPp/2p1B2B/P2QP2P/RN2K2R b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 996);
    }

    #[test]
    fn gentest_5564() {
        let board = Board::from_fen("r2qk1n1/p2p1pp1/bprb4/3N4/1n1p1PPp/2p1B3/P2QP2P/RN2KB1R w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1112);
    }

    #[test]
    fn gentest_5565() {
        let board = Board::from_fen("r2qk1n1/p2pNpp1/bprb4/8/3p1PPp/2p1B3/P1Q1P2P/RN2KB1R b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1295);
    }

    #[test]
    fn gentest_5566() {
        let board = Board::from_fen("r2qk1n1/p2p2p1/1prb2N1/5p2/2bp1PPp/2p1B3/P1Q1P2P/RN2KB1R w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1300);
    }

    #[test]
    fn gentest_5567() {
        let board = Board::from_fen("r3k1n1/p2p2p1/1prb2N1/5pq1/2bp1PPp/2pQ4/P3PB1P/RN2KB1R b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1544);
    }

    #[test]
    fn gentest_5568() {
        let board = Board::from_fen("r3k1n1/p2p2p1/1pr3N1/5pq1/2b2PPp/b1pQ4/P3PB1P/R3KB1R w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1754);
    }

    #[test]
    fn gentest_5569() {
        let board = Board::from_fen("r3k1n1/p2p2p1/1p4N1/2r2pq1/2b2PPp/b1p5/P3PB1P/RQ1K1B1R b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1294);
    }

    #[test]
    fn gentest_5570() {
        let board = Board::from_fen("1r2k1n1/p2pq1p1/1p4N1/2r2p2/2b2PPp/b1p5/P3P2P/RQ1KBB1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1316);
    }

    #[test]
    fn gentest_5571() {
        let board = Board::from_fen("1r2k1n1/p2p2p1/1p4N1/2r2p2/2b2PPp/b1pQq3/P2BP2P/R2K1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1422);
    }

    #[test]
    fn gentest_5572() {
        let board = Board::from_fen("1r2k1n1/p1rp2p1/1p4N1/5p2/2b2PPp/2pQq3/Pb2P2P/R1BK1B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1339);
    }

    #[test]
    fn gentest_5573() {
        let board = Board::from_fen("1r2k1n1/p1rp2p1/1p6/4Np2/2bq1PPp/2pQ4/Pb2P1BP/R1BK3R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1371);
    }

    #[test]
    fn gentest_5574() {
        let board = Board::from_fen("1r3kn1/p1rp2p1/1p2b3/4NpP1/3q1P1p/2pQ4/Pb2P1BP/R1BK3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1307);
    }

    #[test]
    fn gentest_5575() {
        let board = Board::from_fen("1r3kn1/p1rp2p1/1p6/4NpP1/3q1P1p/1bpQ4/Pb1BP1BP/R3K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1963);
    }

    #[test]
    fn gentest_5576() {
        let board = Board::from_fen("1r3k2/p2p2p1/1p5n/4NpP1/2rq1P1p/1bpQ3B/Pb1BP2P/R3K2R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1433);
    }

    #[test]
    fn gentest_5577() {
        let board = Board::from_fen("1r3k2/p2p2p1/1p5n/4NpP1/P1r1PP1p/1bpq3B/1b1B3P/R3K2R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1071);
    }

    #[test]
    fn gentest_5578() {
        let board = Board::from_fen("1r3k2/p2p2p1/1p1q3n/4NpP1/P1r1PP1p/1bp4B/1b5P/R4K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1190);
    }

    #[test]
    fn gentest_5579() {
        let board = Board::from_fen("5k2/pr1p2p1/1p1q3n/4NpP1/P1r1PP1p/1bp4B/1b5P/R4K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1137);
    }

    #[test]
    fn gentest_5580() {
        let board = Board::from_fen("5k2/pr1p1np1/1p5q/4NpP1/P1r1PP1p/1bp4B/1b5P/3R1K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1200);
    }

    #[test]
    fn gentest_5581() {
        let board = Board::from_fen("5k2/pr1R2p1/1p5q/5pn1/P1N1PP1p/1bp4B/1b5P/5K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1025);
    }

    #[test]
    fn gentest_5582() {
        let board = Board::from_fen("5k2/p1R3p1/1p5q/5pn1/P1N1PP1p/1b5B/1bp4P/5K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1009);
    }

    #[test]
    fn gentest_5583() {
        let board = Board::from_fen("5k2/p1R3p1/1p5q/5pn1/P1N1PP1p/1b5B/1b3K1P/2q4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1147);
    }

    #[test]
    fn gentest_5584() {
        let board = Board::from_fen("5k2/p5p1/1p2n1q1/2R2p2/P1N1PP1p/1b5B/1b3K1P/2q4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1379);
    }

    #[test]
    fn gentest_5585() {
        let board = Board::from_fen("5k2/6p1/pp1Nn1q1/1R3p2/P3PP1p/1b5B/1b3K1P/2q4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1137);
    }

    #[test]
    fn gentest_5586() {
        let board = Board::from_fen("5k2/6p1/pp1N2q1/1R3pn1/P3PP1p/1b2K2B/1bq4P/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1371);
    }

    #[test]
    fn gentest_5587() {
        let board = Board::from_fen("5k2/6p1/pp1N2q1/1R3pn1/P2KPP1p/1b5B/2q4P/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1059);
    }

    #[test]
    fn gentest_5588() {
        let board = Board::from_fen("4qk2/5Np1/pp4q1/1R3pn1/P2KPP1p/1b5B/7P/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1347);
    }

    #[test]
    fn gentest_5589() {
        let board = Board::from_fen("4qk2/5Np1/pp4q1/2R2p2/P2KPP1p/1b5n/7P/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1196);
    }

    #[test]
    fn gentest_5590() {
        let board = Board::from_fen("5k2/5Np1/pp4q1/3R1p2/P2KPP1p/1b5n/7P/3R1q2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1093);
    }

    #[test]
    fn gentest_5591() {
        let board = Board::from_fen("5k2/5Np1/1p4q1/p4p2/P1RKPP1p/1b5n/7P/3R1q2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 839);
    }

    #[test]
    fn gentest_5592() {
        let board = Board::from_fen("5k2/6p1/1p4q1/p4pN1/P1RKPP1p/1b5n/7P/3R1q2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 867);
    }

    #[test]
    fn gentest_5593() {
        let board = Board::from_fen("5k2/6p1/6q1/pp2Kp2/P1R1PP1p/1b3N1n/7P/3R1q2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1181);
    }

    #[test]
    fn gentest_5594() {
        let board = Board::from_fen("5k2/2R3p1/8/pp2Kp2/P3PP1p/1b3Nqn/7P/3R2q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1369);
    }

    #[test]
    fn gentest_5595() {
        let board = Board::from_fen("5k2/2R2bp1/8/pp2Kp2/P3PP1p/3R2qn/3N3P/6q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1355);
    }

    #[test]
    fn gentest_5596() {
        let board = Board::from_fen("5k2/5bp1/8/pp2Kp2/P3PP1p/3R2qn/3N3P/6q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 893);
    }

    #[test]
    fn gentest_5597() {
        let board = Board::from_fen("5k2/6p1/3Kb3/pp1R1p2/P3PP1p/6qn/3N3P/6q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 767);
    }

    #[test]
    fn gentest_5598() {
        let board = Board::from_fen("5k2/6p1/3Kb3/pR6/P3pP1p/6qn/3N3P/7q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1043);
    }

    #[test]
    fn gentest_5599() {
        let board = Board::from_fen("5k2/6p1/3K4/7R/P3pP1p/1b4qn/3N3P/7q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 912);
    }

    #[test]
    fn gentest_5600() {
        let board = Board::from_fen("5k2/6p1/3K4/8/b3pP1R/6qn/3N3P/3q4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 489);
        assert_eq!(perft(&board, 3, &PRECOMP), 7190);
    }

    #[test]
    fn gentest_5601() {
        let board = Board::from_fen("5k2/6p1/8/4K3/b3pP1R/6qn/7P/1N3q2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 668);
    }

    #[test]
    fn gentest_5602() {
        let board = Board::from_fen("5k2/6p1/8/4K3/b3pP1R/3q2Pn/8/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 450);
        assert_eq!(perft(&board, 3, &PRECOMP), 5980);
    }

    #[test]
    fn gentest_5603() {
        let board = Board::from_fen("5k2/6p1/2b5/4K2R/4pP2/3q2Pn/8/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 487);
    }

    #[test]
    fn gentest_5604() {
        let board = Board::from_fen("5k2/6p1/8/4K2R/b3pP2/N2q2Pn/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 485);
        assert_eq!(perft(&board, 3, &PRECOMP), 7009);
    }

    #[test]
    fn gentest_5605() {
        let board = Board::from_fen("R7/4k1p1/8/4K3/b3pP2/N2q2Pn/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 580);
    }

    #[test]
    fn gentest_5606() {
        let board = Board::from_fen("R7/4kqp1/8/5K2/b3pP2/N5Pn/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 89);
        assert_eq!(perft(&board, 3, &PRECOMP), 1324);
    }

    #[test]
    fn gentest_5607() {
        let board = Board::from_fen("3R4/4k1p1/8/8/b3KP2/N5Pn/q7/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 581);
    }

    #[test]
    fn gentest_5608() {
        let board = Board::from_fen("3R1q2/4k1p1/8/8/b1N1KP2/6Pn/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 667);
    }

    #[test]
    fn gentest_5609() {
        let board = Board::from_fen("3R4/4k1p1/8/5q2/b4P2/N3K1Pn/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 737);
    }

    #[test]
    fn gentest_5610() {
        let board = Board::from_fen("3R4/4k1p1/8/8/b4q2/N2K2Pn/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 651);
        assert_eq!(perft(&board, 3, &PRECOMP), 9689);
    }

    #[test]
    fn gentest_5611() {
        let board = Board::from_fen("1q2R3/4k1p1/8/8/b5P1/N2K3n/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 137);
        assert_eq!(perft(&board, 3, &PRECOMP), 4266);
    }

    #[test]
    fn gentest_5612() {
        let board = Board::from_fen("1q2R3/6p1/5k2/8/b5P1/3K4/2N2n2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 210);
        assert_eq!(perft(&board, 3, &PRECOMP), 3906);
    }

    #[test]
    fn gentest_5613() {
        let board = Board::from_fen("1q2R3/6p1/8/2K3k1/b5P1/8/2N2n2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 614);
    }

    #[test]
    fn gentest_5614() {
        let board = Board::from_fen("4R3/6p1/8/6k1/b2K2P1/8/2q2n2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 584);
        assert_eq!(perft(&board, 3, &PRECOMP), 7006);
    }

    #[test]
    fn gentest_5615() {
        let board = Board::from_fen("2R5/6p1/7k/6P1/b2K4/8/2q2n2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 66);
        assert_eq!(perft(&board, 3, &PRECOMP), 1986);
    }

    #[test]
    fn gentest_5616() {
        let board = Board::from_fen("4R3/6p1/8/6k1/b2K4/8/5n2/2q5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 602);
        assert_eq!(perft(&board, 3, &PRECOMP), 7380);
    }

    #[test]
    fn gentest_5617() {
        let board = Board::from_fen("6R1/6p1/8/4K1k1/b3n3/8/8/2q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 384);
    }

    #[test]
    fn gentest_5618() {
        let board = Board::from_fen("4R3/6p1/5n2/4K1k1/8/8/8/2qb4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 422);
        assert_eq!(perft(&board, 3, &PRECOMP), 4815);
    }

    #[test]
    fn gentest_5619() {
        let board = Board::from_fen("1R6/6p1/8/6k1/3K2n1/8/8/2qb4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 438);
    }

    #[test]
    fn gentest_5620() {
        let board = Board::from_fen("1R6/6p1/8/6k1/4K1n1/8/8/3bq3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 108);
        assert_eq!(perft(&board, 3, &PRECOMP), 1474);
    }

    #[test]
    fn gentest_5621() {
        let board = Board::from_fen("1R6/6p1/8/6k1/2K3n1/8/3q4/3b4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 466);
    }

    #[test]
    fn gentest_5622() {
        let board = Board::from_fen("8/6p1/8/qR6/2K2kn1/8/8/3b4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 604);
        assert_eq!(perft(&board, 3, &PRECOMP), 6552);
    }

    #[test]
    fn gentest_5623() {
        let board = Board::from_fen("8/6p1/8/qR3k2/2K3n1/8/8/3b4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 93);
        assert_eq!(perft(&board, 3, &PRECOMP), 2960);
    }

    #[test]
    fn gentest_5624() {
        let board = Board::from_fen("8/1R4p1/8/q7/2K3n1/6k1/8/3b4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 556);
        assert_eq!(perft(&board, 3, &PRECOMP), 6279);
    }

    #[test]
    fn gentest_5625() {
        let board = Board::from_fen("8/6p1/1R6/7q/2K3n1/6k1/8/3b4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 574);
    }

    #[test]
    fn gentest_5626() {
        let board = Board::from_fen("8/6p1/3R4/8/2K3n1/6k1/7q/3b4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 643);
    }

    #[test]
    fn gentest_5627() {
        let board = Board::from_fen("8/6p1/8/8/2K3n1/3R1bk1/7q/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 411);
    }

    #[test]
    fn gentest_5628() {
        let board = Board::from_fen("8/6p1/7q/8/2K3n1/2R2bk1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 410);
        assert_eq!(perft(&board, 3, &PRECOMP), 5597);
    }

    #[test]
    fn gentest_5629() {
        let board = Board::from_fen("2R5/6p1/5n1q/8/8/1K3bk1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 821);
    }

    #[test]
    fn gentest_5630() {
        let board = Board::from_fen("5Rn1/6p1/7q/8/4b3/1K4k1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 790);
    }

    #[test]
    fn gentest_5631() {
        let board = Board::from_fen("6n1/6p1/7q/5R2/4b1k1/1K6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 652);
    }

    #[test]
    fn gentest_5632() {
        let board = Board::from_fen("6n1/5Rp1/6q1/8/4b1k1/1K6/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 604);
        assert_eq!(perft(&board, 3, &PRECOMP), 9726);
    }

    #[test]
    fn gentest_5633() {
        let board = Board::from_fen("1R6/6p1/6qn/8/4b1k1/1K6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 527);
    }

    #[test]
    fn gentest_5634() {
        let board = Board::from_fen("7R/6p1/3q3n/8/4b3/1K4k1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 678);
        assert_eq!(perft(&board, 3, &PRECOMP), 8386);
    }

    #[test]
    fn gentest_5635() {
        let board = Board::from_fen("5R2/6p1/3q3n/8/2K1bk2/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 139);
        assert_eq!(perft(&board, 3, &PRECOMP), 5755);
    }

    #[test]
    fn gentest_5636() {
        let board = Board::from_fen("6R1/6p1/4q2n/4k3/2K1b3/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 172);
        assert_eq!(perft(&board, 3, &PRECOMP), 1781);
    }

    #[test]
    fn gentest_5637() {
        let board = Board::from_fen("R7/5qp1/7n/2K1k3/4b3/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 622);
    }

    #[test]
    fn gentest_5638() {
        let board = Board::from_fen("R7/6p1/7n/qK2k3/4b3/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 93);
        assert_eq!(perft(&board, 3, &PRECOMP), 1049);
    }

    #[test]
    fn gentest_5639() {
        let board = Board::from_fen("8/6p1/7n/R1Kbk3/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 287);
        assert_eq!(perft(&board, 3, &PRECOMP), 5377);
    }

    #[test]
    fn gentest_5640() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5641() {
        let board = Board::from_fen("rnbqkbnr/ppppppp1/8/7p/8/3PB3/PPP1PPPP/RN1QKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 625);
    }

    #[test]
    fn gentest_5642() {
        let board = Board::from_fen("r1bqkbn1/pppppppr/2n5/7p/5B2/3P4/PPP1PPPP/RN1QKBNR w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 713);
    }

    #[test]
    fn gentest_5643() {
        let board = Board::from_fen("r1bqkbn1/pppp1ppr/2n1p3/7p/1PP2B2/3P4/P3PPPP/RN1QKBNR b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1018);
    }

    #[test]
    fn gentest_5644() {
        let board = Board::from_fen("r1bq1bn1/pppp1ppr/2nkp3/7p/1PP5/3P4/P3PPPP/RN1QKBNR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 690);
    }

    #[test]
    fn gentest_5645() {
        let board = Board::from_fen("r1bq1bn1/pppp1p1r/2nkp1p1/7p/1PP5/P2P1P2/4P1PP/RN1QKBNR b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 682);
    }

    #[test]
    fn gentest_5646() {
        let board = Board::from_fen("2bq1bn1/1ppp1p1r/r1nkp1p1/p6p/1PP5/P2P1P2/R3P1PP/1N1QKBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 849);
    }

    #[test]
    fn gentest_5647() {
        let board = Board::from_fen("2bq1bn1/1ppp1p1r/r2kp1p1/p6p/1nP5/P2P1P2/R1QNP1PP/4KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 886);
    }

    #[test]
    fn gentest_5648() {
        let board = Board::from_fen("2b2bn1/rpppqp1r/3kp1p1/p6p/1nP5/P2P1P2/R2NP1PP/2Q1KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 783);
    }

    #[test]
    fn gentest_5649() {
        let board = Board::from_fen("2b2bn1/r1ppqp1r/3kp1p1/pp5p/1nP1N3/P2P1PP1/R3P2P/2Q1KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 76);
        assert_eq!(perft(&board, 3, &PRECOMP), 2449);
    }

    #[test]
    fn gentest_5650() {
        let board = Board::from_fen("2b2bn1/r2pqp1r/4p1p1/ppp1k1Np/1nP5/P2P1PP1/R3P2P/2Q1KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 931);
    }

    #[test]
    fn gentest_5651() {
        let board = Board::from_fen("2b2bn1/r2pqp1r/4pkp1/ppp3Np/1nPP4/P4PP1/3RP2P/2Q1KBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 926);
    }

    #[test]
    fn gentest_5652() {
        let board = Board::from_fen("r1b3n1/3pqpbr/4Nkp1/ppp4p/1nPP4/P4PP1/3RP2P/2Q1KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1122);
    }

    #[test]
    fn gentest_5653() {
        let board = Board::from_fen("r1b3nr/3pqpb1/4Nkp1/pppP3p/1nP5/P4PP1/3RP2P/3QKBNR b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 902);
    }

    #[test]
    fn gentest_5654() {
        let board = Board::from_fen("r1b3nr/3pqp2/4Nk1b/pppP2pp/QnP5/P4PP1/3RP2P/4KBNR w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 995);
    }

    #[test]
    fn gentest_5655() {
        let board = Board::from_fen("r1b3nr/3pqp2/4Nk1b/pppP2p1/1nP4p/P4PP1/2QRPK1P/5BNR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1003);
    }

    #[test]
    fn gentest_5656() {
        let board = Board::from_fen("r5nr/1b1p1p2/3qNk1b/pppP2p1/1nP4P/P4P2/2QRPK1P/5BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1439);
    }

    #[test]
    fn gentest_5657() {
        let board = Board::from_fen("r5nr/1b1p1p2/2nqNk1b/pppP2p1/2P4P/P4P1B/1Q1RPK1P/6NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 199);
        assert_eq!(perft(&board, 3, &PRECOMP), 6885);
    }

    #[test]
    fn gentest_5658() {
        let board = Board::from_fen("r5nr/1b1p1p2/2nqNk1b/pppP2p1/2P4P/P4P1B/3RPK1P/2Q3NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1359);
    }

    #[test]
    fn gentest_5659() {
        let board = Board::from_fen("r5nr/nb1p1p2/3qNk1b/pppP2p1/2P4P/P3KP1B/3RP2P/1Q4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1348);
    }

    #[test]
    fn gentest_5660() {
        let board = Board::from_fen("r5nr/nb1p1p2/4N2b/pppqk1p1/2P4P/P3KP2/3RP2P/1Q3BNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1286);
    }

    #[test]
    fn gentest_5661() {
        let board = Board::from_fen("r5nr/nb1p1p2/4k2b/pppR2p1/2P4P/P3KP1N/4P2P/1Q3B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 956);
    }

    #[test]
    fn gentest_5662() {
        let board = Board::from_fen("2r3nr/nb1p4/4k1pb/pppR2p1/2P4P/P3KP1N/4P2P/5B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 597);
    }

    #[test]
    fn gentest_5663() {
        let board = Board::from_fen("b1r3nr/n2p4/4k1pb/ppp2Rp1/2P2N1P/P3KP2/4P2P/5B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 72);
        assert_eq!(perft(&board, 3, &PRECOMP), 1789);
    }

    #[test]
    fn gentest_5664() {
        let board = Board::from_fen("b2r2nr/n2p4/6pb/ppp2kp1/2P2N1P/P4P2/3KP2P/5B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 587);
    }

    #[test]
    fn gentest_5665() {
        let board = Board::from_fen("b2r2nr/n2p4/6pb/p1p2kp1/2p2N1P/P4P2/4P2P/3K1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 519);
    }

    #[test]
    fn gentest_5666() {
        let board = Board::from_fen("3r2nr/1b1p4/2n3pb/p1p2kp1/2p2N1P/P4P2/2K1P2P/5B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 574);
    }

    #[test]
    fn gentest_5667() {
        let board = Board::from_fen("b2r2nr/3p4/2n3pb/p1p2kP1/2p2N2/P4P2/4P2P/3K1B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 467);
    }

    #[test]
    fn gentest_5668() {
        let board = Board::from_fen("b4rnr/3p4/2n3pb/p1p3k1/2p2N2/P4P1B/4P2P/3K3R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 550);
    }

    #[test]
    fn gentest_5669() {
        let board = Board::from_fen("b5nr/3p4/2n3pb/p1p3k1/2p2r2/P4P2/2K1P1BP/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 576);
    }

    #[test]
    fn gentest_5670() {
        let board = Board::from_fen("b5nr/n2p4/6pb/p1p4k/2p1Pr2/P4P2/2K3BP/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 530);
        assert_eq!(perft(&board, 3, &PRECOMP), 9555);
    }

    #[test]
    fn gentest_5671() {
        let board = Board::from_fen("b6r/n2p4/5npb/p1p4k/P1p1Pr2/5P2/2K3BP/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 821);
    }

    #[test]
    fn gentest_5672() {
        let board = Board::from_fen("7r/n7/3p1npb/p1p4k/P1p1br2/5P2/1RK3BP/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 185);
        assert_eq!(perft(&board, 3, &PRECOMP), 3497);
    }

    #[test]
    fn gentest_5673() {
        let board = Board::from_fen("7r/8/2np1npb/pRp4k/P1p1br2/5P2/3K2BP/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 725);
    }

    #[test]
    fn gentest_5674() {
        let board = Board::from_fen("7r/8/2n2npb/pRpp3k/P1p1b2r/2K2P2/6BP/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 622);
        assert_eq!(perft(&board, 3, &PRECOMP), 9794);
    }

    #[test]
    fn gentest_5675() {
        let board = Board::from_fen("7r/R7/2n2npb/2pp2k1/P1p1b2r/2K2P2/6BP/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 680);
    }

    #[test]
    fn gentest_5676() {
        let board = Board::from_fen("1n1r4/2R5/5npb/2pp2k1/P1p1b2r/2K2P2/6BP/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 575);
    }

    #[test]
    fn gentest_5677() {
        let board = Board::from_fen("1n1r4/3R4/5npb/2pp1k2/P1p1b2r/2K2P1P/6B1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 524);
    }

    #[test]
    fn gentest_5678() {
        let board = Board::from_fen("1n1r4/6R1/5n1b/2pp1kp1/P1p4r/2K2P1P/6B1/1b6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 505);
        assert_eq!(perft(&board, 3, &PRECOMP), 7859);
    }

    #[test]
    fn gentest_5679() {
        let board = Board::from_fen("1n1r4/5R2/7b/2pp1kpn/P1p4r/2K2P1P/6B1/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 66);
        assert_eq!(perft(&board, 3, &PRECOMP), 1871);
    }

    #[test]
    fn gentest_5680() {
        let board = Board::from_fen("1n3R2/8/3r3b/2ppk1pn/P1p4r/2K2P1P/6B1/1b6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 442);
        assert_eq!(perft(&board, 3, &PRECOMP), 6852);
    }

    #[test]
    fn gentest_5681() {
        let board = Board::from_fen("1n3R2/8/3rk2b/2pp2pn/P1p2P1r/7P/1K4B1/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 600);
    }

    #[test]
    fn gentest_5682() {
        let board = Board::from_fen("1n3R2/3k4/3r3b/2pp2pn/P1p2P2/7r/1K6/1b3B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 659);
    }

    #[test]
    fn gentest_5683() {
        let board = Board::from_fen("1n3R2/3k4/3r3b/2pp2Pn/P7/2p4r/8/1bK2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 763);
    }

    #[test]
    fn gentest_5684() {
        let board = Board::from_fen("1n3R2/3k4/5r1b/2pp2Pn/P6r/2pB4/8/1bK5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 816);
    }

    #[test]
    fn gentest_5685() {
        let board = Board::from_fen("1n1R4/4k3/5r1b/2pp2Pn/P6r/2p5/4B3/1bK5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 905);
    }

    #[test]
    fn gentest_5686() {
        let board = Board::from_fen("1n1R4/4k3/5r2/2p3bn/P2p3r/2p5/4B3/1b1K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 788);
    }

    #[test]
    fn gentest_5687() {
        let board = Board::from_fen("3R4/1B1nk3/5r2/2p3bn/P2p3r/2p5/8/1b1K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 828);
    }

    #[test]
    fn gentest_5688() {
        let board = Board::from_fen("2R5/1B1nk3/5r2/2p3bn/P2pb1r1/2p5/8/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 838);
    }

    #[test]
    fn gentest_5689() {
        let board = Board::from_fen("8/4k3/Bn3r2/2R3bn/P2pb1r1/2p5/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 54);
        assert_eq!(perft(&board, 2, &PRECOMP), 1029);
    }

    #[test]
    fn gentest_5690() {
        let board = Board::from_fen("8/5k2/Bnb2r2/4R1bn/P2p2r1/2p5/8/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1032);
    }

    #[test]
    fn gentest_5691() {
        let board = Board::from_fen("8/5k2/Bn3r2/6bn/b2p2r1/2p5/2R5/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 396);
    }

    #[test]
    fn gentest_5692() {
        let board = Board::from_fen("2B5/5k2/5r2/6bn/b1np3r/2p5/2R5/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 374);
        assert_eq!(perft(&board, 3, &PRECOMP), 3964);
    }

    #[test]
    fn gentest_5693() {
        let board = Board::from_fen("6B1/6k1/5r2/6bn/b1np3r/2p5/2R5/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 337);
    }

    #[test]
    fn gentest_5694() {
        let board = Board::from_fen("6B1/5rk1/8/6bn/b1np3r/2p5/2R1K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 497);
        assert_eq!(perft(&board, 3, &PRECOMP), 5668);
    }

    #[test]
    fn gentest_5695() {
        let board = Board::from_fen("6B1/5rk1/2b5/6bn/2np3r/2p5/3R4/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 56);
        assert_eq!(perft(&board, 2, &PRECOMP), 744);
    }

    #[test]
    fn gentest_5696() {
        let board = Board::from_fen("6B1/r5k1/8/6bn/2np3r/2p2b2/3R4/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 911);
    }

    #[test]
    fn gentest_5697() {
        let board = Board::from_fen("8/r5k1/6B1/3b2bn/2np3r/2p5/3R4/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 55);
        assert_eq!(perft(&board, 2, &PRECOMP), 1100);
    }

    #[test]
    fn gentest_5698() {
        let board = Board::from_fen("8/r5k1/6B1/6bn/2np2r1/2p5/6b1/3RK3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 891);
    }

    #[test]
    fn gentest_5699() {
        let board = Board::from_fen("8/r3b1kB/8/7n/2np2r1/2p5/4K1b1/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 929);
    }

    #[test]
    fn gentest_5700() {
        let board = Board::from_fen("8/r3b1kB/8/7n/3p3r/2p5/1n2K1b1/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 886);
    }

    #[test]
    fn gentest_5701() {
        let board = Board::from_fen("8/r3b1kB/8/7n/3p4/2p4r/1n3KbR/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 608);
    }

    #[test]
    fn gentest_5702() {
        let board = Board::from_fen("8/2r1b1kB/2b5/7n/3p4/2p4r/1n3K2/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 871);
    }

    #[test]
    fn gentest_5703() {
        let board = Board::from_fen("8/2r1b1kB/2b5/8/3p4/2p3nr/1n6/4K1R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 473);
    }

    #[test]
    fn gentest_5704() {
        let board = Board::from_fen("8/2r1b1k1/8/5B2/4b3/2pp2nr/1n6/4K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 535);
        assert_eq!(perft(&board, 3, &PRECOMP), 7140);
    }

    #[test]
    fn gentest_5705() {
        let board = Board::from_fen("2B5/2r1b1k1/8/8/4b3/2pp2r1/1n6/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 384);
    }

    #[test]
    fn gentest_5706() {
        let board = Board::from_fen("2B5/2r1b1k1/8/6r1/4b3/2p5/1n1p1K2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 544);
        assert_eq!(perft(&board, 3, &PRECOMP), 5507);
    }

    #[test]
    fn gentest_5707() {
        let board = Board::from_fen("8/1Br1b1k1/8/6r1/4b3/2p5/1n6/3n1K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 386);
    }

    #[test]
    fn gentest_5708() {
        let board = Board::from_fen("B7/2r1b3/7k/6r1/4b3/2p5/1n3n2/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 354);
        assert_eq!(perft(&board, 3, &PRECOMP), 3387);
    }

    #[test]
    fn gentest_5709() {
        let board = Board::from_fen("2B5/2r1b3/7k/3r4/4b3/2p5/1n3n2/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 54);
        assert_eq!(perft(&board, 2, &PRECOMP), 539);
    }

    #[test]
    fn gentest_5710() {
        let board = Board::from_fen("2Bb4/2r5/7k/3r4/4b3/2p5/1n2Kn2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 555);
        assert_eq!(perft(&board, 3, &PRECOMP), 5544);
    }

    #[test]
    fn gentest_5711() {
        let board = Board::from_fen("2Bb4/2r5/7k/8/4b3/2pr4/1n2Kn2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 433);
    }

    #[test]
    fn gentest_5712() {
        let board = Board::from_fen("3b4/2r5/7k/8/4b3/2p4B/1n2K3/3r3n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 390);
        assert_eq!(perft(&board, 3, &PRECOMP), 3042);
    }

    #[test]
    fn gentest_5713() {
        let board = Board::from_fen("b2bB3/2r5/7k/8/8/2p5/1n2K3/3r3n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 307);
    }

    #[test]
    fn gentest_5714() {
        let board = Board::from_fen("b2b4/5r2/7k/8/8/2p5/1n2K3/6rn w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 52);
        assert_eq!(perft(&board, 3, &PRECOMP), 109);
        assert_eq!(perft(&board, 4, &PRECOMP), 5408);
    }

    #[test]
    fn gentest_5715() {
        let board = Board::from_fen("b2b4/6r1/7k/8/5K2/2p5/1n6/6rn b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 122);
        assert_eq!(perft(&board, 3, &PRECOMP), 5677);
    }

    #[test]
    fn gentest_5716() {
        let board = Board::from_fen("b2b4/5r2/7k/5K2/8/2p5/1n6/6rn w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 104);
        assert_eq!(perft(&board, 3, &PRECOMP), 304);
    }

    #[test]
    fn gentest_5717() {
        let board = Board::from_fen("b2b4/5r2/4K2k/8/8/2p5/1n6/2r4n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 128);
        assert_eq!(perft(&board, 3, &PRECOMP), 5334);
    }

    #[test]
    fn gentest_5718() {
        let board = Board::from_fen("b7/1rb5/3K3k/8/8/2p5/1n6/2r4n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 204);
        assert_eq!(perft(&board, 3, &PRECOMP), 851);
    }

    #[test]
    fn gentest_5719() {
        let board = Board::from_fen("b7/1rb5/8/3K3k/8/2p5/1n6/2r4n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 156);
        assert_eq!(perft(&board, 3, &PRECOMP), 5832);
    }

    #[test]
    fn gentest_5720() {
        let board = Board::from_fen("b7/2b5/4K3/3r3k/8/2p5/1n6/2r4n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 126);
        assert_eq!(perft(&board, 3, &PRECOMP), 628);
    }

    #[test]
    fn gentest_5721() {
        let board = Board::from_fen("b7/8/4K3/3r3k/5b2/2p5/1n6/2r4n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 136);
        assert_eq!(perft(&board, 3, &PRECOMP), 5896);
    }

    #[test]
    fn gentest_5722() {
        let board = Board::from_fen("b7/5K2/8/2r4k/8/2p3b1/1n6/2r4n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 297);
        assert_eq!(perft(&board, 3, &PRECOMP), 1402);
    }

    #[test]
    fn gentest_5723() {
        let board = Board::from_fen("b7/7K/8/6rk/8/2p3b1/1n6/2r4n b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 54);
        assert_eq!(perft(&board, 3, &PRECOMP), 2324);
        assert_eq!(perft(&board, 4, &PRECOMP), 5306);
    }

    #[test]
    fn gentest_5724() {
        let board = Board::from_fen("b6K/8/7k/6r1/2n5/2p3b1/8/2r4n w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 0);
        assert_eq!(perft(&board, 2, &PRECOMP), 0);
        assert_eq!(perft(&board, 3, &PRECOMP), 0);
        assert_eq!(perft(&board, 4, &PRECOMP), 0);
        assert_eq!(perft(&board, 5, &PRECOMP), 0);
        assert_eq!(perft(&board, 6, &PRECOMP), 0);
    }

    #[test]
    fn gentest_5725() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5726() {
        let board = Board::from_fen("rnbqkbnr/pppppp1p/6p1/8/7P/3P4/PPP1PPP1/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 586);
    }

    #[test]
    fn gentest_5727() {
        let board = Board::from_fen("rnbqkbnr/pppp3p/6pB/4pp2/7P/3P4/PPP1PPP1/RN1QKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 904);
    }

    #[test]
    fn gentest_5728() {
        let board = Board::from_fen("rnbqk1nr/pppp3p/6pB/4pp2/7P/b1PP3R/PP2PPP1/RN1QKBN1 b Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 907);
    }

    #[test]
    fn gentest_5729() {
        let board = Board::from_fen("rnbqk1nr/pppp3p/6pB/2b1pp2/7P/2PPR3/PP2PPP1/RN1QKBN1 w Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 851);
    }

    #[test]
    fn gentest_5730() {
        let board = Board::from_fen("rnbqk2r/ppppn2p/6pB/2b1pp2/1PP4P/3PR3/P3PPP1/RN1QKBN1 b Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 660);
    }

    #[test]
    fn gentest_5731() {
        let board = Board::from_fen("rnbqk2r/2ppn2p/1p4p1/p1b1ppB1/1PP4P/3PR3/P3PPP1/RN1QKBN1 w Qkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 860);
    }

    #[test]
    fn gentest_5732() {
        let board = Board::from_fen("rnbq1rk1/2ppn2p/1p4p1/p1b1ppB1/1PP4P/3P1R2/P2NPPP1/R2QKBN1 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 918);
    }

    #[test]
    fn gentest_5733() {
        let board = Board::from_fen("rnbq1r1k/2ppn2p/1p1b2p1/p3ppB1/1PP4P/1N1P1R2/P3PPP1/R2QKBN1 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 951);
    }

    #[test]
    fn gentest_5734() {
        let board = Board::from_fen("rnbq1r1k/2ppn2p/1p1b2p1/P4pB1/2Pp3P/1N3R2/P3PPP1/R2QKBN1 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1163);
    }

    #[test]
    fn gentest_5735() {
        let board = Board::from_fen("1nbq3k/2ppnr1p/rp1b2p1/P4pB1/2PN3P/5R2/P3PPP1/R2QKBN1 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1232);
    }

    #[test]
    fn gentest_5736() {
        let board = Board::from_fen("1nbq1r1k/2ppn2p/rp1P2p1/P4pB1/3N3P/5R2/P3PPP1/R2QKBN1 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 978);
    }

    #[test]
    fn gentest_5737() {
        let board = Board::from_fen("1nbq1r1k/2pp3p/rpnP2p1/P5B1/3N1p1P/1Q3R2/P3PPP1/R3KBN1 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1202);
    }

    #[test]
    fn gentest_5738() {
        let board = Board::from_fen("1nbq1r1k/2ppn2p/rp1P2p1/P5BP/3N1p2/1Q3R2/P3PPP1/R2K1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1138);
    }

    #[test]
    fn gentest_5739() {
        let board = Board::from_fen("1n1q1r1k/1b1pnQ1p/rp1P2p1/P1p3BP/3N1p2/5R2/P3PPP1/R2K1BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1233);
    }

    #[test]
    fn gentest_5740() {
        let board = Board::from_fen("1n1q1r1k/1b1pP2p/rp4p1/P5BP/2Qp1p2/5R2/P3PPP1/R2K1BN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1488);
    }

    #[test]
    fn gentest_5741() {
        let board = Board::from_fen("1n4rk/1bqpP2p/rp4p1/P5BP/3p1p2/5R2/P3PPP1/R2K1BN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 973);
    }

    #[test]
    fn gentest_5742() {
        let board = Board::from_fen("1n3r1k/1bqpP2p/Bp4p1/P5BP/3pPp2/5R2/P4PP1/R2K2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1273);
    }

    #[test]
    fn gentest_5743() {
        let board = Board::from_fen("1n3r1k/2qpP2p/B5p1/Pp1b2BP/3pPp2/5R2/P4PP1/R3K1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1456);
    }

    #[test]
    fn gentest_5744() {
        let board = Board::from_fen("1n3R1k/3p3p/B1q3p1/Pp1b2BP/3pPp2/5R2/P4PP1/R4KN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 2061);
    }

    #[test]
    fn gentest_5745() {
        let board = Board::from_fen("1n3R2/3p2kp/B5p1/Pp1b2BP/P1qpPp2/5R2/5PP1/R4KN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 87);
        assert_eq!(perft(&board, 3, &PRECOMP), 3288);
    }

    #[test]
    fn gentest_5746() {
        let board = Board::from_fen("1n3R2/3pBbkp/B5p1/Pp5P/P1qpPp2/5R2/5PP1/R3K1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1083);
    }

    #[test]
    fn gentest_5747() {
        let board = Board::from_fen("1n3R2/3pBbk1/B6p/Pp4pP/P1qpPp2/5R2/5PP1/1R2K1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1154);
    }

    #[test]
    fn gentest_5748() {
        let board = Board::from_fen("1n3R2/3p2k1/B6p/Pp1b2BP/P1qpPp2/5R2/5PP1/R3K1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1010);
    }

    #[test]
    fn gentest_5749() {
        let board = Board::from_fen("5R2/3pB1k1/B1n4p/Pp1b3P/P2pPp2/5R2/5PP1/R3KqN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 49);
        assert_eq!(perft(&board, 3, &PRECOMP), 1850);
    }

    #[test]
    fn gentest_5750() {
        let board = Board::from_fen("8/3pBRk1/B1n4p/Pp5P/P2pPp2/5R2/b2K1PP1/R4qN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 4299);
    }

    #[test]
    fn gentest_5751() {
        let board = Board::from_fen("8/4Bk2/B1n4p/Pp1p3P/P2pPp2/3R4/b2K1PP1/R4qN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1035);
    }

    #[test]
    fn gentest_5752() {
        let board = Board::from_fen("8/4Bk2/B1n4p/Pp1p3P/P2pPp2/5R1N/b2K1PP1/Rq6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 757);
    }

    #[test]
    fn gentest_5753() {
        let board = Board::from_fen("6k1/8/B1n4p/Pp1p3P/P2pPp1B/5R1N/b2K1PP1/R6q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 925);
    }

    #[test]
    fn gentest_5754() {
        let board = Board::from_fen("6k1/8/B6p/Pp1p3P/Pn1pPp1B/2R2R1N/b2K1PP1/7q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 711);
    }

    #[test]
    fn gentest_5755() {
        let board = Board::from_fen("6k1/8/n6p/Pp1p3P/P2pPp1B/2R2R1N/b4PP1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 522);
    }

    #[test]
    fn gentest_5756() {
        let board = Board::from_fen("1n4k1/8/7p/Pp1p3P/P2pPN1B/4RR2/b4PP1/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 439);
        assert_eq!(perft(&board, 3, &PRECOMP), 6552);
    }

    #[test]
    fn gentest_5757() {
        let board = Board::from_fen("1n4k1/8/4N2p/Pp1p3P/P2pP2B/4RR2/b4PP1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 458);
    }

    #[test]
    fn gentest_5758() {
        let board = Board::from_fen("1n5k/2N5/7p/Pp1p3P/P2pPR1B/4R3/b4PP1/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 480);
        assert_eq!(perft(&board, 3, &PRECOMP), 6584);
    }

    #[test]
    fn gentest_5759() {
        let board = Board::from_fen("1n6/2N4k/7p/Pp1p3P/P2pPR1B/2R5/b4PP1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 537);
    }

    #[test]
    fn gentest_5760() {
        let board = Board::from_fen("1n6/2N3k1/7p/Pp1p3P/P2pPR1B/1R6/b4PP1/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 435);
        assert_eq!(perft(&board, 3, &PRECOMP), 5092);
    }

    #[test]
    fn gentest_5761() {
        let board = Board::from_fen("7k/2N5/2n4p/Pp1p3P/P2pPR1B/7R/b4PP1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 604);
    }

    #[test]
    fn gentest_5762() {
        let board = Board::from_fen("4N2k/8/7p/np1p3P/P2pPR1B/4R3/b4PP1/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 442);
        assert_eq!(perft(&board, 3, &PRECOMP), 5998);
    }

    #[test]
    fn gentest_5763() {
        let board = Board::from_fen("4N3/7k/7p/np1pP2P/P2p1R1B/4R3/b4PP1/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 445);
    }

    #[test]
    fn gentest_5764() {
        let board = Board::from_fen("3BN3/7k/7p/1p1pP2P/P2p1R2/1n2R3/b4PP1/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 442);
        assert_eq!(perft(&board, 3, &PRECOMP), 5358);
    }

    #[test]
    fn gentest_5765() {
        let board = Board::from_fen("3BNR2/7k/7p/1p1pP2P/P2p4/3nR3/b4PP1/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 61);
        assert_eq!(perft(&board, 3, &PRECOMP), 2021);
    }

    #[test]
    fn gentest_5766() {
        let board = Board::from_fen("3BNR2/7k/7p/1p1pP2P/Pn1p4/1R6/b2K1PP1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 301);
        assert_eq!(perft(&board, 3, &PRECOMP), 3017);
    }

    #[test]
    fn gentest_5767() {
        let board = Board::from_fen("4NR2/7k/7p/1p1pP1BP/P7/1R1p4/b1nK1PP1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 410);
    }

    #[test]
    fn gentest_5768() {
        let board = Board::from_fen("4N3/7k/7B/1p1pP2P/P7/1R1pnR2/b2K1PP1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 439);
        assert_eq!(perft(&board, 3, &PRECOMP), 5752);
    }

    #[test]
    fn gentest_5769() {
        let board = Board::from_fen("4N2k/8/7B/1p1pP2P/P4R2/1R1pn3/b2K1PP1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 481);
    }

    #[test]
    fn gentest_5770() {
        let board = Board::from_fen("7k/5R2/3N3B/1p1pP2P/P7/1b1pn3/3K1PP1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 500);
        assert_eq!(perft(&board, 3, &PRECOMP), 6625);
    }

    #[test]
    fn gentest_5771() {
        let board = Board::from_fen("7k/5R2/3N4/1p1pP1BP/P7/3pn3/3K1PP1/3b4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 621);
    }

    #[test]
    fn gentest_5772() {
        let board = Board::from_fen("7k/1N3R2/8/1p1pP1BP/P7/1b1pP3/3K2P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 292);
        assert_eq!(perft(&board, 3, &PRECOMP), 2361);
    }

    #[test]
    fn gentest_5773() {
        let board = Board::from_fen("6k1/1N1R4/8/1p1pP1BP/P7/3pP3/2bK2P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 246);
        assert_eq!(perft(&board, 3, &PRECOMP), 6796);
    }

    #[test]
    fn gentest_5774() {
        let board = Board::from_fen("3N2k1/7R/8/1p1pP1BP/P7/3pP3/3K2P1/3b4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 336);
        assert_eq!(perft(&board, 3, &PRECOMP), 3367);
    }

    #[test]
    fn gentest_5775() {
        let board = Board::from_fen("3N2k1/7R/8/Pp1pP1BP/8/1b1pP3/3K2P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 239);
        assert_eq!(perft(&board, 3, &PRECOMP), 6319);
    }

    #[test]
    fn gentest_5776() {
        let board = Board::from_fen("6k1/7R/4N2B/Pp1pP2P/b7/3pP3/3K2P1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 159);
        assert_eq!(perft(&board, 3, &PRECOMP), 1234);
    }

    #[test]
    fn gentest_5777() {
        let board = Board::from_fen("3N4/7k/7B/P2pP2P/bp6/3pP3/3K2P1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 189);
        assert_eq!(perft(&board, 3, &PRECOMP), 3125);
    }

    #[test]
    fn gentest_5778() {
        let board = Board::from_fen("3N4/7k/7B/P3P2P/bp1p2P1/3KP3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 184);
        assert_eq!(perft(&board, 3, &PRECOMP), 2125);
    }

    #[test]
    fn gentest_5779() {
        let board = Board::from_fen("3N4/7k/7B/P3P2P/1pKpb1P1/4P3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 292);
        assert_eq!(perft(&board, 3, &PRECOMP), 5009);
    }

    #[test]
    fn gentest_5780() {
        let board = Board::from_fen("3N4/7k/7P/P3P1B1/1pK1b1P1/4p3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 267);
        assert_eq!(perft(&board, 3, &PRECOMP), 3769);
    }

    #[test]
    fn gentest_5781() {
        let board = Board::from_fen("3N2k1/8/7P/P3P1B1/1p4P1/1K2p3/6b1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 226);
        assert_eq!(perft(&board, 3, &PRECOMP), 3920);
    }

    #[test]
    fn gentest_5782() {
        let board = Board::from_fen("3N2k1/8/2b4P/P3P3/1K3BP1/4p3/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 268);
        assert_eq!(perft(&board, 3, &PRECOMP), 3407);
    }

    #[test]
    fn gentest_5783() {
        let board = Board::from_fen("6k1/1b6/7P/P3P3/1K3BP1/4p3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 199);
        assert_eq!(perft(&board, 3, &PRECOMP), 2946);
    }

    #[test]
    fn gentest_5784() {
        let board = Board::from_fen("8/1b5k/7P/P3P3/6P1/2K1p1B1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 207);
        assert_eq!(perft(&board, 3, &PRECOMP), 2876);
    }

    #[test]
    fn gentest_5785() {
        let board = Board::from_fen("8/7k/2b4P/P3P3/2K3P1/4p1B1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 223);
        assert_eq!(perft(&board, 3, &PRECOMP), 3149);
    }

    #[test]
    fn gentest_5786() {
        let board = Board::from_fen("8/3b3k/7P/P3P3/2K3P1/4p3/3B4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 193);
        assert_eq!(perft(&board, 3, &PRECOMP), 2596);
    }

    #[test]
    fn gentest_5787() {
        let board = Board::from_fen("5k2/3b4/7P/P3P3/2K3P1/4B3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 240);
        assert_eq!(perft(&board, 3, &PRECOMP), 4205);
    }

    #[test]
    fn gentest_5788() {
        let board = Board::from_fen("4k3/3b4/7P/P3P1B1/6P1/3K4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 141);
        assert_eq!(perft(&board, 3, &PRECOMP), 1631);
    }

    #[test]
    fn gentest_5789() {
        let board = Board::from_fen("4k3/8/7P/Pb2P1B1/6P1/8/3K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 168);
        assert_eq!(perft(&board, 3, &PRECOMP), 2672);
    }

    #[test]
    fn gentest_5790() {
        let board = Board::from_fen("4k3/8/5B1P/P3P3/6P1/8/2K1b3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 161);
        assert_eq!(perft(&board, 3, &PRECOMP), 1878);
    }

    #[test]
    fn gentest_5791() {
        let board = Board::from_fen("3Bk3/5b2/7P/P3P3/6P1/8/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 178);
        assert_eq!(perft(&board, 3, &PRECOMP), 2659);
    }

    #[test]
    fn gentest_5792() {
        let board = Board::from_fen("5k2/2B2b2/7P/P3P3/6P1/3K4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 163);
        assert_eq!(perft(&board, 3, &PRECOMP), 1801);
    }

    #[test]
    fn gentest_5793() {
        let board = Board::from_fen("5k2/2B2b2/7P/P3P3/2K3P1/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 80);
        assert_eq!(perft(&board, 3, &PRECOMP), 1121);
    }

    #[test]
    fn gentest_5794() {
        let board = Board::from_fen("8/4kb2/3B3P/P1K1P3/6P1/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 51);
        assert_eq!(perft(&board, 3, &PRECOMP), 493);
        assert_eq!(perft(&board, 4, &PRECOMP), 7098);
    }

    #[test]
    fn gentest_5795() {
        let board = Board::from_fen("8/2Bk1b2/7P/P1K1P3/6P1/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 158);
        assert_eq!(perft(&board, 3, &PRECOMP), 2077);
    }

    #[test]
    fn gentest_5796() {
        let board = Board::from_fen("4b3/3k4/P2B3P/2K1P3/6P1/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 78);
        assert_eq!(perft(&board, 3, &PRECOMP), 790);
    }

    #[test]
    fn gentest_5797() {
        let board = Board::from_fen("4bB2/2k5/P6P/2K1P3/6P1/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 118);
        assert_eq!(perft(&board, 3, &PRECOMP), 1657);
    }

    #[test]
    fn gentest_5798() {
        let board = Board::from_fen("5B2/2k5/P6P/4P3/b1K3P1/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 190);
        assert_eq!(perft(&board, 3, &PRECOMP), 2193);
    }

    #[test]
    fn gentest_5799() {
        let board = Board::from_fen("5B2/P1k5/7P/4P3/2K3P1/8/2b5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 252);
        assert_eq!(perft(&board, 3, &PRECOMP), 4691);
    }

    #[test]
    fn gentest_5800() {
        let board = Board::from_fen("5B2/P1k5/7P/4P3/2K1b1P1/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 338);
        assert_eq!(perft(&board, 3, &PRECOMP), 4707);
    }

    #[test]
    fn gentest_5801() {
        let board = Board::from_fen("5B2/P1k5/7P/4P1P1/2K1b3/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 321);
        assert_eq!(perft(&board, 3, &PRECOMP), 6036);
    }

    #[test]
    fn gentest_5802() {
        let board = Board::from_fen("B4B2/2k5/2b4P/2K1P1P1/8/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 218);
        assert_eq!(perft(&board, 3, &PRECOMP), 2540);
    }

    #[test]
    fn gentest_5803() {
        let board = Board::from_fen("B2k1B2/3b4/7P/4P1P1/1K6/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 226);
        assert_eq!(perft(&board, 3, &PRECOMP), 4924);
    }

    #[test]
    fn gentest_5804() {
        let board = Board::from_fen("3k1B2/1B5P/8/4PbP1/1K6/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 375);
        assert_eq!(perft(&board, 3, &PRECOMP), 4470);
    }

    #[test]
    fn gentest_5805() {
        let board = Board::from_fen("3k4/1B5P/7B/4P1P1/1K6/8/8/1b6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 258);
        assert_eq!(perft(&board, 3, &PRECOMP), 6000);
    }

    #[test]
    fn gentest_5806() {
        let board = Board::from_fen("8/3k3P/6PB/3BP3/1K6/8/8/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 364);
        assert_eq!(perft(&board, 3, &PRECOMP), 4020);
    }

    #[test]
    fn gentest_5807() {
        let board = Board::from_fen("B7/3k3P/6PB/4P3/1K6/8/2b5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 337);
        assert_eq!(perft(&board, 3, &PRECOMP), 8913);
    }

    #[test]
    fn gentest_5808() {
        let board = Board::from_fen("8/7P/2B1k1P1/4P3/1K6/8/2bB4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 325);
        assert_eq!(perft(&board, 3, &PRECOMP), 3354);
    }

    #[test]
    fn gentest_5809() {
        let board = Board::from_fen("8/7P/4k1P1/4P3/1Kb1B3/8/3B4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 301);
        assert_eq!(perft(&board, 3, &PRECOMP), 8493);
    }

    #[test]
    fn gentest_5810() {
        let board = Board::from_fen("8/7P/4k1P1/4P3/1K2B3/4B3/4b3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 4224);
    }

    #[test]
    fn gentest_5811() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5812() {
        let board = Board::from_fen("r1bqkbnr/pppppppp/2n5/8/P7/2P5/1P1PPPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 461);
    }

    #[test]
    fn gentest_5813() {
        let board = Board::from_fen("r1bqkbnr/ppp1p1pp/2np1p2/8/P7/2P5/RP1PPPPP/1NBQKBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 564);
    }

    #[test]
    fn gentest_5814() {
        let board = Board::from_fen("r1bqkbnr/ppp1p2p/2np1p2/6p1/P7/1PP5/3PPPPP/RNBQKBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 584);
    }

    #[test]
    fn gentest_5815() {
        let board = Board::from_fen("r1bqkbnr/ppp4p/3p1p2/4p1p1/Pn6/1PP4N/3PPPPP/RNBQKB1R w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 708);
    }

    #[test]
    fn gentest_5816() {
        let board = Board::from_fen("r2qkbnr/ppp4p/3p1p2/4p1p1/Pn4b1/RPP3PN/3PPP1P/1NBQKB1R b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 672);
    }

    #[test]
    fn gentest_5817() {
        let board = Board::from_fen("r2q1bnr/ppp1k2p/2np1p2/4p1p1/P5b1/1PP3PN/3PPP1P/RNBQKB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 681);
    }

    #[test]
    fn gentest_5818() {
        let board = Board::from_fen("r1q2bnr/ppp1k2p/2np1p2/4p1N1/P1P3b1/1P4P1/3PPP1P/RNBQKB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 942);
    }

    #[test]
    fn gentest_5819() {
        let board = Board::from_fen("4rbnr/ppp1k2p/2np1p2/4pqN1/P1P3b1/BP4P1/3PPP1P/RN1QKB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1068);
    }

    #[test]
    fn gentest_5820() {
        let board = Board::from_fen("3nrbnr/ppp1k2p/3p1p2/4pq2/P1P3b1/BP4PN/3PPP1P/RNQ1KB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 844);
    }

    #[test]
    fn gentest_5821() {
        let board = Board::from_fen("2qnrbnr/ppp1k2p/3pbp2/2P1p3/P7/BP4PN/3PPP1P/RNQ1KB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 725);
    }

    #[test]
    fn gentest_5822() {
        let board = Board::from_fen("2qnrb1r/ppp1k2p/2Bpbp1n/2P1p3/P7/BP4PN/3PPP1P/RNQ1K2R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1019);
    }

    #[test]
    fn gentest_5823() {
        let board = Board::from_fen("3nrb1r/ppp1k2p/3pqp1n/2P1p3/P7/BP4Pb/3PPPBP/RNQ1K2R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 959);
    }

    #[test]
    fn gentest_5824() {
        let board = Board::from_fen("3nrb1r/pppk3p/3pqp1n/2P1p3/P2P4/BPQ3Pb/4PPBP/RN2K2R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1269);
    }

    #[test]
    fn gentest_5825() {
        let board = Board::from_fen("4rb1r/pppk1n1p/3p1p1n/2P1p3/PQ1P2q1/BP4Pb/4PPBP/RN2K2R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1302);
    }

    #[test]
    fn gentest_5826() {
        let board = Board::from_fen("4rb1r/pppk1n1p/5p1n/2p1p3/PQ1P1Pq1/BP4Pb/4P2P/RN2KB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1214);
    }

    #[test]
    fn gentest_5827() {
        let board = Board::from_fen("4r2r/pppkbn1p/5p1n/4p3/P1Qp1Pq1/BP4Pb/4P2P/RN2KB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1306);
    }

    #[test]
    fn gentest_5828() {
        let board = Board::from_fen("4r2r/pppk1n1p/3b1p1n/Q3p3/P2p1Pq1/BP4Pb/4P2P/RN2KB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1336);
    }

    #[test]
    fn gentest_5829() {
        let board = Board::from_fen("4rr2/pppk1n1p/3b1p1n/Q3p3/P2p1Pq1/BP4P1/R3P2P/1N2Kb1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1550);
    }

    #[test]
    fn gentest_5830() {
        let board = Board::from_fen("4rr2/Qppk1n1p/3b1p1n/2B5/P2ppPq1/1P4P1/R3P2P/1N2Kb1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1372);
    }

    #[test]
    fn gentest_5831() {
        let board = Board::from_fen("4r2r/Qppk1n1p/3b1p1n/2B5/P2ppP1q/1P4P1/R3P2P/1N2KbR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1360);
    }

    #[test]
    fn gentest_5832() {
        let board = Board::from_fen("4r2r/Qppk1n1p/3b1p2/2B2n2/PP1ppP1q/6P1/R3P2P/1N1K1bR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1398);
    }

    #[test]
    fn gentest_5833() {
        let board = Board::from_fen("4r2r/Qppk1n1p/3b1p2/2B2n2/PP3P1q/2p1p1P1/R3P2P/3K1bR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1225);
    }

    #[test]
    fn gentest_5834() {
        let board = Board::from_fen("2r4r/Qppk1n1p/3b1p2/2B2n2/PP3P1q/2p1p1P1/3RP2P/4KbR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1091);
    }

    #[test]
    fn gentest_5835() {
        let board = Board::from_fen("2r4r/1ppk3p/3b1p1n/Q1B2n2/PP3P2/2p1p1Pq/3RP2P/4KbR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 834);
    }

    #[test]
    fn gentest_5836() {
        let board = Board::from_fen("2r4r/1pp1k2p/3b1p1n/Q4n2/PP3P2/2p1B1Pq/4P2P/3RKbR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1255);
    }

    #[test]
    fn gentest_5837() {
        let board = Board::from_fen("6rr/1pp1k2p/5p1n/Q4n2/PP3bP1/2p1B2q/4P2P/3RKbR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1359);
    }

    #[test]
    fn gentest_5838() {
        let board = Board::from_fen("4k1rr/1ppR3p/5p1n/Q4n2/PP1B1bP1/2p4q/4P2P/4KbR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1318);
    }

    #[test]
    fn gentest_5839() {
        let board = Board::from_fen("4kr1r/2pR3p/1p3p1n/Q4n2/PP1B1bP1/2p4q/4P2P/4KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1198);
    }

    #[test]
    fn gentest_5840() {
        let board = Board::from_fen("4kr1r/2pR3p/1B3p1n/Q4n2/PP3bP1/2pq4/4PR1P/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1329);
    }

    #[test]
    fn gentest_5841() {
        let board = Board::from_fen("4kr1r/2pR2np/1B3p1n/Q7/PP3RP1/2p4q/4P2P/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 939);
    }

    #[test]
    fn gentest_5842() {
        let board = Board::from_fen("4kr1r/2pR2np/1B3p2/Q7/PP3Rn1/2p4q/4P2P/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1065);
    }

    #[test]
    fn gentest_5843() {
        let board = Board::from_fen("4k2r/B1pR1rn1/5p1p/Q7/PP3Rn1/2p4q/4P2P/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1040);
    }

    #[test]
    fn gentest_5844() {
        let board = Board::from_fen("4k2r/B1p2r2/5p1p/Q2R3n/PP4n1/2p4q/4PR1P/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 912);
    }

    #[test]
    fn gentest_5845() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5846() {
        let board = Board::from_fen("rnbqkbnr/1ppppppp/p7/8/P7/6P1/1PPPPP1P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 418);
        assert_eq!(perft(&board, 3, &PRECOMP), 8957);
    }

    #[test]
    fn gentest_5847() {
        let board = Board::from_fen("rnbqkbnr/1p1ppppp/8/p1p5/P7/3P2P1/1PP1PP1P/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 588);
    }

    #[test]
    fn gentest_5848() {
        let board = Board::from_fen("rnbqkbnr/1p1ppp1p/6p1/p1p5/P1P2P2/3P2P1/1P2P2P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 529);
    }

    #[test]
    fn gentest_5849() {
        let board = Board::from_fen("rnb1kbnr/1p1pp2p/1q4p1/p1p2p2/P1P2P2/1P1P2P1/4P2P/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 676);
    }

    #[test]
    fn gentest_5850() {
        let board = Board::from_fen("rnb1kbnr/1p1pp2p/6p1/p1p2p2/P1P2P2/1q1P2P1/3BP2P/RNQ1KBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 755);
    }

    #[test]
    fn gentest_5851() {
        let board = Board::from_fen("r1b1kbnr/1p1pp2p/2n3p1/p1p2p2/P1q2P2/3P2PN/3BP2P/RNQ1KB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1001);
    }

    #[test]
    fn gentest_5852() {
        let board = Board::from_fen("r1b1kbnr/1p1pp2p/2n3p1/p1p2p2/q4P2/2QPB1PN/4P2P/RN2KB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1241);
    }

    #[test]
    fn gentest_5853() {
        let board = Board::from_fen("r1b1kbnr/1p1pp2p/2n3p1/pq2Qp2/2p2P2/3PB1PN/4P2P/RN2KB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1425);
    }

    #[test]
    fn gentest_5854() {
        let board = Board::from_fen("r1b1kbnr/1p1pp2p/2n5/pq2Qpp1/2P2P2/4B1PN/3NP2P/R3KB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1470);
    }

    #[test]
    fn gentest_5855() {
        let board = Board::from_fen("r1b1kbnQ/1p1pp2p/8/p4pp1/1qPn1P2/4B1PN/3NP2P/R3KB1R w KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1023);
    }

    #[test]
    fn gentest_5856() {
        let board = Board::from_fen("r1b1kb1Q/1p1pp2p/7n/p4pp1/1qP2P2/6PN/1B1NP2P/R3KB1R b KQq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 955);
    }

    #[test]
    fn gentest_5857() {
        let board = Board::from_fen("r1b2b1Q/1p1ppk1p/7n/p4pp1/2P1PP2/6PN/1B1q3P/R3KB1R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 19);
        assert_eq!(perft(&board, 3, &PRECOMP), 806);
    }

    #[test]
    fn gentest_5858() {
        let board = Board::from_fen("r1b2bQ1/1p1ppk1p/7n/p5p1/2P1pP2/6PN/1B1K3P/R4B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 111);
        assert_eq!(perft(&board, 3, &PRECOMP), 2063);
    }

    #[test]
    fn gentest_5859() {
        let board = Board::from_fen("r1b2bk1/1p2p1Bp/3p3n/p5p1/2P1pP2/6PN/3K3P/R4B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 766);
    }

    #[test]
    fn gentest_5860() {
        let board = Board::from_fen("r4bk1/1p1bp1Bp/3p3n/2R3p1/2P1pP2/6PN/3K3P/5B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1112);
    }

    #[test]
    fn gentest_5861() {
        let board = Board::from_fen("2br1bk1/1p2p1Bp/3p3n/1R4p1/2P1pP2/6PN/3K3P/5B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 768);
    }

    #[test]
    fn gentest_5862() {
        let board = Board::from_fen("3r1bk1/1p2p2p/3p3n/1R4p1/2P1pPb1/6PN/3K3P/B4B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 791);
    }

    #[test]
    fn gentest_5863() {
        let board = Board::from_fen("3r4/1p2pkbp/3p3n/1R3Pp1/2P1p1b1/6PN/3K3P/B4B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 913);
    }

    #[test]
    fn gentest_5864() {
        let board = Board::from_fen("6r1/1p2pkbp/3p3n/4RPp1/2P1p1b1/6P1/3K1N1P/B4B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 751);
    }

    #[test]
    fn gentest_5865() {
        let board = Board::from_fen("3r4/1p2pk1p/3p3n/5Pp1/2P1R1b1/2b3P1/3K1N1P/B4B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 198);
        assert_eq!(perft(&board, 3, &PRECOMP), 5420);
    }

    #[test]
    fn gentest_5866() {
        let board = Board::from_fen("3r4/1p2pk1p/7n/3p1Pp1/2P1R1b1/2B3P1/5N1P/2K2B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1015);
    }

    #[test]
    fn gentest_5867() {
        let board = Board::from_fen("2r5/1p2pk1p/7n/3p1Pp1/2P3b1/2B1R1P1/5N1P/2K2B1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1041);
    }

    #[test]
    fn gentest_5868() {
        let board = Board::from_fen("2r2k2/1p2p2p/7n/3p1Pp1/2PB2b1/6P1/4RN1P/2K2B1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 864);
    }

    #[test]
    fn gentest_5869() {
        let board = Board::from_fen("5k2/1pr1p2p/7n/3p1Pp1/2PB2b1/6P1/4RN1P/2K2BR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 839);
    }

    #[test]
    fn gentest_5870() {
        let board = Board::from_fen("5k2/1pr4p/7n/3ppPp1/2PB2b1/4R1P1/5NBP/2K3R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1042);
    }

    #[test]
    fn gentest_5871() {
        let board = Board::from_fen("8/1pr2k1p/7n/4pPp1/2pB2b1/4R1P1/1K3NBP/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1032);
    }

    #[test]
    fn gentest_5872() {
        let board = Board::from_fen("8/1pr2k1p/7n/4pbp1/2pB4/2R3PN/1K4BP/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1073);
    }

    #[test]
    fn gentest_5873() {
        let board = Board::from_fen("8/1pr2k1p/7n/6p1/2ppB3/2Rb2PN/1K5P/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 707);
    }

    #[test]
    fn gentest_5874() {
        let board = Board::from_fen("8/1p3k1p/7n/2r3p1/1KppB3/2Rb2PN/7P/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 793);
    }

    #[test]
    fn gentest_5875() {
        let board = Board::from_fen("8/1p2k2B/7n/3r2p1/1Kpp4/2Rb2PN/7P/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_5876() {
        let board = Board::from_fen("8/1p1k3B/7n/3r2p1/1Kpp4/1R1b2PN/7P/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 918);
    }

    #[test]
    fn gentest_5877() {
        let board = Board::from_fen("8/1p2k2B/7n/3r2p1/3p4/KRpb2PN/7P/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1007);
    }

    #[test]
    fn gentest_5878() {
        let board = Board::from_fen("4k3/1p5B/5R1n/3r2p1/3p4/KRpb2P1/7P/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 985);
    }

    #[test]
    fn gentest_5879() {
        let board = Board::from_fen("4k3/1p6/5R1n/3r1Bp1/4b3/KRpp2P1/7P/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 715);
    }

    #[test]
    fn gentest_5880() {
        let board = Board::from_fen("4k3/1p6/5R1n/4rBp1/K3b3/2pp2P1/7P/1R4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 762);
    }

    #[test]
    fn gentest_5881() {
        let board = Board::from_fen("4k3/7B/1p3R1n/1r4p1/K3b3/2pp2P1/7P/1R4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 862);
    }

    #[test]
    fn gentest_5882() {
        let board = Board::from_fen("4k3/7B/1p5n/4r1p1/1K2bR2/2pp2P1/7P/1R4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 889);
    }

    #[test]
    fn gentest_5883() {
        let board = Board::from_fen("4k3/5n2/1p4B1/4r1p1/1K3R2/2pp1bP1/7P/1R4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 947);
    }

    #[test]
    fn gentest_5884() {
        let board = Board::from_fen("4k3/5n2/1p4B1/r5p1/1K2R3/1Rpp1bP1/7P/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 128);
        assert_eq!(perft(&board, 3, &PRECOMP), 3533);
    }

    #[test]
    fn gentest_5885() {
        let board = Board::from_fen("8/3k1n2/1p6/5rp1/1K2R3/1Rpp1bP1/7P/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 718);
    }

    #[test]
    fn gentest_5886() {
        let board = Board::from_fen("2k5/5n2/1p6/5rp1/1K2R1P1/2pp1b2/1R5P/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 706);
    }

    #[test]
    fn gentest_5887() {
        let board = Board::from_fen("2k5/5n2/1p3r2/6p1/K3b1P1/2pp4/1R5P/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 662);
    }

    #[test]
    fn gentest_5888() {
        let board = Board::from_fen("2k5/5n2/1pr5/6p1/K3b1P1/2pp4/1R3N1P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 536);
    }

    #[test]
    fn gentest_5889() {
        let board = Board::from_fen("1k6/5n2/1p2r3/6p1/K3b1P1/2pp3N/1R5P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 572);
        assert_eq!(perft(&board, 3, &PRECOMP), 9733);
    }

    #[test]
    fn gentest_5890() {
        let board = Board::from_fen("1k6/5n2/1p2r3/6p1/1K4P1/1Rpp3N/7P/7b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 398);
    }

    #[test]
    fn gentest_5891() {
        let board = Board::from_fen("1k6/5n2/1p6/5rp1/K5P1/1Rpp3N/7P/7b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 381);
        assert_eq!(perft(&board, 3, &PRECOMP), 5607);
    }

    #[test]
    fn gentest_5892() {
        let board = Board::from_fen("1k6/1b3n2/1p6/1R3rp1/6P1/K1pp3N/7P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 522);
    }

    #[test]
    fn gentest_5893() {
        let board = Board::from_fen("1k6/5n2/1p6/3b1rp1/6P1/KRpp3N/7P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 378);
        assert_eq!(perft(&board, 3, &PRECOMP), 5863);
    }

    #[test]
    fn gentest_5894() {
        let board = Board::from_fen("1k6/1b3n2/1p6/5Pp1/5N2/KRpp4/7P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 451);
        assert_eq!(perft(&board, 3, &PRECOMP), 9675);
    }

    #[test]
    fn gentest_5895() {
        let board = Board::from_fen("1kbn4/8/1p6/5PpN/8/KRpp4/7P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 262);
        assert_eq!(perft(&board, 3, &PRECOMP), 4711);
    }

    #[test]
    fn gentest_5896() {
        let board = Board::from_fen("k1bn4/8/1R3N2/5Pp1/8/K1pp4/7P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 320);
        assert_eq!(perft(&board, 3, &PRECOMP), 4365);
    }

    #[test]
    fn gentest_5897() {
        let board = Board::from_fen("k7/8/1R2nN2/6p1/8/K1pp4/7P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 257);
        assert_eq!(perft(&board, 3, &PRECOMP), 6177);
    }

    #[test]
    fn gentest_5898() {
        let board = Board::from_fen("k2n4/3N4/1R6/6p1/1K6/2pp4/7P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 176);
        assert_eq!(perft(&board, 3, &PRECOMP), 1597);
    }

    #[test]
    fn gentest_5899() {
        let board = Board::from_fen("k7/3N4/1R6/1Kn3p1/8/2pp4/7P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 205);
        assert_eq!(perft(&board, 3, &PRECOMP), 4535);
    }

    #[test]
    fn gentest_5900() {
        let board = Board::from_fen("8/1k1N4/4R3/1Kn3p1/8/2pp4/7P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 318);
        assert_eq!(perft(&board, 3, &PRECOMP), 3912);
    }

    #[test]
    fn gentest_5901() {
        let board = Board::from_fen("4R3/1k1n4/8/1K4p1/8/2p5/3p3P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 300);
        assert_eq!(perft(&board, 3, &PRECOMP), 5454);
    }

    #[test]
    fn gentest_5902() {
        let board = Board::from_fen("8/3n4/1k2R3/6p1/K7/2p5/3p3P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 82);
        assert_eq!(perft(&board, 3, &PRECOMP), 1284);
    }

    #[test]
    fn gentest_5903() {
        let board = Board::from_fen("8/k2n4/4R3/6p1/1K6/2p5/7P/3b4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 365);
        assert_eq!(perft(&board, 3, &PRECOMP), 7020);
    }

    #[test]
    fn gentest_5904() {
        let board = Board::from_fen("k7/3n4/8/6R1/1K6/2p5/7P/3b4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 360);
        assert_eq!(perft(&board, 3, &PRECOMP), 5797);
    }

    #[test]
    fn gentest_5905() {
        let board = Board::from_fen("8/3n4/k7/2R5/1K6/2p5/7P/3b4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 254);
        assert_eq!(perft(&board, 3, &PRECOMP), 4350);
    }

    #[test]
    fn gentest_5906() {
        let board = Board::from_fen("8/3n4/k7/3R4/1K6/8/2p4P/3b4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 331);
        assert_eq!(perft(&board, 3, &PRECOMP), 5816);
    }

    #[test]
    fn gentest_5907() {
        let board = Board::from_fen("8/k2n4/8/2R5/1K6/8/2p1b2P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 424);
        assert_eq!(perft(&board, 3, &PRECOMP), 7914);
    }

    #[test]
    fn gentest_5908() {
        let board = Board::from_fen("8/k7/8/2n5/1K6/4R3/2p1b2P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 469);
    }

    #[test]
    fn gentest_5909() {
        let board = Board::from_fen("8/k7/5n2/8/1K2R3/8/2p1b2P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 454);
        assert_eq!(perft(&board, 3, &PRECOMP), 8316);
    }

    #[test]
    fn gentest_5910() {
        let board = Board::from_fen("8/k7/5n2/7b/1K5R/8/2p4P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 347);
        assert_eq!(perft(&board, 3, &PRECOMP), 7926);
    }

    #[test]
    fn gentest_5911() {
        let board = Board::from_fen("8/k7/5nb1/8/1K4R1/8/7P/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 531);
        assert_eq!(perft(&board, 3, &PRECOMP), 9177);
    }

    #[test]
    fn gentest_5912() {
        let board = Board::from_fen("8/k7/5n2/5b2/1K6/8/4R2P/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 602);
    }

    #[test]
    fn gentest_5913() {
        let board = Board::from_fen("8/k6b/4Rn2/8/1K6/8/7P/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 460);
        assert_eq!(perft(&board, 3, &PRECOMP), 8482);
    }

    #[test]
    fn gentest_5914() {
        let board = Board::from_fen("8/k6b/2K1Rn2/8/8/4b3/7P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 358);
        assert_eq!(perft(&board, 3, &PRECOMP), 8257);
    }

    #[test]
    fn gentest_5915() {
        let board = Board::from_fen("6b1/k7/2K2R2/8/8/8/3b3P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 319);
        assert_eq!(perft(&board, 3, &PRECOMP), 5653);
    }

    #[test]
    fn gentest_5916() {
        let board = Board::from_fen("k5b1/2K5/1R6/8/8/8/3b3P/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 314);
        assert_eq!(perft(&board, 3, &PRECOMP), 4949);
    }

    #[test]
    fn gentest_5917() {
        let board = Board::from_fen("k5b1/2K5/5R2/8/8/b7/7P/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 281);
        assert_eq!(perft(&board, 3, &PRECOMP), 5141);
    }

    #[test]
    fn gentest_5918() {
        let board = Board::from_fen("k7/2K5/5R2/3b4/7P/b7/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 360);
        assert_eq!(perft(&board, 3, &PRECOMP), 6017);
    }

    #[test]
    fn gentest_5919() {
        let board = Board::from_fen("6b1/k1K5/6R1/8/7P/b7/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 270);
        assert_eq!(perft(&board, 3, &PRECOMP), 4548);
    }

    #[test]
    fn gentest_5920() {
        let board = Board::from_fen("6b1/k7/2KbR3/8/7P/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 257);
        assert_eq!(perft(&board, 3, &PRECOMP), 4183);
    }

    #[test]
    fn gentest_5921() {
        let board = Board::from_fen("5bb1/k7/2K5/8/7P/4R3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 271);
        assert_eq!(perft(&board, 3, &PRECOMP), 4481);
    }

    #[test]
    fn gentest_5922() {
        let board = Board::from_fen("5bb1/8/k1K5/8/7P/8/8/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 264);
        assert_eq!(perft(&board, 3, &PRECOMP), 4348);
    }

    #[test]
    fn gentest_5923() {
        let board = Board::from_fen("5b2/3K4/k7/8/7P/8/b7/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 341);
        assert_eq!(perft(&board, 3, &PRECOMP), 6023);
    }

    #[test]
    fn gentest_5924() {
        let board = Board::from_fen("2K5/6b1/k7/8/7P/8/b7/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 158);
        assert_eq!(perft(&board, 3, &PRECOMP), 2711);
    }

    #[test]
    fn gentest_5925() {
        let board = Board::from_fen("2K5/8/k7/7P/3b4/8/b7/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 253);
        assert_eq!(perft(&board, 3, &PRECOMP), 3860);
    }

    #[test]
    fn gentest_5926() {
        let board = Board::from_fen("2K5/8/8/1k5P/3b4/8/b7/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 390);
        assert_eq!(perft(&board, 3, &PRECOMP), 8864);
    }

    #[test]
    fn gentest_5927() {
        let board = Board::from_fen("2K5/8/2k5/7P/3b4/1b6/8/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 415);
        assert_eq!(perft(&board, 3, &PRECOMP), 6291);
    }

    #[test]
    fn gentest_5928() {
        let board = Board::from_fen("2K5/8/8/1k5P/3b4/1b6/8/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 482);
    }

    #[test]
    fn gentest_5929() {
        let board = Board::from_fen("8/1K6/8/1k5P/8/1b2b3/8/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 425);
        assert_eq!(perft(&board, 3, &PRECOMP), 6973);
    }

    #[test]
    fn gentest_5930() {
        let board = Board::from_fen("8/1K6/R6P/1k6/8/4b3/8/3b4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 359);
        assert_eq!(perft(&board, 3, &PRECOMP), 6790);
    }

    #[test]
    fn gentest_5931() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_5932() {
        let board = Board::from_fen("rnbqkbnr/ppppp1pp/5p2/8/4P3/7P/PPPP1PP1/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 551);
    }

    #[test]
    fn gentest_5933() {
        let board = Board::from_fen("rnb1kbnr/pp1pp1pp/1q3p2/2p5/4P3/2P4P/PP1P1PP1/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 800);
    }

    #[test]
    fn gentest_5934() {
        let board = Board::from_fen("rnb1kb1r/pp1pp1pp/1q3p1n/2p5/4PP2/2PP3P/PP4P1/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 891);
    }

    #[test]
    fn gentest_5935() {
        let board = Board::from_fen("r1b1kb1r/pp1pp1pp/n4p1n/2p5/4PP2/2PP3P/Pq2B1P1/RNBQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 836);
    }

    #[test]
    fn gentest_5936() {
        let board = Board::from_fen("r1b1kb1r/pp2p1pp/n4p1n/2pp1P2/4P3/2PP3P/Pq4P1/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1046);
    }

    #[test]
    fn gentest_5937() {
        let board = Board::from_fen("1rb1kb1r/pp2p1pp/n4p2/2pp1n2/4P3/2PP1N1P/Pq4P1/RNBQKB1R w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1270);
    }

    #[test]
    fn gentest_5938() {
        let board = Board::from_fen("1rb1kb1r/p3p1pp/n4p2/1pppNn2/4P3/2PP3P/PB4P1/RN1QKB1R b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 892);
    }

    #[test]
    fn gentest_5939() {
        let board = Board::from_fen("1r2kb1r/p3pbpp/n4p2/1pppNn2/4P2P/2PP4/PB4P1/RN1QKB1R w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1035);
    }

    #[test]
    fn gentest_5940() {
        let board = Board::from_fen("1r2kb1r/p3pbpp/n4p2/1pp1Nn2/4p1PP/2PP4/PB6/RN1QKBR1 b Qk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1105);
    }

    #[test]
    fn gentest_5941() {
        let board = Board::from_fen("2r1kb1r/p3pbpp/n4p1n/1pp1N3/Q3p1PP/2PP4/PB6/RN2KBR1 w Qk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1064);
    }

    #[test]
    fn gentest_5942() {
        let board = Board::from_fen("2r1kb1r/p3p1pp/n4p1n/1pp5/1QN1p1PP/2PP4/PB6/RN2KBR1 b Qk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 809);
    }

    #[test]
    fn gentest_5943() {
        let board = Board::from_fen("1r2kb1r/p3p1pp/n4p1n/1pp5/1QN3PP/2Pp4/PB3K2/RN3BR1 w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 715);
    }

    #[test]
    fn gentest_5944() {
        let board = Board::from_fen("1r2kbr1/p3p1pp/n4p1n/1pp5/1QN3PP/2PpR3/PB3K2/RN3B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 810);
    }

    #[test]
    fn gentest_5945() {
        let board = Board::from_fen("1r2kbr1/p3p1pp/n7/1pp2p2/1QN3nP/2PpR3/PB4K1/RN3B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 889);
    }

    #[test]
    fn gentest_5946() {
        let board = Board::from_fen("1r2kbr1/p1n1p1pp/8/1pp2p2/1Q4nP/2PpR2K/PB1N4/RN3B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1022);
    }

    #[test]
    fn gentest_5947() {
        let board = Board::from_fen("1r3br1/p1nkp1pp/7n/1pp2p2/5Q1P/2PpR2K/PB1N4/RN3B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 988);
    }

    #[test]
    fn gentest_5948() {
        let board = Board::from_fen("1r3br1/2nkp1pp/7n/ppp2pQ1/7P/2Pp1R1K/PB1N4/RN3B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 941);
    }

    #[test]
    fn gentest_5949() {
        let board = Board::from_fen("1r2nbr1/3kp1pp/7n/p1p2pQ1/1p2N2P/2Pp1R1K/PB6/RN3B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1026);
    }

    #[test]
    fn gentest_5950() {
        let board = Board::from_fen("2r1nbr1/3kp1Qp/7n/p1p2p2/1p5P/2Pp1R1K/PB1N4/RN3B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 876);
    }

    #[test]
    fn gentest_5951() {
        let board = Board::from_fen("3rnbr1/3kp2p/7n/p1p5/1p3p1P/2Pp1R1K/PB1N4/RN3BQ1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 886);
    }

    #[test]
    fn gentest_5952() {
        let board = Board::from_fen("3rnbr1/3kp2p/7n/p1p5/5p1P/2pp1R1K/PB1NB3/RN3Q2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 815);
    }

    #[test]
    fn gentest_5953() {
        let board = Board::from_fen("3rnb2/3kp2p/7n/p7/2p2prP/2pp1R1K/PB1NB3/RN2Q3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 861);
    }

    #[test]
    fn gentest_5954() {
        let board = Board::from_fen("3rnb2/4p2p/3k3n/p7/2p2prP/2ppR2K/PB1NB3/RN1Q4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1024);
    }

    #[test]
    fn gentest_5955() {
        let board = Board::from_fen("3rnb2/4p2p/3k4/p4n2/2p3rP/2ppp2K/PB1N4/RN1Q1B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 902);
    }

    #[test]
    fn gentest_5956() {
        let board = Board::from_fen("3rnb2/4p2p/3k4/p4n2/2p2r1P/2ppp2K/PB1NB3/RN4Q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1284);
    }

    #[test]
    fn gentest_5957() {
        let board = Board::from_fen("3rnb2/4p3/7p/p2k1n2/2p2r1P/2ppp2K/PB1NB3/RNQ5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 884);
    }

    #[test]
    fn gentest_5958() {
        let board = Board::from_fen("3rnb2/4p3/7p/p2k1n2/P1p4r/2ppp3/1B1NB1K1/RNQ5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 934);
    }

    #[test]
    fn gentest_5959() {
        let board = Board::from_fen("1r2nb2/4p3/8/p2k1n1p/P1p4r/2Qpp3/1B1NB1K1/RN6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 932);
    }

    #[test]
    fn gentest_5960() {
        let board = Board::from_fen("1r2n3/4p1b1/8/p2kQn1p/P1p1N2r/3pp3/1B2B1K1/RN6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 70);
        assert_eq!(perft(&board, 3, &PRECOMP), 2303);
    }

    #[test]
    fn gentest_5961() {
        let board = Board::from_fen("4n3/4p3/8/p2kbn1p/P1p1N2r/1r1pp3/1B4K1/RN3B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 819);
    }

    #[test]
    fn gentest_5962() {
        let board = Board::from_fen("4n3/4p1n1/8/p2kb2p/P1p1N2r/Rr1pp3/6K1/1NB2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 742);
    }

    #[test]
    fn gentest_5963() {
        let board = Board::from_fen("4n3/4p1n1/8/p2k3p/P1p1N2r/Rr2p3/1b1pB1K1/1NB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 923);
    }

    #[test]
    fn gentest_5964() {
        let board = Board::from_fen("4n3/4p1n1/8/p2k3p/Prp4r/R3pK2/1b1NB3/1NB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 616);
    }

    #[test]
    fn gentest_5965() {
        let board = Board::from_fen("4n3/4p1n1/2k5/p6p/r1p4r/R3pK2/1b2B3/1NB2N2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 694);
    }

    #[test]
    fn gentest_5966() {
        let board = Board::from_fen("4n3/4p1n1/2k5/p6p/2B4r/r3NK2/1b6/1NB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 664);
    }

    #[test]
    fn gentest_5967() {
        let board = Board::from_fen("1r2n3/4p1n1/2k5/p6p/2B4r/4NK2/1b1B4/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1014);
    }

    #[test]
    fn gentest_5968() {
        let board = Board::from_fen("3rn3/4p1n1/2k5/p4N1p/2B4r/4BK2/1b6/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1182);
    }

    #[test]
    fn gentest_5969() {
        let board = Board::from_fen("3rn3/1k4n1/8/p3pN1p/2B4r/5K2/1b6/1N4B1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1109);
    }

    #[test]
    fn gentest_5970() {
        let board = Board::from_fen("4n3/1k4N1/8/p3p2p/2B4r/5K2/1b5B/1N1r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 875);
    }

    #[test]
    fn gentest_5971() {
        let board = Board::from_fen("4n3/k7/8/p3pN1p/2B3r1/5K2/1b5B/1N1r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1152);
    }

    #[test]
    fn gentest_5972() {
        let board = Board::from_fen("4n3/k7/6r1/p3p2p/2B3N1/5K2/1b5B/1N1r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1046);
    }

    #[test]
    fn gentest_5973() {
        let board = Board::from_fen("4n1r1/k7/8/p3p3/2B3p1/8/1b2K2B/1N1r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 591);
    }

    #[test]
    fn gentest_5974() {
        let board = Board::from_fen("6r1/k1n2B2/8/p3p3/6p1/2N5/1b2K2B/3r4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 919);
    }

    #[test]
    fn gentest_5975() {
        let board = Board::from_fen("8/k1n2B2/8/p3p1r1/3r2p1/8/1b2K2B/3N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 709);
    }

    #[test]
    fn gentest_5976() {
        let board = Board::from_fen("4B3/k7/8/pn2p1r1/3r2p1/8/1b2K2B/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 551);
    }

    #[test]
    fn gentest_5977() {
        let board = Board::from_fen("4B1r1/k1n5/8/p3p3/3r2p1/8/1b2K3/3N2B1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 517);
        assert_eq!(perft(&board, 3, &PRECOMP), 9304);
    }

    #[test]
    fn gentest_5978() {
        let board = Board::from_fen("4B1r1/k7/4n3/p3p3/3r2p1/6B1/1b2K3/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 695);
    }

    #[test]
    fn gentest_5979() {
        let board = Board::from_fen("3nB3/k5r1/8/p3p3/3r2p1/4K1B1/1b6/3N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 620);
    }

    #[test]
    fn gentest_5980() {
        let board = Board::from_fen("3n4/k5r1/4B3/p3p3/2r3p1/4K1B1/1b6/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 716);
    }

    #[test]
    fn gentest_5981() {
        let board = Board::from_fen("3n4/k2B2r1/r7/p3p3/6p1/4K1B1/1b6/3N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 642);
    }

    #[test]
    fn gentest_5982() {
        let board = Board::from_fen("3nB3/k5r1/r7/p3p3/3b2p1/3K2B1/8/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 722);
    }

    #[test]
    fn gentest_5983() {
        let board = Board::from_fen("3n4/k5r1/3r4/p3p3/B5p1/3Kb1B1/8/3N4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 241);
        assert_eq!(perft(&board, 3, &PRECOMP), 4304);
    }

    #[test]
    fn gentest_5984() {
        let board = Board::from_fen("3n4/k1r5/3r4/pK2p3/B5p1/4b1B1/8/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 522);
    }

    #[test]
    fn gentest_5985() {
        let board = Board::from_fen("3n4/k4r2/3r4/pK2p3/B5pB/8/8/3N2b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 550);
        assert_eq!(perft(&board, 3, &PRECOMP), 8668);
    }

    #[test]
    fn gentest_5986() {
        let board = Board::from_fen("3n4/k4r2/1r6/K3p3/B5p1/8/5B2/3N2b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 327);
        assert_eq!(perft(&board, 3, &PRECOMP), 8764);
    }

    #[test]
    fn gentest_5987() {
        let board = Board::from_fen("3n4/k1r5/1r6/K3p3/B5pB/8/8/3N2b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 639);
    }

    #[test]
    fn gentest_5988() {
        let board = Board::from_fen("3n4/k1r5/1r6/K7/B3p1pB/8/8/3N2b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 619);
    }

    #[test]
    fn gentest_5989() {
        let board = Board::from_fen("3B4/k7/1r6/K7/B3p1p1/8/2r5/3N2b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 526);
        assert_eq!(perft(&board, 3, &PRECOMP), 8918);
    }

    #[test]
    fn gentest_5990() {
        let board = Board::from_fen("8/k7/1b6/1K6/B3p1p1/8/2r5/3N4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 202);
        assert_eq!(perft(&board, 3, &PRECOMP), 4714);
    }

    #[test]
    fn gentest_5991() {
        let board = Board::from_fen("8/k1b5/8/1K6/B3p3/2N3p1/2r5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 262);
        assert_eq!(perft(&board, 3, &PRECOMP), 3095);
    }

    #[test]
    fn gentest_5992() {
        let board = Board::from_fen("8/k7/2K5/8/4pb2/1BN3p1/2r5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 341);
        assert_eq!(perft(&board, 3, &PRECOMP), 7453);
    }

    #[test]
    fn gentest_5993() {
        let board = Board::from_fen("8/k7/8/3K4/4pb2/1BN3p1/2r5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 416);
        assert_eq!(perft(&board, 3, &PRECOMP), 6074);
    }

    #[test]
    fn gentest_5994() {
        let board = Board::from_fen("8/k7/8/8/B3Kb2/2N3p1/3r4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 426);
    }

    #[test]
    fn gentest_5995() {
        let board = Board::from_fen("8/k7/8/8/B3K3/6p1/1r1b4/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 363);
        assert_eq!(perft(&board, 3, &PRECOMP), 5668);
    }

    #[test]
    fn gentest_5996() {
        let board = Board::from_fen("2B5/k7/1r6/8/4K3/6p1/3b4/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 387);
        assert_eq!(perft(&board, 3, &PRECOMP), 9605);
    }

    #[test]
    fn gentest_5997() {
        let board = Board::from_fen("8/1k6/1r5b/8/4K1B1/6p1/8/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 430);
        assert_eq!(perft(&board, 3, &PRECOMP), 6623);
    }

    #[test]
    fn gentest_5998() {
        let board = Board::from_fen("8/1k6/7b/8/8/3K2pB/8/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 326);
        assert_eq!(perft(&board, 3, &PRECOMP), 7932);
    }

    #[test]
    fn gentest_5999() {
        let board = Board::from_fen("8/1k6/8/8/5b2/3K2p1/1r6/5B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 180);
        assert_eq!(perft(&board, 3, &PRECOMP), 1853);
    }

    #[test]
    fn gentest_6000() {
        let board = Board::from_fen("8/1k6/8/6b1/3K4/6p1/1r2B3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 354);
        assert_eq!(perft(&board, 3, &PRECOMP), 8837);
    }

    #[test]
    fn gentest_6001() {
        let board = Board::from_fen("3r4/1k6/8/6b1/8/2K3p1/4B3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 374);
        assert_eq!(perft(&board, 3, &PRECOMP), 4894);
    }

    #[test]
    fn gentest_6002() {
        let board = Board::from_fen("3r4/k7/8/6b1/8/2K3p1/8/5B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 299);
        assert_eq!(perft(&board, 3, &PRECOMP), 7839);
    }

    #[test]
    fn gentest_6003() {
        let board = Board::from_fen("8/k3b3/8/8/8/2K3p1/4B3/3r4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 346);
        assert_eq!(perft(&board, 3, &PRECOMP), 4215);
    }

    #[test]
    fn gentest_6004() {
        let board = Board::from_fen("8/k3b3/8/8/2B5/1K4p1/8/5r2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 371);
        assert_eq!(perft(&board, 3, &PRECOMP), 9717);
    }

    #[test]
    fn gentest_6005() {
        let board = Board::from_fen("6B1/k7/8/6b1/8/1K4p1/5r2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 286);
        assert_eq!(perft(&board, 3, &PRECOMP), 3425);
    }

    #[test]
    fn gentest_6006() {
        let board = Board::from_fen("8/k7/8/3B2b1/1K6/5rp1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 389);
        assert_eq!(perft(&board, 3, &PRECOMP), 9268);
    }

    #[test]
    fn gentest_6007() {
        let board = Board::from_fen("8/k7/8/1K1B4/7b/1r4p1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 105);
        assert_eq!(perft(&board, 3, &PRECOMP), 1369);
    }

    #[test]
    fn gentest_6008() {
        let board = Board::from_fen("8/kr6/8/3B4/3K3b/6p1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 374);
        assert_eq!(perft(&board, 3, &PRECOMP), 7732);
    }

    #[test]
    fn gentest_6009() {
        let board = Board::from_fen("8/k7/8/3BK3/3r3b/6p1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 342);
        assert_eq!(perft(&board, 3, &PRECOMP), 3990);
    }

    #[test]
    fn gentest_6010() {
        let board = Board::from_fen("8/k7/3K4/8/2B4b/6p1/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 143);
        assert_eq!(perft(&board, 3, &PRECOMP), 1663);
    }

    #[test]
    fn gentest_6011() {
        let board = Board::from_fen("8/1k6/3K4/6b1/8/3B2p1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 228);
        assert_eq!(perft(&board, 3, &PRECOMP), 3261);
    }

    #[test]
    fn gentest_6012() {
        let board = Board::from_fen("k7/8/2K5/6b1/8/6p1/2B5/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 182);
        assert_eq!(perft(&board, 3, &PRECOMP), 2190);
    }

    #[test]
    fn gentest_6013() {
        let board = Board::from_fen("8/k3b3/8/1K6/8/6p1/2B5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 171);
        assert_eq!(perft(&board, 3, &PRECOMP), 2202);
    }

    #[test]
    fn gentest_6014() {
        let board = Board::from_fen("8/k7/2K5/8/8/b5p1/8/3B4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 126);
        assert_eq!(perft(&board, 3, &PRECOMP), 1534);
    }

    #[test]
    fn gentest_6015() {
        let board = Board::from_fen("8/k7/2K5/8/8/b7/4B3/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 204);
        assert_eq!(perft(&board, 3, &PRECOMP), 2477);
    }

    #[test]
    fn gentest_6016() {
        let board = Board::from_fen("8/k1K5/8/8/8/b7/5b2/3B4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 167);
        assert_eq!(perft(&board, 3, &PRECOMP), 2990);
    }

    #[test]
    fn gentest_6017() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_6018() {
        let board = Board::from_fen("rnbqkbnr/ppp1pppp/8/3p4/P7/4P3/1PPP1PPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 863);
    }

    #[test]
    fn gentest_6019() {
        let board = Board::from_fen("rnbqkbnr/ppp1pppp/8/3p4/P1P5/4P3/1P1P1PPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 860);
    }

    #[test]
    fn gentest_6020() {
        let board = Board::from_fen("rnbqkbnr/p1p1pppp/1p6/3p4/P1PP4/3BP3/1P3PPP/RNBQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1095);
    }

    #[test]
    fn gentest_6021() {
        let board = Board::from_fen("r1bqkbnr/p3pppp/np6/2pp4/P1PP4/R2BP3/1P3PPP/1NBQK1NR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1047);
    }

    #[test]
    fn gentest_6022() {
        let board = Board::from_fen("1rbqkbnr/p3pppp/np4B1/2pp4/P1PP4/4P3/1P3PPP/RNBQK1NR b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 958);
    }

    #[test]
    fn gentest_6023() {
        let board = Board::from_fen("1rb1kbnr/p1q1pppp/np4B1/2pp4/P1PP4/2N1P3/1P3PPP/R1BQK1NR w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1341);
    }

    #[test]
    fn gentest_6024() {
        let board = Board::from_fen("1rb1kbnr/p3ppp1/np6/2pp4/P1PPBq2/2N1P3/1P3PPP/R1BQK1NR b Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1780);
    }

    #[test]
    fn gentest_6025() {
        let board = Board::from_fen("3rkbnr/pb2ppp1/np6/2pp4/P1PPBq2/4P3/NP3PPP/R1BQK1NR w Kk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1665);
    }

    #[test]
    fn gentest_6026() {
        let board = Board::from_fen("3rkbnr/pb2ppp1/np6/2pP4/P2PB3/4q3/NP3PPP/R1BQ1KNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1605);
    }

    #[test]
    fn gentest_6027() {
        let board = Board::from_fen("1r2kbnr/pb2ppp1/np6/2pP4/P2PB2P/q7/NP3PP1/R1BQ1KNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1502);
    }

    #[test]
    fn gentest_6028() {
        let board = Board::from_fen("1r2kbnr/pb2p1p1/np6/2pP1p1Q/P2PB2P/qP6/N4PP1/R1B2KNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 154);
        assert_eq!(perft(&board, 3, &PRECOMP), 4914);
    }

    #[test]
    fn gentest_6029() {
        let board = Board::from_fen("1r3bn1/pb1kp1pr/np6/2pP1p1Q/P2PB2P/BP6/N4PP1/R4KNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1108);
    }

    #[test]
    fn gentest_6030() {
        let board = Board::from_fen("1r3bn1/pb1kp2r/np6/2pP1ppQ/P2PB2P/BP3N2/5PP1/R1N2K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1214);
    }

    #[test]
    fn gentest_6031() {
        let board = Board::from_fen("1r1k1bn1/pb2p2r/np6/P1pP2pQ/3Pp2P/BP3N2/5PP1/R1N2K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 975);
    }

    #[test]
    fn gentest_6032() {
        let board = Board::from_fen("1r1k1bn1/pb2p2Q/np6/P1pP4/1P1Pp2p/B4N2/5PP1/R1N2K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1012);
    }

    #[test]
    fn gentest_6033() {
        let board = Board::from_fen("1r1k1b1Q/pb2p3/np5n/P1pP4/1P1Pp3/B4N1p/5PP1/R1N2K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 897);
    }

    #[test]
    fn gentest_6034() {
        let board = Board::from_fen("1r1k1b1Q/pb2p3/np6/P1pP1n2/1P1Pp3/B4N1p/5PPR/R1N3K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 973);
    }

    #[test]
    fn gentest_6035() {
        let board = Board::from_fen("1r1k1b1Q/p3p3/n7/p1pb1n2/1P1Pp3/B2N1N1p/5PPR/R5K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1505);
    }

    #[test]
    fn gentest_6036() {
        let board = Board::from_fen("1r1k1b2/p3p3/n1Q5/p2b1n2/1P1pp3/B2N1N1p/5PPR/R5K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1552);
    }

    #[test]
    fn gentest_6037() {
        let board = Board::from_fen("1r1k1b2/p3p3/n2n4/p1Qb4/1P1pp3/B2N1N2/5PpR/R5K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1401);
    }

    #[test]
    fn gentest_6038() {
        let board = Board::from_fen("r2k1b2/p3p2R/n2n4/p1Qb4/1P1pp3/B2N1N2/5Pp1/1R4K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1574);
    }

    #[test]
    fn gentest_6039() {
        let board = Board::from_fen("r2k1b2/p3pn1R/n7/2Qb4/pP1pp3/3N1N2/1B3Pp1/1R4K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 1119);
    }

    #[test]
    fn gentest_6040() {
        let board = Board::from_fen("1r1k1b2/p3pn1R/n7/3b4/pPQpp3/B2N1N2/5Pp1/1R4K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1291);
    }

    #[test]
    fn gentest_6041() {
        let board = Board::from_fen("1r2kb2/p1Q1p2R/n7/3bn3/pP1pp3/B2N1N2/5Pp1/1R4K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 1495);
    }

    #[test]
    fn gentest_6042() {
        let board = Board::from_fen("3rkb2/p1Q1p2R/n7/3bn3/pP1pp3/3N1N2/1B3Pp1/1R4K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1622);
    }

    #[test]
    fn gentest_6043() {
        let board = Board::from_fen("3rkb2/p1Q1p2R/n1n5/3b4/pP1p4/3N1p2/5Pp1/BR4K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 960);
    }

    #[test]
    fn gentest_6044() {
        let board = Board::from_fen("3rkb2/p1Q1R3/n1n5/3b4/pP1p4/3N1p2/5P1K/BR4n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 73);
        assert_eq!(perft(&board, 3, &PRECOMP), 2015);
    }

    #[test]
    fn gentest_6045() {
        let board = Board::from_fen("3rkb2/p7/n1n5/3b4/pP1p4/2QN1p2/5P1K/BR4n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 890);
    }

    #[test]
    fn gentest_6046() {
        let board = Board::from_fen("3rkb2/p7/n1Q5/n2b4/pP1p4/1R1N1p2/5P1K/B5n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 151);
        assert_eq!(perft(&board, 3, &PRECOMP), 4194);
    }

    #[test]
    fn gentest_6047() {
        let board = Board::from_fen("1n1rkb2/p7/2n5/3b4/pP1p4/1R1N1pK1/5P2/B5n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 545);
        assert_eq!(perft(&board, 3, &PRECOMP), 9806);
    }

    #[test]
    fn gentest_6048() {
        let board = Board::from_fen("1n1rkb2/p7/2n1b3/8/pP1p4/4RpK1/1N3P2/B5n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 424);
    }

    #[test]
    fn gentest_6049() {
        let board = Board::from_fen("1n1r4/p3bk2/2n1b3/8/pP1p4/5pK1/1N3P2/B3R1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 684);
    }

    #[test]
    fn gentest_6050() {
        let board = Board::from_fen("1n1r4/p4k2/2n1R3/8/pP1p1K1b/5p2/1N3P2/B5n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 511);
    }

    #[test]
    fn gentest_6051() {
        let board = Board::from_fen("3r4/p2n1k2/2R5/n7/pP1p1K1b/5p2/1N3P2/B5n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 717);
    }

    #[test]
    fn gentest_6052() {
        let board = Board::from_fen("2Rr4/p2n4/5k2/n7/pPNp1K1b/5p2/5P2/B5n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 466);
    }

    #[test]
    fn gentest_6053() {
        let board = Board::from_fen("2Rr4/p4k2/1N6/n1n5/pP1p1K1b/5p2/5P2/B5n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 690);
    }

    #[test]
    fn gentest_6054() {
        let board = Board::from_fen("1R1r4/p4k2/1N6/n1n5/1P1p1K1b/p4p2/1B3P2/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 758);
    }

    #[test]
    fn gentest_6055() {
        let board = Board::from_fen("1R1r4/p4k2/nN6/n7/1P1p1K2/B4p2/5b2/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 562);
        assert_eq!(perft(&board, 3, &PRECOMP), 9986);
    }

    #[test]
    fn gentest_6056() {
        let board = Board::from_fen("1R1r4/p4k2/nN6/nP6/3p2K1/B4p2/8/4b1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 716);
    }

    #[test]
    fn gentest_6057() {
        let board = Board::from_fen("1R1r4/p4k2/PN1n4/8/3p2K1/B4p2/8/4b1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 552);
    }

    #[test]
    fn gentest_6058() {
        let board = Board::from_fen("1R6/p2r1k2/PN1n4/8/3p2K1/B4p2/8/4b1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 626);
    }

    #[test]
    fn gentest_6059() {
        let board = Board::from_fen("1R3B2/p4k2/PN6/3r4/3pn1K1/5p2/8/4b1n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 597);
    }

    #[test]
    fn gentest_6060() {
        let board = Board::from_fen("6R1/p4k2/PN5B/2nr4/3p2K1/5p2/8/4b1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 726);
    }

    #[test]
    fn gentest_6061() {
        let board = Board::from_fen("6R1/p4k2/nN6/3r4/3p2K1/5p2/3B1b2/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 616);
    }

    #[test]
    fn gentest_6062() {
        let board = Board::from_fen("6R1/p7/n3k3/3N4/3p1K2/5p2/3B1b2/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 341);
        assert_eq!(perft(&board, 3, &PRECOMP), 5334);
    }

    #[test]
    fn gentest_6063() {
        let board = Board::from_fen("8/p7/n3k3/3N4/3p1KR1/5p2/3B1b2/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 328);
        assert_eq!(perft(&board, 3, &PRECOMP), 6181);
    }

    #[test]
    fn gentest_6064() {
        let board = Board::from_fen("8/p3N3/n3k1R1/8/3p1K2/5p2/3B4/4b1n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 85);
        assert_eq!(perft(&board, 3, &PRECOMP), 1334);
    }

    #[test]
    fn gentest_6065() {
        let board = Board::from_fen("8/p3k3/n5R1/4K3/3p4/5p2/3b4/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 346);
        assert_eq!(perft(&board, 3, &PRECOMP), 5621);
    }

    #[test]
    fn gentest_6066() {
        let board = Board::from_fen("5k2/p7/nR1K4/8/3p4/5p2/3b4/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 278);
        assert_eq!(perft(&board, 3, &PRECOMP), 5608);
    }

    #[test]
    fn gentest_6067() {
        let board = Board::from_fen("5k2/8/np6/3K2b1/3p4/5p2/8/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 157);
        assert_eq!(perft(&board, 3, &PRECOMP), 820);
    }

    #[test]
    fn gentest_6068() {
        let board = Board::from_fen("5k2/8/np6/8/3K4/5p2/3b4/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 113);
        assert_eq!(perft(&board, 3, &PRECOMP), 2499);
    }

    #[test]
    fn gentest_6069() {
        let board = Board::from_fen("5k2/8/np6/8/8/4Kp2/3b4/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 100);
        assert_eq!(perft(&board, 3, &PRECOMP), 487);
    }

    #[test]
    fn gentest_6070() {
        let board = Board::from_fen("4k3/8/np6/8/8/5p2/2K5/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 1469);
        assert_eq!(perft(&board, 4, &PRECOMP), 8500);
    }

    #[test]
    fn gentest_6071() {
        let board = Board::from_fen("6k1/8/np6/8/8/5p2/8/3K2n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 52);
        assert_eq!(perft(&board, 3, &PRECOMP), 299);
        assert_eq!(perft(&board, 4, &PRECOMP), 4330);
    }

    #[test]
    fn gentest_6072() {
        let board = Board::from_fen("8/7k/np6/8/8/5p2/1K6/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 1439);
        assert_eq!(perft(&board, 4, &PRECOMP), 7463);
    }

    #[test]
    fn gentest_6073() {
        let board = Board::from_fen("8/7k/np6/8/8/5p2/K7/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 65);
        assert_eq!(perft(&board, 3, &PRECOMP), 340);
        assert_eq!(perft(&board, 4, &PRECOMP), 4941);
    }

    #[test]
    fn gentest_6074() {
        let board = Board::from_fen("8/8/np4k1/8/8/5p2/8/K5n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 47);
        assert_eq!(perft(&board, 3, &PRECOMP), 774);
        assert_eq!(perft(&board, 4, &PRECOMP), 4378);
    }

    #[test]
    fn gentest_6075() {
        let board = Board::from_fen("8/2n4k/1p6/8/8/5p2/K7/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 75);
        assert_eq!(perft(&board, 3, &PRECOMP), 418);
        assert_eq!(perft(&board, 4, &PRECOMP), 6433);
    }

    #[test]
    fn gentest_6076() {
        let board = Board::from_fen("8/2n4k/1p6/8/8/1K6/5p2/6n1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 142);
        assert_eq!(perft(&board, 3, &PRECOMP), 2920);
    }

    #[test]
    fn gentest_6077() {
        let board = Board::from_fen("8/2n4k/1p6/8/K7/8/4n3/5b2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 60);
        assert_eq!(perft(&board, 3, &PRECOMP), 305);
        assert_eq!(perft(&board, 4, &PRECOMP), 6611);
    }

    #[test]
    fn gentest_6078() {
        let board = Board::from_fen("8/2n4k/1p6/8/8/K7/8/5bn1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 104);
        assert_eq!(perft(&board, 3, &PRECOMP), 2294);
    }

    #[test]
    fn gentest_6079() {
        let board = Board::from_fen("8/7k/1p6/1n6/K7/8/4b3/6n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 40);
        assert_eq!(perft(&board, 3, &PRECOMP), 165);
        assert_eq!(perft(&board, 4, &PRECOMP), 3577);
    }

    #[test]
    fn gentest_6080() {
        let board = Board::from_fen("8/7k/1p6/1n6/K7/8/8/5bn1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 45);
        assert_eq!(perft(&board, 3, &PRECOMP), 930);
        assert_eq!(perft(&board, 4, &PRECOMP), 4086);
    }

    #[test]
    fn gentest_6081() {
        let board = Board::from_fen("7k/8/1p6/1n6/1K6/5n2/8/5b2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 44);
        assert_eq!(perft(&board, 3, &PRECOMP), 165);
        assert_eq!(perft(&board, 4, &PRECOMP), 3679);
    }

    #[test]
    fn gentest_6082() {
        let board = Board::from_fen("7k/8/1p6/1n6/8/5n2/1K4b1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 121);
        assert_eq!(perft(&board, 3, &PRECOMP), 2635);
    }

    #[test]
    fn gentest_6083() {
        let board = Board::from_fen("7k/8/1p6/1n6/8/8/7n/2K2b2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 80);
        assert_eq!(perft(&board, 3, &PRECOMP), 417);
        assert_eq!(perft(&board, 4, &PRECOMP), 8120);
    }

    #[test]
    fn gentest_6084() {
        let board = Board::from_fen("7k/8/1p6/1n6/8/3b4/7n/K7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 43);
        assert_eq!(perft(&board, 3, &PRECOMP), 942);
        assert_eq!(perft(&board, 4, &PRECOMP), 4096);
    }

    #[test]
    fn gentest_6085() {
        let board = Board::from_fen("7k/2n5/1p6/8/8/8/1Kb4n/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 123);
        assert_eq!(perft(&board, 3, &PRECOMP), 488);
        assert_eq!(perft(&board, 4, &PRECOMP), 9720);
    }

    #[test]
    fn gentest_6086() {
        let board = Board::from_fen("7k/8/1p6/3n4/8/8/2bK3n/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 101);
        assert_eq!(perft(&board, 3, &PRECOMP), 2208);
        assert_eq!(perft(&board, 4, &PRECOMP), 8793);
    }

    #[test]
    fn gentest_6087() {
        let board = Board::from_fen("8/6k1/1p6/3n1b2/8/8/7n/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 539);
    }

    #[test]
    fn gentest_6088() {
        let board = Board::from_fen("8/6k1/1p6/3n4/8/7b/7n/2K5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 3048);
    }

    #[test]
    fn gentest_6089() {
        let board = Board::from_fen("6k1/8/1p6/3n1b2/8/8/7n/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 108);
        assert_eq!(perft(&board, 3, &PRECOMP), 431);
    }

    #[test]
    fn gentest_6090() {
        let board = Board::from_fen("6k1/8/1p6/3n4/4b3/8/7n/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 97);
        assert_eq!(perft(&board, 3, &PRECOMP), 2470);
        assert_eq!(perft(&board, 4, &PRECOMP), 9975);
    }

    #[test]
    fn gentest_6091() {
        let board = Board::from_fen("6k1/8/1p6/8/1n6/8/2b4n/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 69);
        assert_eq!(perft(&board, 3, &PRECOMP), 346);
        assert_eq!(perft(&board, 4, &PRECOMP), 8125);
    }

    #[test]
    fn gentest_6092() {
        let board = Board::from_fen("6k1/8/1p6/8/1n6/3b4/7n/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 77);
        assert_eq!(perft(&board, 3, &PRECOMP), 1873);
        assert_eq!(perft(&board, 4, &PRECOMP), 8261);
    }

    #[test]
    fn gentest_6093() {
        let board = Board::from_fen("6k1/7b/1p6/8/8/8/n2K3n/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 68);
        assert_eq!(perft(&board, 3, &PRECOMP), 279);
        assert_eq!(perft(&board, 4, &PRECOMP), 5603);
    }

    #[test]
    fn gentest_6094() {
        let board = Board::from_fen("6k1/7b/1p6/8/1n6/8/3K3n/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 108);
        assert_eq!(perft(&board, 3, &PRECOMP), 2398);
        assert_eq!(perft(&board, 4, &PRECOMP), 9825);
    }

    #[test]
    fn gentest_6095() {
        let board = Board::from_fen("6k1/8/8/1p6/1n6/8/2b4n/2K5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 44);
        assert_eq!(perft(&board, 3, &PRECOMP), 216);
        assert_eq!(perft(&board, 4, &PRECOMP), 4807);
    }

    #[test]
    fn gentest_6096() {
        let board = Board::from_fen("6k1/8/8/1p3b2/1n6/8/7n/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 92);
        assert_eq!(perft(&board, 3, &PRECOMP), 2218);
        assert_eq!(perft(&board, 4, &PRECOMP), 9475);
    }

    #[test]
    fn gentest_6097() {
        let board = Board::from_fen("7k/8/8/1p6/1n2b3/8/7n/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 100);
        assert_eq!(perft(&board, 3, &PRECOMP), 468);
    }

    #[test]
    fn gentest_6098() {
        let board = Board::from_fen("7k/8/8/1p6/1n6/8/7n/4K2b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 73);
        assert_eq!(perft(&board, 3, &PRECOMP), 1498);
        assert_eq!(perft(&board, 4, &PRECOMP), 7119);
    }

    #[test]
    fn gentest_6099() {
        let board = Board::from_fen("7k/8/8/1p6/8/5n2/n7/3K3b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 32);
        assert_eq!(perft(&board, 3, &PRECOMP), 172);
        assert_eq!(perft(&board, 4, &PRECOMP), 3178);
    }

    #[test]
    fn gentest_6100() {
        let board = Board::from_fen("7k/8/8/1p4n1/8/8/nK6/7b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 115);
        assert_eq!(perft(&board, 3, &PRECOMP), 2348);
        assert_eq!(perft(&board, 4, &PRECOMP), 9102);
    }

    #[test]
    fn gentest_6101() {
        let board = Board::from_fen("6k1/8/8/1p4n1/1n6/8/2K5/7b w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 168);
        assert_eq!(perft(&board, 3, &PRECOMP), 777);
    }

    #[test]
    fn gentest_6102() {
        let board = Board::from_fen("8/5k2/8/1p4n1/1n6/8/8/2K4b b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 105);
        assert_eq!(perft(&board, 3, &PRECOMP), 2742);
    }

    #[test]
    fn gentest_6103() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_6104() {
        let board = Board::from_fen("r1bqkbnr/pppppppp/2n5/8/4PP2/8/PPPP2PP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 658);
    }

    #[test]
    fn gentest_6105() {
        let board = Board::from_fen("r1bqkbnr/ppppp1p1/2n2p1p/8/4PP2/7P/PPPP2P1/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 557);
    }

    #[test]
    fn gentest_6106() {
        let board = Board::from_fen("r1bqkbnr/1pppp1p1/2n2p1p/p3P3/5P2/6PP/PPPP4/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 623);
    }

    #[test]
    fn gentest_6107() {
        let board = Board::from_fen("2bqkbnr/1pp1p1p1/r1n2p1p/p2pP3/5PP1/7P/PPPP4/RNBQKBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_6108() {
        let board = Board::from_fen("2bqkbnr/2p1p1p1/rpn2p1p/p2pP3/2P2PPP/8/PP1P4/RNBQKBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 827);
    }

    #[test]
    fn gentest_6109() {
        let board = Board::from_fen("2bqkbnr/2p1p1p1/rp3p1p/p2pP3/2P2PPP/3P4/PPn5/RNBQKBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 3637);
    }

    #[test]
    fn gentest_6110() {
        let board = Board::from_fen("2bqkbnr/2p1p1p1/rp3p2/p2pP2p/2P2PPP/3P4/PPn1K2R/RNBQ1BN1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 946);
    }

    #[test]
    fn gentest_6111() {
        let board = Board::from_fen("3qkbnr/2p1p1p1/rp3p2/p2pPb1p/2P2PPP/n2P4/PP2K1BR/RNBQ2N1 w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1280);
    }

    #[test]
    fn gentest_6112() {
        let board = Board::from_fen("3qkbnr/2p1p1p1/rp3p2/p2pP2p/2P1bPPP/N2P3R/PP2K1B1/R1BQ2N1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1073);
    }

    #[test]
    fn gentest_6113() {
        let board = Board::from_fen("3q1bn1/2p1pkp1/rp3P1r/p2p3p/2P1bPPP/N2P3R/PP2K1B1/R1BQ2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1349);
    }

    #[test]
    fn gentest_6114() {
        let board = Board::from_fen("3q1bn1/2p1pkp1/rp3P1r/p2p1b1p/2P2PPP/NQ1P3R/PP4B1/R1BK2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1330);
    }

    #[test]
    fn gentest_6115() {
        let board = Board::from_fen("q4bn1/2p1pkpb/rp3P1r/p2P3p/5PPP/NQ1P3R/PP4B1/R1BK2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1046);
    }

    #[test]
    fn gentest_6116() {
        let board = Board::from_fen("4qbn1/2p1pkpb/rp3P1r/p2P3p/5PPP/1Q1P3R/PP4B1/RNB1K1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1130);
    }

    #[test]
    fn gentest_6117() {
        let board = Board::from_fen("4qbn1/4pk1b/rpp2Ppr/p2P3p/5PPP/1Q1P3R/PP2N1B1/RNB1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 725);
    }

    #[test]
    fn gentest_6118() {
        let board = Board::from_fen("4qb2/4pk1b/rpp2npr/p2P3p/4NPPP/1Q1P3R/PP2N1B1/R1B1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1043);
    }

    #[test]
    fn gentest_6119() {
        let board = Board::from_fen("4qb2/r4k1b/1pp1pnpr/p2P3p/4NPPP/1Q1P3R/PP2NKB1/R1B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1496);
    }

    #[test]
    fn gentest_6120() {
        let board = Board::from_fen("5b2/r2q1k1b/1pp1pnpr/p2P3p/5PPP/1QNP2NR/PP3KB1/R1B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1462);
    }

    #[test]
    fn gentest_6121() {
        let board = Board::from_fen("4q3/r3bk1b/1pp1pnpr/p2P3p/P4PPP/1QNP2NR/1P3KB1/R1B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1502);
    }

    #[test]
    fn gentest_6122() {
        let board = Board::from_fen("4q3/r3bk1b/1p2pnpr/p1pP3p/P2P1PPP/1QN3NR/1P1B1KB1/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1663);
    }

    #[test]
    fn gentest_6123() {
        let board = Board::from_fen("4q3/4bk1b/1pr1pnpr/p1pP3p/P2P1PPP/1QN3NR/1P1B2B1/R4K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1292);
    }

    #[test]
    fn gentest_6124() {
        let board = Board::from_fen("4q1b1/4bk2/1pP1pnpr/p1p4p/P2P1PPP/1QN3NR/1P4B1/R3BK2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1090);
    }

    #[test]
    fn gentest_6125() {
        let board = Board::from_fen("6b1/4bk2/1pq1p1pr/p1pn3p/P2P1PPP/1QN3N1/1P4BR/R3BK2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1409);
    }

    #[test]
    fn gentest_6126() {
        let board = Board::from_fen("6b1/4bk2/1pq1p1pr/p2n3p/P2p1PPP/1QN3N1/1P4BR/R3BK2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1530);
    }

    #[test]
    fn gentest_6127() {
        let board = Board::from_fen("6br/4bk2/1pq1pnp1/p6p/P2p1PPP/1Q4N1/1P4BR/RN2BK2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1662);
    }

    #[test]
    fn gentest_6128() {
        let board = Board::from_fen("6br/4bk2/1p2pnp1/p6p/q2p1PPP/NQB3N1/1P4BR/R4K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1313);
    }

    #[test]
    fn gentest_6129() {
        let board = Board::from_fen("7r/5k1b/1p1bpnp1/p6p/qQ1p1PPP/N1B3N1/1P4BR/R4K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1865);
    }

    #[test]
    fn gentest_6130() {
        let board = Board::from_fen("6kr/7b/1p1bpnp1/p6p/qQ1pNPPP/2B5/1P4BR/RN3K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1194);
    }

    #[test]
    fn gentest_6131() {
        let board = Board::from_fen("6kr/7b/1p2pnp1/p3b2p/qQ2NPPP/R1Bp4/1P4BR/1N3K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1012);
    }

    #[test]
    fn gentest_6132() {
        let board = Board::from_fen("4n1kr/7b/1p2p1p1/p3b2p/qQ2BPPP/R1Bp4/1P1N3R/1N3K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1084);
    }

    #[test]
    fn gentest_6133() {
        let board = Board::from_fen("4n1kr/7b/1pq1pbp1/p6p/1Q2BPPP/R1Bp4/1P1N4/1N3K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1227);
    }

    #[test]
    fn gentest_6134() {
        let board = Board::from_fen("4n1kr/7b/1pq1p1p1/p3B2P/1Q2BP1P/R2p4/1P1N4/1N3K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1162);
    }

    #[test]
    fn gentest_6135() {
        let board = Board::from_fen("4n1kr/4q2b/1p2p1p1/p3B2P/2Q1BP1P/R2p4/1P1N4/1N3K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 56);
        assert_eq!(perft(&board, 2, &PRECOMP), 1365);
    }

    #[test]
    fn gentest_6136() {
        let board = Board::from_fen("4nk1r/4q2b/1p2p1p1/p3B2P/4BP1P/R3Q3/1P1N4/1N3K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1411);
    }

    #[test]
    fn gentest_6137() {
        let board = Board::from_fen("5kr1/4q1nb/1p2p1p1/p3B2P/4BP1P/3RQ3/1P1N4/1N3K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1154);
    }

    #[test]
    fn gentest_6138() {
        let board = Board::from_fen("5kr1/4q1nb/1pB1p1p1/4B2P/p4P1P/N2RQ3/1P1N4/5K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 1239);
    }

    #[test]
    fn gentest_6139() {
        let board = Board::from_fen("5kr1/4q1nb/1pB1p1p1/4B2P/p4P1P/N2R4/1P1N1Q2/5K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 60);
        assert_eq!(perft(&board, 2, &PRECOMP), 1264);
    }

    #[test]
    fn gentest_6140() {
        let board = Board::from_fen("5kr1/5qBb/1pB1p1P1/8/p4P1P/N2R4/1P1N1Q2/5K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 222);
        assert_eq!(perft(&board, 3, &PRECOMP), 4407);
    }

    #[test]
    fn gentest_6141() {
        let board = Board::from_fen("7r/4kqBb/1pB1p1P1/1N6/p4P1P/3R4/1P1N1Q2/5K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 62);
        assert_eq!(perft(&board, 2, &PRECOMP), 1129);
    }

    #[test]
    fn gentest_6142() {
        let board = Board::from_fen("7r/4k1Bb/1p2p1q1/1N6/p4P1P/3R1B2/1P3Q2/1N3K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1345);
    }

    #[test]
    fn gentest_6143() {
        let board = Board::from_fen("7r/4k1B1/1p2p3/1N3b2/p4P1P/3R1B2/1P3Q2/1N4KR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 57);
        assert_eq!(perft(&board, 2, &PRECOMP), 1150);
    }

    #[test]
    fn gentest_6144() {
        let board = Board::from_fen("8/4k1B1/1p2p2r/1N3b2/pP3P1P/3R4/5QB1/1N4KR b - b3").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 955);
    }

    #[test]
    fn gentest_6145() {
        let board = Board::from_fen("8/4k1B1/1p5r/1N2pb2/1P3P1P/p2R4/6B1/1N2Q1KR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 54);
        assert_eq!(perft(&board, 2, &PRECOMP), 1202);
    }

    #[test]
    fn gentest_6146() {
        let board = Board::from_fen("8/1B2k1B1/1p2b2r/1N2p3/1P3P1P/p1R5/8/1N2Q1KR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 1207);
    }

    #[test]
    fn gentest_6147() {
        let board = Board::from_fen("7r/1B2k1B1/1p2b3/1N2p3/1P2QP1P/p1R5/8/1N4KR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 55);
        assert_eq!(perft(&board, 2, &PRECOMP), 1426);
    }

    #[test]
    fn gentest_6148() {
        let board = Board::from_fen("4N3/1B2k1B1/1p2b3/4p3/1P2QP1r/p1R5/8/1N4KR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1327);
    }

    #[test]
    fn gentest_6149() {
        let board = Board::from_fen("4N3/1B2k1B1/8/1p2p3/1P2QP1r/p1R5/b4K2/1N5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 62);
        assert_eq!(perft(&board, 2, &PRECOMP), 1196);
    }

    #[test]
    fn gentest_6150() {
        let board = Board::from_fen("4N3/1B2k1B1/8/1p2p3/1P2QPr1/p5R1/b7/1N4KR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 791);
    }

    #[test]
    fn gentest_6151() {
        let board = Board::from_fen("4N3/1B2k1B1/7R/1p2p1r1/1P2QP2/p5R1/8/1b4K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 54);
        assert_eq!(perft(&board, 2, &PRECOMP), 802);
    }

    #[test]
    fn gentest_6152() {
        let board = Board::from_fen("3kN3/1B4BQ/7R/1p2p1P1/1P6/p5R1/8/1b4K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 569);
        assert_eq!(perft(&board, 3, &PRECOMP), 6512);
    }

    #[test]
    fn gentest_6153() {
        let board = Board::from_fen("3kN3/1B4BQ/5R2/1p2p1P1/1P6/p5R1/8/1b4K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 57);
        assert_eq!(perft(&board, 2, &PRECOMP), 617);
    }

    #[test]
    fn gentest_6154() {
        let board = Board::from_fen("3kN3/1B4Bb/3R4/1p2p1P1/1P4R1/p7/8/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 858);
    }

    #[test]
    fn gentest_6155() {
        let board = Board::from_fen("4N3/1B3kBb/4R3/1p2p1P1/1P4R1/p7/8/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 388);
    }

    #[test]
    fn gentest_6156() {
        let board = Board::from_fen("4N3/5kBb/B3R3/1p4P1/1P1Rp3/p7/8/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 237);
        assert_eq!(perft(&board, 3, &PRECOMP), 1719);
    }

    #[test]
    fn gentest_6157() {
        let board = Board::from_fen("4N3/5kB1/4R3/1B3bP1/1P1Rp3/p7/8/6K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 358);
    }

    #[test]
    fn gentest_6158() {
        let board = Board::from_fen("4N3/5k2/4R3/1B2BbP1/1P5R/p3p3/8/6K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 665);
        assert_eq!(perft(&board, 3, &PRECOMP), 8273);
    }

    #[test]
    fn gentest_6159() {
        let board = Board::from_fen("4N3/5k2/4R3/1B2B1P1/1P2b2R/p7/4p3/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 93);
        assert_eq!(perft(&board, 3, &PRECOMP), 4152);
    }

    #[test]
    fn gentest_6160() {
        let board = Board::from_fen("4N3/5k1b/4R3/1B4P1/1P5R/p5B1/4pK2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 608);
        assert_eq!(perft(&board, 3, &PRECOMP), 8415);
    }

    #[test]
    fn gentest_6161() {
        let board = Board::from_fen("4Nk2/7b/4R3/1B4P1/1P5R/p5B1/8/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 437);
    }

    #[test]
    fn gentest_6162() {
        let board = Board::from_fen("4Nk2/8/4R1b1/1B4P1/1P6/p5B1/5K2/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 624);
        assert_eq!(perft(&board, 3, &PRECOMP), 6810);
    }

    #[test]
    fn gentest_6163() {
        let board = Board::from_fen("4N1k1/5b2/B3R3/6P1/1P6/p5B1/5K2/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 369);
    }

    #[test]
    fn gentest_6164() {
        let board = Board::from_fen("8/5bk1/B3RN2/6P1/1P6/p5B1/6K1/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 431);
        assert_eq!(perft(&board, 3, &PRECOMP), 4263);
    }

    #[test]
    fn gentest_6165() {
        let board = Board::from_fen("4Nkb1/8/B3R3/6P1/1P6/p5B1/6K1/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 54);
        assert_eq!(perft(&board, 2, &PRECOMP), 312);
    }

    #[test]
    fn gentest_6166() {
        let board = Board::from_fen("4Nk2/8/B3b3/6P1/1P5B/p7/6K1/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 413);
        assert_eq!(perft(&board, 3, &PRECOMP), 5614);
    }

    #[test]
    fn gentest_6167() {
        let board = Board::from_fen("4Nk2/8/B7/1P4P1/7B/p7/6K1/3b2R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 231);
        assert_eq!(perft(&board, 3, &PRECOMP), 5327);
    }

    #[test]
    fn gentest_6168() {
        let board = Board::from_fen("4Nk2/8/B5P1/1P6/b6B/p7/8/5KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 143);
        assert_eq!(perft(&board, 3, &PRECOMP), 1334);
    }

    #[test]
    fn gentest_6169() {
        let board = Board::from_fen("5k2/2N5/B5P1/1P1b4/7B/p7/8/5KR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 318);
        assert_eq!(perft(&board, 3, &PRECOMP), 7397);
    }

    #[test]
    fn gentest_6170() {
        let board = Board::from_fen("5k2/1BN5/6P1/1P6/8/p7/b4B2/5KR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 285);
        assert_eq!(perft(&board, 3, &PRECOMP), 3117);
    }

    #[test]
    fn gentest_6171() {
        let board = Board::from_fen("8/1BN1k3/6P1/1P6/8/pb6/5B2/4K1R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 443);
    }

    #[test]
    fn gentest_6172() {
        let board = Board::from_fen("8/1BNk2P1/8/1P6/8/pb6/4KB2/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 542);
        assert_eq!(perft(&board, 3, &PRECOMP), 6808);
    }

    #[test]
    fn gentest_6173() {
        let board = Board::from_fen("6b1/2k3P1/8/1P6/4B3/p7/4KB2/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 496);
    }

    #[test]
    fn gentest_6174() {
        let board = Board::from_fen("3k2b1/6P1/8/1P3B2/8/p7/4KB2/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 355);
        assert_eq!(perft(&board, 3, &PRECOMP), 3938);
    }

    #[test]
    fn gentest_6175() {
        let board = Board::from_fen("6b1/5kP1/8/1P3B2/3B4/p7/4K3/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 155);
        assert_eq!(perft(&board, 3, &PRECOMP), 5643);
    }

    #[test]
    fn gentest_6176() {
        let board = Board::from_fen("6b1/5kP1/8/1P3B2/3B4/8/p4K2/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 298);
        assert_eq!(perft(&board, 3, &PRECOMP), 3402);
    }

    #[test]
    fn gentest_6177() {
        let board = Board::from_fen("6b1/4k1PR/8/1P3B2/3B4/8/5K2/n7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 439);
    }

    #[test]
    fn gentest_6178() {
        let board = Board::from_fen("6b1/5kPR/8/1P2BB2/8/8/5K2/n7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 180);
        assert_eq!(perft(&board, 3, &PRECOMP), 1790);
    }

    #[test]
    fn gentest_6179() {
        let board = Board::from_fen("6b1/5kPR/8/1P2B3/8/3B4/5K2/n7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 207);
        assert_eq!(perft(&board, 3, &PRECOMP), 6940);
    }

    #[test]
    fn gentest_6180() {
        let board = Board::from_fen("6bR/6P1/4k3/1P6/5B2/3B4/5K2/n7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 344);
        assert_eq!(perft(&board, 3, &PRECOMP), 3817);
    }

    #[test]
    fn gentest_6181() {
        let board = Board::from_fen("6bR/8/4k3/1P6/5B2/3B4/5K2/n7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 321);
    }

    #[test]
    fn gentest_6182() {
        let board = Board::from_fen("8/5b2/4k3/1P6/8/3B2BR/5K2/n7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 301);
        assert_eq!(perft(&board, 3, &PRECOMP), 3794);
    }

    #[test]
    fn gentest_6183() {
        let board = Board::from_fen("8/8/4k3/1P6/8/6BR/5K2/nb6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 316);
        assert_eq!(perft(&board, 3, &PRECOMP), 8132);
    }

    #[test]
    fn gentest_6184() {
        let board = Board::from_fen("1B6/8/4k3/1P6/8/1n2R3/5K2/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 162);
        assert_eq!(perft(&board, 3, &PRECOMP), 2474);
    }

    #[test]
    fn gentest_6185() {
        let board = Board::from_fen("1B6/5k2/8/1Pn5/8/8/5K2/1b2R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 554);
    }

    #[test]
    fn gentest_6186() {
        let board = Board::from_fen("8/4k3/8/1Pn5/5B2/8/5K2/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 411);
        assert_eq!(perft(&board, 3, &PRECOMP), 8195);
    }

    #[test]
    fn gentest_6187() {
        let board = Board::from_fen("4k3/8/8/1Pn5/8/6B1/5K2/1b6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 295);
        assert_eq!(perft(&board, 3, &PRECOMP), 4629);
    }

    #[test]
    fn gentest_6188() {
        let board = Board::from_fen("3k4/8/8/1Pn5/7B/8/4K3/1b6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 60);
        assert_eq!(perft(&board, 3, &PRECOMP), 1122);
    }

    #[test]
    fn gentest_6189() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_6190() {
        let board = Board::from_fen("rnbqkbnr/p1pppppp/1p6/8/8/4P3/PPPPBPPP/RNBQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 587);
    }

    #[test]
    fn gentest_6191() {
        let board = Board::from_fen("rnbqkbnr/p1pppp2/1p4p1/7p/8/2P1P3/PP1PBPPP/RNBQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 662);
    }

    #[test]
    fn gentest_6192() {
        let board = Board::from_fen("rnbqkb1r/pBpppp2/1p3np1/7p/8/2P1P3/PP1P1PPP/RNBQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 794);
    }

    #[test]
    fn gentest_6193() {
        let board = Board::from_fen("rnbqkb1r/1Bpppp2/pp4p1/7p/6n1/2P1P3/PP1P1PPP/RNBQ1KNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 847);
    }

    #[test]
    fn gentest_6194() {
        let board = Board::from_fen("Bnbqk2r/2ppppb1/pp4p1/7p/P5n1/2P1P3/1P1P1PPP/RNBQ1KNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 934);
    }

    #[test]
    fn gentest_6195() {
        let board = Board::from_fen("Bnbqk2r/2pppp2/pp4p1/7p/P2b2Q1/2P1P3/1P1P1PPP/RNB2KNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1046);
    }

    #[test]
    fn gentest_6196() {
        let board = Board::from_fen("Bnbqk2r/2pppp2/pp4p1/7p/PP4Q1/2b1P1P1/3P1P1P/RNB2KNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1201);
    }

    #[test]
    fn gentest_6197() {
        let board = Board::from_fen("Bnbqk3/2pppp1r/pp3bp1/7p/PP4Q1/B3P1P1/3P1P1P/RN3KNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 990);
    }

    #[test]
    fn gentest_6198() {
        let board = Board::from_fen("Bnbqk3/2pppp1r/pp4p1/7p/PP4Q1/B1b1P1PP/3PKP2/RN4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1022);
    }

    #[test]
    fn gentest_6199() {
        let board = Board::from_fen("Bnbqk3/2pppp1r/p5p1/1p2b2p/PP5Q/B3P1PP/3PKP2/RN4NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 852);
    }

    #[test]
    fn gentest_6200() {
        let board = Board::from_fen("Bnbqk3/3ppp1r/p4Qp1/1pp1b2p/PP6/B3P1PP/3PKP2/RN4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1164);
    }

    #[test]
    fn gentest_6201() {
        let board = Board::from_fen("Bnbqk3/3ppp1r/5Qp1/ppp4p/PP1b4/B3P1PP/3P1P2/RN1K2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1125);
    }

    #[test]
    fn gentest_6202() {
        let board = Board::from_fen("1nbqk2b/3ppp1r/6p1/ppp4p/PP2B3/B3P1PP/3P1P2/RN1K2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 830);
    }

    #[test]
    fn gentest_6203() {
        let board = Board::from_fen("1nbq1k1b/3ppp1r/6p1/1pp4p/Pp2BP2/B3P1PP/3P4/RN1K2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 917);
    }

    #[test]
    fn gentest_6204() {
        let board = Board::from_fen("1nbq1k2/3ppp1r/6p1/1pp4p/Pp3P2/B2PP1PP/1b4B1/RN1K2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 916);
    }

    #[test]
    fn gentest_6205() {
        let board = Board::from_fen("1nbq1k2/3ppp1r/6p1/1pp1b2p/P4PP1/Bp1PP2P/6B1/RN1K2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1058);
    }

    #[test]
    fn gentest_6206() {
        let board = Board::from_fen("1nbq4/3pppkr/6p1/1ppBb2p/P4PPP/Bp1PP3/8/RN1K2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1204);
    }

    #[test]
    fn gentest_6207() {
        let board = Board::from_fen("1nb4k/2qppp1r/6p1/1PpBb2p/5PPP/Bp1PP3/8/RN1K2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1016);
    }

    #[test]
    fn gentest_6208() {
        let board = Board::from_fen("1nb4k/3ppp1r/6p1/qPp1b2p/5PPP/Bp1PP3/R5B1/1N1K2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1283);
    }

    #[test]
    fn gentest_6209() {
        let board = Board::from_fen("1nb4k/3pp1r1/5pp1/qPp1b2p/5PPP/Bp1PP3/R3K1B1/1N4NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1231);
    }

    #[test]
    fn gentest_6210() {
        let board = Board::from_fen("1nb4k/3pp1r1/5pp1/1Pp1b2p/5PPP/BpqPPN2/2R1K1B1/1N5R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1057);
    }

    #[test]
    fn gentest_6211() {
        let board = Board::from_fen("1nb4k/3pp1r1/5pp1/1Pp4p/5PPP/BpbqPN2/2R2KB1/1N5R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1372);
    }

    #[test]
    fn gentest_6212() {
        let board = Board::from_fen("1nb4k/4p1r1/5pp1/1Ppp3p/5PPP/BpbqP3/5KBN/1NR4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1131);
    }

    #[test]
    fn gentest_6213() {
        let board = Board::from_fen("1nb4k/4p1r1/5pp1/1Ppp3p/5PPP/Bp2P1K1/3bq1BN/1NR4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1165);
    }

    #[test]
    fn gentest_6214() {
        let board = Board::from_fen("1nb4k/4p1r1/5pp1/1PBp3p/2p2PPP/1p2P1K1/3bq1BN/1NR2R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1012);
    }

    #[test]
    fn gentest_6215() {
        let board = Board::from_fen("1n5k/1b2p1r1/1B4p1/1P1p1p1p/2p2PPP/1p2P1K1/3bq1BN/1NR2R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1074);
    }

    #[test]
    fn gentest_6216() {
        let board = Board::from_fen("1n5k/1b2p1r1/1B4p1/1P1p1p1p/2p2PPP/1p2P3/3b2KN/1N2RR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 677);
    }

    #[test]
    fn gentest_6217() {
        let board = Board::from_fen("1n5k/1b2pr2/1B4p1/1P1p1p2/2p2PpP/1p2P3/3b2KN/1N1R1R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 643);
    }

    #[test]
    fn gentest_6218() {
        let board = Board::from_fen("1n5k/1b3r2/1B4p1/1P1ppp2/2p2PpP/1p2P3/3N3N/3R1R1K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 608);
    }

    #[test]
    fn gentest_6219() {
        let board = Board::from_fen("1n6/1b3rk1/1B4p1/1P1ppp2/2p2PpP/1p2PN2/7N/3R1R1K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 738);
    }

    #[test]
    fn gentest_6220() {
        let board = Board::from_fen("1n6/1b3rk1/6p1/1PBppp2/2p2PpP/4PN2/1p5N/4RR1K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 747);
    }

    #[test]
    fn gentest_6221() {
        let board = Board::from_fen("1n6/Bb3r1k/6p1/1P2pp2/2pp1PpP/4PN2/1p5N/4RR1K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 603);
    }

    #[test]
    fn gentest_6222() {
        let board = Board::from_fen("1n6/Bb3r1k/1P4p1/4pp2/2pp1PNP/4Pp2/1p6/4RR1K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
    }

    #[test]
    fn gentest_6223() {
        let board = Board::from_fen("1n6/Bb3r1k/1P4p1/4p3/2pp1PpP/4Pp2/8/1n2R1RK w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 501);
        assert_eq!(perft(&board, 3, &PRECOMP), 9071);
    }

    #[test]
    fn gentest_6224() {
        let board = Board::from_fen("1n6/Bb3r1k/1P4R1/4p3/2pp1P1P/4Pp2/3n4/4R2K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 739);
    }

    #[test]
    fn gentest_6225() {
        let board = Board::from_fen("1n6/B6k/bP3rR1/4p3/2pp1P1P/4Pp2/3n4/4R1K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 565);
    }

    #[test]
    fn gentest_6226() {
        let board = Board::from_fen("1n4R1/B4r1k/bP6/4p3/2pP1P1P/5p2/3n4/4R1K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 730);
    }

    #[test]
    fn gentest_6227() {
        let board = Board::from_fen("1n4R1/B6k/bP6/4p3/2pP1P1P/5pr1/3n1K2/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 640);
    }

    #[test]
    fn gentest_6228() {
        let board = Board::from_fen("1n4k1/BP6/b7/4pP2/2pP3P/5pr1/3n1K2/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 426);
    }

    #[test]
    fn gentest_6229() {
        let board = Board::from_fen("1n3k2/BP6/b7/4pP2/2pP3P/1n3pr1/5K2/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 488);
        assert_eq!(perft(&board, 3, &PRECOMP), 8964);
    }

    #[test]
    fn gentest_6230() {
        let board = Board::from_fen("1n3k2/BP6/b7/2n1pP2/2pP3P/5pr1/5K2/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 524);
    }

    #[test]
    fn gentest_6231() {
        let board = Board::from_fen("1n6/BP3k2/b7/2n1PP2/2p4P/5pr1/5K2/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 432);
        assert_eq!(perft(&board, 3, &PRECOMP), 7831);
    }

    #[test]
    fn gentest_6232() {
        let board = Board::from_fen("1n6/BP1n1k2/b7/4PP2/2p4P/4Kpr1/8/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 461);
    }

    #[test]
    fn gentest_6233() {
        let board = Board::from_fen("1n6/1P4k1/bB6/4nP2/2p4P/4Kpr1/8/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 523);
    }

    #[test]
    fn gentest_6234() {
        let board = Board::from_fen("1n6/1P4k1/bB6/4nPr1/2p4P/4Kp2/8/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 571);
    }

    #[test]
    fn gentest_6235() {
        let board = Board::from_fen("1n6/1P4k1/bB6/4nPr1/2p4P/4Kp2/8/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 637);
    }

    #[test]
    fn gentest_6236() {
        let board = Board::from_fen("8/1P1n2k1/RB6/4nPr1/2pK3P/5p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 553);
    }

    #[test]
    fn gentest_6237() {
        let board = Board::from_fen("8/1P1n2k1/1B6/4nP2/2pK3P/R4p2/8/6r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 804);
    }

    #[test]
    fn gentest_6238() {
        let board = Board::from_fen("1B6/B2n1k2/8/4nP2/2pK3P/R4p2/8/6r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 609);
    }

    #[test]
    fn gentest_6239() {
        let board = Board::from_fen("1B6/B2n1k2/8/5P1P/2pK4/R2n1p2/8/7r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 739);
    }

    #[test]
    fn gentest_6240() {
        let board = Board::from_fen("1B6/3n1k2/8/5P1P/2K2n2/R3Bp2/8/7r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 951);
    }

    #[test]
    fn gentest_6241() {
        let board = Board::from_fen("1B6/3n1k2/r7/5P1P/2K2n2/4Bp2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 694);
    }

    #[test]
    fn gentest_6242() {
        let board = Board::from_fen("1B6/3n1k2/1r6/5P1P/2KB1n2/5p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 638);
    }

    #[test]
    fn gentest_6243() {
        let board = Board::from_fen("1B6/8/1r3k2/4nP1P/3B1n2/2K2p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 302);
        assert_eq!(perft(&board, 3, &PRECOMP), 4628);
    }

    #[test]
    fn gentest_6244() {
        let board = Board::from_fen("1B6/8/5k2/2B1nP1P/5n2/5p2/2K5/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 632);
    }

    #[test]
    fn gentest_6245() {
        let board = Board::from_fen("1B6/5n2/5k2/5P1P/5n2/5p2/1rK5/6B1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 118);
        assert_eq!(perft(&board, 3, &PRECOMP), 1806);
    }

    #[test]
    fn gentest_6246() {
        let board = Board::from_fen("1B6/5n2/5k2/5P1n/2K5/5p2/1r6/6B1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 471);
    }

    #[test]
    fn gentest_6247() {
        let board = Board::from_fen("1B6/5n2/4nk2/2B2P2/2K5/5p2/1r6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 608);
    }

    #[test]
    fn gentest_6248() {
        let board = Board::from_fen("1B6/4Bnk1/4n3/5P2/8/2K2p2/1r6/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 616);
    }

    #[test]
    fn gentest_6249() {
        let board = Board::from_fen("1B6/5n1k/4n3/5P2/7B/2K2p2/7r/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 565);
    }

    #[test]
    fn gentest_6250() {
        let board = Board::from_fen("5n2/5n1k/8/5P2/5B1B/2K2p2/7r/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 522);
    }

    #[test]
    fn gentest_6251() {
        let board = Board::from_fen("8/3n1n1k/8/5P2/7B/2K2p2/3B4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 334);
        assert_eq!(perft(&board, 3, &PRECOMP), 6955);
    }

    #[test]
    fn gentest_6252() {
        let board = Board::from_fen("7k/3n1n2/7B/5P2/7B/2K2p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 296);
        assert_eq!(perft(&board, 3, &PRECOMP), 4036);
    }

    #[test]
    fn gentest_6253() {
        let board = Board::from_fen("6k1/5n2/5B1B/5P2/8/2K2p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 195);
        assert_eq!(perft(&board, 3, &PRECOMP), 4151);
    }

    #[test]
    fn gentest_6254() {
        let board = Board::from_fen("3n1Bk1/8/5B2/5P2/3K4/5p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 138);
        assert_eq!(perft(&board, 3, &PRECOMP), 1162);
    }

    #[test]
    fn gentest_6255() {
        let board = Board::from_fen("5k2/8/4nB2/5P2/8/2K2p2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 163);
        assert_eq!(perft(&board, 3, &PRECOMP), 2663);
    }

    #[test]
    fn gentest_6256() {
        let board = Board::from_fen("6k1/8/4P3/8/7B/2K2p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 79);
        assert_eq!(perft(&board, 3, &PRECOMP), 442);
        assert_eq!(perft(&board, 4, &PRECOMP), 6972);
    }

    #[test]
    fn gentest_6257() {
        let board = Board::from_fen("7k/8/4P3/8/7B/5p2/3K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 57);
        assert_eq!(perft(&board, 3, &PRECOMP), 825);
        assert_eq!(perft(&board, 4, &PRECOMP), 4785);
    }

    #[test]
    fn gentest_6258() {
        let board = Board::from_fen("8/6k1/4P3/8/8/4Kp2/8/4B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 119);
        assert_eq!(perft(&board, 3, &PRECOMP), 747);
    }

    #[test]
    fn gentest_6259() {
        let board = Board::from_fen("8/7k/4P3/8/4K3/5p2/8/4B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 90);
        assert_eq!(perft(&board, 3, &PRECOMP), 1454);
        assert_eq!(perft(&board, 4, &PRECOMP), 8774);
    }

    #[test]
    fn gentest_6260() {
        let board = Board::from_fen("6k1/8/4P3/8/4K3/5p2/8/4B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 78);
        assert_eq!(perft(&board, 3, &PRECOMP), 482);
        assert_eq!(perft(&board, 4, &PRECOMP), 7240);
    }

    #[test]
    fn gentest_6261() {
        let board = Board::from_fen("8/8/4P2k/8/4K3/5pB1/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 99);
        assert_eq!(perft(&board, 3, &PRECOMP), 1640);
    }

    #[test]
    fn gentest_6262() {
        let board = Board::from_fen("8/8/4P1k1/4K3/7B/5p2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 71);
        assert_eq!(perft(&board, 3, &PRECOMP), 411);
        assert_eq!(perft(&board, 4, &PRECOMP), 5834);
    }

    #[test]
    fn gentest_6263() {
        let board = Board::from_fen("8/8/4P1k1/4K1B1/8/8/8/5q2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 340);
        assert_eq!(perft(&board, 3, &PRECOMP), 3519);
    }

    #[test]
    fn gentest_6264() {
        let board = Board::from_fen("8/8/3KP1k1/8/5B2/8/8/2q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 258);
        assert_eq!(perft(&board, 3, &PRECOMP), 6208);
    }

    #[test]
    fn gentest_6265() {
        let board = Board::from_fen("8/8/4P1k1/3K4/5B2/4q3/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 342);
        assert_eq!(perft(&board, 3, &PRECOMP), 3688);
    }

    #[test]
    fn gentest_6266() {
        let board = Board::from_fen("4Q3/q7/6k1/3K4/5B2/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 155);
        assert_eq!(perft(&board, 3, &PRECOMP), 2599);
    }

    #[test]
    fn gentest_6267() {
        let board = Board::from_fen("4Q3/8/5k2/3K4/8/6B1/8/6q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 501);
    }

    #[test]
    fn gentest_6268() {
        let board = Board::from_fen("8/5k2/8/3K4/3Q4/6B1/8/6q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 541);
    }

    #[test]
    fn gentest_6269() {
        let board = Board::from_fen("8/5k2/8/3K4/4q3/6B1/8/6Q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 76);
        assert_eq!(perft(&board, 3, &PRECOMP), 1519);
    }

    #[test]
    fn gentest_6270() {
        let board = Board::from_fen("8/5k2/2K5/8/1q6/6B1/8/6Q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 650);
    }

    #[test]
    fn gentest_6271() {
        let board = Board::from_fen("8/4k3/8/1K6/4q3/6B1/8/6Q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 730);
    }

    #[test]
    fn gentest_6272() {
        let board = Board::from_fen("8/5k2/8/1K6/4qB2/8/8/6Q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 699);
    }

    #[test]
    fn gentest_6273() {
        let board = Board::from_fen("8/5k2/4q3/8/2K2B2/8/8/6Q1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 162);
        assert_eq!(perft(&board, 3, &PRECOMP), 3947);
    }

    #[test]
    fn gentest_6274() {
        let board = Board::from_fen("4k1Q1/8/4q3/8/5B2/2K5/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 85);
        assert_eq!(perft(&board, 3, &PRECOMP), 1682);
    }

    #[test]
    fn gentest_6275() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_6276() {
        let board = Board::from_fen("rnbqkbnr/1ppppppp/p7/8/8/N6N/PPPPPPPP/R1BQKB1R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 380);
        assert_eq!(perft(&board, 3, &PRECOMP), 8143);
    }

    #[test]
    fn gentest_6277() {
        let board = Board::from_fen("rn1qkbnr/1bpppppp/pp6/8/8/N4P1N/PPPPP1PP/R1BQKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 503);
    }

    #[test]
    fn gentest_6278() {
        let board = Board::from_fen("1n1qkbnr/rbpppppp/pp6/8/8/5P2/PPPPP1PP/RNBQKBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 477);
    }

    #[test]
    fn gentest_6279() {
        let board = Board::from_fen("1n1qkbnr/rbpp1p1p/pp6/4p1p1/8/5P1P/PPPPP1P1/RNBQKBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 613);
    }

    #[test]
    fn gentest_6280() {
        let board = Board::from_fen("1n1qkbnr/r1pp1p1p/pp6/4p1p1/4b3/5PPP/PPPP4/RNBQKBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 905);
    }

    #[test]
    fn gentest_6281() {
        let board = Board::from_fen("rn1qkbnr/2p2p1p/pp1p4/4p1p1/4b3/1P3PPP/P1PP4/RNBQKBNR w KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 830);
    }

    #[test]
    fn gentest_6282() {
        let board = Board::from_fen("r2qkbnr/2p2p1p/ppnp4/4p1p1/1P2b2P/5PP1/P1PP4/RNBQKBNR b KQk -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1093);
    }

    #[test]
    fn gentest_6283() {
        let board = Board::from_fen("r2qkbnr/2p2p1p/p1np4/1p2p3/1P2b2p/5PP1/P1PPK3/RNBQ1BNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 882);
    }

    #[test]
    fn gentest_6284() {
        let board = Board::from_fen("r2qkbnr/2p2p2/p1np3p/1p2p3/1P2b2p/5PPB/P1PPK2R/RNBQ2N1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 932);
    }

    #[test]
    fn gentest_6285() {
        let board = Board::from_fen("3qkbnr/r1p2p2/p1np3p/1p2p3/1P5p/P4PPB/2bPK2R/RNBQ2N1 w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 897);
    }

    #[test]
    fn gentest_6286() {
        let board = Board::from_fen("3qkbnr/r1p5/p1np1p1p/1p2p3/1P5p/P4PP1/2bPK1BR/RNB2QN1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 694);
    }

    #[test]
    fn gentest_6287() {
        let board = Board::from_fen("3qkbnr/1rp4b/p1np1p1p/1p2p3/1P5p/P1N2PP1/3PK1BR/R1B2QN1 w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 946);
    }

    #[test]
    fn gentest_6288() {
        let board = Board::from_fen("1q2kbnr/1rp4b/p1np1p1p/1p2p3/1P5p/P1N2PP1/3P1KB1/R1B2QNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 963);
    }

    #[test]
    fn gentest_6289() {
        let board = Board::from_fen("1q2kbnr/1rp4b/p2p3p/nN2pp2/1P5p/P4PP1/3P1KB1/R1B2QNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 758);
    }

    #[test]
    fn gentest_6290() {
        let board = Board::from_fen("3qkbnr/1rp4b/p2p3p/PN2pp2/3P3p/P4PP1/5KB1/R1B2QNR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 887);
    }

    #[test]
    fn gentest_6291() {
        let board = Board::from_fen("3qkb1r/1rp1n2b/p2p3p/PN2pp2/3P4/P4Pp1/6B1/R1B1KQNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 795);
    }

    #[test]
    fn gentest_6292() {
        let board = Board::from_fen("3qkb1r/2p1n2b/p2p3p/Pr2pp2/3P1P2/P5p1/6BR/R1B1KQN1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1100);
    }

    #[test]
    fn gentest_6293() {
        let board = Board::from_fen("1r1qkb1r/2p4b/p2p3p/P2npp2/3P1P2/P4Qp1/6BR/R1B1K1N1 w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1239);
    }

    #[test]
    fn gentest_6294() {
        let board = Board::from_fen("1r1qkb1r/7b/p2p3p/P1pnpp1R/3P1P2/P4Qp1/6B1/R1BK2N1 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1349);
    }

    #[test]
    fn gentest_6295() {
        let board = Board::from_fen("1r1q1b1r/2n2k1b/p2p3p/P1p1pp1R/3P1P2/P4Qp1/3K2B1/R1B3N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1521);
    }

    #[test]
    fn gentest_6296() {
        let board = Board::from_fen("1r1q1b1r/2n3kb/p2p3p/P1p1pp1R/3P1P2/PQK3p1/6B1/R1B3N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1289);
    }

    #[test]
    fn gentest_6297() {
        let board = Board::from_fen("1r1q1b1r/2n3k1/p2p2bp/P1p2p1R/3P1p2/P1K3p1/2Q3B1/R1B3N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1539);
    }

    #[test]
    fn gentest_6298() {
        let board = Board::from_fen("1r1qbb1r/1Bn3k1/p2p3p/P1p2p1R/3P1p2/P1K3p1/2QB4/R5N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1351);
    }

    #[test]
    fn gentest_6299() {
        let board = Board::from_fen("1r2bb1r/1Bn3k1/p2p2qp/P1p2p1R/3P1p2/P1K3p1/3B4/RQ4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1515);
    }

    #[test]
    fn gentest_6300() {
        let board = Board::from_fen("1r2bb1r/1Bn3k1/p2p3R/P1p2p1q/3P1p2/PK4p1/3B4/RQ4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1165);
    }

    #[test]
    fn gentest_6301() {
        let board = Board::from_fen("1r3b1R/1Bn3k1/p1bp4/P1p2p2/3P1p2/PK4p1/3B3q/RQ4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1409);
    }

    #[test]
    fn gentest_6302() {
        let board = Board::from_fen("1r3b1R/1Bn3k1/p2p4/P1p2p2/b1KP1p2/P5p1/3B3q/R2Q2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1451);
    }

    #[test]
    fn gentest_6303() {
        let board = Board::from_fen("1r3b1R/1Bn5/p2p1k2/P1p2p2/3P1p2/Pb1K2p1/3B3q/R2Q2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1820);
    }

    #[test]
    fn gentest_6304() {
        let board = Board::from_fen("1r3b2/1Bn5/p2p1k2/P1p2p1Q/3P1p2/P2K2p1/b2B3R/R5N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1267);
    }

    #[test]
    fn gentest_6305() {
        let board = Board::from_fen("1r3b2/1Bn5/p2pbk2/P1p2p1Q/3P4/P2K1pp1/3B4/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1121);
    }

    #[test]
    fn gentest_6306() {
        let board = Board::from_fen("1r3b2/8/p2pbk2/Pnp2Q2/3P4/P2K1Bp1/3B4/R5NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 153);
        assert_eq!(perft(&board, 3, &PRECOMP), 3708);
    }

    #[test]
    fn gentest_6307() {
        let board = Board::from_fen("1r1k1b2/8/p2pQ3/Pnp5/3P4/P2K1Bp1/3B4/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 63);
        assert_eq!(perft(&board, 2, &PRECOMP), 1002);
    }

    #[test]
    fn gentest_6308() {
        let board = Board::from_fen("1r1k1b2/n7/p2p2Q1/P1pP4/8/P2K1Bp1/3B4/R5NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 972);
    }

    #[test]
    fn gentest_6309() {
        let board = Board::from_fen("r2k1b2/n7/p2p2Q1/P1pP4/8/P2KBB2/6p1/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 773);
    }

    #[test]
    fn gentest_6310() {
        let board = Board::from_fen("r2k4/n5b1/p2p2Q1/P1pP4/8/P2KBB1N/6pR/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 1133);
    }

    #[test]
    fn gentest_6311() {
        let board = Board::from_fen("r7/n3k3/p2p4/P1pP1Q2/8/P2KBB1N/1b4pR/R7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1041);
    }

    #[test]
    fn gentest_6312() {
        let board = Board::from_fen("r7/n3k1b1/p2p4/P1pP1Q2/8/P2KBB1N/6pR/R7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1245);
    }

    #[test]
    fn gentest_6313() {
        let board = Board::from_fen("r3k3/n6Q/p2p4/P1pP4/8/P2KBB1N/6pR/b7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 666);
    }

    #[test]
    fn gentest_6314() {
        let board = Board::from_fen("r3k3/n6Q/p2p4/P1pP4/8/P2K3N/3BB2R/b5q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1045);
    }

    #[test]
    fn gentest_6315() {
        let board = Board::from_fen("r3k3/n5bQ/p2p4/P1pP4/2K5/P6N/3BB2R/1q6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1097);
    }

    #[test]
    fn gentest_6316() {
        let board = Board::from_fen("r7/n3k1b1/p2p4/P1pP4/2K5/P6N/3BB2R/6Q1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1011);
    }

    #[test]
    fn gentest_6317() {
        let board = Board::from_fen("4r3/n2k2b1/p2p4/P1pP4/2K5/P3Q2N/3BB2R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 914);
    }

    #[test]
    fn gentest_6318() {
        let board = Board::from_fen("4r3/n2k4/p2p4/P1pP2Q1/2K5/P1b4N/3B3R/3B4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1111);
    }

    #[test]
    fn gentest_6319() {
        let board = Board::from_fen("8/n2k4/p2p4/P1pP2Q1/8/P1bK3N/3Br2R/3B4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 871);
    }

    #[test]
    fn gentest_6320() {
        let board = Board::from_fen("8/n2k4/p2p1Q2/P1pP4/8/P2K3N/2BBr2R/b7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 863);
    }

    #[test]
    fn gentest_6321() {
        let board = Board::from_fen("8/n2k4/p2p4/P2P2Q1/2pb4/P2K3N/2BBr2R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 66);
        assert_eq!(perft(&board, 3, &PRECOMP), 2668);
    }

    #[test]
    fn gentest_6322() {
        let board = Board::from_fen("8/n2k4/p2p4/P2Pb1Q1/2p5/P3K2N/2BB3R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 626);
        assert_eq!(perft(&board, 3, &PRECOMP), 8723);
    }

    #[test]
    fn gentest_6323() {
        let board = Board::from_fen("5k2/n7/p2p4/P2Pb1Q1/2p5/P3K2N/2B4R/4B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 598);
    }

    #[test]
    fn gentest_6324() {
        let board = Board::from_fen("5k2/n6B/p2p4/P2P4/2p4Q/P3K2N/1b5R/4B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 621);
        assert_eq!(perft(&board, 3, &PRECOMP), 8217);
    }

    #[test]
    fn gentest_6325() {
        let board = Board::from_fen("5k2/2n4B/p2p4/P2P4/P1p4Q/4K2N/1b5R/4B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 632);
    }

    #[test]
    fn gentest_6326() {
        let board = Board::from_fen("5k2/2n4B/p2p4/P2P4/P1p4Q/b3K1B1/5N1R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 383);
        assert_eq!(perft(&board, 3, &PRECOMP), 4450);
    }

    #[test]
    fn gentest_6327() {
        let board = Board::from_fen("4n3/5k2/p2p4/P2P4/P1p4Q/b2BK1B1/5N1R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 423);
    }

    #[test]
    fn gentest_6328() {
        let board = Board::from_fen("4n3/5k2/p2p4/P2P2Q1/Pbp5/4K1B1/4BN1R/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 385);
        assert_eq!(perft(&board, 3, &PRECOMP), 4026);
    }

    #[test]
    fn gentest_6329() {
        let board = Board::from_fen("8/5k2/p2p1n2/P1bP2Q1/P1p5/5KB1/4BN1R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 632);
    }

    #[test]
    fn gentest_6330() {
        let board = Board::from_fen("8/5k2/p2p1n2/P2P2Q1/P1p5/2N2KB1/4B2R/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 741);
    }

    #[test]
    fn gentest_6331() {
        let board = Board::from_fen("8/b2n1k2/p2p4/P2P4/P1p4Q/2N2KB1/4B2R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 570);
    }

    #[test]
    fn gentest_6332() {
        let board = Board::from_fen("1n6/b4k2/p2p4/P2P4/P1p2B1Q/2N2K2/4B3/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 579);
        assert_eq!(perft(&board, 3, &PRECOMP), 7564);
    }

    #[test]
    fn gentest_6333() {
        let board = Board::from_fen("8/5k2/p1np4/P2P4/P1p2B1Q/2N2K2/4Bb2/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 856);
    }

    #[test]
    fn gentest_6334() {
        let board = Board::from_fen("3n4/5k2/p2p4/P2PB3/P1p4Q/2N2K2/4Bb2/4R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 765);
    }

    #[test]
    fn gentest_6335() {
        let board = Board::from_fen("3n4/b4k2/p7/P2Pp3/P1p4Q/2N2K2/8/4RB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 622);
    }

    #[test]
    fn gentest_6336() {
        let board = Board::from_fen("Q7/b4k2/p3n3/P2Pp3/P1p5/2N2K2/8/4RB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 619);
    }

    #[test]
    fn gentest_6337() {
        let board = Board::from_fen("Q7/5k2/p2Pn3/P3p3/P1pb4/2N2K2/8/4RB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 641);
    }

    #[test]
    fn gentest_6338() {
        let board = Board::from_fen("Q7/5k2/p2Pn3/P3p3/P1p5/2N1bK2/8/3R1B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 778);
    }

    #[test]
    fn gentest_6339() {
        let board = Board::from_fen("Q7/3P4/p3k3/P1n1p3/P1p5/2N1bK2/8/3R1B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 649);
    }

    #[test]
    fn gentest_6340() {
        let board = Board::from_fen("8/1Q1P4/p3k3/P3p3/n1p5/2N1bK2/8/3R1B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 846);
    }

    #[test]
    fn gentest_6341() {
        let board = Board::from_fen("1Q6/3P4/p7/P3pk2/n1p5/2N2K2/8/2bR1B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 630);
    }

    #[test]
    fn gentest_6342() {
        let board = Board::from_fen("1Q6/3P4/p5k1/P3p3/n1p5/2N2K2/4B3/2b4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 801);
    }

    #[test]
    fn gentest_6343() {
        let board = Board::from_fen("1Q6/3P4/p7/P3pk2/n1p5/2N1b3/4BK2/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 5347);
    }

    #[test]
    fn gentest_6344() {
        let board = Board::from_fen("1Q6/3P4/p4k2/P3p3/n1p3B1/2N1b3/8/5K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 1001);
    }

    #[test]
    fn gentest_6345() {
        let board = Board::from_fen("8/3P1k2/pQ5b/P3p3/n1p3B1/2N5/8/5K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 52);
        assert_eq!(perft(&board, 2, &PRECOMP), 744);
    }

    #[test]
    fn gentest_6346() {
        let board = Board::from_fen("8/3Pk3/p6Q/P3p3/N1p3B1/8/8/5K1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 176);
        assert_eq!(perft(&board, 3, &PRECOMP), 701);
    }

    #[test]
    fn gentest_6347() {
        let board = Board::from_fen("5k2/3P4/p7/P7/N1p1p1BQ/8/8/5K1R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 154);
        assert_eq!(perft(&board, 3, &PRECOMP), 5995);
    }

    #[test]
    fn gentest_6348() {
        let board = Board::from_fen("8/3Pk3/p7/P7/N1p1p1B1/6Q1/7R/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 295);
        assert_eq!(perft(&board, 3, &PRECOMP), 1578);
    }

    #[test]
    fn gentest_6349() {
        let board = Board::from_fen("8/3P2k1/p7/P7/N1p1p1B1/8/5Q1R/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 229);
    }

    #[test]
    fn gentest_6350() {
        let board = Board::from_fen("5k2/3P4/p7/P7/N1p1p1BQ/8/7R/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 197);
        assert_eq!(perft(&board, 3, &PRECOMP), 904);
    }

    #[test]
    fn gentest_6351() {
        let board = Board::from_fen("6k1/3P4/p7/P7/N3p1BQ/2p5/4R3/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 165);
        assert_eq!(perft(&board, 3, &PRECOMP), 6477);
    }

    #[test]
    fn gentest_6352() {
        let board = Board::from_fen("6k1/3P4/p7/P7/N6Q/2p1p2B/2R5/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 655);
    }

    #[test]
    fn gentest_6353() {
        let board = Board::from_fen("8/3P1k2/p6Q/P7/N7/2p4B/2R1p3/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 4232);
    }

    #[test]
    fn gentest_6354() {
        let board = Board::from_fen("6k1/3P4/p7/PQ6/N7/2p4B/2R1p3/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 217);
        assert_eq!(perft(&board, 3, &PRECOMP), 1195);
    }

    #[test]
    fn gentest_6355() {
        let board = Board::from_fen("8/3P3k/p7/P2Q4/N7/2p4B/2R1p3/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 187);
        assert_eq!(perft(&board, 3, &PRECOMP), 7615);
    }

    #[test]
    fn gentest_6356() {
        let board = Board::from_fen("8/3P4/p1R4k/P2Q4/N7/7B/4p3/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 102);
        assert_eq!(perft(&board, 3, &PRECOMP), 337);
    }

    #[test]
    fn gentest_6357() {
        let board = Board::from_fen("8/3P4/p4k2/P2Q4/N7/7B/4p3/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 158);
        assert_eq!(perft(&board, 3, &PRECOMP), 5489);
    }

    #[test]
    fn gentest_6358() {
        let board = Board::from_fen("4Q3/3P1k2/p7/P7/N7/7B/4p3/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 64);
        assert_eq!(perft(&board, 3, &PRECOMP), 229);
        assert_eq!(perft(&board, 4, &PRECOMP), 7504);
    }

    #[test]
    fn gentest_6359() {
        let board = Board::from_fen("3RQ3/7k/p7/P7/N7/7B/4p3/4K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 87);
        assert_eq!(perft(&board, 3, &PRECOMP), 3386);
    }

    #[test]
    fn gentest_6360() {
        let board = Board::from_fen("R2Q4/8/p6k/P7/N7/7B/4p3/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 148);
        assert_eq!(perft(&board, 3, &PRECOMP), 523);
    }

    #[test]
    fn gentest_6361() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_6362() {
        let board = Board::from_fen("rnbqkbnr/pp1ppppp/8/2p5/P7/R7/1PPPPPPP/1NBQKBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 590);
    }

    #[test]
    fn gentest_6363() {
        let board = Board::from_fen("rnbqkb1r/pp1ppp1p/5np1/2p5/P3P3/R7/1PPP1PPP/1NBQKBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 919);
    }

    #[test]
    fn gentest_6364() {
        let board = Board::from_fen("rnbqkb1r/pp1ppp1p/5n2/2p3p1/P3P3/6P1/RPPP1P1P/1NBQKBNR b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 789);
    }

    #[test]
    fn gentest_6365() {
        let board = Board::from_fen("rnbqkbnr/p2ppp1p/8/1pp3p1/P3P3/1P4P1/R1PP1P1P/1NBQKBNR w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 839);
    }

    #[test]
    fn gentest_6366() {
        let board = Board::from_fen("r1bqkbnr/p2ppp1p/2n5/1pp3p1/P1P1P3/1P4P1/R2PNP1P/1NBQKB1R b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 800);
    }

    #[test]
    fn gentest_6367() {
        let board = Board::from_fen("r1bqkbnr/p2pp3/2n2p1p/1pp3p1/P1P1P3/NP4P1/R2PNP1P/2BQKB1R w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 696);
    }

    #[test]
    fn gentest_6368() {
        let board = Board::from_fen("r1bqkbnr/p3p3/2n2p1p/1pppP1p1/P1P4P/NP4P1/R2PNP2/2BQKB1R b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1060);
    }

    #[test]
    fn gentest_6369() {
        let board = Board::from_fen("r1b1kbnr/2q1p3/2n2p1p/ppppP1p1/P1P4P/NPN3P1/R2P1P2/2BQKB1R w Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1460);
    }

    #[test]
    fn gentest_6370() {
        let board = Board::from_fen("r1b1kbnr/2q1p3/5p1p/ppppP1p1/P1Pn3P/NPN2PP1/R2PQ3/2B1KB1R b Kkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1436);
    }

    #[test]
    fn gentest_6371() {
        let board = Board::from_fen("r1b2bnr/2q1pk2/5p1p/ppppP3/P1Pn2pP/NPNQ1PP1/R2P4/2B1KB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1370);
    }

    #[test]
    fn gentest_6372() {
        let board = Board::from_fen("r1b2bnr/4pk2/3q1p1p/ppppP3/PPPn2pP/N1NQ1PP1/RB1P4/4KB1R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1440);
    }

    #[test]
    fn gentest_6373() {
        let board = Board::from_fen("r4bnr/4pk2/4bp1p/ppppq3/PPPn2pP/N1NQ1PP1/R2P4/2B1KB1R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 306);
        assert_eq!(perft(&board, 3, &PRECOMP), 9658);
    }

    #[test]
    fn gentest_6374() {
        let board = Board::from_fen("r4bnr/4pk2/5p1p/ppppqb2/PPPnQ1pP/N1N2PP1/R2P2B1/2B1K2R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1290);
    }

    #[test]
    fn gentest_6375() {
        let board = Board::from_fen("r4bnr/4pk2/3qnp1p/pppp1b1P/PPP1Q1p1/N1N2PP1/R2P2B1/2B1K2R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1626);
    }

    #[test]
    fn gentest_6376() {
        let board = Board::from_fen("r2q1bnr/4pk2/4Qp1p/pppp1b1P/PPP3p1/N1N2PP1/2RP2B1/2B1K2R b K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 164);
        assert_eq!(perft(&board, 3, &PRECOMP), 4172);
    }

    #[test]
    fn gentest_6377() {
        let board = Board::from_fen("r2q1bnr/3Qp1k1/5p1p/pp1p1b1P/PpP3p1/N1N2PP1/2RP2B1/2B1K2R w K -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1226);
    }

    #[test]
    fn gentest_6378() {
        let board = Board::from_fen("r2q1bnr/3Qp1k1/5p1p/pp1P3P/Pp2b1p1/N1N2PP1/2RP2B1/2B2RK1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 975);
    }

    #[test]
    fn gentest_6379() {
        let board = Board::from_fen("1r1q1bn1/3Qp1kr/5p1p/pp1P3P/Pp2b1p1/2N2PP1/2RP2B1/1NB2RK1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 849);
    }

    #[test]
    fn gentest_6380() {
        let board = Board::from_fen("1r1q1bn1/4pk1r/5p1p/pp1P3P/Pp2Q3/2N2PP1/2RP2B1/1NB2RK1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 821);
    }

    #[test]
    fn gentest_6381() {
        let board = Board::from_fen("1r3bn1/4pk1r/5p1p/pp5P/Pp1Q4/2N2PP1/q1RP2B1/1NB2RK1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1032);
    }

    #[test]
    fn gentest_6382() {
        let board = Board::from_fen("1r3bn1/4pk1r/3Q1p1p/pp5P/Pp6/2N2PP1/1R1P2B1/1NB2RK1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 720);
    }

    #[test]
    fn gentest_6383() {
        let board = Board::from_fen("1r3bn1/5k1r/3p1p1p/pp5P/P5P1/2p2P2/1R1P2B1/1NB2RK1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 446);
    }

    #[test]
    fn gentest_6384() {
        let board = Board::from_fen("1r3bn1/5k1r/5p1p/pp1p3P/P5P1/2p2P2/1R1P2B1/1NB2RK1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 521);
    }

    #[test]
    fn gentest_6385() {
        let board = Board::from_fen("5bn1/7r/1r2kp1p/pp1p3P/PR4P1/2p2P2/3P2B1/1NB2RK1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 700);
    }

    #[test]
    fn gentest_6386() {
        let board = Board::from_fen("5bn1/7r/2r1kp1p/pp1p3P/PR4P1/N1p2P2/3P2BK/2B2R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 914);
    }

    #[test]
    fn gentest_6387() {
        let board = Board::from_fen("5bn1/5r2/2r1kp1p/pp5P/P2R2P1/N1p2P2/3P2BK/2B2R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 767);
    }

    #[test]
    fn gentest_6388() {
        let board = Board::from_fen("5bn1/5r2/3rkp1p/pp5P/P5P1/N1p2P2/3P2BK/2B4R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 549);
    }

    #[test]
    fn gentest_6389() {
        let board = Board::from_fen("6n1/4br2/1r2kp1p/pp5P/P5P1/N1pP1P2/6BK/2B4R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 486);
    }

    #[test]
    fn gentest_6390() {
        let board = Board::from_fen("6n1/4br2/1r2kp1p/pp4BP/P5P1/N2P1P2/2p3BK/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 681);
    }

    #[test]
    fn gentest_6391() {
        let board = Board::from_fen("6n1/5r2/r3kp1p/pNb3BP/P5P1/3P1P2/2p3BK/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 892);
    }

    #[test]
    fn gentest_6392() {
        let board = Board::from_fen("6n1/5r2/r2k1p1p/p1b3BP/P5P1/3P1P2/2N3BK/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 830);
    }

    #[test]
    fn gentest_6393() {
        let board = Board::from_fen("6n1/6r1/r2k1p1p/p6P/P5P1/3P1P2/2NB1bBK/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 913);
    }

    #[test]
    fn gentest_6394() {
        let board = Board::from_fen("6n1/6r1/r4p1p/B1k4P/P5P1/3P1P2/2N2bBK/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 723);
    }

    #[test]
    fn gentest_6395() {
        let board = Board::from_fen("6n1/r5r1/5p1p/B1k4P/P5P1/3P1P2/2N2b1K/6RB w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 686);
    }

    #[test]
    fn gentest_6396() {
        let board = Board::from_fen("6n1/5rr1/5p1p/2k3PP/P7/2BP1P2/2N2b1K/6RB b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 691);
    }

    #[test]
    fn gentest_6397() {
        let board = Board::from_fen("6n1/3r4/5p1p/2k3rP/P7/2BP1P2/2N2bBK/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 898);
    }

    #[test]
    fn gentest_6398() {
        let board = Board::from_fen("3r2n1/8/2B2p1p/2k3rP/P4P2/2BP4/2N2b1K/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1107);
    }

    #[test]
    fn gentest_6399() {
        let board = Board::from_fen("6n1/3r4/3k1p1p/1B4rP/P4P2/2BP4/2N2b1K/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1174);
    }

    #[test]
    fn gentest_6400() {
        let board = Board::from_fen("6n1/3r4/3k1p1p/1B4rP/P4PR1/3Pb3/2NB3K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 858);
    }

    #[test]
    fn gentest_6401() {
        let board = Board::from_fen("6n1/1r6/3k1p1p/1B3PrP/P5R1/3P4/2NB1b1K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 951);
    }

    #[test]
    fn gentest_6402() {
        let board = Board::from_fen("8/1r1Bn3/3k1p1p/5PrP/P5R1/3P4/2NB1bK1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1041);
    }

    #[test]
    fn gentest_6403() {
        let board = Board::from_fen("2n5/1r1B4/3k1pRp/5r1P/P7/3P4/2NB1bK1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1148);
    }

    #[test]
    fn gentest_6404() {
        let board = Board::from_fen("2n5/1r1B4/3k1p1p/6rP/P5R1/3P4/3B1bK1/4N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1047);
    }

    #[test]
    fn gentest_6405() {
        let board = Board::from_fen("2n5/1r1B4/5p1p/3k2rP/P5R1/3P1N2/3B2K1/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 779);
    }

    #[test]
    fn gentest_6406() {
        let board = Board::from_fen("2n5/3r4/5p1p/3k3P/P5R1/3P3N/3B2K1/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 699);
    }

    #[test]
    fn gentest_6407() {
        let board = Board::from_fen("2n5/3r2R1/5p1p/3k3P/P7/3P2bN/3B2K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 719);
    }

    #[test]
    fn gentest_6408() {
        let board = Board::from_fen("2n5/3r4/3b1pRp/3k3P/P7/3P3N/3B4/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 800);
    }

    #[test]
    fn gentest_6409() {
        let board = Board::from_fen("8/n2r4/2kb1pRp/7P/P4N2/3P4/3B4/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 615);
    }

    #[test]
    fn gentest_6410() {
        let board = Board::from_fen("8/n2r4/2k2pRp/4b2P/P4N2/3P4/4K3/4B3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 712);
    }

    #[test]
    fn gentest_6411() {
        let board = Board::from_fen("8/6Rr/2k2p1p/1n2b2P/P4N2/3P4/4K3/4B3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 750);
    }

    #[test]
    fn gentest_6412() {
        let board = Board::from_fen("8/6Rr/2kb1p1p/Bn5P/P4N2/3P4/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 532);
    }

    #[test]
    fn gentest_6413() {
        let board = Board::from_fen("8/3kb2r/5pRp/Bn5P/P4N2/3P4/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 576);
    }

    #[test]
    fn gentest_6414() {
        let board = Board::from_fen("8/3kb2r/7p/Bn3p1P/P4N2/3P4/4K3/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 577);
    }

    #[test]
    fn gentest_6415() {
        let board = Board::from_fen("5b2/7r/2k4p/Bn3p1P/P4N2/3P1K2/8/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 647);
    }

    #[test]
    fn gentest_6416() {
        let board = Board::from_fen("5b2/7r/2k2B1p/5p1P/P4N2/n2P1K2/8/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 725);
    }

    #[test]
    fn gentest_6417() {
        let board = Board::from_fen("8/5r2/2kb1B1p/5p1P/P7/n2P1K2/4N3/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 832);
    }

    #[test]
    fn gentest_6418() {
        let board = Board::from_fen("8/6r1/2kb1B1p/5p1P/P7/n2P4/3KN3/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1070);
    }

    #[test]
    fn gentest_6419() {
        let board = Board::from_fen("1b6/6r1/2k4p/5p1P/P1n5/2BP4/3KN3/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 176);
        assert_eq!(perft(&board, 3, &PRECOMP), 4905);
    }

    #[test]
    fn gentest_6420() {
        let board = Board::from_fen("1b6/8/2k4p/P4prP/2n5/2BP4/4N3/4KR2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 736);
    }

    #[test]
    fn gentest_6421() {
        let board = Board::from_fen("8/b1k5/7p/P4prP/2nB4/3P4/4N3/4KR2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_6422() {
        let board = Board::from_fen("8/2k5/5B1p/P4prP/2n2R2/3Pb3/4N3/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 788);
    }

    #[test]
    fn gentest_6423() {
        let board = Board::from_fen("8/2k5/1n3B1p/P4prP/5R2/3P4/4NK2/2b5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 666);
    }

    #[test]
    fn gentest_6424() {
        let board = Board::from_fen("8/2k5/1P3B1p/5p1r/7R/3P4/4NK2/2b5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 243);
        assert_eq!(perft(&board, 3, &PRECOMP), 3431);
    }

    #[test]
    fn gentest_6425() {
        let board = Board::from_fen("8/1k6/1P3B1p/5p1r/7R/b2P4/4N1K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 587);
    }

    #[test]
    fn gentest_6426() {
        let board = Board::from_fen("8/1k6/1P5p/5p2/7r/b2P4/4N1K1/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 473);
    }

    #[test]
    fn gentest_6427() {
        let board = Board::from_fen("8/8/1Pk5/5p1p/7r/b2P4/4N3/B4K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 438);
        assert_eq!(perft(&board, 3, &PRECOMP), 7740);
    }

    #[test]
    fn gentest_6428() {
        let board = Board::from_fen("8/8/1Pk5/5p1p/3P4/b7/7r/B1N2K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 233);
        assert_eq!(perft(&board, 3, &PRECOMP), 5311);
    }

    #[test]
    fn gentest_6429() {
        let board = Board::from_fen("8/1k6/1P6/5p1p/1b1P4/8/N6r/B4K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 172);
        assert_eq!(perft(&board, 3, &PRECOMP), 1663);
    }

    #[test]
    fn gentest_6430() {
        let board = Board::from_fen("2k5/8/1P6/5p1p/Nb1P4/8/7r/B4K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 202);
        assert_eq!(perft(&board, 3, &PRECOMP), 4252);
    }

    #[test]
    fn gentest_6431() {
        let board = Board::from_fen("1k6/8/1P6/2b2p1p/3P4/8/1N5r/B4K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 190);
        assert_eq!(perft(&board, 3, &PRECOMP), 1748);
    }

    #[test]
    fn gentest_6432() {
        let board = Board::from_fen("1k6/8/1P6/2P2p1p/8/8/1N3r2/B5K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 100);
        assert_eq!(perft(&board, 3, &PRECOMP), 1414);
    }

    #[test]
    fn gentest_6433() {
        let board = Board::from_fen("1k6/1P6/8/2P2p1p/8/8/1N4r1/B5K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 41);
        assert_eq!(perft(&board, 3, &PRECOMP), 305);
        assert_eq!(perft(&board, 4, &PRECOMP), 4216);
    }

    #[test]
    fn gentest_6434() {
        let board = Board::from_fen("1k6/1P6/8/2P2p1p/8/8/1N5r/B5K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 97);
        assert_eq!(perft(&board, 3, &PRECOMP), 1372);
    }

    #[test]
    fn gentest_6435() {
        let board = Board::from_fen("1k6/1P6/8/2P2p1p/2N5/8/6r1/B5K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 43);
        assert_eq!(perft(&board, 3, &PRECOMP), 739);
    }

    #[test]
    fn gentest_6436() {
        let board = Board::from_fen("8/1Pk5/1N6/2P2p1p/8/8/6r1/B6K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 330);
        assert_eq!(perft(&board, 3, &PRECOMP), 4904);
    }

    #[test]
    fn gentest_6437() {
        let board = Board::from_fen("8/1Pk5/1N3B2/2P2p1p/8/8/1r6/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 290);
        assert_eq!(perft(&board, 3, &PRECOMP), 5510);
    }

    #[test]
    fn gentest_6438() {
        let board = Board::from_fen("7B/1Pk5/8/2P2p1p/N7/8/5r2/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 238);
        assert_eq!(perft(&board, 3, &PRECOMP), 3564);
    }

    #[test]
    fn gentest_6439() {
        let board = Board::from_fen("8/1Pk5/8/2P2p1p/N2B4/8/5r2/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 250);
        assert_eq!(perft(&board, 3, &PRECOMP), 4223);
    }

    #[test]
    fn gentest_6440() {
        let board = Board::from_fen("8/1Pk5/8/2P2p1p/3B4/8/4N3/7K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 152);
        assert_eq!(perft(&board, 3, &PRECOMP), 994);
    }

    #[test]
    fn gentest_6441() {
        let board = Board::from_fen("8/1k6/8/2P1Bp1p/8/8/4N3/7K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 172);
        assert_eq!(perft(&board, 3, &PRECOMP), 3376);
    }

    #[test]
    fn gentest_6442() {
        let board = Board::from_fen("2k5/8/8/2P2p1p/3N4/8/8/B6K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 98);
        assert_eq!(perft(&board, 3, &PRECOMP), 675);
    }

    #[test]
    fn gentest_6443() {
        let board = Board::from_fen("8/4k3/2P5/5p1p/3N4/8/8/B6K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 98);
        assert_eq!(perft(&board, 3, &PRECOMP), 1636);
    }

    #[test]
    fn gentest_6444() {
        let board = Board::from_fen("8/5k2/2P5/5p1p/8/8/4N2K/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 150);
        assert_eq!(perft(&board, 3, &PRECOMP), 987);
    }

    #[test]
    fn gentest_6445() {
        let board = Board::from_fen("8/5k2/2P5/5p1p/8/8/4N1K1/B7 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 176);
        assert_eq!(perft(&board, 3, &PRECOMP), 3656);
    }

    #[test]
    fn gentest_6446() {
        let board = Board::from_fen("8/8/2P1k3/5p1p/8/8/4N1K1/B7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 130);
        assert_eq!(perft(&board, 3, &PRECOMP), 953);
    }

    #[test]
    fn gentest_6447() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_6448() {
        let board = Board::from_fen("rnbqkbnr/p1pppppp/8/1p6/6P1/N7/PPPPPP1P/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
    }

    #[test]
    fn gentest_6449() {
        let board = Board::from_fen("rn1qkbnr/p1pp1ppp/b7/1p2p3/4P1P1/N7/PPPP1P1P/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 755);
    }

    #[test]
    fn gentest_6450() {
        let board = Board::from_fen("rn1qk1nr/p1pp1ppp/b7/1p2p3/4P1P1/b1P5/PP1PKP1P/R1BQ1BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 704);
    }

    #[test]
    fn gentest_6451() {
        let board = Board::from_fen("rn1qk1nr/p1pp2pp/b4p2/1pb1p3/4P1P1/2PK4/PP1P1P1P/R1BQ1BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 703);
    }

    #[test]
    fn gentest_6452() {
        let board = Board::from_fen("rn1qk1nr/p1pp2pp/b2b1p2/1p2p3/4P1P1/1QPK3P/PP1P1P2/R1B2BNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 571);
    }

    #[test]
    fn gentest_6453() {
        let board = Board::from_fen("rn1qk2r/p1ppn1p1/b2b1p1p/1p2p3/4P1P1/1QP4P/PPKP1P2/R1B2BNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 686);
    }

    #[test]
    fn gentest_6454() {
        let board = Board::from_fen("rn1qk2r/p2pn1p1/b1pb1p1p/1p1Qp3/4P1P1/2P4P/PPKPNP2/R1B2B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 895);
    }

    #[test]
    fn gentest_6455() {
        let board = Board::from_fen("rn1qk1r1/p2pn3/b1pb1ppp/1p1Qp3/4P1P1/2P4P/PPKPNP1R/R1B2B2 w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 758);
    }

    #[test]
    fn gentest_6456() {
        let board = Board::from_fen("rn1qk1r1/p2pn3/b1p2ppp/1p1Qp3/1P2P1P1/1P5P/P1KPNP1R/R1B2B2 b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 667);
    }

    #[test]
    fn gentest_6457() {
        let board = Board::from_fen("rn1qk1r1/p2p4/b1p2ppp/1p1Q1n2/1P2PpP1/1P5P/P1KPN2R/R1B2B2 w q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 852);
    }

    #[test]
    fn gentest_6458() {
        let board = Board::from_fen("rn1qk1r1/p2Q4/b1p2ppp/1p6/1P2PpP1/1P4nP/P1KPN1BR/R1B5 b q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 112);
        assert_eq!(perft(&board, 3, &PRECOMP), 3179);
    }

    #[test]
    fn gentest_6459() {
        let board = Board::from_fen("rn4r1/p2k4/b1p2ppp/qp6/1P2PpP1/1P4nP/P1KPN2R/R1B2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 809);
    }

    #[test]
    fn gentest_6460() {
        let board = Board::from_fen("rn4r1/p2k4/b1p3pp/qp3p2/1P2PpP1/1PN3nP/P1KP1R2/R1B2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1040);
    }

    #[test]
    fn gentest_6461() {
        let board = Board::from_fen("rn1k3r/p7/b1p3pp/qp3p2/1P2PpP1/1PNB2nP/P1KP1R2/R1B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 862);
    }

    #[test]
    fn gentest_6462() {
        let board = Board::from_fen("rn1k3r/p7/b1p3pp/qp3p2/1P2P1P1/1PNK1pnP/P2P1R2/R1B2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 712);
    }

    #[test]
    fn gentest_6463() {
        let board = Board::from_fen("rnkq3r/p7/b1p3pp/1p3p2/1P2P1P1/1P1K1pnP/P2PNR2/R1B2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 2992);
    }

    #[test]
    fn gentest_6464() {
        let board = Board::from_fen("rnkq4/p6r/b1p3pp/1p3p2/1P2P1P1/1PK2pnP/P2PNR2/R1B2B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 787);
    }

    #[test]
    fn gentest_6465() {
        let board = Board::from_fen("rnkq4/p4r2/b1p3pp/1p3p2/1P2P1P1/1PK2pnP/P2PN1R1/R1B2B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 941);
    }

    #[test]
    fn gentest_6466() {
        let board = Board::from_fen("rnkq4/p5r1/b1p3pp/1p3p2/1P2P1P1/1PK2pRP/PB1PN3/R4B2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 821);
    }

    #[test]
    fn gentest_6467() {
        let board = Board::from_fen("rnk5/p5r1/b1p3p1/1p3p1p/1P2P1P1/1P3pRP/PB1KN3/R4B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 744);
    }

    #[test]
    fn gentest_6468() {
        let board = Board::from_fen("rnk5/pb4r1/2p3p1/1p3p1p/1P2P1P1/1PB2pRP/P2KN3/4RB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 683);
    }

    #[test]
    fn gentest_6469() {
        let board = Board::from_fen("rnk5/pb4r1/2p3p1/1p3p1P/1P2P3/1PB3RP/P2KN3/4rB2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 737);
    }

    #[test]
    fn gentest_6470() {
        let board = Board::from_fen("r1k5/pb1n2r1/2p3p1/1p3p1P/1P2P2R/1PB4P/P2KN3/4rB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 622);
    }

    #[test]
    fn gentest_6471() {
        let board = Board::from_fen("r7/pbkn2r1/2p3p1/1p3P1P/1P5R/1PB4P/P2KN3/r4B2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 889);
    }

    #[test]
    fn gentest_6472() {
        let board = Board::from_fen("r7/pbk3r1/2p3p1/1pn2P1P/PP5R/1PB4P/3KN1B1/r7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1176);
    }

    #[test]
    fn gentest_6473() {
        let board = Board::from_fen("2r5/pbk3r1/2p3p1/1pn2P1P/PP1N3R/1PB4P/3K2B1/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1015);
    }

    #[test]
    fn gentest_6474() {
        let board = Board::from_fen("2r5/pb4r1/2pk2p1/1pnB1P1P/PP1N3R/1PB4P/4K3/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1279);
    }

    #[test]
    fn gentest_6475() {
        let board = Board::from_fen("2r5/pbkn2r1/2p3P1/1p1B3P/PP1N3R/1PB4P/4K3/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 1050);
    }

    #[test]
    fn gentest_6476() {
        let board = Board::from_fen("2r5/1bkn2r1/p1p3P1/1p5P/PP1N3R/1P5P/3BK1B1/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 945);
    }

    #[test]
    fn gentest_6477() {
        let board = Board::from_fen("b3r3/2kn2r1/p1p3P1/Pp5P/1P1N3R/1P5P/3BK1B1/1r6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 237);
        assert_eq!(perft(&board, 3, &PRECOMP), 5357);
    }

    #[test]
    fn gentest_6478() {
        let board = Board::from_fen("b3r3/1k1n2r1/p1p1N1P1/Pp5P/1P4R1/1P5P/3BK1B1/1r6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 820);
    }

    #[test]
    fn gentest_6479() {
        let board = Board::from_fen("b2r2r1/1k1n4/p1p1N1P1/Pp5P/1P4R1/1P5P/4K1B1/1rB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 846);
    }

    #[test]
    fn gentest_6480() {
        let board = Board::from_fen("b2r2r1/1k4N1/p1p2nP1/Pp5P/1P4R1/1P5P/6B1/1rB1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 568);
    }

    #[test]
    fn gentest_6481() {
        let board = Board::from_fen("b5r1/1k4N1/p1p2nP1/Pp5P/1P4R1/1P3B1P/3r4/1rB1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 774);
    }

    #[test]
    fn gentest_6482() {
        let board = Board::from_fen("b5r1/1k1r2N1/p1p2nP1/Pp5P/1P2R3/1P3B1P/8/1rB1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_6483() {
        let board = Board::from_fen("bk4r1/3r2N1/p1p1R1P1/Pp1n3P/1P6/1P3B1P/8/1rB1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 764);
    }

    #[test]
    fn gentest_6484() {
        let board = Board::from_fen("bk4r1/3r2N1/p1p1R1P1/Pp5P/1P6/1Pn2B1P/8/1rB1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 782);
    }

    #[test]
    fn gentest_6485() {
        let board = Board::from_fen("b1k3r1/6N1/p1p2RP1/Pp5P/1P1r4/1Pn2B1P/8/1rB1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 664);
    }

    #[test]
    fn gentest_6486() {
        let board = Board::from_fen("b1k3r1/8/p1prNRPP/Pp6/1P6/1Pn2B1P/8/1rB1K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 699);
    }

    #[test]
    fn gentest_6487() {
        let board = Board::from_fen("2k3r1/1b5P/p2rNRP1/Ppp5/1P6/1Pn2B1P/8/1rB1K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1090);
    }

    #[test]
    fn gentest_6488() {
        let board = Board::from_fen("2k3r1/1b5P/p4RP1/Ppp5/1P3N2/1Pn2B1P/5K2/1rBr4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1404);
    }

    #[test]
    fn gentest_6489() {
        let board = Board::from_fen("6r1/1bk4P/p2R2P1/Pppn4/1P3N2/1P3B1P/5K2/1rBr4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1248);
    }

    #[test]
    fn gentest_6490() {
        let board = Board::from_fen("8/1bk4P/p2R2r1/Pppn4/1P6/1P3B1P/1N3K2/1rBr4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1120);
    }

    #[test]
    fn gentest_6491() {
        let board = Board::from_fen("6r1/1bk4P/p4R2/Ppp5/1P3n2/1P3B1P/1N3K2/1rBr4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 1653);
    }

    #[test]
    fn gentest_6492() {
        let board = Board::from_fen("1k4r1/1b5P/p2R4/Ppp5/1P3nB1/1P5P/1N3K2/1rBr4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1514);
    }

    #[test]
    fn gentest_6493() {
        let board = Board::from_fen("1k4r1/1b1B3P/p2R4/Ppp5/1P6/1P2n2P/1N3K2/1rBr4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1477);
    }

    #[test]
    fn gentest_6494() {
        let board = Board::from_fen("1k4r1/1b1B3P/p7/Ppp2nR1/1P6/1P5P/1N3K2/1rBr4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1327);
    }

    #[test]
    fn gentest_6495() {
        let board = Board::from_fen("1k4r1/3B3P/p2n4/Ppp4R/1P6/1P5P/1N3Kb1/1rBr4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1403);
    }

    #[test]
    fn gentest_6496() {
        let board = Board::from_fen("1k4r1/7P/p2n4/P1p4R/1P6/1P5P/1N3Kb1/1rB1rB2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1413);
    }

    #[test]
    fn gentest_6497() {
        let board = Board::from_fen("1kn3r1/7P/p7/P1p4R/1P6/1P5P/1N2BKb1/1rB3r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1240);
    }

    #[test]
    fn gentest_6498() {
        let board = Board::from_fen("1k4r1/4n2P/p7/P1p3RB/1P6/1P5P/1N3Kb1/1rB3r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 1276);
    }

    #[test]
    fn gentest_6499() {
        let board = Board::from_fen("1k6/4n2P/p5r1/P1p4B/1P6/1P4RP/1N3Kb1/r1B3r1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1223);
    }

    #[test]
    fn gentest_6500() {
        let board = Board::from_fen("1k6/4n2P/p5r1/P1pb3B/1P6/1PR4P/1N1B1K2/r5r1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 54);
        assert_eq!(perft(&board, 2, &PRECOMP), 1601);
    }

    #[test]
    fn gentest_6501() {
        let board = Board::from_fen("1kn5/7P/p5r1/P1pb4/1P6/1PR2B1P/1N1B1K2/r4r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 98);
        assert_eq!(perft(&board, 3, &PRECOMP), 2694);
    }

    #[test]
    fn gentest_6502() {
        let board = Board::from_fen("1kn5/7P/p5r1/P1pb2B1/1P6/1PR2B1P/1N2K3/r6r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1510);
    }

    #[test]
    fn gentest_6503() {
        let board = Board::from_fen("1kn3b1/7P/pr6/P1p3B1/1P6/1P2RB1P/1N2K3/r6r w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 1535);
    }

    #[test]
    fn gentest_6504() {
        let board = Board::from_fen("1kn1R1b1/7P/pr6/P1p3B1/1P5P/1P3B2/1N2K3/5r1r b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1138);
    }

    #[test]
    fn gentest_6505() {
        let board = Board::from_fen("1kn1R3/5b1P/pr3B2/P1p5/1P5P/1P3B2/1N2K2r/5r2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 137);
        assert_eq!(perft(&board, 3, &PRECOMP), 4790);
    }

    #[test]
    fn gentest_6506() {
        let board = Board::from_fen("1kn5/7P/pr3B2/P1p5/1Pb4P/1P3B2/1N2R2r/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 798);
    }

    #[test]
    fn gentest_6507() {
        let board = Board::from_fen("1k6/n6P/pr3B2/P1p5/1P5P/1P6/1N2B2r/5K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 628);
    }

    #[test]
    fn gentest_6508() {
        let board = Board::from_fen("1k6/n6P/p1r2B2/P1p5/1P5P/1P6/4B2r/2N2K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 493);
    }

    #[test]
    fn gentest_6509() {
        let board = Board::from_fen("1kr5/n6P/p4B2/P7/1Pp4P/1P6/4B2r/2N3K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 580);
    }

    #[test]
    fn gentest_6510() {
        let board = Board::from_fen("1kr5/n6P/p4B2/P7/1P5P/1Pp2B2/7r/2N3K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 614);
    }

    #[test]
    fn gentest_6511() {
        let board = Board::from_fen("1kr5/n2r3P/p4B2/P7/1P2B2P/1Pp5/8/2N3K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 843);
    }

    #[test]
    fn gentest_6512() {
        let board = Board::from_fen("1krr4/n6P/p4B2/P7/1P2B2P/1Pp5/7K/2N5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 603);
    }

    #[test]
    fn gentest_6513() {
        let board = Board::from_fen("1k5r/n7/p4B2/P7/1P2B2P/1Ppr4/7K/2N5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 641);
    }

    #[test]
    fn gentest_6514() {
        let board = Board::from_fen("7r/n1k5/p5B1/P7/1P5P/1PBr4/7K/2N5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_6515() {
        let board = Board::from_fen("7r/n7/p1k3B1/P2r4/1P5P/1PB5/N6K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 737);
    }

    #[test]
    fn gentest_6516() {
        let board = Board::from_fen("7r/nk3B2/p7/PP1r4/7P/1PB5/N6K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 807);
    }

    #[test]
    fn gentest_6517() {
        let board = Board::from_fen("5r2/nk3B2/p7/PP5r/7P/1PB5/7K/2N5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 702);
    }

    #[test]
    fn gentest_6518() {
        let board = Board::from_fen("2k2r2/n7/p7/PP1B3r/3B3P/1P6/7K/2N5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 824);
    }

    #[test]
    fn gentest_6519() {
        let board = Board::from_fen("2kr3r/n7/p7/PP1BB3/7P/1P6/7K/2N5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 607);
    }

    #[test]
    fn gentest_6520() {
        let board = Board::from_fen("2k4r/n2r4/p7/PP1BB3/1P5P/8/4N2K/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 753);
    }

    #[test]
    fn gentest_6521() {
        let board = Board::from_fen("B1k2r2/n6r/p7/PP2B3/1P5P/8/4N2K/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 827);
    }

    #[test]
    fn gentest_6522() {
        let board = Board::from_fen("B1k5/n6r/p4r2/PP6/1P1B3P/7K/4N3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 843);
    }

    #[test]
    fn gentest_6523() {
        let board = Board::from_fen("B1k5/B6r/p4r2/PP6/1P5P/7K/4N3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 726);
    }

    #[test]
    fn gentest_6524() {
        let board = Board::from_fen("B1k5/1r6/P4r2/P7/1P5P/7K/4NB2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 658);
    }

    #[test]
    fn gentest_6525() {
        let board = Board::from_fen("B1k5/8/P4r2/P7/1P5P/3r3K/4N3/6B1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 184);
        assert_eq!(perft(&board, 3, &PRECOMP), 3795);
    }

    #[test]
    fn gentest_6526() {
        let board = Board::from_fen("B1k5/3r4/P4r2/PP6/7P/8/4N2K/6B1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 722);
    }

    #[test]
    fn gentest_6527() {
        let board = Board::from_fen("B1kr4/8/P7/PP6/3N3P/8/5r1K/6B1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 110);
        assert_eq!(perft(&board, 3, &PRECOMP), 2113);
    }

    #[test]
    fn gentest_6528() {
        let board = Board::from_fen("2k5/8/P7/PP1B4/3N3P/8/5r2/6BK b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 433);
        assert_eq!(perft(&board, 3, &PRECOMP), 6313);
    }

    #[test]
    fn gentest_6529() {
        let board = Board::from_fen("3k2B1/8/P7/PP3r2/3N3P/8/8/6BK w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 344);
        assert_eq!(perft(&board, 3, &PRECOMP), 7856);
    }

    #[test]
    fn gentest_6530() {
        let board = Board::from_fen("4k1B1/P7/P7/1P3r2/3N3P/8/8/6BK b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 410);
        assert_eq!(perft(&board, 3, &PRECOMP), 5887);
    }

    #[test]
    fn gentest_6531() {
        let board = Board::from_fen("5kB1/P4r2/P7/1P6/3N3P/8/6K1/6B1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 305);
        assert_eq!(perft(&board, 3, &PRECOMP), 7721);
    }

    #[test]
    fn gentest_6532() {
        let board = Board::from_fen("5k2/P6B/P7/1P3r2/7P/8/4N1K1/6B1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 401);
        assert_eq!(perft(&board, 3, &PRECOMP), 6101);
    }

    #[test]
    fn gentest_6533() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_6534() {
        let board = Board::from_fen("rnbqkb1r/pppppppp/7n/8/8/8/PPPPPPPP/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 399);
        assert_eq!(perft(&board, 3, &PRECOMP), 8957);
    }

    #[test]
    fn gentest_6535() {
        let board = Board::from_fen("rnbqkb1r/ppp1p1pp/3p1p1n/8/8/N7/PPPPPPPP/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 558);
    }

    #[test]
    fn gentest_6536() {
        let board = Board::from_fen("rnbqkb1r/p1p1p1pp/1p1p1p1n/8/5P2/N3P3/PPPP2PP/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 860);
    }

    #[test]
    fn gentest_6537() {
        let board = Board::from_fen("r1bqkb1r/p1p1p1pp/np3p1n/3p4/5P2/N1P1P3/PP1P2PP/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 846);
    }

    #[test]
    fn gentest_6538() {
        let board = Board::from_fen("r1bqkb1r/p3p1pp/npp2p1n/3p4/2B2P2/N1P1P2P/PP1P2P1/R1BQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 984);
    }

    #[test]
    fn gentest_6539() {
        let board = Board::from_fen("r2qkb1r/p2bp1pp/npp2p2/3p1n2/2B2P2/N1P1P1PP/PP1P4/R1BQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 859);
    }

    #[test]
    fn gentest_6540() {
        let board = Board::from_fen("r2qkb1r/p2bp2p/npp2p2/3p1np1/2B2P2/2PPP1PP/PPN5/R1BQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 964);
    }

    #[test]
    fn gentest_6541() {
        let board = Board::from_fen("rn1qk2r/p2bp1bp/1pp2p2/3p1np1/2B2P2/N1PPP1PP/PP6/R1BQK1NR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 891);
    }

    #[test]
    fn gentest_6542() {
        let board = Board::from_fen("rn1qk2r/p2b2bp/1pp1pp2/1N1p1np1/2B2P2/1PPPP1PP/P7/R1BQK1NR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 963);
    }

    #[test]
    fn gentest_6543() {
        let board = Board::from_fen("rn1qkb1r/3b3p/ppp1pp2/1N1p1np1/2B2P2/1PPPP1PP/P7/R1BQ1KNR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 985);
    }

    #[test]
    fn gentest_6544() {
        let board = Board::from_fen("rn1qkb1r/3b3p/pp2pp2/1Npp1np1/2B2P2/1PPPP1PP/P4Q2/R1B2KNR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 969);
    }

    #[test]
    fn gentest_6545() {
        let board = Board::from_fen("1n1qkb1r/r2b2np/pp2pp2/1Npp2p1/2B2P2/1PPPP1PP/P2B1Q2/R4KNR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 816);
    }

    #[test]
    fn gentest_6546() {
        let board = Board::from_fen("1n1qkb1r/r2b2np/pp2pp2/1Npp4/2B2pP1/1PPPP2P/P2B1QK1/R5NR b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 892);
    }

    #[test]
    fn gentest_6547() {
        let board = Board::from_fen("1n1qk2r/r2b2np/pp1bp3/1Npp1p2/2B2pP1/PPPPP2P/3B1QK1/R5NR w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 1091);
    }

    #[test]
    fn gentest_6548() {
        let board = Board::from_fen("1n1qk1r1/r2b2np/pp1bp3/1Npp1p2/2B2pPQ/PPPPP2P/3B2K1/3R2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 1088);
    }

    #[test]
    fn gentest_6549() {
        let board = Board::from_fen("1n1qkr2/r1bb2np/pp2p3/1Npp1p2/2B2pPQ/PPPPP2P/3B3K/3R2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 794);
    }

    #[test]
    fn gentest_6550() {
        let board = Board::from_fen("1n2kr2/r1bb2np/pp2pq2/1Npp1p2/2BP1pPQ/PPP1P2P/7K/3RB1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1069);
    }

    #[test]
    fn gentest_6551() {
        let board = Board::from_fen("1n2kr2/r1bb2np/pp2p3/1Npp1p1q/2BP1pPQ/PPP1P2P/6K1/3RB1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 952);
    }

    #[test]
    fn gentest_6552() {
        let board = Board::from_fen("1n2kr2/r1bb2np/pp6/1Npppp1q/2BP1pPQ/PPP1PK1P/3B4/3R2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 922);
    }

    #[test]
    fn gentest_6553() {
        let board = Board::from_fen("1n2kr2/N1bb2np/pp6/3ppp2/2Bp1pPq/PPP1PK1P/3B4/3R2NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 1068);
    }

    #[test]
    fn gentest_6554() {
        let board = Board::from_fen("1n2kr2/N1bb3p/pp6/1B1ppn2/3p1p1q/PPP1PK1P/3B4/3R2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 890);
    }

    #[test]
    fn gentest_6555() {
        let board = Board::from_fen("1n2k3/N1bb4/pp3r1p/1B1ppn2/3p1p1q/PPP1PK1P/3B4/5RNR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 957);
    }

    #[test]
    fn gentest_6556() {
        let board = Board::from_fen("1n2k3/N1bb4/pp1n1r1p/1B1pp3/3pPp1q/PPP2K1P/3B4/1R4NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 763);
    }

    #[test]
    fn gentest_6557() {
        let board = Board::from_fen("1n1k4/N1bb4/pp1n1r1p/3pp3/3pPp2/PPP2K1P/3BB3/1R2q1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 1022);
    }

    #[test]
    fn gentest_6558() {
        let board = Board::from_fen("1n1kn3/N1bb4/pp3r1p/3pp3/3pPp2/PPP2K1P/3BB2R/3Rq1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 733);
    }

    #[test]
    fn gentest_6559() {
        let board = Board::from_fen("1n1kn3/N1b5/ppb4p/3ppr2/3pPp2/PPP2K1P/4B2R/3RB1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 669);
    }

    #[test]
    fn gentest_6560() {
        let board = Board::from_fen("1n1kn3/Nbb5/pp5p/3ppP2/3p1p2/PPP2K1P/4B2R/R3B1N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 458);
        assert_eq!(perft(&board, 3, &PRECOMP), 8286);
    }

    #[test]
    fn gentest_6561() {
        let board = Board::from_fen("3kn3/Nbb5/pp3n1p/3ppP2/3p1p2/PPP4P/4BK1R/R3B1N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 592);
    }

    #[test]
    fn gentest_6562() {
        let board = Board::from_fen("4n3/Nbb1k3/pp3n1p/3ppP2/P2p1p2/1PP4P/4BK2/R3B1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 675);
    }

    #[test]
    fn gentest_6563() {
        let board = Board::from_fen("2b1n3/N1b1k3/pp3n1p/3p1P2/P1Bppp2/1PP4P/5K2/R3B1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 642);
    }

    #[test]
    fn gentest_6564() {
        let board = Board::from_fen("2b1n3/N1b5/1p1k1n1p/3p1P2/P1Bppp2/1PP4P/5K2/R3B1NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 553);
    }

    #[test]
    fn gentest_6565() {
        let board = Board::from_fen("4n3/2b5/bpNk1n1p/3p1P2/P1B1pp2/1Pp4P/5K2/R3B1NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 662);
    }

    #[test]
    fn gentest_6566() {
        let board = Board::from_fen("4n3/2b5/bpN2n1p/2kp1P2/P1B1pp2/1Pp1B2P/5K2/R5NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 109);
        assert_eq!(perft(&board, 3, &PRECOMP), 2448);
    }

    #[test]
    fn gentest_6567() {
        let board = Board::from_fen("4n3/2b5/bpk2n1p/3p1P2/P1B1p3/1Pp1K2P/8/R5NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 549);
    }

    #[test]
    fn gentest_6568() {
        let board = Board::from_fen("3bn3/8/bpk2n1p/3p1P2/P1B1p3/1Pp4P/R3K3/6NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
    }

    #[test]
    fn gentest_6569() {
        let board = Board::from_fen("3bn3/8/bp3n2/2kp1P1p/P1B1p3/1Pp4P/2R1K3/6NR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 374);
        assert_eq!(perft(&board, 3, &PRECOMP), 7568);
    }

    #[test]
    fn gentest_6570() {
        let board = Board::from_fen("3bn1n1/8/Bp6/2kp1P1p/P3p3/1Pp4P/2R5/3K2NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 509);
        assert_eq!(perft(&board, 3, &PRECOMP), 9678);
    }

    #[test]
    fn gentest_6571() {
        let board = Board::from_fen("3b2n1/8/B4n2/1pkp1P1p/P3p3/1Pp4P/2R4R/3K2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 466);
    }

    #[test]
    fn gentest_6572() {
        let board = Board::from_fen("6n1/8/Bb3n2/1pkp1P1p/P3p3/1Pp4P/2R4R/3K2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 482);
        assert_eq!(perft(&board, 3, &PRECOMP), 9358);
    }

    #[test]
    fn gentest_6573() {
        let board = Board::from_fen("4n1n1/8/Bb6/1pkp1P1p/P3p3/1P5P/2p1R2R/3K2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 91);
        assert_eq!(perft(&board, 3, &PRECOMP), 1884);
    }

    #[test]
    fn gentest_6574() {
        let board = Board::from_fen("3bn1n1/8/B7/1pkp1P1p/P3p3/1P5P/2p1R3/2K3NR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 477);
    }

    #[test]
    fn gentest_6575() {
        let board = Board::from_fen("4n1n1/8/B7/1p1p1P1p/Pk2p2b/1P5P/2p1R2R/2K3N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 416);
        assert_eq!(perft(&board, 3, &PRECOMP), 8535);
    }

    #[test]
    fn gentest_6576() {
        let board = Board::from_fen("4n1n1/8/B7/Pp1p1P1p/1k2p3/1P4bP/2p1RR2/2K3N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 410);
        assert_eq!(perft(&board, 3, &PRECOMP), 8877);
    }

    #[test]
    fn gentest_6577() {
        let board = Board::from_fen("6n1/8/B4n2/Pp1p1P1p/1k6/1P2pRbP/2p1R3/2K3N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 390);
        assert_eq!(perft(&board, 3, &PRECOMP), 7663);
    }

    #[test]
    fn gentest_6578() {
        let board = Board::from_fen("6n1/8/B4n2/Pp1p1P1p/1k6/1P2R2P/2p4b/2K2RN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 460);
        assert_eq!(perft(&board, 3, &PRECOMP), 9079);
    }

    #[test]
    fn gentest_6579() {
        let board = Board::from_fen("8/7n/B6n/Pp1p1P1p/1k6/1P5P/2p4b/2K1RRN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 411);
        assert_eq!(perft(&board, 3, &PRECOMP), 9581);
    }

    #[test]
    fn gentest_6580() {
        let board = Board::from_fen("8/1B3n1n/8/Pp1p1P1p/1k2R3/1P5P/2p4b/2K2RN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 205);
        assert_eq!(perft(&board, 3, &PRECOMP), 4184);
    }

    #[test]
    fn gentest_6581() {
        let board = Board::from_fen("8/1B3n1n/8/P2p1P1p/1p6/1Pk4P/2p1R2b/2K2RN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 468);
    }

    #[test]
    fn gentest_6582() {
        let board = Board::from_fen("8/1B3n1n/8/P2p1P1p/1p6/1k5P/2R2R1b/2K3N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 575);
    }

    #[test]
    fn gentest_6583() {
        let board = Board::from_fen("8/1B3n1n/8/P2p1P1p/1p6/1k5P/2Rb1R2/1K4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 480);
    }

    #[test]
    fn gentest_6584() {
        let board = Board::from_fen("8/1B3n1n/1R6/P2p1Pbp/1p6/1k5P/5R2/1K4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 661);
    }

    #[test]
    fn gentest_6585() {
        let board = Board::from_fen("8/1B5n/6nR/P2p1Pbp/1p6/1k5P/5R2/1K4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 486);
    }

    #[test]
    fn gentest_6586() {
        let board = Board::from_fen("8/5B1n/6nR/P4Pbp/1p6/k6P/5R2/1K4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 613);
    }

    #[test]
    fn gentest_6587() {
        let board = Board::from_fen("8/5B1n/6nR/P4Pb1/kp5p/5R1P/8/1K4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 454);
    }

    #[test]
    fn gentest_6588() {
        let board = Board::from_fen("8/5B1n/6n1/Pk3Pb1/1p1R4/5R1P/8/1K4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 884);
    }

    #[test]
    fn gentest_6589() {
        let board = Board::from_fen("8/5B1n/6n1/P1k2P2/1p6/5R1P/3R4/1K4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 464);
    }

    #[test]
    fn gentest_6590() {
        let board = Board::from_fen("8/7n/P5n1/1k3P2/1p6/1B3R1P/3R4/1K4N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 551);
        assert_eq!(perft(&board, 3, &PRECOMP), 7299);
    }

    #[test]
    fn gentest_6591() {
        let board = Board::from_fen("8/7n/P1k3n1/5P2/1p3R2/1B5P/3R4/1K4N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 522);
    }

    #[test]
    fn gentest_6592() {
        let board = Board::from_fen("8/7n/P5n1/2k2P2/1p3R2/1B5P/2KR4/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 437);
        assert_eq!(perft(&board, 3, &PRECOMP), 5308);
    }

    #[test]
    fn gentest_6593() {
        let board = Board::from_fen("8/8/P4n2/2k5/1p3R1n/1B5P/2KR4/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 512);
    }

    #[test]
    fn gentest_6594() {
        let board = Board::from_fen("8/8/P7/2k4n/1pR4n/1B5P/3R4/3K2N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 72);
        assert_eq!(perft(&board, 3, &PRECOMP), 791);
    }

    #[test]
    fn gentest_6595() {
        let board = Board::from_fen("8/8/P4n2/1k6/1pR4n/1B5P/7R/3K2N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 456);
    }

    #[test]
    fn gentest_6596() {
        let board = Board::from_fen("6n1/8/P7/1k6/1pR4n/1B5P/5K1R/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 276);
        assert_eq!(perft(&board, 3, &PRECOMP), 3249);
    }

    #[test]
    fn gentest_6597() {
        let board = Board::from_fen("8/8/P4nn1/1k6/1pR5/7P/2B2K1R/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 561);
    }

    #[test]
    fn gentest_6598() {
        let board = Board::from_fen("7n/8/P3Rn2/1k6/1p6/7P/2B2K1R/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 419);
        assert_eq!(perft(&board, 3, &PRECOMP), 5230);
    }

    #[test]
    fn gentest_6599() {
        let board = Board::from_fen("8/8/P5n1/1k5n/1p6/7P/2B1RK1R/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 398);
    }

    #[test]
    fn gentest_6600() {
        let board = Board::from_fen("8/8/P3R1n1/k6n/1p6/7P/2B3KR/6N1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 274);
        assert_eq!(perft(&board, 3, &PRECOMP), 3397);
    }

    #[test]
    fn gentest_6601() {
        let board = Board::from_fen("5n2/8/P2R4/k7/1p6/6nP/2B3KR/6N1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 360);
    }

    #[test]
    fn gentest_6602() {
        let board = Board::from_fen("5n2/8/P2R4/k7/1p6/5N1P/2B3K1/5n1R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 10);
        assert_eq!(perft(&board, 2, &PRECOMP), 356);
        assert_eq!(perft(&board, 3, &PRECOMP), 4006);
    }

    #[test]
    fn gentest_6603() {
        let board = Board::from_fen("8/8/P2Rn3/k7/1p6/5N1P/2B3Kn/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 39);
        assert_eq!(perft(&board, 2, &PRECOMP), 486);
    }

    #[test]
    fn gentest_6604() {
        let board = Board::from_fen("8/8/P2Rn3/k7/1p6/7P/2B1N1K1/5nR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 423);
        assert_eq!(perft(&board, 3, &PRECOMP), 5420);
    }

    #[test]
    fn gentest_6605() {
        let board = Board::from_fen("8/P7/3Rn3/2k5/1p6/7P/2B1N1K1/5nR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 501);
    }

    #[test]
    fn gentest_6606() {
        let board = Board::from_fen("8/P7/4n3/2kR4/1p6/6nP/2B1NK2/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 174);
        assert_eq!(perft(&board, 3, &PRECOMP), 2891);
    }

    #[test]
    fn gentest_6607() {
        let board = Board::from_fen("8/P7/1k2n3/2R4n/1p6/7P/2B1NK2/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 797);
    }

    #[test]
    fn gentest_6608() {
        let board = Board::from_fen("8/P1n5/1k6/2R4n/1p1N4/7P/2B2K2/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 670);
        assert_eq!(perft(&board, 3, &PRECOMP), 9108);
    }

    #[test]
    fn gentest_6609() {
        let board = Board::from_fen("8/P1k5/4n3/1R5n/1p1N4/7P/2B2K2/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 566);
    }

    #[test]
    fn gentest_6610() {
        let board = Board::from_fen("8/P7/3kn3/1R5n/1p1N4/7P/B4K2/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 727);
        assert_eq!(perft(&board, 3, &PRECOMP), 9872);
    }

    #[test]
    fn gentest_6611() {
        let board = Board::from_fen("8/P1n5/3k4/1R6/1p1N4/4K1nP/B7/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 664);
    }

    #[test]
    fn gentest_6612() {
        let board = Board::from_fen("8/P1n1kB2/8/7R/1p1N4/4K1nP/8/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 801);
    }

    #[test]
    fn gentest_6613() {
        let board = Board::from_fen("8/P1n1kB2/8/7R/8/1p2KN1P/8/2R2n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 7);
        assert_eq!(perft(&board, 2, &PRECOMP), 115);
        assert_eq!(perft(&board, 3, &PRECOMP), 5025);
    }

    #[test]
    fn gentest_6614() {
        let board = Board::from_fen("8/P3kB2/n7/7R/3NK3/1p5P/8/2R2n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 600);
        assert_eq!(perft(&board, 3, &PRECOMP), 8038);
    }

    #[test]
    fn gentest_6615() {
        let board = Board::from_fen("8/P3k3/n7/7R/3NK3/1p5P/8/5R2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 404);
    }

    #[test]
    fn gentest_6616() {
        let board = Board::from_fen("R7/P7/n2k4/8/3NK3/1p5P/8/5R2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 288);
        assert_eq!(perft(&board, 3, &PRECOMP), 2496);
    }

    #[test]
    fn gentest_6617() {
        let board = Board::from_fen("Rn6/P3k3/8/8/3NK3/1p5P/8/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 336);
    }

    #[test]
    fn gentest_6618() {
        let board = Board::from_fen("Rn2k3/P7/2N5/8/5K2/1p5P/8/6R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 4);
        assert_eq!(perft(&board, 2, &PRECOMP), 140);
        assert_eq!(perft(&board, 3, &PRECOMP), 901);
    }

    #[test]
    fn gentest_6619() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_6620() {
        let board = Board::from_fen("rnbqkbnr/p1pppppp/8/1p6/8/N6P/PPPPPPP1/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 398);
        assert_eq!(perft(&board, 3, &PRECOMP), 9232);
    }

    #[test]
    fn gentest_6621() {
        let board = Board::from_fen("r1bqkbnr/p1pppppp/8/1p2n3/4P3/N6P/PPPP1PP1/R1BQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 670);
    }

    #[test]
    fn gentest_6622() {
        let board = Board::from_fen("r1bqkbnr/p2ppppp/2p5/1p2n3/1PN1P3/7P/P1PP1PP1/R1BQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 723);
    }

    #[test]
    fn gentest_6623() {
        let board = Board::from_fen("r1b1kbnr/p2p1ppp/2p1p3/1p2n3/1PN1P2q/7P/P1PPNPP1/R1BQKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 931);
    }

    #[test]
    fn gentest_6624() {
        let board = Board::from_fen("r1b1kbnr/p2p1ppp/2p1p3/1p2n3/1PN1P3/2N4P/P1PP1KP1/R1BQ1B1R b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 951);
    }

    #[test]
    fn gentest_6625() {
        let board = Board::from_fen("r1b1kbnr/3p1ppp/2p1p3/pp6/1PN1P1n1/2N4P/P1PP2P1/R1BQ1BKR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 973);
    }

    #[test]
    fn gentest_6626() {
        let board = Board::from_fen("r1b1kb1r/3pnppp/2p1p3/pp6/PPN1P1P1/2N5/2PP2P1/R1BQ1BKR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 887);
    }

    #[test]
    fn gentest_6627() {
        let board = Board::from_fen("r3kb1r/1b1pn1pp/2p1p3/pp3p2/PP2P1P1/N1N5/2PP2P1/R1BQ1BKR w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 976);
    }

    #[test]
    fn gentest_6628() {
        let board = Board::from_fen("r3kb1r/1b1pn1pp/2p1p3/p4p2/pP2P1P1/N5P1/2PP4/RNBQ1BKR b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 909);
    }

    #[test]
    fn gentest_6629() {
        let board = Board::from_fen("b1kr1b1r/3pn1pp/2p1p3/p4p2/pP2P1P1/N5P1/1BPP4/RN1Q1BKR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 812);
    }

    #[test]
    fn gentest_6630() {
        let board = Board::from_fen("2kr1b1r/1b1pn1pp/2p1p3/P4p2/p2BP1P1/N5P1/2PP4/RN1Q1BKR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 829);
    }

    #[test]
    fn gentest_6631() {
        let board = Board::from_fen("2kr1b1r/1b1pn3/2p1p2p/P4pp1/p2BP1P1/N4QP1/2PP4/RN3BKR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 883);
    }

    #[test]
    fn gentest_6632() {
        let board = Board::from_fen("2kr1b1r/1b1p4/2p1p1np/P4pp1/p2BP1P1/N1P2QP1/3PB3/RN4KR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 1006);
    }

    #[test]
    fn gentest_6633() {
        let board = Board::from_fen("2kr1br1/1b6/2p1p1np/P2p1Pp1/p2B2P1/N1P2QP1/3PB3/RN4KR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1050);
    }

    #[test]
    fn gentest_6634() {
        let board = Board::from_fen("2kr1brn/1b6/2p1p2p/P1Bp1Pp1/p5P1/N1P2QP1/R2PB3/1N4KR b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 836);
    }

    #[test]
    fn gentest_6635() {
        let board = Board::from_fen("2k2brn/1b6/2pr3p/P1BppPp1/p1P3P1/N4QP1/R2PB3/1N4KR w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 843);
    }

    #[test]
    fn gentest_6636() {
        let board = Board::from_fen("5brn/1bk5/2pr3p/P1BppPpR/p1P3P1/N4QP1/R2PB3/1N3K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 870);
    }

    #[test]
    fn gentest_6637() {
        let board = Board::from_fen("5brn/1bk5/P1pr3p/2B2PpR/p1Ppp1P1/N4QP1/R2PB3/1N3K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 738);
    }

    #[test]
    fn gentest_6638() {
        let board = Board::from_fen("b4brn/2k5/P1pr3R/2B2Pp1/p1PppQP1/N5P1/R2PB3/1N3K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 569);
        assert_eq!(perft(&board, 3, &PRECOMP), 9885);
    }

    #[test]
    fn gentest_6639() {
        let board = Board::from_fen("b4b1n/3k2rR/P1pr4/2B2Pp1/p1PppQP1/N5P1/R2PB3/1N3K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 689);
    }

    #[test]
    fn gentest_6640() {
        let board = Board::from_fen("b4b1n/3k2rR/P1pB1P2/6p1/p1Pp1QP1/N3p1P1/R2PB3/1N3K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 633);
    }

    #[test]
    fn gentest_6641() {
        let board = Board::from_fen("b4b1n/3k2rR/P1pB1P2/8/p1Pp1pP1/N5P1/3RB3/1N3K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 665);
    }

    #[test]
    fn gentest_6642() {
        let board = Board::from_fen("b4b1n/6R1/P1pBkP2/8/p1Pp1pP1/N5P1/3RB3/1N4K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 446);
        assert_eq!(perft(&board, 3, &PRECOMP), 6042);
    }

    #[test]
    fn gentest_6643() {
        let board = Board::from_fen("b6n/6b1/P1pBkP2/8/p1Pp2P1/6p1/2NRB3/1N4K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 435);
    }

    #[test]
    fn gentest_6644() {
        let board = Board::from_fen("b6n/6b1/P1pBkP2/8/p1P3P1/3p2p1/2N1B3/1N1R1K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 443);
        assert_eq!(perft(&board, 3, &PRECOMP), 7546);
    }

    #[test]
    fn gentest_6645() {
        let board = Board::from_fen("b7/5nb1/P1pBkP2/8/p1P3P1/6p1/2N1K3/1N1R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 587);
    }

    #[test]
    fn gentest_6646() {
        let board = Board::from_fen("b6b/5n2/P1pBkP2/8/p1P3P1/6p1/2NR4/1N2K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 395);
        assert_eq!(perft(&board, 3, &PRECOMP), 5579);
    }

    #[test]
    fn gentest_6647() {
        let board = Board::from_fen("b2n4/6b1/P1pBkP2/8/pNP3P1/6p1/3R4/1N2K3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 434);
    }

    #[test]
    fn gentest_6648() {
        let board = Board::from_fen("b2n4/6b1/P1pBkP2/8/2P3P1/p5p1/N2RK3/1N6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 373);
        assert_eq!(perft(&board, 3, &PRECOMP), 5072);
    }

    #[test]
    fn gentest_6649() {
        let board = Board::from_fen("b6b/1n6/P1pBkP2/8/2P3P1/p1N3p1/3RK3/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 414);
    }

    #[test]
    fn gentest_6650() {
        let board = Board::from_fen("b6b/1n6/P3kP2/2p5/1BP3P1/p1N3p1/4K3/1N1R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 340);
        assert_eq!(perft(&board, 3, &PRECOMP), 5252);
    }

    #[test]
    fn gentest_6651() {
        let board = Board::from_fen("b6b/1n6/P4P2/4k3/1pP3P1/N1N3p1/4K3/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 436);
    }

    #[test]
    fn gentest_6652() {
        let board = Board::from_fen("b6b/1P6/5P2/4k3/2P3P1/NpNR2p1/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 285);
        assert_eq!(perft(&board, 3, &PRECOMP), 2895);
    }

    #[test]
    fn gentest_6653() {
        let board = Board::from_fen("b6b/1P6/5P2/4k1P1/2P5/NpNR2p1/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 291);
    }

    #[test]
    fn gentest_6654() {
        let board = Board::from_fen("bN5b/8/5P2/5kP1/N1P5/Np1R2p1/4K3/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 511);
        assert_eq!(perft(&board, 3, &PRECOMP), 8677);
    }

    #[test]
    fn gentest_6655() {
        let board = Board::from_fen("bN6/8/4kb2/6P1/N1P5/Np4p1/4K3/3R4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 675);
    }

    #[test]
    fn gentest_6656() {
        let board = Board::from_fen("8/8/2N1kb2/6P1/N1P5/Np3bp1/8/3R1K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 600);
    }

    #[test]
    fn gentest_6657() {
        let board = Board::from_fen("8/8/2b2b2/4k1P1/2P5/Np4p1/1N6/3R1K2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 415);
        assert_eq!(perft(&board, 3, &PRECOMP), 8441);
    }

    #[test]
    fn gentest_6658() {
        let board = Board::from_fen("7b/8/2b5/4k1P1/2P5/1p4p1/1NN1K3/3R4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 519);
        assert_eq!(perft(&board, 3, &PRECOMP), 8973);
    }

    #[test]
    fn gentest_6659() {
        let board = Board::from_fen("8/6b1/8/3bk1P1/2P5/1p4p1/1NN1K3/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 556);
    }

    #[test]
    fn gentest_6660() {
        let board = Board::from_fen("8/6b1/3k4/3b2P1/2P5/1p4p1/1NN1K3/1R6 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 644);
    }

    #[test]
    fn gentest_6661() {
        let board = Board::from_fen("8/8/2k5/3bb1P1/2P5/1p4p1/1N2K3/NR6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 485);
        assert_eq!(perft(&board, 3, &PRECOMP), 9111);
    }

    #[test]
    fn gentest_6662() {
        let board = Board::from_fen("8/8/2k1b3/4b1P1/2P5/1p4p1/1N2K3/N6R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 645);
    }

    #[test]
    fn gentest_6663() {
        let board = Board::from_fen("8/2b5/2k1b3/6P1/2P5/1p1N4/4K1p1/N6R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 848);
    }

    #[test]
    fn gentest_6664() {
        let board = Board::from_fen("8/8/2kbb3/6P1/2P2N2/1p6/4K1p1/N3R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 28);
        assert_eq!(perft(&board, 2, &PRECOMP), 571);
    }

    #[test]
    fn gentest_6665() {
        let board = Board::from_fen("2b5/8/2kb4/2P3P1/5N2/1p6/4K3/N3R1b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 528);
    }

    #[test]
    fn gentest_6666() {
        let board = Board::from_fen("8/1b6/2kb4/2P3P1/8/1p1K3N/8/N3R1b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 513);
    }

    #[test]
    fn gentest_6667() {
        let board = Board::from_fen("8/8/b1kb4/2b3P1/8/1p5N/3K4/N3R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 629);
    }

    #[test]
    fn gentest_6668() {
        let board = Board::from_fen("8/8/b1kb2P1/8/8/1p5N/3K1b2/N5R1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 597);
    }

    #[test]
    fn gentest_6669() {
        let board = Board::from_fen("8/3k4/3b2P1/8/5N2/1p6/3K1b2/N4bR1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 608);
    }

    #[test]
    fn gentest_6670() {
        let board = Board::from_fen("5b2/3k4/6P1/8/5N2/1N6/2K2b2/5bR1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 768);
    }

    #[test]
    fn gentest_6671() {
        let board = Board::from_fen("5b2/8/2k3P1/1b6/5N2/1N6/1K3b2/6R1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 770);
    }

    #[test]
    fn gentest_6672() {
        let board = Board::from_fen("8/6b1/2k3P1/1b4R1/5N2/1N6/2K2b2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 764);
    }

    #[test]
    fn gentest_6673() {
        let board = Board::from_fen("8/6b1/1k4P1/1bR5/5N1b/1N6/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 684);
    }

    #[test]
    fn gentest_6674() {
        let board = Board::from_fen("8/6b1/1k4P1/1bR5/8/1N6/4N3/2K1b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 594);
    }

    #[test]
    fn gentest_6675() {
        let board = Board::from_fen("8/3b4/1k4P1/2R5/8/1Nb3N1/8/2K1b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 612);
    }

    #[test]
    fn gentest_6676() {
        let board = Board::from_fen("2b5/6P1/1k6/1R6/8/1Nb3N1/8/2K1b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 134);
        assert_eq!(perft(&board, 3, &PRECOMP), 2800);
    }

    #[test]
    fn gentest_6677() {
        let board = Board::from_fen("2b5/2k3b1/8/1R6/8/6N1/8/N1K1b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 618);
    }

    #[test]
    fn gentest_6678() {
        let board = Board::from_fen("8/2kb2b1/8/7R/8/6N1/2K5/N3b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 720);
    }

    #[test]
    fn gentest_6679() {
        let board = Board::from_fen("8/2k3b1/8/7R/8/3K2N1/2b5/N3b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 142);
        assert_eq!(perft(&board, 3, &PRECOMP), 3329);
    }

    #[test]
    fn gentest_6680() {
        let board = Board::from_fen("8/1k4b1/8/5N1R/8/3K4/2N5/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 622);
    }

    #[test]
    fn gentest_6681() {
        let board = Board::from_fen("1k6/7R/8/4bN2/8/3K4/2N5/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 640);
    }

    #[test]
    fn gentest_6682() {
        let board = Board::from_fen("1k5b/7R/8/5N2/8/3K1N2/8/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 553);
        assert_eq!(perft(&board, 3, &PRECOMP), 9126);
    }

    #[test]
    fn gentest_6683() {
        let board = Board::from_fen("2k4b/3R4/8/5N2/8/2bK1N2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
    }

    #[test]
    fn gentest_6684() {
        let board = Board::from_fen("2k4b/8/7N/3R4/3b4/3K1N2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 501);
        assert_eq!(perft(&board, 3, &PRECOMP), 8274);
    }

    #[test]
    fn gentest_6685() {
        let board = Board::from_fen("2k5/8/3R3N/4b3/8/3K1N2/8/6b1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 523);
    }

    #[test]
    fn gentest_6686() {
        let board = Board::from_fen("8/2k2N2/3R4/4b3/2K5/5N2/8/6b1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 654);
    }

    #[test]
    fn gentest_6687() {
        let board = Board::from_fen("1k6/5N2/3R4/2b1b3/8/1K3N2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 725);
    }

    #[test]
    fn gentest_6688() {
        let board = Board::from_fen("1k6/6b1/4R2N/2b5/8/1K3N2/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 25);
        assert_eq!(perft(&board, 2, &PRECOMP), 730);
    }

    #[test]
    fn gentest_6689() {
        let board = Board::from_fen("8/k5b1/7N/2b5/8/1K3N2/8/4R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 638);
    }

    #[test]
    fn gentest_6690() {
        let board = Board::from_fen("k7/6b1/7N/2b5/3N4/1K6/8/7R b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 461);
        assert_eq!(perft(&board, 3, &PRECOMP), 8146);
    }

    #[test]
    fn gentest_6691() {
        let board = Board::from_fen("k7/5N2/5b2/8/3b4/1K6/8/7R w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 485);
    }

    #[test]
    fn gentest_6692() {
        let board = Board::from_fen("k7/b7/5b1R/4N3/8/1K6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 416);
        assert_eq!(perft(&board, 3, &PRECOMP), 7132);
    }

    #[test]
    fn gentest_6693() {
        let board = Board::from_fen("k7/8/7R/4N3/2K4b/8/5b2/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 344);
        assert_eq!(perft(&board, 3, &PRECOMP), 8162);
    }

    #[test]
    fn gentest_6694() {
        let board = Board::from_fen("1k6/8/1R6/4N3/7b/3K4/5b2/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 121);
        assert_eq!(perft(&board, 3, &PRECOMP), 1719);
    }

    #[test]
    fn gentest_6695() {
        let board = Board::from_fen("2k5/8/1b6/4N3/7b/8/2K5/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 324);
        assert_eq!(perft(&board, 3, &PRECOMP), 4453);
    }

    #[test]
    fn gentest_6696() {
        let board = Board::from_fen("8/3k4/1b6/8/7b/8/3K4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 147);
        assert_eq!(perft(&board, 3, &PRECOMP), 3371);
    }

    #[test]
    fn gentest_6697() {
        let board = Board::from_fen("8/3k4/8/2b3b1/8/8/8/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 84);
        assert_eq!(perft(&board, 3, &PRECOMP), 412);
    }

    #[test]
    fn gentest_6698() {
        let board = Board::from_fen("8/3k4/8/6b1/8/4b3/8/5K2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 74);
        assert_eq!(perft(&board, 3, &PRECOMP), 1737);
        assert_eq!(perft(&board, 4, &PRECOMP), 8749);
    }

    #[test]
    fn gentest_6699() {
        let board = Board::from_fen("4k3/8/8/6b1/5b2/8/4K3/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 114);
        assert_eq!(perft(&board, 3, &PRECOMP), 535);
    }

    #[test]
    fn gentest_6700() {
        let board = Board::from_fen("5k2/8/8/6b1/4Kb2/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 100);
        assert_eq!(perft(&board, 3, &PRECOMP), 2094);
    }

    #[test]
    fn gentest_6701() {
        let board = Board::from_fen("5k2/2b5/8/3K2b1/8/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 136);
        assert_eq!(perft(&board, 3, &PRECOMP), 776);
    }

    #[test]
    fn gentest_6702() {
        let board = Board::from_fen("6k1/2b5/8/6b1/8/3K4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 140);
        assert_eq!(perft(&board, 3, &PRECOMP), 3082);
    }

    #[test]
    fn gentest_6703() {
        let board = Board::from_fen("6k1/8/8/6b1/1bK5/8/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 129);
        assert_eq!(perft(&board, 3, &PRECOMP), 760);
    }

    #[test]
    fn gentest_6704() {
        let board = Board::from_fen("6k1/8/8/8/1K3b2/8/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 16);
        assert_eq!(perft(&board, 2, &PRECOMP), 120);
        assert_eq!(perft(&board, 3, &PRECOMP), 1784);
    }

    #[test]
    fn gentest_6705() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_6706() {
        let board = Board::from_fen("rnbqkbnr/1ppppppp/8/p7/4P1P1/8/PPPP1P1P/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 609);
    }

    #[test]
    fn gentest_6707() {
        let board = Board::from_fen("rnbqkb1r/1ppppp1p/6pn/p7/4P1P1/7N/PPPP1P1P/RNBQKB1R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 562);
    }

    #[test]
    fn gentest_6708() {
        let board = Board::from_fen("rnbqkb1r/1ppp1p1p/4p1pn/p7/3PP1P1/7N/PPP2PBP/RNBQK2R b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 990);
    }

    #[test]
    fn gentest_6709() {
        let board = Board::from_fen("rnbqk2r/1ppp1p1p/4p1pn/p3b3/2PPP1P1/7N/PP3PBP/RNBQK2R w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1161);
    }

    #[test]
    fn gentest_6710() {
        let board = Board::from_fen("rnbqk2r/1ppp1pbp/4p1pn/p7/2PPP1P1/7N/PP1K1PBP/RNBQR3 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 997);
    }

    #[test]
    fn gentest_6711() {
        let board = Board::from_fen("rnbqk2r/1p1p1pbp/4p2n/p1p3p1/2PPP1P1/5P1N/PP1K2BP/RNBQR3 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 871);
    }

    #[test]
    fn gentest_6712() {
        let board = Board::from_fen("rnbqk2r/1p1p1pbp/4p3/p1p1Pnp1/2PP2P1/5P1N/PP1K2BP/RNBQ2R1 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 958);
    }

    #[test]
    fn gentest_6713() {
        let board = Board::from_fen("r1bqk2r/1p1p1pbp/4p3/p1p1nPp1/2PP4/5P1N/PP1K2BP/RNBQ2R1 w kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 983);
    }

    #[test]
    fn gentest_6714() {
        let board = Board::from_fen("r1bqk2r/1p1p1pbp/4p3/p1P1nPp1/3p4/5P1N/PP1K2BP/RNBQR3 b kq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 887);
    }

    #[test]
    fn gentest_6715() {
        let board = Board::from_fen("2bqk2r/1p1p1pbp/r1n1p3/p1P2Pp1/3p4/5P1N/PP2K1BP/RNBQR3 w k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1084);
    }

    #[test]
    fn gentest_6716() {
        let board = Board::from_fen("2bqk2r/1p1p1pbp/r1n5/p1P1pPp1/3p4/1QN2P1N/PP2K1BP/R1B1R3 b k -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 1260);
    }

    #[test]
    fn gentest_6717() {
        let board = Board::from_fen("2bqkr2/1p1p1p1p/r1n4b/pQP1pPp1/3p4/2N2P1N/PP2K1BP/R1B1R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 983);
    }

    #[test]
    fn gentest_6718() {
        let board = Board::from_fen("2b1kr2/1p1p1p1p/r1n2q1b/pQP1pPB1/P2p4/2N2P1N/1P2K1BP/R3R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 1283);
    }

    #[test]
    fn gentest_6719() {
        let board = Board::from_fen("2b1kr2/1p1p1p1p/r1nq3b/pQP2PB1/P2ppN2/2N2P2/1P2K1BP/R3R3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1451);
    }

    #[test]
    fn gentest_6720() {
        let board = Board::from_fen("2b1kr2/1p1p1p1p/r1nq3b/pQP2PB1/P2p1N2/4pP2/1P1NK1BP/R3R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 1233);
    }

    #[test]
    fn gentest_6721() {
        let board = Board::from_fen("2b1kr2/1p1p1p1p/r1n5/pQP1qPb1/P2p1N2/4pP2/1P1NK1BP/R1R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1718);
    }

    #[test]
    fn gentest_6722() {
        let board = Board::from_fen("2b1kr2/rp1p1p1p/2n3N1/Q1P1qPb1/P2p4/4pP2/1P1NK1BP/R1R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1737);
    }

    #[test]
    fn gentest_6723() {
        let board = Board::from_fen("2b1kr2/r2pbp1p/2n3N1/QpP1qP2/PP1p4/4pP2/3NK1BP/R1R5 w - b6").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1733);
    }

    #[test]
    fn gentest_6724() {
        let board = Board::from_fen("2b1kr2/r2pbp1p/2n3N1/QPP2P2/1P1p4/4pP2/3NK1Bq/R3R3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 42);
        assert_eq!(perft(&board, 2, &PRECOMP), 1533);
    }

    #[test]
    fn gentest_6725() {
        let board = Board::from_fen("1nb1kr2/r2pbp1p/6N1/QPP2P2/1P1p4/5P2/3pK1Bq/R1R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1515);
    }

    #[test]
    fn gentest_6726() {
        let board = Board::from_fen("1nb1kr2/r3bp1p/3p2N1/QPP2P2/RP1p4/5P2/3pK1Bq/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1372);
    }

    #[test]
    fn gentest_6727() {
        let board = Board::from_fen("1nb1kr2/r1Q1bp2/3p2Np/1PP2P2/RP6/3p1P2/3pK1Bq/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 240);
        assert_eq!(perft(&board, 3, &PRECOMP), 8659);
    }

    #[test]
    fn gentest_6728() {
        let board = Board::from_fen("1nb1k1r1/r1Q1bp2/3p3p/1PP1NP2/RP6/3p1P2/3p1KBq/2R5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 1709);
    }

    #[test]
    fn gentest_6729() {
        let board = Board::from_fen("1n2k3/r1Q1bp2/b2p3p/1PP1NP2/1P6/R2p1Pr1/3p1KBq/2R5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 44);
        assert_eq!(perft(&board, 2, &PRECOMP), 1513);
    }

    #[test]
    fn gentest_6730() {
        let board = Board::from_fen("1n2k3/r1Q1bp2/b2p3p/RPP1NP2/1P6/2Rp1Pr1/5KBq/3q4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 47);
        assert_eq!(perft(&board, 2, &PRECOMP), 1272);
    }

    #[test]
    fn gentest_6731() {
        let board = Board::from_fen("1n2k3/r1Q1bN2/b2p3p/RPP2P2/1P6/2Rp1Pr1/4qKB1/7q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 45);
        assert_eq!(perft(&board, 3, &PRECOMP), 1303);
    }

    #[test]
    fn gentest_6732() {
        let board = Board::from_fen("1n1bk3/r1Q2N2/b2P3p/RP3P2/1P6/2Rp1PK1/4q1B1/7q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 1253);
    }

    #[test]
    fn gentest_6733() {
        let board = Board::from_fen("1n1bk3/r1Q2N2/b2P1q1p/RP3P2/1P6/2Rp1PK1/8/5B1q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1269);
    }

    #[test]
    fn gentest_6734() {
        let board = Board::from_fen("1n1Qk3/r4N2/P2P1q2/R4P1p/1P6/2Rp1PK1/8/5B1q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 71);
        assert_eq!(perft(&board, 3, &PRECOMP), 2057);
    }

    #[test]
    fn gentest_6735() {
        let board = Board::from_fen("1nq1k3/r4N2/P2P4/R4P1p/1P3K2/2Rp1P2/8/5B1q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 1091);
    }

    #[test]
    fn gentest_6736() {
        let board = Board::from_fen("1nq1k2N/8/r2P4/R3KP1p/1P6/2Rp1P2/8/5B1q b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 745);
    }

    #[test]
    fn gentest_6737() {
        let board = Board::from_fen("1nqk3N/8/2rP4/R3KP1p/1P6/2Rp1P2/4B3/7q w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 984);
    }

    #[test]
    fn gentest_6738() {
        let board = Board::from_fen("1nqk4/5N2/2rP4/R3KP1p/1PR5/3p1P2/4B3/5q2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 71);
        assert_eq!(perft(&board, 3, &PRECOMP), 2213);
    }

    #[test]
    fn gentest_6739() {
        let board = Board::from_fen("1nq1k3/R4N2/2rP4/4KP1p/1PR5/3p1P2/4B3/2q5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1233);
    }

    #[test]
    fn gentest_6740() {
        let board = Board::from_fen("1n1qk3/R4N2/2rP4/3K1P1p/1PR2P2/3p4/4B3/2q5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 1128);
    }

    #[test]
    fn gentest_6741() {
        let board = Board::from_fen("1n1qk3/5N2/2rP4/3K1P1p/1PR2P2/8/R7/2q1b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 1175);
    }

    #[test]
    fn gentest_6742() {
        let board = Board::from_fen("1n1qk3/8/2rPK3/5PNp/1PR2q2/8/R7/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 941);
    }

    #[test]
    fn gentest_6743() {
        let board = Board::from_fen("1n2k3/2q5/2rPK3/5PNp/1PR5/8/2Rq4/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 900);
    }

    #[test]
    fn gentest_6744() {
        let board = Board::from_fen("1n2k3/2q2N2/2rPK3/5P1p/1P6/8/2R5/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 446);
    }

    #[test]
    fn gentest_6745() {
        let board = Board::from_fen("1n6/3q1k2/2rP4/3K1P1p/1P6/8/2R5/4b3 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 533);
        assert_eq!(perft(&board, 3, &PRECOMP), 7454);
    }

    #[test]
    fn gentest_6746() {
        let board = Board::from_fen("1n3k2/3q4/2rP4/3K1P1p/1P6/8/5R2/4b3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 416);
    }

    #[test]
    fn gentest_6747() {
        let board = Board::from_fen("1n3k2/q7/2rP4/3K1P1p/1b6/8/1R6/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 645);
        assert_eq!(perft(&board, 3, &PRECOMP), 9270);
    }

    #[test]
    fn gentest_6748() {
        let board = Board::from_fen("1n3k2/q7/3r4/4KP1p/1b6/1R6/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 544);
    }

    #[test]
    fn gentest_6749() {
        let board = Board::from_fen("1n3k2/3q4/3r4/4KP1p/8/b4R2/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 497);
        assert_eq!(perft(&board, 3, &PRECOMP), 5640);
    }

    #[test]
    fn gentest_6750() {
        let board = Board::from_fen("1n6/3q1k2/3r4/4KP1p/8/7R/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 32);
        assert_eq!(perft(&board, 2, &PRECOMP), 346);
    }

    #[test]
    fn gentest_6751() {
        let board = Board::from_fen("8/3q1k2/2n5/4KP1p/3r4/8/7R/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 0);
        assert_eq!(perft(&board, 2, &PRECOMP), 0);
        assert_eq!(perft(&board, 3, &PRECOMP), 0);
        assert_eq!(perft(&board, 4, &PRECOMP), 0);
        assert_eq!(perft(&board, 5, &PRECOMP), 0);
        assert_eq!(perft(&board, 6, &PRECOMP), 0);
    }

    #[test]
    fn gentest_6752() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }

    #[test]
    fn gentest_6753() {
        let board = Board::from_fen("rnbqkbnr/ppppp1pp/5p2/8/4P3/7P/PPPP1PP1/RNBQKBNR b KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 551);
    }

    #[test]
    fn gentest_6754() {
        let board = Board::from_fen("rnbqkbnr/ppppp1pp/5p2/8/2B1P3/7P/PPPP1PP1/RNBQK1NR w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 577);
    }

    #[test]
    fn gentest_6755() {
        let board = Board::from_fen("rnbqkbnr/ppppp2p/5p2/6p1/2B1P3/5P1P/PPPPN1P1/RNBQK2R b KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 623);
    }

    #[test]
    fn gentest_6756() {
        let board = Board::from_fen("rnbqkbnr/pp1pp2p/2p5/3B1pp1/4P3/5P1P/PPPPN1P1/RNBQK2R w KQ -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 701);
    }

    #[test]
    fn gentest_6757() {
        let board = Board::from_fen("rnbqkb1r/pp1pp2p/2p2n2/3B1pp1/P3P3/5P1P/1PPPN1PR/RNBQK3 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 812);
    }

    #[test]
    fn gentest_6758() {
        let board = Board::from_fen("rnbqkb1r/pp1pp2p/2p1Bn2/5p2/P3P3/5p1P/1PPPN1PR/RNBQK3 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 834);
    }

    #[test]
    fn gentest_6759() {
        let board = Board::from_fen("rnbqkb1r/pp1pp2p/2p2n2/5p2/P1B1P3/2P4P/1P1PN1pR/RNBQK3 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 29);
        assert_eq!(perft(&board, 2, &PRECOMP), 773);
    }

    #[test]
    fn gentest_6760() {
        let board = Board::from_fen("rnbqkb1r/pp1pp2p/2p5/7n/P1B1p3/2P4P/1PQPN1pR/RNB1K3 w Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 30);
        assert_eq!(perft(&board, 2, &PRECOMP), 754);
    }

    #[test]
    fn gentest_6761() {
        let board = Board::from_fen("rnbqkb1r/pp1pp2p/2p5/7n/P7/1QPp3P/1P1PN1pR/RNB1K3 b Q -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 641);
    }

    #[test]
    fn gentest_6762() {
        let board = Board::from_fen("rnbqkb1r/pp1pp2p/2p5/7n/P7/1QPp3n/1P1PNK1R/RNB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 152);
        assert_eq!(perft(&board, 3, &PRECOMP), 4253);
    }

    #[test]
    fn gentest_6763() {
        let board = Board::from_fen("rnb1kb1r/pp1pp2p/2p5/q6n/P7/1QPp3n/1P1PN1KR/RNB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 866);
    }

    #[test]
    fn gentest_6764() {
        let board = Board::from_fen("rnbk1b1r/pp1pp2p/2p5/1q5n/P7/Q1Pp3n/1P1PN1KR/RNB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 22);
        assert_eq!(perft(&board, 2, &PRECOMP), 742);
    }

    #[test]
    fn gentest_6765() {
        let board = Board::from_fen("rnbk1b1r/pp1p3p/2p1p3/1q5n/P7/1PPp3n/Q2PN1KR/RNB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 733);
    }

    #[test]
    fn gentest_6766() {
        let board = Board::from_fen("rnbk3r/pp1pb2p/2p1p3/q6n/P7/NPPp3n/Q2PN1KR/R1B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 886);
    }

    #[test]
    fn gentest_6767() {
        let board = Board::from_fen("rnbk3r/pp1pb2p/2p1p3/6qn/P7/NPPp2Nn/3P2KR/RQB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 788);
    }

    #[test]
    fn gentest_6768() {
        let board = Board::from_fen("rnbk3r/p2pb2p/2p1p1q1/1p5n/P7/NPPp2Nn/R2P2KR/1QB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 21);
        assert_eq!(perft(&board, 2, &PRECOMP), 915);
    }

    #[test]
    fn gentest_6769() {
        let board = Board::from_fen("rn1k3r/pb1pb2p/2p1p1q1/1N5n/P1P5/1P1p2Nn/R2P2KR/1QB5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 975);
    }

    #[test]
    fn gentest_6770() {
        let board = Board::from_fen("rn1k1r2/pb1pb2p/2p1p3/1NP4n/P7/1P1p2qn/R2P2KR/1QB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 51);
        assert_eq!(perft(&board, 3, &PRECOMP), 968);
    }

    #[test]
    fn gentest_6771() {
        let board = Board::from_fen("rnbk1r2/p2pb2p/2p1p3/1NP4n/P7/1P1p2qn/1R1P3R/1QB4K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 50);
        assert_eq!(perft(&board, 2, &PRECOMP), 790);
    }

    #[test]
    fn gentest_6772() {
        let board = Board::from_fen("rnbk1r2/p2p3p/2pbp3/2P4n/P5q1/1PNp3n/1R1P3R/1QB4K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 990);
    }

    #[test]
    fn gentest_6773() {
        let board = Board::from_fen("rnbk1r2/3p3p/2pbp3/p1P4n/PP4q1/2Np3n/QR1P3R/2B4K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 53);
        assert_eq!(perft(&board, 2, &PRECOMP), 1046);
    }

    #[test]
    fn gentest_6774() {
        let board = Board::from_fen("rnbk1r2/3p3p/2p1Q3/p1b4n/PP6/2Np2qn/1R1P3R/2B4K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1914);
    }

    #[test]
    fn gentest_6775() {
        let board = Board::from_fen("rnbk1rq1/3p3p/2p1Q3/p1b4n/PP6/2Np3n/1R1P3R/2B4K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 46);
        assert_eq!(perft(&board, 2, &PRECOMP), 1583);
    }

    #[test]
    fn gentest_6776() {
        let board = Board::from_fen("rnbk1rq1/3p3p/2p5/p1b1Q3/PP4n1/2Np3n/1R1P3R/2B4K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 1648);
    }

    #[test]
    fn gentest_6777() {
        let board = Board::from_fen("rnbk1r2/3p3p/2p3q1/p1bN4/PP2Q1n1/3p3n/1R1P3R/2B4K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 51);
        assert_eq!(perft(&board, 2, &PRECOMP), 1639);
    }

    #[test]
    fn gentest_6778() {
        let board = Board::from_fen("rn1kr3/1b1p3p/2p3q1/p1b5/PP2Q1n1/2Np3n/1R1P3R/2B4K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 1724);
    }

    #[test]
    fn gentest_6779() {
        let board = Board::from_fen("rn1kr3/1b5p/2p3q1/p1bpQ3/PP4n1/2Np3n/1R1P2KR/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 1665);
    }

    #[test]
    fn gentest_6780() {
        let board = Board::from_fen("rn1k3r/1b5p/2p3q1/p1PpQ3/P5n1/2Np4/1R1P2KR/2B3n1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 1308);
    }

    #[test]
    fn gentest_6781() {
        let board = Board::from_fen("rn1kq2r/1bQ4p/2p5/p1Pp4/P5n1/2Np4/1R1P3R/2B3nK b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 1);
        assert_eq!(perft(&board, 2, &PRECOMP), 25);
        assert_eq!(perft(&board, 3, &PRECOMP), 811);
    }

    #[test]
    fn gentest_6782() {
        let board = Board::from_fen("rn5r/1bk4p/1Rp5/p1Pp4/P5n1/2Npq3/3P3R/2B3nK w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 926);
    }

    #[test]
    fn gentest_6783() {
        let board = Board::from_fen("Rn5r/1b1k3p/2p5/p1Pp4/P5n1/2Npq3/3P3R/2B3nK b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 43);
        assert_eq!(perft(&board, 2, &PRECOMP), 893);
    }

    #[test]
    fn gentest_6784() {
        let board = Board::from_fen("bn5r/3k3p/2p5/p1Pp2q1/P5n1/2Np3R/3P4/2B3nK w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 738);
    }

    #[test]
    fn gentest_6785() {
        let board = Board::from_fen("bn3R1r/3k3p/2p5/p1Pp2q1/P7/2Np4/3P3n/2B3nK b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 33);
        assert_eq!(perft(&board, 2, &PRECOMP), 718);
    }

    #[test]
    fn gentest_6786() {
        let board = Board::from_fen("bn3R1r/3k3p/2p5/p1Pp4/P7/3p4/3P3n/1NB2qnK w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 464);
        assert_eq!(perft(&board, 3, &PRECOMP), 6528);
    }

    #[test]
    fn gentest_6787() {
        let board = Board::from_fen("bnR4r/3k3p/2p5/p1Pp1q2/P7/3p4/3P3n/1NB3K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 31);
        assert_eq!(perft(&board, 2, &PRECOMP), 347);
        assert_eq!(perft(&board, 3, &PRECOMP), 9777);
    }

    #[test]
    fn gentest_6788() {
        let board = Board::from_fen("bnR4r/3k3p/2p5/p1Pp4/P7/3p2q1/3P3n/1NB4K w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 329);
        assert_eq!(perft(&board, 3, &PRECOMP), 4306);
    }

    #[test]
    fn gentest_6789() {
        let board = Board::from_fen("bn5r/3k3p/R2q4/p1Pp4/P7/3p4/3P3n/1NB4K b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 35);
        assert_eq!(perft(&board, 2, &PRECOMP), 485);
    }

    #[test]
    fn gentest_6790() {
        let board = Board::from_fen("bnk4r/7p/R3q3/p1Pp4/P7/3p4/3P2Kn/1NB5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 588);
        assert_eq!(perft(&board, 3, &PRECOMP), 8710);
    }

    #[test]
    fn gentest_6791() {
        let board = Board::from_fen("b1k4r/7p/R1n1q3/p1Pp4/P7/3p4/2NP2Kn/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 649);
    }

    #[test]
    fn gentest_6792() {
        let board = Board::from_fen("b1k1r3/7p/2n1q3/R1Pp4/P7/3p4/2NP2Kn/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 659);
        assert_eq!(perft(&board, 3, &PRECOMP), 9862);
    }

    #[test]
    fn gentest_6793() {
        let board = Board::from_fen("b1k2r2/7p/2n1q3/R1Pp4/P7/3p2K1/3P3n/2B1N3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 48);
        assert_eq!(perft(&board, 2, &PRECOMP), 520);
    }

    #[test]
    fn gentest_6794() {
        let board = Board::from_fen("bnk2r2/7p/8/R1Ppq3/P7/3p2K1/2NP3n/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 3);
        assert_eq!(perft(&board, 2, &PRECOMP), 144);
        assert_eq!(perft(&board, 3, &PRECOMP), 1898);
    }

    #[test]
    fn gentest_6795() {
        let board = Board::from_fen("bnk5/7p/8/R1Ppq3/P4r2/3p3K/2NP3n/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 49);
        assert_eq!(perft(&board, 2, &PRECOMP), 666);
    }

    #[test]
    fn gentest_6796() {
        let board = Board::from_fen("b1k5/3n3p/8/R1Ppq3/P2r4/N2p3K/3P3n/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 408);
        assert_eq!(perft(&board, 3, &PRECOMP), 5124);
    }

    #[test]
    fn gentest_6797() {
        let board = Board::from_fen("b1k5/3n3p/2Pq4/R2p4/P1Nr4/3p3K/3P3n/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 566);
    }

    #[test]
    fn gentest_6798() {
        let board = Board::from_fen("b1kq4/7p/2P5/1Rnp4/P1Nr4/3p3K/3P3n/2B5 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 23);
        assert_eq!(perft(&board, 2, &PRECOMP), 680);
    }

    #[test]
    fn gentest_6799() {
        let board = Board::from_fen("bRkq4/7p/2P5/P1np4/2Nr2n1/3p3K/3P4/2B5 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 2);
        assert_eq!(perft(&board, 2, &PRECOMP), 33);
        assert_eq!(perft(&board, 3, &PRECOMP), 1093);
    }

    #[test]
    fn gentest_6800() {
        let board = Board::from_fen("bk1q4/3n3p/2P5/P2p4/2Nr2n1/3p3K/1B1P4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 475);
        assert_eq!(perft(&board, 3, &PRECOMP), 7550);
    }

    #[test]
    fn gentest_6801() {
        let board = Board::from_fen("bk1q4/3n3p/2P4n/P2p4/2N5/3p3K/3P4/6B1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 482);
    }

    #[test]
    fn gentest_6802() {
        let board = Board::from_fen("1k1q4/3n1n1p/2b5/P2p4/8/3pN2K/3P4/6B1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 476);
        assert_eq!(perft(&board, 3, &PRECOMP), 7437);
    }

    #[test]
    fn gentest_6803() {
        let board = Board::from_fen("1k1q4/5n1p/2b5/P2pn3/8/3pN1K1/3P4/6B1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 565);
    }

    #[test]
    fn gentest_6804() {
        let board = Board::from_fen("k7/5n1p/1qb5/P2pnN2/8/3p2K1/3P4/6B1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 703);
    }

    #[test]
    fn gentest_6805() {
        let board = Board::from_fen("k5N1/5n1p/1qb5/P2p4/6n1/3p2K1/3P4/6B1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 585);
    }

    #[test]
    fn gentest_6806() {
        let board = Board::from_fen("k5N1/5n1p/2b5/P2p4/6n1/3p3K/3q4/6B1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 531);
        assert_eq!(perft(&board, 3, &PRECOMP), 7153);
    }

    #[test]
    fn gentest_6807() {
        let board = Board::from_fen("k5N1/5n1p/P1b5/3p4/6n1/3p3K/1q5B/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 45);
        assert_eq!(perft(&board, 2, &PRECOMP), 565);
    }

    #[test]
    fn gentest_6808() {
        let board = Board::from_fen("k5N1/2B2n1p/P1b5/2qp4/6n1/3p3K/8/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 17);
        assert_eq!(perft(&board, 2, &PRECOMP), 654);
    }

    #[test]
    fn gentest_6809() {
        let board = Board::from_fen("k5N1/4Bn1p/P1b5/2qp4/8/3p3K/7n/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 36);
        assert_eq!(perft(&board, 2, &PRECOMP), 472);
    }

    #[test]
    fn gentest_6810() {
        let board = Board::from_fen("k5N1/5n1p/P1bq4/3p4/7B/3p3K/8/5n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 471);
        assert_eq!(perft(&board, 3, &PRECOMP), 5551);
    }

    #[test]
    fn gentest_6811() {
        let board = Board::from_fen("k7/5n1p/P1bq4/3p1N2/7B/3pn2K/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 40);
        assert_eq!(perft(&board, 2, &PRECOMP), 559);
    }

    #[test]
    fn gentest_6812() {
        let board = Board::from_fen("k7/5n1p/P1b1q3/3p1N2/8/3p3K/5B2/5n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 13);
        assert_eq!(perft(&board, 2, &PRECOMP), 441);
        assert_eq!(perft(&board, 3, &PRECOMP), 6104);
    }

    #[test]
    fn gentest_6813() {
        let board = Board::from_fen("k7/5n1p/P1bB4/3p1N2/8/3p3K/4q3/5n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 621);
    }

    #[test]
    fn gentest_6814() {
        let board = Board::from_fen("k4B2/5n1p/P7/3p1N2/b7/3p3K/1q6/5n2 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 18);
        assert_eq!(perft(&board, 2, &PRECOMP), 811);
    }

    #[test]
    fn gentest_6815() {
        let board = Board::from_fen("k7/5n1p/P2B4/3p1N2/b7/3p4/1q1n2K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 41);
        assert_eq!(perft(&board, 2, &PRECOMP), 860);
    }

    #[test]
    fn gentest_6816() {
        let board = Board::from_fen("k7/7p/P1nB4/3p4/b2N4/3p4/1q1n2K1/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 933);
    }

    #[test]
    fn gentest_6817() {
        let board = Board::from_fen("k7/Pq5p/2nB4/3p4/b7/3p4/3nN1K1/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 38);
        assert_eq!(perft(&board, 2, &PRECOMP), 848);
    }

    #[test]
    fn gentest_6818() {
        let board = Board::from_fen("k7/Pq5p/2nB4/3p4/8/1b1p4/6K1/5nN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 635);
    }

    #[test]
    fn gentest_6819() {
        let board = Board::from_fen("k7/Pq6/2n4p/3p4/7B/1b1p4/6K1/5nN1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 34);
        assert_eq!(perft(&board, 2, &PRECOMP), 487);
    }

    #[test]
    fn gentest_6820() {
        let board = Board::from_fen("k2B4/Pq6/2n4p/3p4/b7/3p4/6K1/5nN1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 15);
        assert_eq!(perft(&board, 2, &PRECOMP), 524);
        assert_eq!(perft(&board, 3, &PRECOMP), 7491);
    }

    #[test]
    fn gentest_6821() {
        let board = Board::from_fen("k2B4/Pq6/2n4p/3p4/8/3p1K2/4N3/3b1n2 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 37);
        assert_eq!(perft(&board, 2, &PRECOMP), 367);
    }

    #[test]
    fn gentest_6822() {
        let board = Board::from_fen("k2B4/P7/2n4p/3p4/6K1/1q1p4/4N2n/3b4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 6);
        assert_eq!(perft(&board, 2, &PRECOMP), 191);
        assert_eq!(perft(&board, 3, &PRECOMP), 2711);
    }

    #[test]
    fn gentest_6823() {
        let board = Board::from_fen("k2B4/n7/7p/3p4/8/1q1p4/4N1Kn/3b4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 27);
        assert_eq!(perft(&board, 2, &PRECOMP), 474);
    }

    #[test]
    fn gentest_6824() {
        let board = Board::from_fen("k1nB4/8/1q5p/3p4/3N4/3p4/6Kn/3b4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 727);
    }

    #[test]
    fn gentest_6825() {
        let board = Board::from_fen("k1nB4/8/7p/3p4/8/3p4/2N4n/3b2K1 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 291);
        assert_eq!(perft(&board, 3, &PRECOMP), 5576);
    }

    #[test]
    fn gentest_6826() {
        let board = Board::from_fen("k2B4/8/1n5p/3p4/b7/3p4/7n/N5K1 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 12);
        assert_eq!(perft(&board, 2, &PRECOMP), 219);
        assert_eq!(perft(&board, 3, &PRECOMP), 2983);
    }

    #[test]
    fn gentest_6827() {
        let board = Board::from_fen("k7/8/1nb4p/3p2B1/8/3p4/5K1n/N7 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 281);
        assert_eq!(perft(&board, 3, &PRECOMP), 5584);
    }

    #[test]
    fn gentest_6828() {
        let board = Board::from_fen("k3b3/8/1n6/3p2p1/8/3p4/2N2K1n/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 11);
        assert_eq!(perft(&board, 2, &PRECOMP), 224);
        assert_eq!(perft(&board, 3, &PRECOMP), 2115);
    }

    #[test]
    fn gentest_6829() {
        let board = Board::from_fen("k3b3/8/8/3p2p1/2n5/N2p4/7n/4K3 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 24);
        assert_eq!(perft(&board, 2, &PRECOMP), 139);
        assert_eq!(perft(&board, 3, &PRECOMP), 3087);
    }

    #[test]
    fn gentest_6830() {
        let board = Board::from_fen("k3b3/8/1n6/3p2p1/8/N2p1n2/3K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 5);
        assert_eq!(perft(&board, 2, &PRECOMP), 119);
        assert_eq!(perft(&board, 3, &PRECOMP), 829);
    }

    #[test]
    fn gentest_6831() {
        let board = Board::from_fen("k3b3/8/8/1N1p2p1/2n5/3p1n2/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 172);
        assert_eq!(perft(&board, 3, &PRECOMP), 3843);
    }

    #[test]
    fn gentest_6832() {
        let board = Board::from_fen("1k2b3/2N5/8/3pn1p1/2n5/3p4/8/3K4 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 183);
        assert_eq!(perft(&board, 3, &PRECOMP), 1346);
    }

    #[test]
    fn gentest_6833() {
        let board = Board::from_fen("1k6/8/6b1/3pn1p1/2n5/N2p4/8/3K4 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 26);
        assert_eq!(perft(&board, 2, &PRECOMP), 145);
        assert_eq!(perft(&board, 3, &PRECOMP), 3663);
    }

    #[test]
    fn gentest_6834() {
        let board = Board::from_fen("1k6/5b2/8/3pn1p1/8/N2pn3/3K4/8 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 8);
        assert_eq!(perft(&board, 2, &PRECOMP), 197);
        assert_eq!(perft(&board, 3, &PRECOMP), 1493);
    }

    #[test]
    fn gentest_6835() {
        let board = Board::from_fen("1k6/5b2/2n5/3p2p1/8/N2K4/8/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 19);
        assert_eq!(perft(&board, 2, &PRECOMP), 160);
        assert_eq!(perft(&board, 3, &PRECOMP), 2927);
    }

    #[test]
    fn gentest_6836() {
        let board = Board::from_fen("3n4/2k2b2/8/3p2p1/8/3K4/8/1N6 w - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 9);
        assert_eq!(perft(&board, 2, &PRECOMP), 152);
        assert_eq!(perft(&board, 3, &PRECOMP), 1463);
    }

    #[test]
    fn gentest_6837() {
        let board = Board::from_fen("1k1n4/5b2/8/3p2p1/3K4/8/3N4/8 b - -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 14);
        assert_eq!(perft(&board, 2, &PRECOMP), 142);
        assert_eq!(perft(&board, 3, &PRECOMP), 2242);
    }

    #[test]
    fn gentest_6838() {
        let board = Board::from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -").unwrap();
        assert_eq!(perft(&board, 1, &PRECOMP), 20);
        assert_eq!(perft(&board, 2, &PRECOMP), 400);
        assert_eq!(perft(&board, 3, &PRECOMP), 8902);
    }
}
